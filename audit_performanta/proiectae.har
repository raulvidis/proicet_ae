{
  "log": {
    "version": "1.2",
    "creator": {
      "name": "WebInspector",
      "version": "537.36"
    },
    "pages": [
      {
        "startedDateTime": "2021-01-20T17:27:44.398Z",
        "id": "page_1",
        "title": "https://proiectae-550b9.web.app/",
        "pageTimings": {
          "onContentLoad": 139.78299999143928,
          "onLoad": 173.4839999990072
        }
      }
    ],
    "entries": [
      {
        "_initiator": {
          "type": "other"
        },
        "_priority": "VeryHigh",
        "_resourceType": "document",
        "cache": {},
        "connection": "154998",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://proiectae-550b9.web.app/",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":authority",
              "value": "proiectae-550b9.web.app"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": ":path",
              "value": "/"
            },
            {
              "name": "cache-control",
              "value": "max-age=0"
            },
            {
              "name": "upgrade-insecure-requests",
              "value": "1"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            },
            {
              "name": "accept",
              "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "sec-fetch-mode",
              "value": "navigate"
            },
            {
              "name": "sec-fetch-user",
              "value": "?1"
            },
            {
              "name": "sec-fetch-dest",
              "value": "document"
            },
            {
              "name": "referer",
              "value": "https://github.com/raulvidis/proicet_ae"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "accept-language",
              "value": "ro-RO,ro;q=0.9,en-US;q=0.8,en;q=0.7"
            },
            {
              "name": "if-none-match",
              "value": "\"bdf33167caa97a9fa129dee284dcf652f89ca5d58b443f1a8b2c8a18966214a0-br\""
            },
            {
              "name": "if-modified-since",
              "value": "Wed, 20 Jan 2021 01:52:15 GMT"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 304,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 17:27:44 GMT"
            },
            {
              "name": "cache-control",
              "value": "max-age=3600"
            },
            {
              "name": "x-served-by",
              "value": "cache-hhn4043-HHN"
            },
            {
              "name": "x-cache",
              "value": "HIT"
            },
            {
              "name": "x-cache-hits",
              "value": "1"
            },
            {
              "name": "x-timer",
              "value": "S1611163664.263020,VS0,VE0"
            },
            {
              "name": "vary",
              "value": "x-fh-requested-host, accept-encoding"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "etag",
              "value": "\"bdf33167caa97a9fa129dee284dcf652f89ca5d58b443f1a8b2c8a18966214a0-br\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 20 Jan 2021 01:52:15 GMT"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-length",
              "value": "1325"
            }
          ],
          "cookies": [],
          "content": {
            "size": 3277,
            "mimeType": "text/html",
            "text": "<!doctype html><html lang=\"en\"><head><meta charset=\"utf-8\"/><link rel=\"icon\" href=\"/favicon.ico\"/><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"/><meta name=\"theme-color\" content=\"#000000\"/><meta name=\"description\" content=\"Web site created using create-react-app\"/><link rel=\"apple-touch-icon\" href=\"/logo192.png\"/><link rel=\"manifest\" href=\"/manifest.json\"/><link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"><link href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,400;0,700;0,800;1,300;1,600&display=swap\" rel=\"stylesheet\"><title>Proiect AE</title><link href=\"/static/css/2.7e66a407.chunk.css\" rel=\"stylesheet\"><link href=\"/static/css/main.2d551d1b.chunk.css\" rel=\"stylesheet\"></head><body><noscript>You need to enable JavaScript to run this app.</noscript><div id=\"root\"></div><script>!function(e){function r(r){for(var n,a,i=r[0],c=r[1],l=r[2],p=0,s=[];p<i.length;p++)a=i[p],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&s.push(o[a][0]),o[a]=0;for(n in c)Object.prototype.hasOwnProperty.call(c,n)&&(e[n]=c[n]);for(f&&f(r);s.length;)s.shift()();return u.push.apply(u,l||[]),t()}function t(){for(var e,r=0;r<u.length;r++){for(var t=u[r],n=!0,i=1;i<t.length;i++){var c=t[i];0!==o[c]&&(n=!1)}n&&(u.splice(r--,1),e=a(a.s=t[0]))}return e}var n={},o={1:0},u=[];function a(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.e=function(e){var r=[],t=o[e];if(0!==t)if(t)r.push(t[2]);else{var n=new Promise((function(r,n){t=o[e]=[r,n]}));r.push(t[2]=n);var u,i=document.createElement(\"script\");i.charset=\"utf-8\",i.timeout=120,a.nc&&i.setAttribute(\"nonce\",a.nc),i.src=function(e){return a.p+\"static/js/\"+({}[e]||e)+\".\"+{3:\"17a49f73\"}[e]+\".chunk.js\"}(e);var c=new Error;u=function(r){i.onerror=i.onload=null,clearTimeout(l);var t=o[e];if(0!==t){if(t){var n=r&&(\"load\"===r.type?\"missing\":r.type),u=r&&r.target&&r.target.src;c.message=\"Loading chunk \"+e+\" failed.\\n(\"+n+\": \"+u+\")\",c.name=\"ChunkLoadError\",c.type=n,c.request=u,t[1](c)}o[e]=void 0}};var l=setTimeout((function(){u({type:\"timeout\",target:i})}),12e4);i.onerror=i.onload=u,document.head.appendChild(i)}return Promise.all(r)},a.m=e,a.c=n,a.d=function(e,r,t){a.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},a.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},a.t=function(e,r){if(1&r&&(e=a(e)),8&r)return e;if(4&r&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&r&&\"string\"!=typeof e)for(var n in e)a.d(t,n,function(r){return e[r]}.bind(null,n));return t},a.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(r,\"a\",r),r},a.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},a.p=\"/\",a.oe=function(e){throw console.error(e),e};var i=this.webpackJsonpproicet_ae=this.webpackJsonpproicet_ae||[],c=i.push.bind(i);i.push=r,i=i.slice();for(var l=0;l<i.length;l++)r(i[l]);var f=c;t()}([])</script><script src=\"/static/js/2.fd35f610.chunk.js\"></script><script src=\"/static/js/main.1ef123d6.chunk.js\"></script></body></html>"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 131,
          "_error": null
        },
        "serverIPAddress": "151.101.1.195",
        "startedDateTime": "2021-01-20T17:27:44.396Z",
        "time": 36.521000001812354,
        "timings": {
          "blocked": 3.518000023463741,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.135,
          "wait": 32.52299999979697,
          "receive": 0.3449999785516411,
          "_blocked_queueing": 2.369000023463741
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://proiectae-550b9.web.app/",
          "lineNumber": 0
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "154998",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Referer",
              "value": "https://proiectae-550b9.web.app/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "strict-transport-security",
              "value": "max-age=31556926; includeSubDomains; preload"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "last-modified",
              "value": "Wed, 20 Jan 2021 01:52:15 GMT"
            },
            {
              "name": "x-timer",
              "value": "S1611163639.475540,VS0,VE2"
            },
            {
              "name": "etag",
              "value": "\"a46e5a1d7357ccce540423b25dea96de20c6bf8092f93cd4ada4ee60a73d1701-br\""
            },
            {
              "name": "vary",
              "value": "x-fh-requested-host, accept-encoding"
            },
            {
              "name": "x-cache",
              "value": "HIT"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "cache-control",
              "value": "max-age=3600"
            },
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 17:27:19 GMT"
            },
            {
              "name": "x-cache-hits",
              "value": "1"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-length",
              "value": "222266"
            },
            {
              "name": "x-served-by",
              "value": "cache-hhn4043-HHN"
            }
          ],
          "cookies": [],
          "content": {
            "size": 965174,
            "mimeType": "text/javascript",
            "text": "/*! For license information please see 2.fd35f610.chunk.js.LICENSE.txt */\n(this.webpackJsonpproicet_ae=this.webpackJsonpproicet_ae||[]).push([[2],[function(t,e,n){\"use strict\";n.d(e,\"c\",(function(){return i})),n.d(e,\"a\",(function(){return o})),n.d(e,\"b\",(function(){return a})),n.d(e,\"d\",(function(){return s})),n.d(e,\"h\",(function(){return u})),n.d(e,\"e\",(function(){return c})),n.d(e,\"f\",(function(){return l})),n.d(e,\"g\",(function(){return h}));var r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function i(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var o=function(){return(o=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};function a(t,e,n,r){return new(n||(n=Promise))((function(i,o){function a(t){try{u(r.next(t))}catch(e){o(e)}}function s(t){try{u(r.throw(t))}catch(e){o(e)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((r=r.apply(t,e||[])).next())}))}function s(t,e){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},\"function\"===typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError(\"Generator is already executing.\");for(;a;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(s){o=[6,s],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}}function u(t){var e=\"function\"===typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&\"number\"===typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}function c(t,e){var n=\"function\"===typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,o=n.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(r=o.next()).done;)a.push(r.value)}catch(s){i={error:s}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(i)throw i.error}}return a}function l(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(c(arguments[e]));return t}function h(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var r=Array(t),i=0;for(e=0;e<n;e++)for(var o=arguments[e],a=0,s=o.length;a<s;a++,i++)r[i]=o[a];return r}},function(t,e,n){\"use strict\";(function(t){n.d(e,\"a\",(function(){return v})),n.d(e,\"b\",(function(){return A})),n.d(e,\"c\",(function(){return N})),n.d(e,\"d\",(function(){return z})),n.d(e,\"e\",(function(){return k})),n.d(e,\"f\",(function(){return s})),n.d(e,\"g\",(function(){return u})),n.d(e,\"h\",(function(){return l})),n.d(e,\"i\",(function(){return h})),n.d(e,\"j\",(function(){return Z})),n.d(e,\"k\",(function(){return F})),n.d(e,\"l\",(function(){return H})),n.d(e,\"m\",(function(){return p})),n.d(e,\"n\",(function(){return d})),n.d(e,\"o\",(function(){return Q})),n.d(e,\"p\",(function(){return y})),n.d(e,\"q\",(function(){return M})),n.d(e,\"r\",(function(){return b})),n.d(e,\"s\",(function(){return _})),n.d(e,\"t\",(function(){return E})),n.d(e,\"u\",(function(){return V})),n.d(e,\"v\",(function(){return T})),n.d(e,\"w\",(function(){return O})),n.d(e,\"x\",(function(){return g})),n.d(e,\"y\",(function(){return m})),n.d(e,\"z\",(function(){return S})),n.d(e,\"A\",(function(){return w})),n.d(e,\"B\",(function(){return I})),n.d(e,\"C\",(function(){return L})),n.d(e,\"D\",(function(){return j})),n.d(e,\"E\",(function(){return q})),n.d(e,\"F\",(function(){return B})),n.d(e,\"G\",(function(){return U})),n.d(e,\"H\",(function(){return $})),n.d(e,\"I\",(function(){return X})),n.d(e,\"J\",(function(){return x})),n.d(e,\"K\",(function(){return G})),n.d(e,\"L\",(function(){return Y})),n.d(e,\"M\",(function(){return J})),n.d(e,\"N\",(function(){return C}));var r=n(0),i=!1,o=!1,a=\"${JSCORE_VERSION}\",s=function(t,e){if(!t)throw u(e)},u=function(t){return new Error(\"Firebase Database (\"+a+\") INTERNAL ASSERT FAILED: \"+t)},c=function(t){for(var e=[],n=0,r=0;r<t.length;r++){var i=t.charCodeAt(r);i<128?e[n++]=i:i<2048?(e[n++]=i>>6|192,e[n++]=63&i|128):55296===(64512&i)&&r+1<t.length&&56320===(64512&t.charCodeAt(r+1))?(i=65536+((1023&i)<<10)+(1023&t.charCodeAt(++r)),e[n++]=i>>18|240,e[n++]=i>>12&63|128,e[n++]=i>>6&63|128,e[n++]=63&i|128):(e[n++]=i>>12|224,e[n++]=i>>6&63|128,e[n++]=63&i|128)}return e},l={byteToCharMap_:null,charToByteMap_:null,byteToCharMapWebSafe_:null,charToByteMapWebSafe_:null,ENCODED_VALS_BASE:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",get ENCODED_VALS(){return this.ENCODED_VALS_BASE+\"+/=\"},get ENCODED_VALS_WEBSAFE(){return this.ENCODED_VALS_BASE+\"-_.\"},HAS_NATIVE_SUPPORT:\"function\"===typeof atob,encodeByteArray:function(t,e){if(!Array.isArray(t))throw Error(\"encodeByteArray takes an array as a parameter\");this.init_();for(var n=e?this.byteToCharMapWebSafe_:this.byteToCharMap_,r=[],i=0;i<t.length;i+=3){var o=t[i],a=i+1<t.length,s=a?t[i+1]:0,u=i+2<t.length,c=u?t[i+2]:0,l=o>>2,h=(3&o)<<4|s>>4,f=(15&s)<<2|c>>6,p=63&c;u||(p=64,a||(f=64)),r.push(n[l],n[h],n[f],n[p])}return r.join(\"\")},encodeString:function(t,e){return this.HAS_NATIVE_SUPPORT&&!e?btoa(t):this.encodeByteArray(c(t),e)},decodeString:function(t,e){return this.HAS_NATIVE_SUPPORT&&!e?atob(t):function(t){for(var e=[],n=0,r=0;n<t.length;){var i=t[n++];if(i<128)e[r++]=String.fromCharCode(i);else if(i>191&&i<224){var o=t[n++];e[r++]=String.fromCharCode((31&i)<<6|63&o)}else if(i>239&&i<365){var a=((7&i)<<18|(63&(o=t[n++]))<<12|(63&(s=t[n++]))<<6|63&t[n++])-65536;e[r++]=String.fromCharCode(55296+(a>>10)),e[r++]=String.fromCharCode(56320+(1023&a))}else{o=t[n++];var s=t[n++];e[r++]=String.fromCharCode((15&i)<<12|(63&o)<<6|63&s)}}return e.join(\"\")}(this.decodeStringToByteArray(t,e))},decodeStringToByteArray:function(t,e){this.init_();for(var n=e?this.charToByteMapWebSafe_:this.charToByteMap_,r=[],i=0;i<t.length;){var o=n[t.charAt(i++)],a=i<t.length?n[t.charAt(i)]:0,s=++i<t.length?n[t.charAt(i)]:64,u=++i<t.length?n[t.charAt(i)]:64;if(++i,null==o||null==a||null==s||null==u)throw Error();var c=o<<2|a>>4;if(r.push(c),64!==s){var l=a<<4&240|s>>2;if(r.push(l),64!==u){var h=s<<6&192|u;r.push(h)}}}return r},init_:function(){if(!this.byteToCharMap_){this.byteToCharMap_={},this.charToByteMap_={},this.byteToCharMapWebSafe_={},this.charToByteMapWebSafe_={};for(var t=0;t<this.ENCODED_VALS.length;t++)this.byteToCharMap_[t]=this.ENCODED_VALS.charAt(t),this.charToByteMap_[this.byteToCharMap_[t]]=t,this.byteToCharMapWebSafe_[t]=this.ENCODED_VALS_WEBSAFE.charAt(t),this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[t]]=t,t>=this.ENCODED_VALS_BASE.length&&(this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(t)]=t,this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(t)]=t)}}},h=function(t){var e=c(t);return l.encodeByteArray(e,!0)},f=function(t){try{return l.decodeString(t,!0)}catch(e){console.error(\"base64Decode failed: \",e)}return null};function p(t){return d(void 0,t)}function d(t,e){if(!(e instanceof Object))return e;switch(e.constructor){case Date:return new Date(e.getTime());case Object:void 0===t&&(t={});break;case Array:t=[];break;default:return e}for(var n in e)e.hasOwnProperty(n)&&\"__proto__\"!==n&&(t[n]=d(t[n],e[n]));return t}var v=function(){function t(){var t=this;this.reject=function(){},this.resolve=function(){},this.promise=new Promise((function(e,n){t.resolve=e,t.reject=n}))}return t.prototype.wrapCallback=function(t){var e=this;return function(n,r){n?e.reject(n):e.resolve(r),\"function\"===typeof t&&(e.promise.catch((function(){})),1===t.length?t(n):t(n,r))}},t}();function y(){return\"undefined\"!==typeof navigator&&\"string\"===typeof navigator.userAgent?navigator.userAgent:\"\"}function g(){return\"undefined\"!==typeof window&&!!(window.cordova||window.phonegap||window.PhoneGap)&&/ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(y())}function m(){try{return\"[object process]\"===Object.prototype.toString.call(t.process)}catch(e){return!1}}function b(){return\"object\"===typeof self&&self.self===self}function _(){var t=\"object\"===typeof chrome?chrome.runtime:\"object\"===typeof browser?browser.runtime:void 0;return\"object\"===typeof t&&void 0!==t.id}function w(){return\"object\"===typeof navigator&&\"ReactNative\"===navigator.product}function E(){return y().indexOf(\"Electron/\")>=0}function T(){var t=y();return t.indexOf(\"MSIE \")>=0||t.indexOf(\"Trident/\")>=0}function I(){return y().indexOf(\"MSAppHost/\")>=0}function S(){return!0===i||!0===o}function O(){return\"indexedDB\"in self&&null!=indexedDB}function C(){return new Promise((function(t,e){try{var n=!0,r=\"validate-browser-context-for-indexeddb-analytics-module\",i=window.indexedDB.open(r);i.onsuccess=function(){i.result.close(),n||window.indexedDB.deleteDatabase(r),t(!0)},i.onupgradeneeded=function(){n=!1},i.onerror=function(){var t;e((null===(t=i.error)||void 0===t?void 0:t.message)||\"\")}}catch(o){e(o)}}))}function k(){return!(!navigator||!navigator.cookieEnabled)}var N=function(t){function e(n,r,i){var o=t.call(this,r)||this;return o.code=n,o.customData=i,o.name=\"FirebaseError\",Object.setPrototypeOf(o,e.prototype),Error.captureStackTrace&&Error.captureStackTrace(o,A.prototype.create),o}return Object(r.c)(e,t),e}(Error),A=function(){function t(t,e,n){this.service=t,this.serviceName=e,this.errors=n}return t.prototype.create=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];var r=e[0]||{},i=this.service+\"/\"+t,o=this.errors[t],a=o?P(o,r):\"Error\",s=this.serviceName+\": \"+a+\" (\"+i+\").\",u=new N(i,s,r);return u},t}();function P(t,e){return t.replace(R,(function(t,n){var r=e[n];return null!=r?String(r):\"<\"+n+\"?>\"}))}var R=/\\{\\$([^}]+)}/g;function j(t){return JSON.parse(t)}function x(t){return JSON.stringify(t)}var D=function(t){var e={},n={},r={},i=\"\";try{var o=t.split(\".\");e=j(f(o[0])||\"\"),n=j(f(o[1])||\"\"),i=o[2],r=n.d||{},delete n.d}catch(a){}return{header:e,claims:n,data:r,signature:i}},L=function(t){var e=D(t).claims;return!!e&&\"object\"===typeof e&&e.hasOwnProperty(\"iat\")},M=function(t){var e=D(t).claims;return\"object\"===typeof e&&!0===e.admin};function F(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function U(t,e){return Object.prototype.hasOwnProperty.call(t,e)?t[e]:void 0}function V(t){for(var e in t)if(Object.prototype.hasOwnProperty.call(t,e))return!1;return!0}function q(t,e,n){var r={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(r[i]=e.call(n,t[i],i,t));return r}function B(t){for(var e=[],n=function(t,n){Array.isArray(n)?n.forEach((function(n){e.push(encodeURIComponent(t)+\"=\"+encodeURIComponent(n))})):e.push(encodeURIComponent(t)+\"=\"+encodeURIComponent(n))},r=0,i=Object.entries(t);r<i.length;r++){var o=i[r];n(o[0],o[1])}return e.length?\"&\"+e.join(\"&\"):\"\"}var z=function(){function t(){this.chain_=[],this.buf_=[],this.W_=[],this.pad_=[],this.inbuf_=0,this.total_=0,this.blockSize=64,this.pad_[0]=128;for(var t=1;t<this.blockSize;++t)this.pad_[t]=0;this.reset()}return t.prototype.reset=function(){this.chain_[0]=1732584193,this.chain_[1]=4023233417,this.chain_[2]=2562383102,this.chain_[3]=271733878,this.chain_[4]=3285377520,this.inbuf_=0,this.total_=0},t.prototype.compress_=function(t,e){e||(e=0);var n=this.W_;if(\"string\"===typeof t)for(var r=0;r<16;r++)n[r]=t.charCodeAt(e)<<24|t.charCodeAt(e+1)<<16|t.charCodeAt(e+2)<<8|t.charCodeAt(e+3),e+=4;else for(r=0;r<16;r++)n[r]=t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3],e+=4;for(r=16;r<80;r++){var i=n[r-3]^n[r-8]^n[r-14]^n[r-16];n[r]=4294967295&(i<<1|i>>>31)}var o,a,s=this.chain_[0],u=this.chain_[1],c=this.chain_[2],l=this.chain_[3],h=this.chain_[4];for(r=0;r<80;r++){r<40?r<20?(o=l^u&(c^l),a=1518500249):(o=u^c^l,a=1859775393):r<60?(o=u&c|l&(u|c),a=2400959708):(o=u^c^l,a=3395469782);i=(s<<5|s>>>27)+o+h+a+n[r]&4294967295;h=l,l=c,c=4294967295&(u<<30|u>>>2),u=s,s=i}this.chain_[0]=this.chain_[0]+s&4294967295,this.chain_[1]=this.chain_[1]+u&4294967295,this.chain_[2]=this.chain_[2]+c&4294967295,this.chain_[3]=this.chain_[3]+l&4294967295,this.chain_[4]=this.chain_[4]+h&4294967295},t.prototype.update=function(t,e){if(null!=t){void 0===e&&(e=t.length);for(var n=e-this.blockSize,r=0,i=this.buf_,o=this.inbuf_;r<e;){if(0===o)for(;r<=n;)this.compress_(t,r),r+=this.blockSize;if(\"string\"===typeof t){for(;r<e;)if(i[o]=t.charCodeAt(r),++r,++o===this.blockSize){this.compress_(i),o=0;break}}else for(;r<e;)if(i[o]=t[r],++r,++o===this.blockSize){this.compress_(i),o=0;break}}this.inbuf_=o,this.total_+=e}},t.prototype.digest=function(){var t=[],e=8*this.total_;this.inbuf_<56?this.update(this.pad_,56-this.inbuf_):this.update(this.pad_,this.blockSize-(this.inbuf_-56));for(var n=this.blockSize-1;n>=56;n--)this.buf_[n]=255&e,e/=256;this.compress_(this.buf_);var r=0;for(n=0;n<5;n++)for(var i=24;i>=0;i-=8)t[r]=this.chain_[n]>>i&255,++r;return t},t}();function H(t,e){var n=new K(t,e);return n.subscribe.bind(n)}var K=function(){function t(t,e){var n=this;this.observers=[],this.unsubscribes=[],this.observerCount=0,this.task=Promise.resolve(),this.finalized=!1,this.onNoObservers=e,this.task.then((function(){t(n)})).catch((function(t){n.error(t)}))}return t.prototype.next=function(t){this.forEachObserver((function(e){e.next(t)}))},t.prototype.error=function(t){this.forEachObserver((function(e){e.error(t)})),this.close(t)},t.prototype.complete=function(){this.forEachObserver((function(t){t.complete()})),this.close()},t.prototype.subscribe=function(t,e,n){var r,i=this;if(void 0===t&&void 0===e&&void 0===n)throw new Error(\"Missing Observer.\");void 0===(r=function(t,e){if(\"object\"!==typeof t||null===t)return!1;for(var n=0,r=e;n<r.length;n++){var i=r[n];if(i in t&&\"function\"===typeof t[i])return!0}return!1}(t,[\"next\",\"error\",\"complete\"])?t:{next:t,error:e,complete:n}).next&&(r.next=W),void 0===r.error&&(r.error=W),void 0===r.complete&&(r.complete=W);var o=this.unsubscribeOne.bind(this,this.observers.length);return this.finalized&&this.task.then((function(){try{i.finalError?r.error(i.finalError):r.complete()}catch(t){}})),this.observers.push(r),o},t.prototype.unsubscribeOne=function(t){void 0!==this.observers&&void 0!==this.observers[t]&&(delete this.observers[t],this.observerCount-=1,0===this.observerCount&&void 0!==this.onNoObservers&&this.onNoObservers(this))},t.prototype.forEachObserver=function(t){if(!this.finalized)for(var e=0;e<this.observers.length;e++)this.sendOne(e,t)},t.prototype.sendOne=function(t,e){var n=this;this.task.then((function(){if(void 0!==n.observers&&void 0!==n.observers[t])try{e(n.observers[t])}catch(r){\"undefined\"!==typeof console&&console.error&&console.error(r)}}))},t.prototype.close=function(t){var e=this;this.finalized||(this.finalized=!0,void 0!==t&&(this.finalError=t),this.task.then((function(){e.observers=void 0,e.onNoObservers=void 0})))},t}();function W(){}var G=function(t,e,n,r){var i;if(r<e?i=\"at least \"+e:r>n&&(i=0===n?\"none\":\"no more than \"+n),i)throw new Error(t+\" failed: Was called with \"+r+(1===r?\" argument.\":\" arguments.\")+\" Expects \"+i+\".\")};function Q(t,e,n){var r=\"\";switch(e){case 1:r=n?\"first\":\"First\";break;case 2:r=n?\"second\":\"Second\";break;case 3:r=n?\"third\":\"Third\";break;case 4:r=n?\"fourth\":\"Fourth\";break;default:throw new Error(\"errorPrefix called with argumentNumber > 4.  Need to update it?\")}var i=t+\" failed: \";return i+=r+\" argument \"}function Y(t,e,n,r){if((!r||n)&&\"function\"!==typeof n)throw new Error(Q(t,e,r)+\"must be a valid function.\")}function J(t,e,n,r){if((!r||n)&&(\"object\"!==typeof n||null===n))throw new Error(Q(t,e,r)+\"must be a valid context object.\")}var X=function(t){for(var e=[],n=0,r=0;r<t.length;r++){var i=t.charCodeAt(r);if(i>=55296&&i<=56319){var o=i-55296;r++,s(r<t.length,\"Surrogate pair missing trail surrogate.\"),i=65536+(o<<10)+(t.charCodeAt(r)-56320)}i<128?e[n++]=i:i<2048?(e[n++]=i>>6|192,e[n++]=63&i|128):i<65536?(e[n++]=i>>12|224,e[n++]=i>>6&63|128,e[n++]=63&i|128):(e[n++]=i>>18|240,e[n++]=i>>12&63|128,e[n++]=i>>6&63|128,e[n++]=63&i|128)}return e},$=function(t){for(var e=0,n=0;n<t.length;n++){var r=t.charCodeAt(n);r<128?e++:r<2048?e+=2:r>=55296&&r<=56319?(e+=4,n++):e+=3}return e};function Z(t,e,n){void 0===e&&(e=1e3),void 0===n&&(n=2);var r=e*Math.pow(n,t),i=Math.round(.5*r*(Math.random()-.5)*2);return Math.min(144e5,r+i)}}).call(this,n(12))},function(t,e,n){\"use strict\";var r,i,o=n(0),a=n(1),s=n(5),u=n(4),c=((r={})[\"no-app\"]=\"No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()\",r[\"bad-app-name\"]=\"Illegal App name: '{$appName}\",r[\"duplicate-app\"]=\"Firebase App named '{$appName}' already exists\",r[\"app-deleted\"]=\"Firebase App named '{$appName}' already deleted\",r[\"invalid-app-argument\"]=\"firebase.{$appName}() takes either no argument or a Firebase App instance.\",r[\"invalid-log-argument\"]=\"First argument to `onLog` must be null or a function.\",r),l=new a.b(\"app\",\"Firebase\",c),h=\"@firebase/app\",f=\"[DEFAULT]\",p=((i={})[h]=\"fire-core\",i[\"@firebase/analytics\"]=\"fire-analytics\",i[\"@firebase/auth\"]=\"fire-auth\",i[\"@firebase/database\"]=\"fire-rtdb\",i[\"@firebase/functions\"]=\"fire-fn\",i[\"@firebase/installations\"]=\"fire-iid\",i[\"@firebase/messaging\"]=\"fire-fcm\",i[\"@firebase/performance\"]=\"fire-perf\",i[\"@firebase/remote-config\"]=\"fire-rc\",i[\"@firebase/storage\"]=\"fire-gcs\",i[\"@firebase/firestore\"]=\"fire-fst\",i[\"fire-js\"]=\"fire-js\",i[\"firebase-wrapper\"]=\"fire-js-all\",i),d=new u.b(\"@firebase/app\"),v=function(){function t(t,e,n){var r,i,u=this;this.firebase_=n,this.isDeleted_=!1,this.name_=e.name,this.automaticDataCollectionEnabled_=e.automaticDataCollectionEnabled||!1,this.options_=Object(a.m)(t),this.container=new s.b(e.name),this._addComponent(new s.a(\"app\",(function(){return u}),\"PUBLIC\"));try{for(var c=Object(o.h)(this.firebase_.INTERNAL.components.values()),l=c.next();!l.done;l=c.next()){var h=l.value;this._addComponent(h)}}catch(f){r={error:f}}finally{try{l&&!l.done&&(i=c.return)&&i.call(c)}finally{if(r)throw r.error}}}return Object.defineProperty(t.prototype,\"automaticDataCollectionEnabled\",{get:function(){return this.checkDestroyed_(),this.automaticDataCollectionEnabled_},set:function(t){this.checkDestroyed_(),this.automaticDataCollectionEnabled_=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"name\",{get:function(){return this.checkDestroyed_(),this.name_},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"options\",{get:function(){return this.checkDestroyed_(),this.options_},enumerable:!1,configurable:!0}),t.prototype.delete=function(){var t=this;return new Promise((function(e){t.checkDestroyed_(),e()})).then((function(){return t.firebase_.INTERNAL.removeApp(t.name_),Promise.all(t.container.getProviders().map((function(t){return t.delete()})))})).then((function(){t.isDeleted_=!0}))},t.prototype._getService=function(t,e){return void 0===e&&(e=f),this.checkDestroyed_(),this.container.getProvider(t).getImmediate({identifier:e})},t.prototype._removeServiceInstance=function(t,e){void 0===e&&(e=f),this.container.getProvider(t).clearInstance(e)},t.prototype._addComponent=function(t){try{this.container.addComponent(t)}catch(e){d.debug(\"Component \"+t.name+\" failed to register with FirebaseApp \"+this.name,e)}},t.prototype._addOrOverwriteComponent=function(t){this.container.addOrOverwriteComponent(t)},t.prototype.checkDestroyed_=function(){if(this.isDeleted_)throw l.create(\"app-deleted\",{appName:this.name_})},t}();v.prototype.name&&v.prototype.options||v.prototype.delete||console.log(\"dc\");var y=function t(){var e=function(t){var e={},n=new Map,r={__esModule:!0,initializeApp:function(n,i){void 0===i&&(i={}),\"object\"===typeof i&&null!==i||(i={name:i});var o=i;void 0===o.name&&(o.name=f);var s=o.name;if(\"string\"!==typeof s||!s)throw l.create(\"bad-app-name\",{appName:String(s)});if(Object(a.k)(e,s))throw l.create(\"duplicate-app\",{appName:s});var u=new t(n,o,r);return e[s]=u,u},app:i,registerVersion:function(t,e,n){var r,i=null!==(r=p[t])&&void 0!==r?r:t;n&&(i+=\"-\"+n);var o=i.match(/\\s|\\//),a=e.match(/\\s|\\//);if(o||a){var u=['Unable to register library \"'+i+'\" with version \"'+e+'\":'];return o&&u.push('library name \"'+i+'\" contains illegal characters (whitespace or \"/\")'),o&&a&&u.push(\"and\"),a&&u.push('version name \"'+e+'\" contains illegal characters (whitespace or \"/\")'),void d.warn(u.join(\" \"))}c(new s.a(i+\"-version\",(function(){return{library:i,version:e}}),\"VERSION\"))},setLogLevel:u.c,onLog:function(t,e){if(null!==t&&\"function\"!==typeof t)throw l.create(\"invalid-log-argument\",{appName:name});Object(u.d)(t,e)},apps:null,SDK_VERSION:\"8.0.1\",INTERNAL:{registerComponent:c,removeApp:function(t){delete e[t]},components:n,useAsService:function(t,e){return\"serverAuth\"===e?null:e}}};function i(t){if(t=t||f,!Object(a.k)(e,t))throw l.create(\"no-app\",{appName:t});return e[t]}function c(s){var u,c,h=s.name;if(n.has(h))return d.debug(\"There were multiple attempts to register component \"+h+\".\"),\"PUBLIC\"===s.type?r[h]:null;if(n.set(h,s),\"PUBLIC\"===s.type){var f=function(t){if(void 0===t&&(t=i()),\"function\"!==typeof t[h])throw l.create(\"invalid-app-argument\",{appName:h});return t[h]()};void 0!==s.serviceProps&&Object(a.n)(f,s.serviceProps),r[h]=f,t.prototype[h]=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this._getService.bind(this,h).apply(this,s.multipleInstances?t:[])}}try{for(var p=Object(o.h)(Object.keys(e)),v=p.next();!v.done;v=p.next()){var y=v.value;e[y]._addComponent(s)}}catch(g){u={error:g}}finally{try{v&&!v.done&&(c=p.return)&&c.call(p)}finally{if(u)throw u.error}}return\"PUBLIC\"===s.type?r[h]:null}return r.default=r,Object.defineProperty(r,\"apps\",{get:function(){return Object.keys(e).map((function(t){return e[t]}))}}),i.App=t,r}(v);return e.INTERNAL=Object(o.a)(Object(o.a)({},e.INTERNAL),{createFirebaseNamespace:t,extendNamespace:function(t){Object(a.n)(e,t)},createSubscribe:a.l,ErrorFactory:a.b,deepExtend:a.n}),e}(),g=function(){function t(t){this.container=t}return t.prototype.getPlatformInfoString=function(){return this.container.getProviders().map((function(t){if(function(t){var e=t.getComponent();return\"VERSION\"===(null===e||void 0===e?void 0:e.type)}(t)){var e=t.getImmediate();return e.library+\"/\"+e.version}return null})).filter((function(t){return t})).join(\" \")},t}();if(Object(a.r)()&&void 0!==self.firebase){d.warn(\"\\n    Warning: Firebase is already defined in the global scope. Please make sure\\n    Firebase library is only loaded once.\\n  \");var m=self.firebase.SDK_VERSION;m&&m.indexOf(\"LITE\")>=0&&d.warn(\"\\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\\n    \")}var b=y.initializeApp;y.initializeApp=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return Object(a.y)()&&d.warn('\\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\\n      run in a Node environment.  If running in a Node environment, make sure you\\n      are using the bundle specified by the \"main\" field in package.json.\\n      \\n      If you are using Webpack, you can specify \"main\" as the first item in\\n      \"resolve.mainFields\":\\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\\n      \\n      If using Rollup, use the @rollup/plugin-node-resolve plugin and specify \"main\"\\n      as the first item in \"mainFields\", e.g. [\\'main\\', \\'module\\'].\\n      https://github.com/rollup/@rollup/plugin-node-resolve\\n      '),b.apply(void 0,t)};var _=y;!function(t,e){t.INTERNAL.registerComponent(new s.a(\"platform-logger\",(function(t){return new g(t)}),\"PRIVATE\")),t.registerVersion(h,\"0.6.13\",e),t.registerVersion(\"fire-js\",\"\")}(_),e.a=_},function(t,e,n){\"use strict\";t.exports=n(16)},function(t,e,n){\"use strict\";function r(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var r=Array(t),i=0;for(e=0;e<n;e++)for(var o=arguments[e],a=0,s=o.length;a<s;a++,i++)r[i]=o[a];return r}var i;n.d(e,\"a\",(function(){return o})),n.d(e,\"b\",(function(){return h})),n.d(e,\"c\",(function(){return f})),n.d(e,\"d\",(function(){return p}));var o,a=[];!function(t){t[t.DEBUG=0]=\"DEBUG\",t[t.VERBOSE=1]=\"VERBOSE\",t[t.INFO=2]=\"INFO\",t[t.WARN=3]=\"WARN\",t[t.ERROR=4]=\"ERROR\",t[t.SILENT=5]=\"SILENT\"}(o||(o={}));var s={debug:o.DEBUG,verbose:o.VERBOSE,info:o.INFO,warn:o.WARN,error:o.ERROR,silent:o.SILENT},u=o.INFO,c=((i={})[o.DEBUG]=\"log\",i[o.VERBOSE]=\"log\",i[o.INFO]=\"info\",i[o.WARN]=\"warn\",i[o.ERROR]=\"error\",i),l=function(t,e){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i];if(!(e<t.logLevel)){var o=(new Date).toISOString(),a=c[e];if(!a)throw new Error(\"Attempted to log a message with an invalid logType (value: \"+e+\")\");console[a].apply(console,r([\"[\"+o+\"]  \"+t.name+\":\"],n))}},h=function(){function t(t){this.name=t,this._logLevel=u,this._logHandler=l,this._userLogHandler=null,a.push(this)}return Object.defineProperty(t.prototype,\"logLevel\",{get:function(){return this._logLevel},set:function(t){if(!(t in o))throw new TypeError('Invalid value \"'+t+'\" assigned to `logLevel`');this._logLevel=t},enumerable:!1,configurable:!0}),t.prototype.setLogLevel=function(t){this._logLevel=\"string\"===typeof t?s[t]:t},Object.defineProperty(t.prototype,\"logHandler\",{get:function(){return this._logHandler},set:function(t){if(\"function\"!==typeof t)throw new TypeError(\"Value assigned to `logHandler` must be a function\");this._logHandler=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"userLogHandler\",{get:function(){return this._userLogHandler},set:function(t){this._userLogHandler=t},enumerable:!1,configurable:!0}),t.prototype.debug=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,r([this,o.DEBUG],t)),this._logHandler.apply(this,r([this,o.DEBUG],t))},t.prototype.log=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,r([this,o.VERBOSE],t)),this._logHandler.apply(this,r([this,o.VERBOSE],t))},t.prototype.info=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,r([this,o.INFO],t)),this._logHandler.apply(this,r([this,o.INFO],t))},t.prototype.warn=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,r([this,o.WARN],t)),this._logHandler.apply(this,r([this,o.WARN],t))},t.prototype.error=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,r([this,o.ERROR],t)),this._logHandler.apply(this,r([this,o.ERROR],t))},t}();function f(t){a.forEach((function(e){e.setLogLevel(t)}))}function p(t,e){for(var n=function(n){var r=null;e&&e.level&&(r=s[e.level]),n.userLogHandler=null===t?null:function(e,n){for(var i=[],a=2;a<arguments.length;a++)i[a-2]=arguments[a];var s=i.map((function(t){if(null==t)return null;if(\"string\"===typeof t)return t;if(\"number\"===typeof t||\"boolean\"===typeof t)return t.toString();if(t instanceof Error)return t.message;try{return JSON.stringify(t)}catch(e){return null}})).filter((function(t){return t})).join(\" \");n>=(null!==r&&void 0!==r?r:e.logLevel)&&t({level:o[n].toLowerCase(),message:s,args:i,type:e.name})}},r=0,i=a;r<i.length;r++){n(i[r])}}},function(t,e,n){\"use strict\";n.d(e,\"a\",(function(){return o})),n.d(e,\"b\",(function(){return u})),n.d(e,\"c\",(function(){return s}));var r=n(0),i=n(1),o=function(){function t(t,e,n){this.name=t,this.instanceFactory=e,this.type=n,this.multipleInstances=!1,this.serviceProps={},this.instantiationMode=\"LAZY\"}return t.prototype.setInstantiationMode=function(t){return this.instantiationMode=t,this},t.prototype.setMultipleInstances=function(t){return this.multipleInstances=t,this},t.prototype.setServiceProps=function(t){return this.serviceProps=t,this},t}(),a=\"[DEFAULT]\",s=function(){function t(t,e){this.name=t,this.container=e,this.component=null,this.instances=new Map,this.instancesDeferred=new Map}return t.prototype.get=function(t){void 0===t&&(t=a);var e=this.normalizeInstanceIdentifier(t);if(!this.instancesDeferred.has(e)){var n=new i.a;this.instancesDeferred.set(e,n);try{var r=this.getOrInitializeService(e);r&&n.resolve(r)}catch(o){}}return this.instancesDeferred.get(e).promise},t.prototype.getImmediate=function(t){var e=Object(r.a)({identifier:a,optional:!1},t),n=e.identifier,i=e.optional,o=this.normalizeInstanceIdentifier(n);try{var s=this.getOrInitializeService(o);if(!s){if(i)return null;throw Error(\"Service \"+this.name+\" is not available\")}return s}catch(u){if(i)return null;throw u}},t.prototype.getComponent=function(){return this.component},t.prototype.setComponent=function(t){var e,n;if(t.name!==this.name)throw Error(\"Mismatching Component \"+t.name+\" for Provider \"+this.name+\".\");if(this.component)throw Error(\"Component for \"+this.name+\" has already been provided\");if(this.component=t,function(t){return\"EAGER\"===t.instantiationMode}(t))try{this.getOrInitializeService(a)}catch(f){}try{for(var i=Object(r.h)(this.instancesDeferred.entries()),o=i.next();!o.done;o=i.next()){var s=Object(r.e)(o.value,2),u=s[0],c=s[1],l=this.normalizeInstanceIdentifier(u);try{var h=this.getOrInitializeService(l);c.resolve(h)}catch(f){}}}catch(p){e={error:p}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}},t.prototype.clearInstance=function(t){void 0===t&&(t=a),this.instancesDeferred.delete(t),this.instances.delete(t)},t.prototype.delete=function(){return Object(r.b)(this,void 0,void 0,(function(){var t;return Object(r.d)(this,(function(e){switch(e.label){case 0:return t=Array.from(this.instances.values()),[4,Promise.all(Object(r.f)(t.filter((function(t){return\"INTERNAL\"in t})).map((function(t){return t.INTERNAL.delete()})),t.filter((function(t){return\"_delete\"in t})).map((function(t){return t._delete()}))))];case 1:return e.sent(),[2]}}))}))},t.prototype.isComponentSet=function(){return null!=this.component},t.prototype.getOrInitializeService=function(t){var e=this.instances.get(t);return!e&&this.component&&(e=this.component.instanceFactory(this.container,function(t){return t===a?void 0:t}(t)),this.instances.set(t,e)),e||null},t.prototype.normalizeInstanceIdentifier=function(t){return this.component?this.component.multipleInstances?t:a:t},t}();var u=function(){function t(t){this.name=t,this.providers=new Map}return t.prototype.addComponent=function(t){var e=this.getProvider(t.name);if(e.isComponentSet())throw new Error(\"Component \"+t.name+\" has already been registered with \"+this.name);e.setComponent(t)},t.prototype.addOrOverwriteComponent=function(t){this.getProvider(t.name).isComponentSet()&&this.providers.delete(t.name),this.addComponent(t)},t.prototype.getProvider=function(t){if(this.providers.has(t))return this.providers.get(t);var e=new s(t,this);return this.providers.set(t,e),e},t.prototype.getProviders=function(){return Array.from(this.providers.values())},t}()},function(t,e,n){\"use strict\";(function(t){n.d(e,\"a\",(function(){return vc})),n.d(e,\"b\",(function(){return fc})),n.d(e,\"c\",(function(){return k})),n.d(e,\"d\",(function(){return lc})),n.d(e,\"e\",(function(){return dc})),n.d(e,\"f\",(function(){return _c})),n.d(e,\"g\",(function(){return bc})),n.d(e,\"h\",(function(){return Su})),n.d(e,\"i\",(function(){return wc})),n.d(e,\"j\",(function(){return Ic})),n.d(e,\"k\",(function(){return Iu})),n.d(e,\"l\",(function(){return Nc})),n.d(e,\"m\",(function(){return Tc})),n.d(e,\"n\",(function(){return Ac})),n.d(e,\"o\",(function(){return Oc})),n.d(e,\"p\",(function(){return pc})),n.d(e,\"q\",(function(){return Ls})),n.d(e,\"r\",(function(){return cc})),n.d(e,\"s\",(function(){return Cc})),n.d(e,\"t\",(function(){return F}));var r=n(4),i=n(1),o=n(7),a=n(0),s=new r.b(\"@firebase/firestore\");function u(){return s.logLevel}function c(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(s.logLevel<=r.a.DEBUG){var i=e.map(f);s.debug.apply(s,Object(a.g)([\"Firestore (8.2.2): \"+t],i))}}function l(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(s.logLevel<=r.a.ERROR){var i=e.map(f);s.error.apply(s,Object(a.g)([\"Firestore (8.2.2): \"+t],i))}}function h(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(s.logLevel<=r.a.WARN){var i=e.map(f);s.warn.apply(s,Object(a.g)([\"Firestore (8.2.2): \"+t],i))}}function f(t){if(\"string\"==typeof t)return t;try{return e=t,JSON.stringify(e)}catch(e){return t}var e}function p(t){void 0===t&&(t=\"Unexpected state\");var e=\"FIRESTORE (8.2.2) INTERNAL ASSERTION FAILED: \"+t;throw l(e),new Error(e)}function d(t,e){t||p()}function v(t,e){return t}function y(t){var e=\"undefined\"!=typeof self&&(self.crypto||self.msCrypto),n=new Uint8Array(t);if(e&&\"function\"==typeof e.getRandomValues)e.getRandomValues(n);else for(var r=0;r<t;r++)n[r]=Math.floor(256*Math.random());return n}var g=function(){function t(){}return t.t=function(){for(var t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",e=Math.floor(256/t.length)*t.length,n=\"\";n.length<20;)for(var r=y(40),i=0;i<r.length;++i)n.length<20&&r[i]<e&&(n+=t.charAt(r[i]%t.length));return n},t}();function m(t,e){return t<e?-1:t>e?1:0}function b(t,e,n){return t.length===e.length&&t.every((function(t,r){return n(t,e[r])}))}function _(t){return t+\"\\0\"}var w=function(){function t(t){this.i=t}return t.fromBase64String=function(e){return new t(atob(e))},t.fromUint8Array=function(e){return new t(function(t){for(var e=\"\",n=0;n<t.length;++n)e+=String.fromCharCode(t[n]);return e}(e))},t.prototype.toBase64=function(){return t=this.i,btoa(t);var t},t.prototype.toUint8Array=function(){return function(t){for(var e=new Uint8Array(t.length),n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}(this.i)},t.prototype.o=function(){return 2*this.i.length},t.prototype.u=function(t){return m(this.i,t.i)},t.prototype.isEqual=function(t){return this.i===t.i},t}();w.h=new w(\"\");var E={OK:\"ok\",CANCELLED:\"cancelled\",UNKNOWN:\"unknown\",INVALID_ARGUMENT:\"invalid-argument\",DEADLINE_EXCEEDED:\"deadline-exceeded\",NOT_FOUND:\"not-found\",ALREADY_EXISTS:\"already-exists\",PERMISSION_DENIED:\"permission-denied\",UNAUTHENTICATED:\"unauthenticated\",RESOURCE_EXHAUSTED:\"resource-exhausted\",FAILED_PRECONDITION:\"failed-precondition\",ABORTED:\"aborted\",OUT_OF_RANGE:\"out-of-range\",UNIMPLEMENTED:\"unimplemented\",INTERNAL:\"internal\",UNAVAILABLE:\"unavailable\",DATA_LOSS:\"data-loss\"},T=function(t){function e(e,n){var r=this;return(r=t.call(this,n)||this).code=e,r.message=n,r.name=\"FirebaseError\",r.toString=function(){return r.name+\": [code=\"+r.code+\"]: \"+r.message},r}return Object(a.c)(e,t),e}(Error),I=function(){function t(t){this.l=t}return t.fromBase64String=function(e){try{return new t(w.fromBase64String(e))}catch(e){throw new T(E.INVALID_ARGUMENT,\"Failed to construct data from Base64 string: \"+e)}},t.fromUint8Array=function(e){return new t(w.fromUint8Array(e))},t.prototype.toBase64=function(){return this.l.toBase64()},t.prototype.toUint8Array=function(){return this.l.toUint8Array()},t.prototype.toString=function(){return\"Bytes(base64: \"+this.toBase64()+\")\"},t.prototype.isEqual=function(t){return this.l.isEqual(t.l)},t}(),S=function(t){this._=t};function O(){if(\"undefined\"==typeof Uint8Array)throw new T(E.UNIMPLEMENTED,\"Uint8Arrays are not available in this environment.\")}function C(){if(\"undefined\"==typeof atob)throw new T(E.UNIMPLEMENTED,\"Blobs are unavailable in Firestore in this environment.\")}var k=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(a.c)(e,t),e.fromBase64String=function(t){return C(),new e(I.fromBase64String(t))},e.fromUint8Array=function(t){return O(),new e(I.fromUint8Array(t))},e.prototype.toBase64=function(){return C(),this._.toBase64()},e.prototype.toUint8Array=function(){return O(),this._.toUint8Array()},e.prototype.isEqual=function(t){return this._.isEqual(t._)},e.prototype.toString=function(){return\"Blob(base64: \"+this.toBase64()+\")\"},e}(S),N=function(t,e,n,r,i,o){this.T=t,this.persistenceKey=e,this.host=n,this.ssl=r,this.forceLongPolling=i,this.I=o},A=function(){function t(t,e){this.projectId=t,this.database=e||\"(default)\"}return Object.defineProperty(t.prototype,\"m\",{get:function(){return\"(default)\"===this.database},enumerable:!1,configurable:!0}),t.prototype.isEqual=function(e){return e instanceof t&&e.projectId===this.projectId&&e.database===this.database},t}(),P=function(){function t(t){this.uid=t}return t.prototype.A=function(){return null!=this.uid},t.prototype.R=function(){return this.A()?\"uid:\"+this.uid:\"anonymous-user\"},t.prototype.isEqual=function(t){return t.uid===this.uid},t}();P.UNAUTHENTICATED=new P(null),P.P=new P(\"google-credentials-uid\"),P.g=new P(\"first-party-uid\");var R=function(t,e){this.user=e,this.type=\"OAuth\",this.V={},this.V.Authorization=\"Bearer \"+t},j=function(){function t(){this.p=null}return t.prototype.getToken=function(){return Promise.resolve(null)},t.prototype.v=function(){},t.prototype.S=function(t){this.p=t,t(P.UNAUTHENTICATED)},t.prototype.D=function(){this.p=null},t}(),x=function(){function t(t){var e=this;this.C=null,this.currentUser=P.UNAUTHENTICATED,this.N=!1,this.O=0,this.p=null,this.forceRefresh=!1,this.C=function(){e.O++,e.currentUser=e.F(),e.N=!0,e.p&&e.p(e.currentUser)},this.O=0,this.auth=t.getImmediate({optional:!0}),this.auth?this.auth.addAuthTokenListener(this.C):(this.C(null),t.get().then((function(t){e.auth=t,e.C&&e.auth.addAuthTokenListener(e.C)}),(function(){})))}return t.prototype.getToken=function(){var t=this,e=this.O,n=this.forceRefresh;return this.forceRefresh=!1,this.auth?this.auth.getToken(n).then((function(n){return t.O!==e?(c(\"FirebaseCredentialsProvider\",\"getToken aborted due to token change.\"),t.getToken()):n?(d(\"string\"==typeof n.accessToken),new R(n.accessToken,t.currentUser)):null})):Promise.resolve(null)},t.prototype.v=function(){this.forceRefresh=!0},t.prototype.S=function(t){this.p=t,this.N&&t(this.currentUser)},t.prototype.D=function(){this.auth&&this.auth.removeAuthTokenListener(this.C),this.C=null,this.p=null},t.prototype.F=function(){var t=this.auth&&this.auth.getUid();return d(null===t||\"string\"==typeof t),new P(t)},t}(),D=function(){function t(t,e){this.k=t,this.M=e,this.type=\"FirstParty\",this.user=P.g}return Object.defineProperty(t.prototype,\"V\",{get:function(){var t={\"X-Goog-AuthUser\":this.M},e=this.k.auth.getAuthHeaderValueForFirstParty([]);return e&&(t.Authorization=e),t},enumerable:!1,configurable:!0}),t}(),L=function(){function t(t,e){this.k=t,this.M=e}return t.prototype.getToken=function(){return Promise.resolve(new D(this.k,this.M))},t.prototype.S=function(t){t(P.g)},t.prototype.D=function(){},t.prototype.v=function(){},t}(),M=function(){function t(t,e){var n=this;this.previousValue=t,e&&(e.L=function(t){return n.$(t)},this.B=function(t){return e.q(t)})}return t.prototype.$=function(t){return this.previousValue=Math.max(t,this.previousValue),this.previousValue},t.prototype.next=function(){var t=++this.previousValue;return this.B&&this.B(t),t},t}();M.U=-1;var F=function(){function t(t,e){if(this.seconds=t,this.nanoseconds=e,e<0)throw new T(E.INVALID_ARGUMENT,\"Timestamp nanoseconds out of range: \"+e);if(e>=1e9)throw new T(E.INVALID_ARGUMENT,\"Timestamp nanoseconds out of range: \"+e);if(t<-62135596800)throw new T(E.INVALID_ARGUMENT,\"Timestamp seconds out of range: \"+t);if(t>=253402300800)throw new T(E.INVALID_ARGUMENT,\"Timestamp seconds out of range: \"+t)}return t.now=function(){return t.fromMillis(Date.now())},t.fromDate=function(e){return t.fromMillis(e.getTime())},t.fromMillis=function(e){var n=Math.floor(e/1e3);return new t(n,1e6*(e-1e3*n))},t.prototype.toDate=function(){return new Date(this.toMillis())},t.prototype.toMillis=function(){return 1e3*this.seconds+this.nanoseconds/1e6},t.prototype.K=function(t){return this.seconds===t.seconds?m(this.nanoseconds,t.nanoseconds):m(this.seconds,t.seconds)},t.prototype.isEqual=function(t){return t.seconds===this.seconds&&t.nanoseconds===this.nanoseconds},t.prototype.toString=function(){return\"Timestamp(seconds=\"+this.seconds+\", nanoseconds=\"+this.nanoseconds+\")\"},t.prototype.toJSON=function(){return{seconds:this.seconds,nanoseconds:this.nanoseconds}},t.prototype.valueOf=function(){var t=this.seconds- -62135596800;return String(t).padStart(12,\"0\")+\".\"+String(this.nanoseconds).padStart(9,\"0\")},t}(),U=function(){function t(t){this.timestamp=t}return t.j=function(e){return new t(e)},t.min=function(){return new t(new F(0,0))},t.prototype.u=function(t){return this.timestamp.K(t.timestamp)},t.prototype.isEqual=function(t){return this.timestamp.isEqual(t.timestamp)},t.prototype.W=function(){return 1e6*this.timestamp.seconds+this.timestamp.nanoseconds/1e3},t.prototype.toString=function(){return\"SnapshotVersion(\"+this.timestamp.toString()+\")\"},t.prototype.G=function(){return this.timestamp},t}(),V=function(){function t(t,e,n){void 0===e?e=0:e>t.length&&p(),void 0===n?n=t.length-e:n>t.length-e&&p(),this.segments=t,this.offset=e,this.H=n}return Object.defineProperty(t.prototype,\"length\",{get:function(){return this.H},enumerable:!1,configurable:!0}),t.prototype.isEqual=function(e){return 0===t.J(this,e)},t.prototype.child=function(e){var n=this.segments.slice(this.offset,this.limit());return e instanceof t?e.forEach((function(t){n.push(t)})):n.push(e),this.Y(n)},t.prototype.limit=function(){return this.offset+this.length},t.prototype.X=function(t){return t=void 0===t?1:t,this.Y(this.segments,this.offset+t,this.length-t)},t.prototype.Z=function(){return this.Y(this.segments,this.offset,this.length-1)},t.prototype.tt=function(){return this.segments[this.offset]},t.prototype.et=function(){return this.get(this.length-1)},t.prototype.get=function(t){return this.segments[this.offset+t]},t.prototype.nt=function(){return 0===this.length},t.prototype.st=function(t){if(t.length<this.length)return!1;for(var e=0;e<this.length;e++)if(this.get(e)!==t.get(e))return!1;return!0},t.prototype.it=function(t){if(this.length+1!==t.length)return!1;for(var e=0;e<this.length;e++)if(this.get(e)!==t.get(e))return!1;return!0},t.prototype.forEach=function(t){for(var e=this.offset,n=this.limit();e<n;e++)t(this.segments[e])},t.prototype.rt=function(){return this.segments.slice(this.offset,this.limit())},t.J=function(t,e){for(var n=Math.min(t.length,e.length),r=0;r<n;r++){var i=t.get(r),o=e.get(r);if(i<o)return-1;if(i>o)return 1}return t.length<e.length?-1:t.length>e.length?1:0},t}(),q=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(a.c)(e,t),e.prototype.Y=function(t,n,r){return new e(t,n,r)},e.prototype.ot=function(){return this.rt().join(\"/\")},e.prototype.toString=function(){return this.ot()},e.ct=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];for(var r=[],i=0,o=t;i<o.length;i++){var a=o[i];if(a.indexOf(\"//\")>=0)throw new T(E.INVALID_ARGUMENT,\"Invalid segment (\"+a+\"). Paths must not contain // in them.\");r.push.apply(r,a.split(\"/\").filter((function(t){return t.length>0})))}return new e(r)},e.at=function(){return new e([])},e}(V),B=/^[_a-zA-Z][_a-zA-Z0-9]*$/,z=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(a.c)(e,t),e.prototype.Y=function(t,n,r){return new e(t,n,r)},e.ut=function(t){return B.test(t)},e.prototype.ot=function(){return this.rt().map((function(t){return t=t.replace(/\\\\/g,\"\\\\\\\\\").replace(/`/g,\"\\\\`\"),e.ut(t)||(t=\"`\"+t+\"`\"),t})).join(\".\")},e.prototype.toString=function(){return this.ot()},e.prototype.ht=function(){return 1===this.length&&\"__name__\"===this.get(0)},e.lt=function(){return new e([\"__name__\"])},e._t=function(t){for(var n=[],r=\"\",i=0,o=function(){if(0===r.length)throw new T(E.INVALID_ARGUMENT,\"Invalid field path (\"+t+\"). Paths must not be empty, begin with '.', end with '.', or contain '..'\");n.push(r),r=\"\"},a=!1;i<t.length;){var s=t[i];if(\"\\\\\"===s){if(i+1===t.length)throw new T(E.INVALID_ARGUMENT,\"Path has trailing escape character: \"+t);var u=t[i+1];if(\"\\\\\"!==u&&\".\"!==u&&\"`\"!==u)throw new T(E.INVALID_ARGUMENT,\"Path has invalid escape sequence: \"+t);r+=u,i+=2}else\"`\"===s?(a=!a,i++):\".\"!==s||a?(r+=s,i++):(o(),i++)}if(o(),a)throw new T(E.INVALID_ARGUMENT,\"Unterminated ` in path: \"+t);return new e(n)},e.at=function(){return new e([])},e}(V),H=function(){function t(t){this.path=t}return t.ft=function(e){return new t(q.ct(e))},t.dt=function(e){return new t(q.ct(e).X(5))},t.prototype.wt=function(t){return this.path.length>=2&&this.path.get(this.path.length-2)===t},t.prototype.isEqual=function(t){return null!==t&&0===q.J(this.path,t.path)},t.prototype.toString=function(){return this.path.toString()},t.J=function(t,e){return q.J(t.path,e.path)},t.Et=function(t){return t.length%2==0},t.Tt=function(e){return new t(new q(e.slice()))},t}();function K(t){var e=0;for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e++;return e}function W(t,e){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e(n,t[n])}function G(t){for(var e in t)if(Object.prototype.hasOwnProperty.call(t,e))return!1;return!0}var Q=function(){function t(t){this.fields=t,t.sort(z.J)}return t.prototype.It=function(t){for(var e=0,n=this.fields;e<n.length;e++)if(n[e].st(t))return!0;return!1},t.prototype.isEqual=function(t){return b(this.fields,t.fields,(function(t,e){return t.isEqual(e)}))},t}(),Y=new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);function J(t){if(d(!!t),\"string\"==typeof t){var e=0,n=Y.exec(t);if(d(!!n),n[1]){var r=n[1];r=(r+\"000000000\").substr(0,9),e=Number(r)}var i=new Date(t);return{seconds:Math.floor(i.getTime()/1e3),nanos:e}}return{seconds:X(t.seconds),nanos:X(t.nanos)}}function X(t){return\"number\"==typeof t?t:\"string\"==typeof t?Number(t):0}function $(t){return\"string\"==typeof t?w.fromBase64String(t):w.fromUint8Array(t)}function Z(t){var e,n;return\"server_timestamp\"===(null===(n=((null===(e=null==t?void 0:t.mapValue)||void 0===e?void 0:e.fields)||{}).__type__)||void 0===n?void 0:n.stringValue)}function tt(t){var e=t.mapValue.fields.__previous_value__;return Z(e)?tt(e):e}function et(t){var e=J(t.mapValue.fields.__local_write_time__.timestampValue);return new F(e.seconds,e.nanos)}function nt(t){return null==t}function rt(t){return 0===t&&1/t==-1/0}function it(t){return\"number\"==typeof t&&Number.isInteger(t)&&!rt(t)&&t<=Number.MAX_SAFE_INTEGER&&t>=Number.MIN_SAFE_INTEGER}function ot(t){return\"nullValue\"in t?0:\"booleanValue\"in t?1:\"integerValue\"in t||\"doubleValue\"in t?2:\"timestampValue\"in t?3:\"stringValue\"in t?5:\"bytesValue\"in t?6:\"referenceValue\"in t?7:\"geoPointValue\"in t?8:\"arrayValue\"in t?9:\"mapValue\"in t?Z(t)?4:10:p()}function at(t,e){var n=ot(t);if(n!==ot(e))return!1;switch(n){case 0:return!0;case 1:return t.booleanValue===e.booleanValue;case 4:return et(t).isEqual(et(e));case 3:return function(t,e){if(\"string\"==typeof t.timestampValue&&\"string\"==typeof e.timestampValue&&t.timestampValue.length===e.timestampValue.length)return t.timestampValue===e.timestampValue;var n=J(t.timestampValue),r=J(e.timestampValue);return n.seconds===r.seconds&&n.nanos===r.nanos}(t,e);case 5:return t.stringValue===e.stringValue;case 6:return function(t,e){return $(t.bytesValue).isEqual($(e.bytesValue))}(t,e);case 7:return t.referenceValue===e.referenceValue;case 8:return function(t,e){return X(t.geoPointValue.latitude)===X(e.geoPointValue.latitude)&&X(t.geoPointValue.longitude)===X(e.geoPointValue.longitude)}(t,e);case 2:return function(t,e){if(\"integerValue\"in t&&\"integerValue\"in e)return X(t.integerValue)===X(e.integerValue);if(\"doubleValue\"in t&&\"doubleValue\"in e){var n=X(t.doubleValue),r=X(e.doubleValue);return n===r?rt(n)===rt(r):isNaN(n)&&isNaN(r)}return!1}(t,e);case 9:return b(t.arrayValue.values||[],e.arrayValue.values||[],at);case 10:return function(t,e){var n=t.mapValue.fields||{},r=e.mapValue.fields||{};if(K(n)!==K(r))return!1;for(var i in n)if(n.hasOwnProperty(i)&&(void 0===r[i]||!at(n[i],r[i])))return!1;return!0}(t,e);default:return p()}}function st(t,e){return void 0!==(t.values||[]).find((function(t){return at(t,e)}))}function ut(t,e){var n=ot(t),r=ot(e);if(n!==r)return m(n,r);switch(n){case 0:return 0;case 1:return m(t.booleanValue,e.booleanValue);case 2:return function(t,e){var n=X(t.integerValue||t.doubleValue),r=X(e.integerValue||e.doubleValue);return n<r?-1:n>r?1:n===r?0:isNaN(n)?isNaN(r)?0:-1:1}(t,e);case 3:return ct(t.timestampValue,e.timestampValue);case 4:return ct(et(t),et(e));case 5:return m(t.stringValue,e.stringValue);case 6:return function(t,e){var n=$(t),r=$(e);return n.u(r)}(t.bytesValue,e.bytesValue);case 7:return function(t,e){for(var n=t.split(\"/\"),r=e.split(\"/\"),i=0;i<n.length&&i<r.length;i++){var o=m(n[i],r[i]);if(0!==o)return o}return m(n.length,r.length)}(t.referenceValue,e.referenceValue);case 8:return function(t,e){var n=m(X(t.latitude),X(e.latitude));return 0!==n?n:m(X(t.longitude),X(e.longitude))}(t.geoPointValue,e.geoPointValue);case 9:return function(t,e){for(var n=t.values||[],r=e.values||[],i=0;i<n.length&&i<r.length;++i){var o=ut(n[i],r[i]);if(o)return o}return m(n.length,r.length)}(t.arrayValue,e.arrayValue);case 10:return function(t,e){var n=t.fields||{},r=Object.keys(n),i=e.fields||{},o=Object.keys(i);r.sort(),o.sort();for(var a=0;a<r.length&&a<o.length;++a){var s=m(r[a],o[a]);if(0!==s)return s;var u=ut(n[r[a]],i[o[a]]);if(0!==u)return u}return m(r.length,o.length)}(t.mapValue,e.mapValue);default:throw p()}}function ct(t,e){if(\"string\"==typeof t&&\"string\"==typeof e&&t.length===e.length)return m(t,e);var n=J(t),r=J(e),i=m(n.seconds,r.seconds);return 0!==i?i:m(n.nanos,r.nanos)}function lt(t){return ht(t)}function ht(t){return\"nullValue\"in t?\"null\":\"booleanValue\"in t?\"\"+t.booleanValue:\"integerValue\"in t?\"\"+t.integerValue:\"doubleValue\"in t?\"\"+t.doubleValue:\"timestampValue\"in t?function(t){var e=J(t);return\"time(\"+e.seconds+\",\"+e.nanos+\")\"}(t.timestampValue):\"stringValue\"in t?t.stringValue:\"bytesValue\"in t?$(t.bytesValue).toBase64():\"referenceValue\"in t?(n=t.referenceValue,H.dt(n).toString()):\"geoPointValue\"in t?\"geo(\"+(e=t.geoPointValue).latitude+\",\"+e.longitude+\")\":\"arrayValue\"in t?function(t){for(var e=\"[\",n=!0,r=0,i=t.values||[];r<i.length;r++)n?n=!1:e+=\",\",e+=ht(i[r]);return e+\"]\"}(t.arrayValue):\"mapValue\"in t?function(t){for(var e=\"{\",n=!0,r=0,i=Object.keys(t.fields||{}).sort();r<i.length;r++){var o=i[r];n?n=!1:e+=\",\",e+=o+\":\"+ht(t.fields[o])}return e+\"}\"}(t.mapValue):p();var e,n}function ft(t,e){return{referenceValue:\"projects/\"+t.projectId+\"/databases/\"+t.database+\"/documents/\"+e.path.ot()}}function pt(t){return!!t&&\"integerValue\"in t}function dt(t){return!!t&&\"arrayValue\"in t}function vt(t){return!!t&&\"nullValue\"in t}function yt(t){return!!t&&\"doubleValue\"in t&&isNaN(Number(t.doubleValue))}function gt(t){return!!t&&\"mapValue\"in t}var mt=function(){function t(t){this.proto=t}return t.empty=function(){return new t({mapValue:{}})},t.prototype.field=function(t){if(t.nt())return this.proto;for(var e=this.proto,n=0;n<t.length-1;++n){if(!e.mapValue.fields)return null;if(!gt(e=e.mapValue.fields[t.get(n)]))return null}return(e=(e.mapValue.fields||{})[t.et()])||null},t.prototype.isEqual=function(t){return at(this.proto,t.proto)},t}(),bt=function(){function t(t){void 0===t&&(t=mt.empty()),this.At=t,this.Rt=new Map}return t.prototype.set=function(t,e){return this.Pt(t,e),this},t.prototype.delete=function(t){return this.Pt(t,null),this},t.prototype.Pt=function(t,e){for(var n=this.Rt,r=0;r<t.length-1;++r){var i=t.get(r),o=n.get(i);o instanceof Map?n=o:o&&10===ot(o)?(o=new Map(Object.entries(o.mapValue.fields||{})),n.set(i,o),n=o):(o=new Map,n.set(i,o),n=o)}n.set(t.et(),e)},t.prototype.yt=function(){var t=this.gt(z.at(),this.Rt);return null!=t?new mt(t):this.At},t.prototype.gt=function(t,e){var n=this,r=!1,i=this.At.field(t),o=gt(i)?Object.assign({},i.mapValue.fields):{};return e.forEach((function(e,i){if(e instanceof Map){var a=n.gt(t.child(i),e);null!=a&&(o[i]=a,r=!0)}else null!==e?(o[i]=e,r=!0):o.hasOwnProperty(i)&&(delete o[i],r=!0)})),r?{mapValue:{fields:o}}:null},t}();function _t(t){var e=[];return W(t.fields||{},(function(t,n){var r=new z([t]);if(gt(n)){var i=_t(n.mapValue).fields;if(0===i.length)e.push(r);else for(var o=0,a=i;o<a.length;o++){var s=a[o];e.push(r.child(s))}}else e.push(r)})),new Q(e)}var wt=function(t,e){this.key=t,this.version=e},Et=function(t){function e(e,n,r,i){var o=this;return(o=t.call(this,e,n)||this).Vt=r,o.bt=!!i.bt,o.hasCommittedMutations=!!i.hasCommittedMutations,o}return Object(a.c)(e,t),e.prototype.field=function(t){return this.Vt.field(t)},e.prototype.data=function(){return this.Vt},e.prototype.vt=function(){return this.Vt.proto},e.prototype.isEqual=function(t){return t instanceof e&&this.key.isEqual(t.key)&&this.version.isEqual(t.version)&&this.bt===t.bt&&this.hasCommittedMutations===t.hasCommittedMutations&&this.Vt.isEqual(t.Vt)},e.prototype.toString=function(){return\"Document(\"+this.key+\", \"+this.version+\", \"+this.Vt.toString()+\", {hasLocalMutations: \"+this.bt+\"}), {hasCommittedMutations: \"+this.hasCommittedMutations+\"})\"},Object.defineProperty(e.prototype,\"hasPendingWrites\",{get:function(){return this.bt||this.hasCommittedMutations},enumerable:!1,configurable:!0}),e}(wt),Tt=function(t){function e(e,n,r){var i=this;return(i=t.call(this,e,n)||this).hasCommittedMutations=!(!r||!r.hasCommittedMutations),i}return Object(a.c)(e,t),e.prototype.toString=function(){return\"NoDocument(\"+this.key+\", \"+this.version+\")\"},Object.defineProperty(e.prototype,\"hasPendingWrites\",{get:function(){return this.hasCommittedMutations},enumerable:!1,configurable:!0}),e.prototype.isEqual=function(t){return t instanceof e&&t.hasCommittedMutations===this.hasCommittedMutations&&t.version.isEqual(this.version)&&t.key.isEqual(this.key)},e}(wt),It=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(a.c)(e,t),e.prototype.toString=function(){return\"UnknownDocument(\"+this.key+\", \"+this.version+\")\"},Object.defineProperty(e.prototype,\"hasPendingWrites\",{get:function(){return!0},enumerable:!1,configurable:!0}),e.prototype.isEqual=function(t){return t instanceof e&&t.version.isEqual(this.version)&&t.key.isEqual(this.key)},e}(wt),St=function(t,e,n,r,i,o,a){void 0===e&&(e=null),void 0===n&&(n=[]),void 0===r&&(r=[]),void 0===i&&(i=null),void 0===o&&(o=null),void 0===a&&(a=null),this.path=t,this.collectionGroup=e,this.orderBy=n,this.filters=r,this.limit=i,this.startAt=o,this.endAt=a,this.St=null};function Ot(t,e,n,r,i,o,a){return void 0===e&&(e=null),void 0===n&&(n=[]),void 0===r&&(r=[]),void 0===i&&(i=null),void 0===o&&(o=null),void 0===a&&(a=null),new St(t,e,n,r,i,o,a)}function Ct(t){var e=v(t);if(null===e.St){var n=e.path.ot();null!==e.collectionGroup&&(n+=\"|cg:\"+e.collectionGroup),n+=\"|f:\",n+=e.filters.map((function(t){return function(t){return t.field.ot()+t.op.toString()+lt(t.value)}(t)})).join(\",\"),n+=\"|ob:\",n+=e.orderBy.map((function(t){return function(t){return t.field.ot()+t.dir}(t)})).join(\",\"),nt(e.limit)||(n+=\"|l:\",n+=e.limit),e.startAt&&(n+=\"|lb:\",n+=Vt(e.startAt)),e.endAt&&(n+=\"|ub:\",n+=Vt(e.endAt)),e.St=n}return e.St}function kt(t,e){if(t.limit!==e.limit)return!1;if(t.orderBy.length!==e.orderBy.length)return!1;for(var n=0;n<t.orderBy.length;n++)if(!Bt(t.orderBy[n],e.orderBy[n]))return!1;if(t.filters.length!==e.filters.length)return!1;for(var r=0;r<t.filters.length;r++)if(i=t.filters[r],o=e.filters[r],i.op!==o.op||!i.field.isEqual(o.field)||!at(i.value,o.value))return!1;var i,o;return t.collectionGroup===e.collectionGroup&&!!t.path.isEqual(e.path)&&!!Ht(t.startAt,e.startAt)&&Ht(t.endAt,e.endAt)}function Nt(t){return H.Et(t.path)&&null===t.collectionGroup&&0===t.filters.length}var At=function(t){function e(e,n,r){var i=this;return(i=t.call(this)||this).field=e,i.op=n,i.value=r,i}return Object(a.c)(e,t),e.create=function(t,n,r){return t.ht()?\"in\"===n||\"not-in\"===n?this.Dt(t,n,r):new Pt(t,n,r):\"array-contains\"===n?new Dt(t,r):\"in\"===n?new Lt(t,r):\"not-in\"===n?new Mt(t,r):\"array-contains-any\"===n?new Ft(t,r):new e(t,n,r)},e.Dt=function(t,e,n){return\"in\"===e?new Rt(t,n):new jt(t,n)},e.prototype.matches=function(t){var e=t.field(this.field);return\"!=\"===this.op?null!==e&&this.Ct(ut(e,this.value)):null!==e&&ot(this.value)===ot(e)&&this.Ct(ut(e,this.value))},e.prototype.Ct=function(t){switch(this.op){case\"<\":return t<0;case\"<=\":return t<=0;case\"==\":return 0===t;case\"!=\":return 0!==t;case\">\":return t>0;case\">=\":return t>=0;default:return p()}},e.prototype.xt=function(){return[\"<\",\"<=\",\">\",\">=\",\"!=\",\"not-in\"].indexOf(this.op)>=0},e}((function(){})),Pt=function(t){function e(e,n,r){var i=this;return(i=t.call(this,e,n,r)||this).key=H.dt(r.referenceValue),i}return Object(a.c)(e,t),e.prototype.matches=function(t){var e=H.J(t.key,this.key);return this.Ct(e)},e}(At),Rt=function(t){function e(e,n){var r=this;return(r=t.call(this,e,\"in\",n)||this).keys=xt(\"in\",n),r}return Object(a.c)(e,t),e.prototype.matches=function(t){return this.keys.some((function(e){return e.isEqual(t.key)}))},e}(At),jt=function(t){function e(e,n){var r=this;return(r=t.call(this,e,\"not-in\",n)||this).keys=xt(\"not-in\",n),r}return Object(a.c)(e,t),e.prototype.matches=function(t){return!this.keys.some((function(e){return e.isEqual(t.key)}))},e}(At);function xt(t,e){var n;return((null===(n=e.arrayValue)||void 0===n?void 0:n.values)||[]).map((function(t){return H.dt(t.referenceValue)}))}var Dt=function(t){function e(e,n){return t.call(this,e,\"array-contains\",n)||this}return Object(a.c)(e,t),e.prototype.matches=function(t){var e=t.field(this.field);return dt(e)&&st(e.arrayValue,this.value)},e}(At),Lt=function(t){function e(e,n){return t.call(this,e,\"in\",n)||this}return Object(a.c)(e,t),e.prototype.matches=function(t){var e=t.field(this.field);return null!==e&&st(this.value.arrayValue,e)},e}(At),Mt=function(t){function e(e,n){return t.call(this,e,\"not-in\",n)||this}return Object(a.c)(e,t),e.prototype.matches=function(t){if(st(this.value.arrayValue,{nullValue:\"NULL_VALUE\"}))return!1;var e=t.field(this.field);return null!==e&&!st(this.value.arrayValue,e)},e}(At),Ft=function(t){function e(e,n){return t.call(this,e,\"array-contains-any\",n)||this}return Object(a.c)(e,t),e.prototype.matches=function(t){var e=this,n=t.field(this.field);return!(!dt(n)||!n.arrayValue.values)&&n.arrayValue.values.some((function(t){return st(e.value.arrayValue,t)}))},e}(At),Ut=function(t,e){this.position=t,this.before=e};function Vt(t){return(t.before?\"b\":\"a\")+\":\"+t.position.map((function(t){return lt(t)})).join(\",\")}var qt=function(t,e){void 0===e&&(e=\"asc\"),this.field=t,this.dir=e};function Bt(t,e){return t.dir===e.dir&&t.field.isEqual(e.field)}function zt(t,e,n){for(var r=0,i=0;i<t.position.length;i++){var o=e[i],a=t.position[i];if(r=o.field.ht()?H.J(H.dt(a.referenceValue),n.key):ut(a,n.field(o.field)),\"desc\"===o.dir&&(r*=-1),0!==r)break}return t.before?r<=0:r<0}function Ht(t,e){if(null===t)return null===e;if(null===e)return!1;if(t.before!==e.before||t.position.length!==e.position.length)return!1;for(var n=0;n<t.position.length;n++)if(!at(t.position[n],e.position[n]))return!1;return!0}var Kt=function(t,e,n,r,i,o,a,s){void 0===e&&(e=null),void 0===n&&(n=[]),void 0===r&&(r=[]),void 0===i&&(i=null),void 0===o&&(o=\"F\"),void 0===a&&(a=null),void 0===s&&(s=null),this.path=t,this.collectionGroup=e,this.Nt=n,this.filters=r,this.limit=i,this.limitType=o,this.startAt=a,this.endAt=s,this.Ot=null,this.Ft=null,this.startAt,this.endAt};function Wt(t,e,n,r,i,o,a,s){return new Kt(t,e,n,r,i,o,a,s)}function Gt(t){return new Kt(t)}function Qt(t){return!nt(t.limit)&&\"F\"===t.limitType}function Yt(t){return!nt(t.limit)&&\"L\"===t.limitType}function Jt(t){return t.Nt.length>0?t.Nt[0].field:null}function Xt(t){for(var e=0,n=t.filters;e<n.length;e++){var r=n[e];if(r.xt())return r.field}return null}function $t(t){return null!==t.collectionGroup}function Zt(t){var e=v(t);if(null===e.Ot){e.Ot=[];var n=Xt(e),r=Jt(e);if(null!==n&&null===r)n.ht()||e.Ot.push(new qt(n)),e.Ot.push(new qt(z.lt(),\"asc\"));else{for(var i=!1,o=0,a=e.Nt;o<a.length;o++){var s=a[o];e.Ot.push(s),s.field.ht()&&(i=!0)}if(!i){var u=e.Nt.length>0?e.Nt[e.Nt.length-1].dir:\"asc\";e.Ot.push(new qt(z.lt(),u))}}}return e.Ot}function te(t){var e=v(t);if(!e.Ft)if(\"F\"===e.limitType)e.Ft=Ot(e.path,e.collectionGroup,Zt(e),e.filters,e.limit,e.startAt,e.endAt);else{for(var n=[],r=0,i=Zt(e);r<i.length;r++){var o=i[r],a=\"desc\"===o.dir?\"asc\":\"desc\";n.push(new qt(o.field,a))}var s=e.endAt?new Ut(e.endAt.position,!e.endAt.before):null,u=e.startAt?new Ut(e.startAt.position,!e.startAt.before):null;e.Ft=Ot(e.path,e.collectionGroup,n,e.filters,e.limit,s,u)}return e.Ft}function ee(t,e,n){return new Kt(t.path,t.collectionGroup,t.Nt.slice(),t.filters.slice(),e,n,t.startAt,t.endAt)}function ne(t,e){return kt(te(t),te(e))&&t.limitType===e.limitType}function re(t){return Ct(te(t))+\"|lt:\"+t.limitType}function ie(t){return\"Query(target=\"+function(t){var e=t.path.ot();return null!==t.collectionGroup&&(e+=\" collectionGroup=\"+t.collectionGroup),t.filters.length>0&&(e+=\", filters: [\"+t.filters.map((function(t){return(e=t).field.ot()+\" \"+e.op+\" \"+lt(e.value);var e})).join(\", \")+\"]\"),nt(t.limit)||(e+=\", limit: \"+t.limit),t.orderBy.length>0&&(e+=\", orderBy: [\"+t.orderBy.map((function(t){return function(t){return t.field.ot()+\" (\"+t.dir+\")\"}(t)})).join(\", \")+\"]\"),t.startAt&&(e+=\", startAt: \"+Vt(t.startAt)),t.endAt&&(e+=\", endAt: \"+Vt(t.endAt)),\"Target(\"+e+\")\"}(te(t))+\"; limitType=\"+t.limitType+\")\"}function oe(t,e){return function(t,e){var n=e.key.path;return null!==t.collectionGroup?e.key.wt(t.collectionGroup)&&t.path.st(n):H.Et(t.path)?t.path.isEqual(n):t.path.it(n)}(t,e)&&function(t,e){for(var n=0,r=t.Nt;n<r.length;n++){var i=r[n];if(!i.field.ht()&&null===e.field(i.field))return!1}return!0}(t,e)&&function(t,e){for(var n=0,r=t.filters;n<r.length;n++)if(!r[n].matches(e))return!1;return!0}(t,e)&&function(t,e){return!(t.startAt&&!zt(t.startAt,Zt(t),e))&&(!t.endAt||!zt(t.endAt,Zt(t),e))}(t,e)}function ae(t){return function(e,n){for(var r=!1,i=0,o=Zt(t);i<o.length;i++){var a=o[i],s=se(a,e,n);if(0!==s)return s;r=r||a.field.ht()}return 0}}function se(t,e,n){var r=t.field.ht()?H.J(e.key,n.key):function(t,e,n){var r=e.field(t),i=n.field(t);return null!==r&&null!==i?ut(r,i):p()}(t.field,e,n);switch(t.dir){case\"asc\":return r;case\"desc\":return-1*r;default:return p()}}var ue=function(){function t(t,e,n,r,i,o,a){void 0===i&&(i=U.min()),void 0===o&&(o=U.min()),void 0===a&&(a=w.h),this.target=t,this.targetId=e,this.kt=n,this.sequenceNumber=r,this.Mt=i,this.lastLimboFreeSnapshotVersion=o,this.resumeToken=a}return t.prototype.Lt=function(e){return new t(this.target,this.targetId,this.kt,e,this.Mt,this.lastLimboFreeSnapshotVersion,this.resumeToken)},t.prototype.$t=function(e,n){return new t(this.target,this.targetId,this.kt,this.sequenceNumber,n,this.lastLimboFreeSnapshotVersion,e)},t.prototype.Bt=function(e){return new t(this.target,this.targetId,this.kt,this.sequenceNumber,this.Mt,e,this.resumeToken)},t}();function ce(t,e){if(t.qt){if(isNaN(e))return{doubleValue:\"NaN\"};if(e===1/0)return{doubleValue:\"Infinity\"};if(e===-1/0)return{doubleValue:\"-Infinity\"}}return{doubleValue:rt(e)?\"-0\":e}}function le(t){return{integerValue:\"\"+t}}function he(t,e){return it(e)?le(e):ce(t,e)}var fe=function(){this.Ut=void 0};function pe(t,e,n){return t instanceof ye?function(t,e){var n={fields:{__type__:{stringValue:\"server_timestamp\"},__local_write_time__:{timestampValue:{seconds:t.seconds,nanos:t.nanoseconds}}}};return e&&(n.fields.__previous_value__=e),{mapValue:n}}(n,e):t instanceof ge?me(t,e):t instanceof be?_e(t,e):function(t,e){var n=ve(t,e),r=Ee(n)+Ee(t.Qt);return pt(n)&&pt(t.Qt)?le(r):ce(t.Kt,r)}(t,e)}function de(t,e,n){return t instanceof ge?me(t,e):t instanceof be?_e(t,e):n}function ve(t,e){return t instanceof we?pt(n=e)||function(t){return!!t&&\"doubleValue\"in t}(n)?e:{integerValue:0}:null;var n}var ye=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(a.c)(e,t),e}(fe),ge=function(t){function e(e){var n=this;return(n=t.call(this)||this).elements=e,n}return Object(a.c)(e,t),e}(fe);function me(t,e){for(var n=Te(e),r=function(t){n.some((function(e){return at(e,t)}))||n.push(t)},i=0,o=t.elements;i<o.length;i++)r(o[i]);return{arrayValue:{values:n}}}var be=function(t){function e(e){var n=this;return(n=t.call(this)||this).elements=e,n}return Object(a.c)(e,t),e}(fe);function _e(t,e){for(var n=Te(e),r=function(t){n=n.filter((function(e){return!at(e,t)}))},i=0,o=t.elements;i<o.length;i++)r(o[i]);return{arrayValue:{values:n}}}var we=function(t){function e(e,n){var r=this;return(r=t.call(this)||this).Kt=e,r.Qt=n,r}return Object(a.c)(e,t),e}(fe);function Ee(t){return X(t.integerValue||t.doubleValue)}function Te(t){return dt(t)&&t.arrayValue.values?t.arrayValue.values.slice():[]}var Ie=function(t,e){this.field=t,this.transform=e},Se=function(t,e){this.version=t,this.transformResults=e},Oe=function(){function t(t,e){this.updateTime=t,this.exists=e}return t.jt=function(){return new t},t.exists=function(e){return new t(void 0,e)},t.updateTime=function(e){return new t(e)},Object.defineProperty(t.prototype,\"Wt\",{get:function(){return void 0===this.updateTime&&void 0===this.exists},enumerable:!1,configurable:!0}),t.prototype.isEqual=function(t){return this.exists===t.exists&&(this.updateTime?!!t.updateTime&&this.updateTime.isEqual(t.updateTime):!t.updateTime)},t}();function Ce(t,e){return void 0!==t.updateTime?e instanceof Et&&e.version.isEqual(t.updateTime):void 0===t.exists||t.exists===e instanceof Et}var ke=function(){};function Ne(t,e,n){return t instanceof xe?function(t,e,n){var r=t.value;if(n.transformResults){var i=Me(t.fieldTransforms,e,n.transformResults);r=Ue(t.fieldTransforms,r,i)}return new Et(t.key,n.version,r,{hasCommittedMutations:!0})}(t,e,n):t instanceof De?function(t,e,n){if(!Ce(t.Gt,e))return new It(t.key,n.version);var r=Le(t,e,n.transformResults?Me(t.fieldTransforms,e,n.transformResults):[]);return new Et(t.key,n.version,r,{hasCommittedMutations:!0})}(t,e,n):function(t,e,n){return new Tt(t.key,n.version,{hasCommittedMutations:!0})}(t,0,n)}function Ae(t,e,n,r){return t instanceof xe?function(t,e,n,r){if(!Ce(t.Gt,e))return e;var i=t.value,o=Fe(t.fieldTransforms,n,e);i=Ue(t.fieldTransforms,i,o);var a=je(e);return new Et(t.key,a,i,{bt:!0})}(t,e,r):t instanceof De?function(t,e,n,r){if(!Ce(t.Gt,e))return e;var i=je(e),o=Le(t,e,Fe(t.fieldTransforms,n,e));return new Et(t.key,i,o,{bt:!0})}(t,e,r):function(t,e){return Ce(t.Gt,e)?new Tt(t.key,U.min()):e}(t,e)}function Pe(t,e){return function(t,e){for(var n=null,r=0,i=t;r<i.length;r++){var o=i[r],a=e instanceof Et?e.field(o.field):void 0,s=ve(o.transform,a||null);null!=s&&(n=null==n?(new bt).set(o.field,s):n.set(o.field,s))}return n?n.yt():null}(t.fieldTransforms,e)}function Re(t,e){return t.type===e.type&&!!t.key.isEqual(e.key)&&!!t.Gt.isEqual(e.Gt)&&!!function(t,e){return void 0===t&&void 0===e||!(!t||!e)&&b(t,e,(function(t,e){return function(t,e){return t.field.isEqual(e.field)&&function(t,e){return t instanceof ge&&e instanceof ge||t instanceof be&&e instanceof be?b(t.elements,e.elements,at):t instanceof we&&e instanceof we?at(t.Qt,e.Qt):t instanceof ye&&e instanceof ye}(t.transform,e.transform)}(t,e)}))}(t.fieldTransforms,e.fieldTransforms)&&(0===t.type?t.value.isEqual(e.value):1!==t.type||t.data.isEqual(e.data)&&t.zt.isEqual(e.zt))}function je(t){return t instanceof Et?t.version:U.min()}var xe=function(t){function e(e,n,r,i){void 0===i&&(i=[]);var o=this;return(o=t.call(this)||this).key=e,o.value=n,o.Gt=r,o.fieldTransforms=i,o.type=0,o}return Object(a.c)(e,t),e}(ke),De=function(t){function e(e,n,r,i,o){void 0===o&&(o=[]);var a=this;return(a=t.call(this)||this).key=e,a.data=n,a.zt=r,a.Gt=i,a.fieldTransforms=o,a.type=1,a}return Object(a.c)(e,t),e}(ke);function Le(t,e,n){var r;return r=function(t,e){var n=new bt(e);return t.zt.fields.forEach((function(e){if(!e.nt()){var r=t.data.field(e);null!==r?n.set(e,r):n.delete(e)}})),n.yt()}(t,r=e instanceof Et?e.data():mt.empty()),Ue(t.fieldTransforms,r,n)}function Me(t,e,n){var r=[];d(t.length===n.length);for(var i=0;i<n.length;i++){var o=t[i],a=o.transform,s=null;e instanceof Et&&(s=e.field(o.field)),r.push(de(a,s,n[i]))}return r}function Fe(t,e,n,r){for(var i=[],o=0,a=t;o<a.length;o++){var s=a[o],u=s.transform,c=null;n instanceof Et&&(c=n.field(s.field)),i.push(pe(u,c,e))}return i}function Ue(t,e,n){for(var r=new bt(e),i=0;i<t.length;i++){var o=t[i];r.set(o.field,n[i])}return r.yt()}var Ve,qe,Be=function(t){function e(e,n){var r=this;return(r=t.call(this)||this).key=e,r.Gt=n,r.type=2,r.fieldTransforms=[],r}return Object(a.c)(e,t),e}(ke),ze=function(t){function e(e,n){var r=this;return(r=t.call(this)||this).key=e,r.Gt=n,r.type=3,r.fieldTransforms=[],r}return Object(a.c)(e,t),e}(ke),He=function(t){this.count=t};function Ke(t){switch(t){case E.OK:return p();case E.CANCELLED:case E.UNKNOWN:case E.DEADLINE_EXCEEDED:case E.RESOURCE_EXHAUSTED:case E.INTERNAL:case E.UNAVAILABLE:case E.UNAUTHENTICATED:return!1;case E.INVALID_ARGUMENT:case E.NOT_FOUND:case E.ALREADY_EXISTS:case E.PERMISSION_DENIED:case E.FAILED_PRECONDITION:case E.ABORTED:case E.OUT_OF_RANGE:case E.UNIMPLEMENTED:case E.DATA_LOSS:return!0;default:return p()}}function We(t){if(void 0===t)return l(\"GRPC error has no .code\"),E.UNKNOWN;switch(t){case Ve.OK:return E.OK;case Ve.CANCELLED:return E.CANCELLED;case Ve.UNKNOWN:return E.UNKNOWN;case Ve.DEADLINE_EXCEEDED:return E.DEADLINE_EXCEEDED;case Ve.RESOURCE_EXHAUSTED:return E.RESOURCE_EXHAUSTED;case Ve.INTERNAL:return E.INTERNAL;case Ve.UNAVAILABLE:return E.UNAVAILABLE;case Ve.UNAUTHENTICATED:return E.UNAUTHENTICATED;case Ve.INVALID_ARGUMENT:return E.INVALID_ARGUMENT;case Ve.NOT_FOUND:return E.NOT_FOUND;case Ve.ALREADY_EXISTS:return E.ALREADY_EXISTS;case Ve.PERMISSION_DENIED:return E.PERMISSION_DENIED;case Ve.FAILED_PRECONDITION:return E.FAILED_PRECONDITION;case Ve.ABORTED:return E.ABORTED;case Ve.OUT_OF_RANGE:return E.OUT_OF_RANGE;case Ve.UNIMPLEMENTED:return E.UNIMPLEMENTED;case Ve.DATA_LOSS:return E.DATA_LOSS;default:return p()}}(qe=Ve||(Ve={}))[qe.OK=0]=\"OK\",qe[qe.CANCELLED=1]=\"CANCELLED\",qe[qe.UNKNOWN=2]=\"UNKNOWN\",qe[qe.INVALID_ARGUMENT=3]=\"INVALID_ARGUMENT\",qe[qe.DEADLINE_EXCEEDED=4]=\"DEADLINE_EXCEEDED\",qe[qe.NOT_FOUND=5]=\"NOT_FOUND\",qe[qe.ALREADY_EXISTS=6]=\"ALREADY_EXISTS\",qe[qe.PERMISSION_DENIED=7]=\"PERMISSION_DENIED\",qe[qe.UNAUTHENTICATED=16]=\"UNAUTHENTICATED\",qe[qe.RESOURCE_EXHAUSTED=8]=\"RESOURCE_EXHAUSTED\",qe[qe.FAILED_PRECONDITION=9]=\"FAILED_PRECONDITION\",qe[qe.ABORTED=10]=\"ABORTED\",qe[qe.OUT_OF_RANGE=11]=\"OUT_OF_RANGE\",qe[qe.UNIMPLEMENTED=12]=\"UNIMPLEMENTED\",qe[qe.INTERNAL=13]=\"INTERNAL\",qe[qe.UNAVAILABLE=14]=\"UNAVAILABLE\",qe[qe.DATA_LOSS=15]=\"DATA_LOSS\";var Ge=function(){function t(t,e){this.J=t,this.root=e||Ye.EMPTY}return t.prototype.Ht=function(e,n){return new t(this.J,this.root.Ht(e,n,this.J).copy(null,null,Ye.Jt,null,null))},t.prototype.remove=function(e){return new t(this.J,this.root.remove(e,this.J).copy(null,null,Ye.Jt,null,null))},t.prototype.get=function(t){for(var e=this.root;!e.nt();){var n=this.J(t,e.key);if(0===n)return e.value;n<0?e=e.left:n>0&&(e=e.right)}return null},t.prototype.indexOf=function(t){for(var e=0,n=this.root;!n.nt();){var r=this.J(t,n.key);if(0===r)return e+n.left.size;r<0?n=n.left:(e+=n.left.size+1,n=n.right)}return-1},t.prototype.nt=function(){return this.root.nt()},Object.defineProperty(t.prototype,\"size\",{get:function(){return this.root.size},enumerable:!1,configurable:!0}),t.prototype.Yt=function(){return this.root.Yt()},t.prototype.Xt=function(){return this.root.Xt()},t.prototype.Zt=function(t){return this.root.Zt(t)},t.prototype.forEach=function(t){this.Zt((function(e,n){return t(e,n),!1}))},t.prototype.toString=function(){var t=[];return this.Zt((function(e,n){return t.push(e+\":\"+n),!1})),\"{\"+t.join(\", \")+\"}\"},t.prototype.te=function(t){return this.root.te(t)},t.prototype.ee=function(){return new Qe(this.root,null,this.J,!1)},t.prototype.ne=function(t){return new Qe(this.root,t,this.J,!1)},t.prototype.se=function(){return new Qe(this.root,null,this.J,!0)},t.prototype.ie=function(t){return new Qe(this.root,t,this.J,!0)},t}(),Qe=function(){function t(t,e,n,r){this.re=r,this.oe=[];for(var i=1;!t.nt();)if(i=e?n(t.key,e):1,r&&(i*=-1),i<0)t=this.re?t.left:t.right;else{if(0===i){this.oe.push(t);break}this.oe.push(t),t=this.re?t.right:t.left}}return t.prototype.ce=function(){var t=this.oe.pop(),e={key:t.key,value:t.value};if(this.re)for(t=t.left;!t.nt();)this.oe.push(t),t=t.right;else for(t=t.right;!t.nt();)this.oe.push(t),t=t.left;return e},t.prototype.ae=function(){return this.oe.length>0},t.prototype.ue=function(){if(0===this.oe.length)return null;var t=this.oe[this.oe.length-1];return{key:t.key,value:t.value}},t}(),Ye=function(){function t(e,n,r,i,o){this.key=e,this.value=n,this.color=null!=r?r:t.RED,this.left=null!=i?i:t.EMPTY,this.right=null!=o?o:t.EMPTY,this.size=this.left.size+1+this.right.size}return t.prototype.copy=function(e,n,r,i,o){return new t(null!=e?e:this.key,null!=n?n:this.value,null!=r?r:this.color,null!=i?i:this.left,null!=o?o:this.right)},t.prototype.nt=function(){return!1},t.prototype.Zt=function(t){return this.left.Zt(t)||t(this.key,this.value)||this.right.Zt(t)},t.prototype.te=function(t){return this.right.te(t)||t(this.key,this.value)||this.left.te(t)},t.prototype.min=function(){return this.left.nt()?this:this.left.min()},t.prototype.Yt=function(){return this.min().key},t.prototype.Xt=function(){return this.right.nt()?this.key:this.right.Xt()},t.prototype.Ht=function(t,e,n){var r=this,i=n(t,r.key);return(r=i<0?r.copy(null,null,null,r.left.Ht(t,e,n),null):0===i?r.copy(null,e,null,null,null):r.copy(null,null,null,null,r.right.Ht(t,e,n))).he()},t.prototype.le=function(){if(this.left.nt())return t.EMPTY;var e=this;return e.left._e()||e.left.left._e()||(e=e.fe()),(e=e.copy(null,null,null,e.left.le(),null)).he()},t.prototype.remove=function(e,n){var r,i=this;if(n(e,i.key)<0)i.left.nt()||i.left._e()||i.left.left._e()||(i=i.fe()),i=i.copy(null,null,null,i.left.remove(e,n),null);else{if(i.left._e()&&(i=i.de()),i.right.nt()||i.right._e()||i.right.left._e()||(i=i.we()),0===n(e,i.key)){if(i.right.nt())return t.EMPTY;r=i.right.min(),i=i.copy(r.key,r.value,null,null,i.right.le())}i=i.copy(null,null,null,null,i.right.remove(e,n))}return i.he()},t.prototype._e=function(){return this.color},t.prototype.he=function(){var t=this;return t.right._e()&&!t.left._e()&&(t=t.Ee()),t.left._e()&&t.left.left._e()&&(t=t.de()),t.left._e()&&t.right._e()&&(t=t.Te()),t},t.prototype.fe=function(){var t=this.Te();return t.right.left._e()&&(t=(t=(t=t.copy(null,null,null,null,t.right.de())).Ee()).Te()),t},t.prototype.we=function(){var t=this.Te();return t.left.left._e()&&(t=(t=t.de()).Te()),t},t.prototype.Ee=function(){var e=this.copy(null,null,t.RED,null,this.right.left);return this.right.copy(null,null,this.color,e,null)},t.prototype.de=function(){var e=this.copy(null,null,t.RED,this.left.right,null);return this.left.copy(null,null,this.color,null,e)},t.prototype.Te=function(){var t=this.left.copy(null,null,!this.left.color,null,null),e=this.right.copy(null,null,!this.right.color,null,null);return this.copy(null,null,!this.color,t,e)},t.prototype.Ie=function(){var t=this.me();return Math.pow(2,t)<=this.size+1},t.prototype.me=function(){if(this._e()&&this.left._e())throw p();if(this.right._e())throw p();var t=this.left.me();if(t!==this.right.me())throw p();return t+(this._e()?0:1)},t}();Ye.EMPTY=null,Ye.RED=!0,Ye.Jt=!1,Ye.EMPTY=new(function(){function t(){this.size=0}return Object.defineProperty(t.prototype,\"key\",{get:function(){throw p()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"value\",{get:function(){throw p()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"color\",{get:function(){throw p()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"left\",{get:function(){throw p()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"right\",{get:function(){throw p()},enumerable:!1,configurable:!0}),t.prototype.copy=function(t,e,n,r,i){return this},t.prototype.Ht=function(t,e,n){return new Ye(t,e)},t.prototype.remove=function(t,e){return this},t.prototype.nt=function(){return!0},t.prototype.Zt=function(t){return!1},t.prototype.te=function(t){return!1},t.prototype.Yt=function(){return null},t.prototype.Xt=function(){return null},t.prototype._e=function(){return!1},t.prototype.Ie=function(){return!0},t.prototype.me=function(){return 0},t}());var Je=function(){function t(t){this.J=t,this.data=new Ge(this.J)}return t.prototype.has=function(t){return null!==this.data.get(t)},t.prototype.first=function(){return this.data.Yt()},t.prototype.last=function(){return this.data.Xt()},Object.defineProperty(t.prototype,\"size\",{get:function(){return this.data.size},enumerable:!1,configurable:!0}),t.prototype.indexOf=function(t){return this.data.indexOf(t)},t.prototype.forEach=function(t){this.data.Zt((function(e,n){return t(e),!1}))},t.prototype.Ae=function(t,e){for(var n=this.data.ne(t[0]);n.ae();){var r=n.ce();if(this.J(r.key,t[1])>=0)return;e(r.key)}},t.prototype.Re=function(t,e){var n;for(n=void 0!==e?this.data.ne(e):this.data.ee();n.ae();)if(!t(n.ce().key))return},t.prototype.Pe=function(t){var e=this.data.ne(t);return e.ae()?e.ce().key:null},t.prototype.ee=function(){return new Xe(this.data.ee())},t.prototype.ne=function(t){return new Xe(this.data.ne(t))},t.prototype.add=function(t){return this.copy(this.data.remove(t).Ht(t,!0))},t.prototype.delete=function(t){return this.has(t)?this.copy(this.data.remove(t)):this},t.prototype.nt=function(){return this.data.nt()},t.prototype.ye=function(t){var e=this;return e.size<t.size&&(e=t,t=this),t.forEach((function(t){e=e.add(t)})),e},t.prototype.isEqual=function(e){if(!(e instanceof t))return!1;if(this.size!==e.size)return!1;for(var n=this.data.ee(),r=e.data.ee();n.ae();){var i=n.ce().key,o=r.ce().key;if(0!==this.J(i,o))return!1}return!0},t.prototype.rt=function(){var t=[];return this.forEach((function(e){t.push(e)})),t},t.prototype.toString=function(){var t=[];return this.forEach((function(e){return t.push(e)})),\"SortedSet(\"+t.toString()+\")\"},t.prototype.copy=function(e){var n=new t(this.J);return n.data=e,n},t}(),Xe=function(){function t(t){this.ge=t}return t.prototype.ce=function(){return this.ge.ce().key},t.prototype.ae=function(){return this.ge.ae()},t}(),$e=new Ge(H.J);function Ze(){return $e}function tn(){return Ze()}var en=new Ge(H.J);function nn(){return en}var rn=new Ge(H.J);function on(){return rn}var an=new Je(H.J);function sn(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var n=an,r=0,i=t;r<i.length;r++){var o=i[r];n=n.add(o)}return n}var un=new Je(m);function cn(){return un}var ln=function(){function t(t){this.J=t?function(e,n){return t(e,n)||H.J(e.key,n.key)}:function(t,e){return H.J(t.key,e.key)},this.Ve=nn(),this.pe=new Ge(this.J)}return t.be=function(e){return new t(e.J)},t.prototype.has=function(t){return null!=this.Ve.get(t)},t.prototype.get=function(t){return this.Ve.get(t)},t.prototype.first=function(){return this.pe.Yt()},t.prototype.last=function(){return this.pe.Xt()},t.prototype.nt=function(){return this.pe.nt()},t.prototype.indexOf=function(t){var e=this.Ve.get(t);return e?this.pe.indexOf(e):-1},Object.defineProperty(t.prototype,\"size\",{get:function(){return this.pe.size},enumerable:!1,configurable:!0}),t.prototype.forEach=function(t){this.pe.Zt((function(e,n){return t(e),!1}))},t.prototype.add=function(t){var e=this.delete(t.key);return e.copy(e.Ve.Ht(t.key,t),e.pe.Ht(t,null))},t.prototype.delete=function(t){var e=this.get(t);return e?this.copy(this.Ve.remove(t),this.pe.remove(e)):this},t.prototype.isEqual=function(e){if(!(e instanceof t))return!1;if(this.size!==e.size)return!1;for(var n=this.pe.ee(),r=e.pe.ee();n.ae();){var i=n.ce().key,o=r.ce().key;if(!i.isEqual(o))return!1}return!0},t.prototype.toString=function(){var t=[];return this.forEach((function(e){t.push(e.toString())})),0===t.length?\"DocumentSet ()\":\"DocumentSet (\\n  \"+t.join(\"  \\n\")+\"\\n)\"},t.prototype.copy=function(e,n){var r=new t;return r.J=this.J,r.Ve=e,r.pe=n,r},t}(),hn=function(){function t(){this.ve=new Ge(H.J)}return t.prototype.track=function(t){var e=t.doc.key,n=this.ve.get(e);n?0!==t.type&&3===n.type?this.ve=this.ve.Ht(e,t):3===t.type&&1!==n.type?this.ve=this.ve.Ht(e,{type:n.type,doc:t.doc}):2===t.type&&2===n.type?this.ve=this.ve.Ht(e,{type:2,doc:t.doc}):2===t.type&&0===n.type?this.ve=this.ve.Ht(e,{type:0,doc:t.doc}):1===t.type&&0===n.type?this.ve=this.ve.remove(e):1===t.type&&2===n.type?this.ve=this.ve.Ht(e,{type:1,doc:n.doc}):0===t.type&&1===n.type?this.ve=this.ve.Ht(e,{type:2,doc:t.doc}):p():this.ve=this.ve.Ht(e,t)},t.prototype.Se=function(){var t=[];return this.ve.Zt((function(e,n){t.push(n)})),t},t}(),fn=function(){function t(t,e,n,r,i,o,a,s){this.query=t,this.docs=e,this.De=n,this.docChanges=r,this.Ce=i,this.fromCache=o,this.xe=a,this.Ne=s}return t.Oe=function(e,n,r,i){var o=[];return n.forEach((function(t){o.push({type:0,doc:t})})),new t(e,n,ln.be(n),o,r,i,!0,!1)},Object.defineProperty(t.prototype,\"hasPendingWrites\",{get:function(){return!this.Ce.nt()},enumerable:!1,configurable:!0}),t.prototype.isEqual=function(t){if(!(this.fromCache===t.fromCache&&this.xe===t.xe&&this.Ce.isEqual(t.Ce)&&ne(this.query,t.query)&&this.docs.isEqual(t.docs)&&this.De.isEqual(t.De)))return!1;var e=this.docChanges,n=t.docChanges;if(e.length!==n.length)return!1;for(var r=0;r<e.length;r++)if(e[r].type!==n[r].type||!e[r].doc.isEqual(n[r].doc))return!1;return!0},t}(),pn=function(){function t(t,e,n,r,i){this.Mt=t,this.Fe=e,this.ke=n,this.Me=r,this.Le=i}return t.$e=function(e,n){var r=new Map;return r.set(e,dn.Be(e,n)),new t(U.min(),r,cn(),Ze(),sn())},t}(),dn=function(){function t(t,e,n,r,i){this.resumeToken=t,this.qe=e,this.Ue=n,this.Qe=r,this.Ke=i}return t.Be=function(e,n){return new t(w.h,n,sn(),sn(),sn())},t}(),vn=function(t,e,n,r){this.je=t,this.removedTargetIds=e,this.key=n,this.We=r},yn=function(t,e){this.targetId=t,this.Ge=e},gn=function(t,e,n,r){void 0===n&&(n=w.h),void 0===r&&(r=null),this.state=t,this.targetIds=e,this.resumeToken=n,this.cause=r},mn=function(){function t(){this.ze=0,this.He=wn(),this.Je=w.h,this.Ye=!1,this.Xe=!0}return Object.defineProperty(t.prototype,\"qe\",{get:function(){return this.Ye},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"resumeToken\",{get:function(){return this.Je},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"Ze\",{get:function(){return 0!==this.ze},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"tn\",{get:function(){return this.Xe},enumerable:!1,configurable:!0}),t.prototype.en=function(t){t.o()>0&&(this.Xe=!0,this.Je=t)},t.prototype.nn=function(){var t=sn(),e=sn(),n=sn();return this.He.forEach((function(r,i){switch(i){case 0:t=t.add(r);break;case 2:e=e.add(r);break;case 1:n=n.add(r);break;default:p()}})),new dn(this.Je,this.Ye,t,e,n)},t.prototype.sn=function(){this.Xe=!1,this.He=wn()},t.prototype.rn=function(t,e){this.Xe=!0,this.He=this.He.Ht(t,e)},t.prototype.on=function(t){this.Xe=!0,this.He=this.He.remove(t)},t.prototype.cn=function(){this.ze+=1},t.prototype.an=function(){this.ze-=1},t.prototype.un=function(){this.Xe=!0,this.Ye=!0},t}(),bn=function(){function t(t){this.hn=t,this.ln=new Map,this._n=Ze(),this.fn=_n(),this.dn=new Je(m)}return t.prototype.wn=function(t){for(var e=0,n=t.je;e<n.length;e++){var r=n[e];t.We instanceof Et?this.En(r,t.We):t.We instanceof Tt&&this.Tn(r,t.key,t.We)}for(var i=0,o=t.removedTargetIds;i<o.length;i++)r=o[i],this.Tn(r,t.key,t.We)},t.prototype.In=function(t){var e=this;this.mn(t,(function(n){var r=e.An(n);switch(t.state){case 0:e.Rn(n)&&r.en(t.resumeToken);break;case 1:r.an(),r.Ze||r.sn(),r.en(t.resumeToken);break;case 2:r.an(),r.Ze||e.removeTarget(n);break;case 3:e.Rn(n)&&(r.un(),r.en(t.resumeToken));break;case 4:e.Rn(n)&&(e.Pn(n),r.en(t.resumeToken));break;default:p()}}))},t.prototype.mn=function(t,e){var n=this;t.targetIds.length>0?t.targetIds.forEach(e):this.ln.forEach((function(t,r){n.Rn(r)&&e(r)}))},t.prototype.yn=function(t){var e=t.targetId,n=t.Ge.count,r=this.gn(e);if(r){var i=r.target;if(Nt(i))if(0===n){var o=new H(i.path);this.Tn(e,o,new Tt(o,U.min()))}else d(1===n);else this.Vn(e)!==n&&(this.Pn(e),this.dn=this.dn.add(e))}},t.prototype.pn=function(t){var e=this,n=new Map;this.ln.forEach((function(r,i){var o=e.gn(i);if(o){if(r.qe&&Nt(o.target)){var a=new H(o.target.path);null!==e._n.get(a)||e.bn(i,a)||e.Tn(i,a,new Tt(a,t))}r.tn&&(n.set(i,r.nn()),r.sn())}}));var r=sn();this.fn.forEach((function(t,n){var i=!0;n.Re((function(t){var n=e.gn(t);return!n||2===n.kt||(i=!1,!1)})),i&&(r=r.add(t))}));var i=new pn(t,n,this.dn,this._n,r);return this._n=Ze(),this.fn=_n(),this.dn=new Je(m),i},t.prototype.En=function(t,e){if(this.Rn(t)){var n=this.bn(t,e.key)?2:0;this.An(t).rn(e.key,n),this._n=this._n.Ht(e.key,e),this.fn=this.fn.Ht(e.key,this.vn(e.key).add(t))}},t.prototype.Tn=function(t,e,n){if(this.Rn(t)){var r=this.An(t);this.bn(t,e)?r.rn(e,1):r.on(e),this.fn=this.fn.Ht(e,this.vn(e).delete(t)),n&&(this._n=this._n.Ht(e,n))}},t.prototype.removeTarget=function(t){this.ln.delete(t)},t.prototype.Vn=function(t){var e=this.An(t).nn();return this.hn.Sn(t).size+e.Ue.size-e.Ke.size},t.prototype.cn=function(t){this.An(t).cn()},t.prototype.An=function(t){var e=this.ln.get(t);return e||(e=new mn,this.ln.set(t,e)),e},t.prototype.vn=function(t){var e=this.fn.get(t);return e||(e=new Je(m),this.fn=this.fn.Ht(t,e)),e},t.prototype.Rn=function(t){var e=null!==this.gn(t);return e||c(\"WatchChangeAggregator\",\"Detected inactive target\",t),e},t.prototype.gn=function(t){var e=this.ln.get(t);return e&&e.Ze?null:this.hn.Dn(t)},t.prototype.Pn=function(t){var e=this;this.ln.set(t,new mn),this.hn.Sn(t).forEach((function(n){e.Tn(t,n,null)}))},t.prototype.bn=function(t,e){return this.hn.Sn(t).has(e)},t}();function _n(){return new Ge(H.J)}function wn(){return new Ge(H.J)}var En={asc:\"ASCENDING\",desc:\"DESCENDING\"},Tn={\"<\":\"LESS_THAN\",\"<=\":\"LESS_THAN_OR_EQUAL\",\">\":\"GREATER_THAN\",\">=\":\"GREATER_THAN_OR_EQUAL\",\"==\":\"EQUAL\",\"!=\":\"NOT_EQUAL\",\"array-contains\":\"ARRAY_CONTAINS\",in:\"IN\",\"not-in\":\"NOT_IN\",\"array-contains-any\":\"ARRAY_CONTAINS_ANY\"},In=function(t,e){this.T=t,this.qt=e};function Sn(t,e){return t.qt?new Date(1e3*e.seconds).toISOString().replace(/\\.\\d*/,\"\").replace(\"Z\",\"\")+\".\"+(\"000000000\"+e.nanoseconds).slice(-9)+\"Z\":{seconds:\"\"+e.seconds,nanos:e.nanoseconds}}function On(t,e){return t.qt?e.toBase64():e.toUint8Array()}function Cn(t,e){return Sn(t,e.G())}function kn(t){return d(!!t),U.j(function(t){var e=J(t);return new F(e.seconds,e.nanos)}(t))}function Nn(t,e){return function(t){return new q([\"projects\",t.projectId,\"databases\",t.database])}(t).child(\"documents\").child(e).ot()}function An(t){var e=q.ct(t);return d(tr(e)),e}function Pn(t,e){return Nn(t.T,e.path)}function Rn(t,e){var n=An(e);if(n.get(1)!==t.T.projectId)throw new T(E.INVALID_ARGUMENT,\"Tried to deserialize key from different project: \"+n.get(1)+\" vs \"+t.T.projectId);if(n.get(3)!==t.T.database)throw new T(E.INVALID_ARGUMENT,\"Tried to deserialize key from different database: \"+n.get(3)+\" vs \"+t.T.database);return new H(Ln(n))}function jn(t,e){return Nn(t.T,e)}function xn(t){var e=An(t);return 4===e.length?q.at():Ln(e)}function Dn(t){return new q([\"projects\",t.T.projectId,\"databases\",t.T.database]).ot()}function Ln(t){return d(t.length>4&&\"documents\"===t.get(4)),t.X(5)}function Mn(t,e,n){return{name:Pn(t,e),fields:n.proto.mapValue.fields}}function Fn(t,e,n){var r=Rn(t,e.name),i=kn(e.updateTime),o=new mt({mapValue:{fields:e.fields}});return new Et(r,i,o,{hasCommittedMutations:!!n})}function Un(t,e){var n;if(e instanceof xe)n={update:Mn(t,e.key,e.value)};else if(e instanceof Be)n={delete:Pn(t,e.key)};else if(e instanceof De)n={update:Mn(t,e.key,e.data),updateMask:Zn(e.zt)};else{if(!(e instanceof ze))return p();n={verify:Pn(t,e.key)}}return e.fieldTransforms.length>0&&(n.updateTransforms=e.fieldTransforms.map((function(t){return function(t,e){var n=e.transform;if(n instanceof ye)return{fieldPath:e.field.ot(),setToServerValue:\"REQUEST_TIME\"};if(n instanceof ge)return{fieldPath:e.field.ot(),appendMissingElements:{values:n.elements}};if(n instanceof be)return{fieldPath:e.field.ot(),removeAllFromArray:{values:n.elements}};if(n instanceof we)return{fieldPath:e.field.ot(),increment:n.Qt};throw p()}(0,t)}))),e.Gt.Wt||(n.currentDocument=function(t,e){return void 0!==e.updateTime?{updateTime:Cn(t,e.updateTime)}:void 0!==e.exists?{exists:e.exists}:p()}(t,e.Gt)),n}function Vn(t,e){var n=e.currentDocument?function(t){return void 0!==t.updateTime?Oe.updateTime(kn(t.updateTime)):void 0!==t.exists?Oe.exists(t.exists):Oe.jt()}(e.currentDocument):Oe.jt(),r=e.updateTransforms?e.updateTransforms.map((function(e){return function(t,e){var n=null;if(\"setToServerValue\"in e)d(\"REQUEST_TIME\"===e.setToServerValue),n=new ye;else if(\"appendMissingElements\"in e){var r=e.appendMissingElements.values||[];n=new ge(r)}else if(\"removeAllFromArray\"in e){var i=e.removeAllFromArray.values||[];n=new be(i)}else\"increment\"in e?n=new we(t,e.increment):p();var o=z._t(e.fieldPath);return new Ie(o,n)}(t,e)})):[];if(e.update){e.update.name;var i=Rn(t,e.update.name),o=new mt({mapValue:{fields:e.update.fields}});if(e.updateMask){var a=function(t){var e=t.fieldPaths||[];return new Q(e.map((function(t){return z._t(t)})))}(e.updateMask);return new De(i,o,a,n,r)}return new xe(i,o,n,r)}if(e.delete){var s=Rn(t,e.delete);return new Be(s,n)}if(e.verify){var u=Rn(t,e.verify);return new ze(u,n)}return p()}function qn(t,e){return{documents:[jn(t,e.path)]}}function Bn(t,e){var n={structuredQuery:{}},r=e.path;null!==e.collectionGroup?(n.parent=jn(t,r),n.structuredQuery.from=[{collectionId:e.collectionGroup,allDescendants:!0}]):(n.parent=jn(t,r.Z()),n.structuredQuery.from=[{collectionId:r.et()}]);var i=function(t){if(0!==t.length){var e=t.map((function(t){return function(t){if(\"==\"===t.op){if(yt(t.value))return{unaryFilter:{field:Yn(t.field),op:\"IS_NAN\"}};if(vt(t.value))return{unaryFilter:{field:Yn(t.field),op:\"IS_NULL\"}}}else if(\"!=\"===t.op){if(yt(t.value))return{unaryFilter:{field:Yn(t.field),op:\"IS_NOT_NAN\"}};if(vt(t.value))return{unaryFilter:{field:Yn(t.field),op:\"IS_NOT_NULL\"}}}return{fieldFilter:{field:Yn(t.field),op:Qn(t.op),value:t.value}}}(t)}));return 1===e.length?e[0]:{compositeFilter:{op:\"AND\",filters:e}}}}(e.filters);i&&(n.structuredQuery.where=i);var o=function(t){if(0!==t.length)return t.map((function(t){return function(t){return{field:Yn(t.field),direction:Gn(t.dir)}}(t)}))}(e.orderBy);o&&(n.structuredQuery.orderBy=o);var a=function(t,e){return t.qt||nt(e)?e:{value:e}}(t,e.limit);return null!==a&&(n.structuredQuery.limit=a),e.startAt&&(n.structuredQuery.startAt=Kn(e.startAt)),e.endAt&&(n.structuredQuery.endAt=Kn(e.endAt)),n}function zn(t){var e=xn(t.parent),n=t.structuredQuery,r=n.from?n.from.length:0,i=null;if(r>0){d(1===r);var o=n.from[0];o.allDescendants?i=o.collectionId:e=e.child(o.collectionId)}var a=[];n.where&&(a=Hn(n.where));var s=[];n.orderBy&&(s=n.orderBy.map((function(t){return function(t){return new qt(Jn(t.field),function(t){switch(t){case\"ASCENDING\":return\"asc\";case\"DESCENDING\":return\"desc\";default:return}}(t.direction))}(t)})));var u=null;n.limit&&(u=function(t){var e;return nt(e=\"object\"==typeof t?t.value:t)?null:e}(n.limit));var c=null;n.startAt&&(c=Wn(n.startAt));var l=null;return n.endAt&&(l=Wn(n.endAt)),Wt(e,i,s,a,u,\"F\",c,l)}function Hn(t){return t?void 0!==t.unaryFilter?[$n(t)]:void 0!==t.fieldFilter?[Xn(t)]:void 0!==t.compositeFilter?t.compositeFilter.filters.map((function(t){return Hn(t)})).reduce((function(t,e){return t.concat(e)})):p():[]}function Kn(t){return{before:t.before,values:t.position}}function Wn(t){var e=!!t.before,n=t.values||[];return new Ut(n,e)}function Gn(t){return En[t]}function Qn(t){return Tn[t]}function Yn(t){return{fieldPath:t.ot()}}function Jn(t){return z._t(t.fieldPath)}function Xn(t){return At.create(Jn(t.fieldFilter.field),function(t){switch(t){case\"EQUAL\":return\"==\";case\"NOT_EQUAL\":return\"!=\";case\"GREATER_THAN\":return\">\";case\"GREATER_THAN_OR_EQUAL\":return\">=\";case\"LESS_THAN\":return\"<\";case\"LESS_THAN_OR_EQUAL\":return\"<=\";case\"ARRAY_CONTAINS\":return\"array-contains\";case\"IN\":return\"in\";case\"NOT_IN\":return\"not-in\";case\"ARRAY_CONTAINS_ANY\":return\"array-contains-any\";case\"OPERATOR_UNSPECIFIED\":default:return p()}}(t.fieldFilter.op),t.fieldFilter.value)}function $n(t){switch(t.unaryFilter.op){case\"IS_NAN\":var e=Jn(t.unaryFilter.field);return At.create(e,\"==\",{doubleValue:NaN});case\"IS_NULL\":var n=Jn(t.unaryFilter.field);return At.create(n,\"==\",{nullValue:\"NULL_VALUE\"});case\"IS_NOT_NAN\":var r=Jn(t.unaryFilter.field);return At.create(r,\"!=\",{doubleValue:NaN});case\"IS_NOT_NULL\":var i=Jn(t.unaryFilter.field);return At.create(i,\"!=\",{nullValue:\"NULL_VALUE\"});case\"OPERATOR_UNSPECIFIED\":default:return p()}}function Zn(t){var e=[];return t.fields.forEach((function(t){return e.push(t.ot())})),{fieldPaths:e}}function tr(t){return t.length>=4&&\"projects\"===t.get(0)&&\"databases\"===t.get(2)}var er=function(){var t=this;this.promise=new Promise((function(e,n){t.resolve=e,t.reject=n}))},nr=function(){function t(t){var e=this;this.Cn=null,this.xn=null,this.result=void 0,this.error=void 0,this.Nn=!1,this.On=!1,t((function(t){e.Nn=!0,e.result=t,e.Cn&&e.Cn(t)}),(function(t){e.Nn=!0,e.error=t,e.xn&&e.xn(t)}))}return t.prototype.catch=function(t){return this.next(void 0,t)},t.prototype.next=function(e,n){var r=this;return this.On&&p(),this.On=!0,this.Nn?this.error?this.Fn(n,this.error):this.kn(e,this.result):new t((function(t,i){r.Cn=function(n){r.kn(e,n).next(t,i)},r.xn=function(e){r.Fn(n,e).next(t,i)}}))},t.prototype.Mn=function(){var t=this;return new Promise((function(e,n){t.next(e,n)}))},t.prototype.Ln=function(e){try{var n=e();return n instanceof t?n:t.resolve(n)}catch(e){return t.reject(e)}},t.prototype.kn=function(e,n){return e?this.Ln((function(){return e(n)})):t.resolve(n)},t.prototype.Fn=function(e,n){return e?this.Ln((function(){return e(n)})):t.reject(n)},t.resolve=function(e){return new t((function(t,n){t(e)}))},t.reject=function(e){return new t((function(t,n){n(e)}))},t.$n=function(e){return new t((function(t,n){var r=0,i=0,o=!1;e.forEach((function(e){++r,e.next((function(){++i,o&&i===r&&t()}),(function(t){return n(t)}))})),o=!0,i===r&&t()}))},t.Bn=function(e){for(var n=t.resolve(!1),r=function(e){n=n.next((function(n){return n?t.resolve(n):e()}))},i=0,o=e;i<o.length;i++)r(o[i]);return n},t.forEach=function(t,e){var n=this,r=[];return t.forEach((function(t,i){r.push(e.call(n,t,i))})),this.$n(r)},t}(),rr=function(){function t(t,e){var n=this;this.action=t,this.transaction=e,this.aborted=!1,this.qn=new er,this.transaction.oncomplete=function(){n.qn.resolve()},this.transaction.onabort=function(){e.error?n.qn.reject(new ar(t,e.error)):n.qn.resolve()},this.transaction.onerror=function(e){var r=hr(e.target.error);n.qn.reject(new ar(t,r))}}return t.open=function(e,n,r,i){try{return new t(n,e.transaction(i,r))}catch(e){throw new ar(n,e)}},Object.defineProperty(t.prototype,\"Un\",{get:function(){return this.qn.promise},enumerable:!1,configurable:!0}),t.prototype.abort=function(t){t&&this.qn.reject(t),this.aborted||(c(\"SimpleDb\",\"Aborting transaction:\",t?t.message:\"Client-initiated abort\"),this.aborted=!0,this.transaction.abort())},t.prototype.store=function(t){var e=this.transaction.objectStore(t);return new ur(e)},t}(),ir=function(){function e(t,n,r){this.name=t,this.version=n,this.Qn=r,12.2===e.Kn(Object(i.p)())&&l(\"Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.\")}return e.delete=function(t){return c(\"SimpleDb\",\"Removing database:\",t),cr(window.indexedDB.deleteDatabase(t)).Mn()},e.jn=function(){if(\"undefined\"==typeof indexedDB)return!1;if(e.Wn())return!0;var t=Object(i.p)(),n=e.Kn(t),r=0<n&&n<10,o=e.Gn(t),a=0<o&&o<4.5;return!(t.indexOf(\"MSIE \")>0||t.indexOf(\"Trident/\")>0||t.indexOf(\"Edge/\")>0||r||a)},e.Wn=function(){var e;return\"undefined\"!=typeof t&&\"YES\"===(null===(e=Object({NODE_ENV:\"production\",PUBLIC_URL:\"\",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}))||void 0===e?void 0:e.zn)},e.Hn=function(t,e){return t.store(e)},e.Kn=function(t){var e=t.match(/i(?:phone|pad|pod) os ([\\d_]+)/i),n=e?e[1].split(\"_\").slice(0,2).join(\".\"):\"-1\";return Number(n)},e.Gn=function(t){var e=t.match(/Android ([\\d.]+)/i),n=e?e[1].split(\".\").slice(0,2).join(\".\"):\"-1\";return Number(n)},e.prototype.Jn=function(t){return Object(a.b)(this,void 0,void 0,(function(){var e,n=this;return Object(a.d)(this,(function(r){switch(r.label){case 0:return this.db?[3,2]:(c(\"SimpleDb\",\"Opening database:\",this.name),e=this,[4,new Promise((function(e,r){var i=indexedDB.open(n.name,n.version);i.onsuccess=function(t){var n=t.target.result;e(n)},i.onblocked=function(){r(new ar(t,\"Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed.\"))},i.onerror=function(e){var n=e.target.error;\"VersionError\"===n.name?r(new T(E.FAILED_PRECONDITION,\"A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.\")):r(new ar(t,n))},i.onupgradeneeded=function(t){c(\"SimpleDb\",'Database \"'+n.name+'\" requires upgrade from version:',t.oldVersion);var e=t.target.result;n.Qn.Yn(e,i.transaction,t.oldVersion,n.version).next((function(){c(\"SimpleDb\",\"Database upgrade to version \"+n.version+\" complete\")}))}}))]);case 1:e.db=r.sent(),r.label=2;case 2:return[2,(this.Xn&&(this.db.onversionchange=function(t){return n.Xn(t)}),this.db)]}}))}))},e.prototype.Zn=function(t){this.Xn=t,this.db&&(this.db.onversionchange=function(e){return t(e)})},e.prototype.runTransaction=function(t,e,n,r){return Object(a.b)(this,void 0,void 0,(function(){var i,o,s,u,l;return Object(a.d)(this,(function(h){switch(h.label){case 0:i=\"readonly\"===e,o=0,s=function(){var e,s,l,h,f;return Object(a.d)(this,(function(a){switch(a.label){case 0:++o,a.label=1;case 1:return a.trys.push([1,4,,5]),[4,u.Jn(t)];case 2:return u.db=a.sent(),e=rr.open(u.db,t,i?\"readonly\":\"readwrite\",n),s=r(e).catch((function(t){return e.abort(t),nr.reject(t)})).Mn(),l={},s.catch((function(){})),[4,e.Un];case 3:return[2,(l.value=(a.sent(),s),l)];case 4:return h=a.sent(),f=\"FirebaseError\"!==h.name&&o<3,c(\"SimpleDb\",\"Transaction failed with error:\",h.message,\"Retrying:\",f),u.close(),f?[3,5]:[2,{value:Promise.reject(h)}];case 5:return[2]}}))},u=this,h.label=1;case 1:return[5,s()];case 2:if(\"object\"==typeof(l=h.sent()))return[2,l.value];h.label=3;case 3:return[3,1];case 4:return[2]}}))}))},e.prototype.close=function(){this.db&&this.db.close(),this.db=void 0},e}(),or=function(){function t(t){this.ts=t,this.es=!1,this.ns=null}return Object.defineProperty(t.prototype,\"Nn\",{get:function(){return this.es},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"ss\",{get:function(){return this.ns},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"cursor\",{set:function(t){this.ts=t},enumerable:!1,configurable:!0}),t.prototype.done=function(){this.es=!0},t.prototype.rs=function(t){this.ns=t},t.prototype.delete=function(){return cr(this.ts.delete())},t}(),ar=function(t){function e(e,n){var r=this;return(r=t.call(this,E.UNAVAILABLE,\"IndexedDB transaction '\"+e+\"' failed: \"+n)||this).name=\"IndexedDbTransactionError\",r}return Object(a.c)(e,t),e}(T);function sr(t){return\"IndexedDbTransactionError\"===t.name}var ur=function(){function t(t){this.store=t}return t.prototype.put=function(t,e){var n;return void 0!==e?(c(\"SimpleDb\",\"PUT\",this.store.name,t,e),n=this.store.put(e,t)):(c(\"SimpleDb\",\"PUT\",this.store.name,\"<auto-key>\",t),n=this.store.put(t)),cr(n)},t.prototype.add=function(t){return c(\"SimpleDb\",\"ADD\",this.store.name,t,t),cr(this.store.add(t))},t.prototype.get=function(t){var e=this;return cr(this.store.get(t)).next((function(n){return void 0===n&&(n=null),c(\"SimpleDb\",\"GET\",e.store.name,t,n),n}))},t.prototype.delete=function(t){return c(\"SimpleDb\",\"DELETE\",this.store.name,t),cr(this.store.delete(t))},t.prototype.count=function(){return c(\"SimpleDb\",\"COUNT\",this.store.name),cr(this.store.count())},t.prototype.os=function(t,e){var n=this.cursor(this.options(t,e)),r=[];return this.cs(n,(function(t,e){r.push(e)})).next((function(){return r}))},t.prototype.us=function(t,e){c(\"SimpleDb\",\"DELETE ALL\",this.store.name);var n=this.options(t,e);n.hs=!1;var r=this.cursor(n);return this.cs(r,(function(t,e,n){return n.delete()}))},t.prototype.ls=function(t,e){var n;e?n=t:(n={},e=t);var r=this.cursor(n);return this.cs(r,e)},t.prototype._s=function(t){var e=this.cursor({});return new nr((function(n,r){e.onerror=function(t){var e=hr(t.target.error);r(e)},e.onsuccess=function(e){var r=e.target.result;r?t(r.primaryKey,r.value).next((function(t){t?r.continue():n()})):n()}}))},t.prototype.cs=function(t,e){var n=[];return new nr((function(r,i){t.onerror=function(t){i(t.target.error)},t.onsuccess=function(t){var i=t.target.result;if(i){var o=new or(i),a=e(i.primaryKey,i.value,o);if(a instanceof nr){var s=a.catch((function(t){return o.done(),nr.reject(t)}));n.push(s)}o.Nn?r():null===o.ss?i.continue():i.continue(o.ss)}else r()}})).next((function(){return nr.$n(n)}))},t.prototype.options=function(t,e){var n=void 0;return void 0!==t&&(\"string\"==typeof t?n=t:e=t),{index:n,range:e}},t.prototype.cursor=function(t){var e=\"next\";if(t.reverse&&(e=\"prev\"),t.index){var n=this.store.index(t.index);return t.hs?n.openKeyCursor(t.range,e):n.openCursor(t.range,e)}return this.store.openCursor(t.range,e)},t}();function cr(t){return new nr((function(e,n){t.onsuccess=function(t){var n=t.target.result;e(n)},t.onerror=function(t){var e=hr(t.target.error);n(e)}}))}var lr=!1;function hr(t){var e=ir.Kn(Object(i.p)());if(e>=12.2&&e<13){var n=\"An internal error was encountered in the Indexed Database server\";if(t.message.indexOf(n)>=0){var r=new T(\"internal\",\"IOS_INDEXEDDB_BUG1: IndexedDb has thrown '\"+n+\"'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.\");return lr||(lr=!0,setTimeout((function(){throw r}),0)),r}}return t}var fr=function(){function t(t,e,n,r,i){this.fs=t,this.ds=e,this.ws=n,this.op=r,this.Es=i,this.Ts=new er,this.then=this.Ts.promise.then.bind(this.Ts.promise),this.Ts.promise.catch((function(t){}))}return t.Is=function(e,n,r,i,o){var a=new t(e,n,Date.now()+r,i,o);return a.start(r),a},t.prototype.start=function(t){var e=this;this.As=setTimeout((function(){return e.Rs()}),t)},t.prototype.Ps=function(){return this.Rs()},t.prototype.cancel=function(t){null!==this.As&&(this.clearTimeout(),this.Ts.reject(new T(E.CANCELLED,\"Operation cancelled\"+(t?\": \"+t:\"\"))))},t.prototype.Rs=function(){var t=this;this.fs.ys((function(){return null!==t.As?(t.clearTimeout(),t.op().then((function(e){return t.Ts.resolve(e)}))):Promise.resolve()}))},t.prototype.clearTimeout=function(){null!==this.As&&(this.Es(this),clearTimeout(this.As),this.As=null)},t}();function pr(t,e){if(l(\"AsyncQueue\",e+\": \"+t),sr(t))return new T(E.UNAVAILABLE,e+\": \"+t);throw t}var dr=\"The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.\",vr=function(){function t(){this.gs=[]}return t.prototype.Vs=function(t){this.gs.push(t)},t.prototype.ps=function(){this.gs.forEach((function(t){return t()}))},t}();function yr(t){for(var e=\"\",n=0;n<t.length;n++)e.length>0&&(e=mr(e)),e=gr(t.get(n),e);return mr(e)}function gr(t,e){for(var n=e,r=t.length,i=0;i<r;i++){var o=t.charAt(i);switch(o){case\"\\0\":n+=\"\\x01\\x10\";break;case\"\\x01\":n+=\"\\x01\\x11\";break;default:n+=o}}return n}function mr(t){return t+\"\\x01\\x01\"}function br(t){var e=t.length;if(d(e>=2),2===e)return d(\"\\x01\"===t.charAt(0)&&\"\\x01\"===t.charAt(1)),q.at();for(var n=e-2,r=[],i=\"\",o=0;o<e;){var a=t.indexOf(\"\\x01\",o);switch((a<0||a>n)&&p(),t.charAt(a+1)){case\"\\x01\":var s=t.substring(o,a),u=void 0;0===i.length?u=s:(u=i+=s,i=\"\"),r.push(u);break;case\"\\x10\":i+=t.substring(o,a),i+=\"\\0\";break;case\"\\x11\":i+=t.substring(o,a+1);break;default:p()}o=a+2}return new q(r)}var _r=function(t,e){this.seconds=t,this.nanoseconds=e},wr=function(t,e,n){this.ownerId=t,this.allowTabSynchronization=e,this.leaseTimestampMs=n};wr.store=\"owner\",wr.key=\"owner\";var Er=function(t,e,n){this.userId=t,this.lastAcknowledgedBatchId=e,this.lastStreamToken=n};Er.store=\"mutationQueues\",Er.keyPath=\"userId\";var Tr=function(t,e,n,r,i){this.userId=t,this.batchId=e,this.localWriteTimeMs=n,this.baseMutations=r,this.mutations=i};Tr.store=\"mutations\",Tr.keyPath=\"batchId\",Tr.userMutationsIndex=\"userMutationsIndex\",Tr.userMutationsKeyPath=[\"userId\",\"batchId\"];var Ir=function(){function t(){}return t.prefixForUser=function(t){return[t]},t.prefixForPath=function(t,e){return[t,yr(e)]},t.key=function(t,e,n){return[t,yr(e),n]},t}();Ir.store=\"documentMutations\",Ir.PLACEHOLDER=new Ir;var Sr=function(t,e){this.path=t,this.readTime=e},Or=function(t,e){this.path=t,this.version=e},Cr=function(t,e,n,r,i,o){this.unknownDocument=t,this.noDocument=e,this.document=n,this.hasCommittedMutations=r,this.readTime=i,this.parentPath=o};Cr.store=\"remoteDocuments\",Cr.readTimeIndex=\"readTimeIndex\",Cr.readTimeIndexPath=\"readTime\",Cr.collectionReadTimeIndex=\"collectionReadTimeIndex\",Cr.collectionReadTimeIndexPath=[\"parentPath\",\"readTime\"];var kr=function(t){this.byteSize=t};kr.store=\"remoteDocumentGlobal\",kr.key=\"remoteDocumentGlobalKey\";var Nr=function(t,e,n,r,i,o,a){this.targetId=t,this.canonicalId=e,this.readTime=n,this.resumeToken=r,this.lastListenSequenceNumber=i,this.lastLimboFreeSnapshotVersion=o,this.query=a};Nr.store=\"targets\",Nr.keyPath=\"targetId\",Nr.queryTargetsIndexName=\"queryTargetsIndex\",Nr.queryTargetsKeyPath=[\"canonicalId\",\"targetId\"];var Ar=function(t,e,n){this.targetId=t,this.path=e,this.sequenceNumber=n};Ar.store=\"targetDocuments\",Ar.keyPath=[\"targetId\",\"path\"],Ar.documentTargetsIndex=\"documentTargetsIndex\",Ar.documentTargetsKeyPath=[\"path\",\"targetId\"];var Pr=function(t,e,n,r){this.highestTargetId=t,this.highestListenSequenceNumber=e,this.lastRemoteSnapshotVersion=n,this.targetCount=r};Pr.key=\"targetGlobalKey\",Pr.store=\"targetGlobal\";var Rr=function(t,e){this.collectionId=t,this.parent=e};Rr.store=\"collectionParents\",Rr.keyPath=[\"collectionId\",\"parent\"];var jr=function(t,e,n,r){this.clientId=t,this.updateTimeMs=e,this.networkEnabled=n,this.inForeground=r};jr.store=\"clientMetadata\",jr.keyPath=\"clientId\";var xr=function(t,e,n){this.bundleId=t,this.createTime=e,this.version=n};xr.store=\"bundles\",xr.keyPath=\"bundleId\";var Dr=function(t,e,n){this.name=t,this.readTime=e,this.bundledQuery=n};Dr.store=\"namedQueries\",Dr.keyPath=\"name\";var Lr=Object(a.g)(Object(a.g)(Object(a.g)(Object(a.g)([Er.store,Tr.store,Ir.store,Cr.store,Nr.store,wr.store,Pr.store,Ar.store],[jr.store]),[kr.store]),[Rr.store]),[xr.store,Dr.store]),Mr=function(t){function e(e,n){var r=this;return(r=t.call(this)||this).bs=e,r.vs=n,r}return Object(a.c)(e,t),e}(vr);function Fr(t,e){var n=v(t);return ir.Hn(n.bs,e)}var Ur=function(){function t(t,e,n,r){this.batchId=t,this.Ss=e,this.baseMutations=n,this.mutations=r}return t.prototype.Ds=function(t,e,n){for(var r=n.Cs,i=0;i<this.mutations.length;i++){var o=this.mutations[i];o.key.isEqual(t)&&(e=Ne(o,e,r[i]))}return e},t.prototype.xs=function(t,e){for(var n=0,r=this.baseMutations;n<r.length;n++)(a=r[n]).key.isEqual(t)&&(e=Ae(a,e,0,this.Ss));for(var i=0,o=this.mutations;i<o.length;i++){var a;(a=o[i]).key.isEqual(t)&&(e=Ae(a,e,0,this.Ss))}return e},t.prototype.Ns=function(t){var e=this,n=t;return this.mutations.forEach((function(r){var i=e.xs(r.key,t.get(r.key));i&&(n=n.Ht(r.key,i))})),n},t.prototype.keys=function(){return this.mutations.reduce((function(t,e){return t.add(e.key)}),sn())},t.prototype.isEqual=function(t){return this.batchId===t.batchId&&b(this.mutations,t.mutations,(function(t,e){return Re(t,e)}))&&b(this.baseMutations,t.baseMutations,(function(t,e){return Re(t,e)}))},t}(),Vr=function(){function t(t,e,n,r){this.batch=t,this.Os=e,this.Cs=n,this.Fs=r}return t.from=function(e,n,r){d(e.mutations.length===r.length);for(var i=on(),o=e.mutations,a=0;a<o.length;a++)i=i.Ht(o[a].key,r[a].version);return new t(e,n,r,i)},t}(),qr=function(t){this.ks=t};function Br(t,e){if(e.document)return Fn(t.ks,e.document,!!e.hasCommittedMutations);if(e.noDocument){var n=H.Tt(e.noDocument.path),r=Gr(e.noDocument.readTime);return new Tt(n,r,{hasCommittedMutations:!!e.hasCommittedMutations})}if(e.unknownDocument){var i=H.Tt(e.unknownDocument.path);return r=Gr(e.unknownDocument.version),new It(i,r)}return p()}function zr(t,e,n){var r=Hr(n),i=e.key.path.Z().rt();if(e instanceof Et){var o=function(t,e){return{name:Pn(t,e.key),fields:e.vt().mapValue.fields,updateTime:Sn(t,e.version.G())}}(t.ks,e),a=e.hasCommittedMutations;return new Cr(null,null,o,a,r,i)}if(e instanceof Tt){var s=e.key.path.rt(),u=Wr(e.version);return a=e.hasCommittedMutations,new Cr(null,new Sr(s,u),null,a,r,i)}if(e instanceof It){var c=e.key.path.rt(),l=Wr(e.version);return new Cr(new Or(c,l),null,null,!0,r,i)}return p()}function Hr(t){var e=t.G();return[e.seconds,e.nanoseconds]}function Kr(t){var e=new F(t[0],t[1]);return U.j(e)}function Wr(t){var e=t.G();return new _r(e.seconds,e.nanoseconds)}function Gr(t){var e=new F(t.seconds,t.nanoseconds);return U.j(e)}function Qr(t,e){for(var n=(e.baseMutations||[]).map((function(e){return Vn(t.ks,e)})),r=e.mutations.length-1;r>=0;--r){var i=e.mutations[r];void 0!==(null==i?void 0:i.transform)&&(e.mutations[r-1].updateTransforms=i.transform.fieldTransforms,e.mutations.splice(r,1),--r)}var o=e.mutations.map((function(e){return Vn(t.ks,e)})),a=F.fromMillis(e.localWriteTimeMs);return new Ur(e.batchId,a,n,o)}function Yr(t){var e,n,r=Gr(t.readTime),i=void 0!==t.lastLimboFreeSnapshotVersion?Gr(t.lastLimboFreeSnapshotVersion):U.min();return void 0!==t.query.documents?(d(1===(n=t.query).documents.length),e=te(Gt(xn(n.documents[0])))):e=function(t){return te(zn(t))}(t.query),new ue(e,t.targetId,0,t.lastListenSequenceNumber,r,i,w.fromBase64String(t.resumeToken))}function Jr(t,e){var n,r=Wr(e.Mt),i=Wr(e.lastLimboFreeSnapshotVersion);n=Nt(e.target)?qn(t.ks,e.target):Bn(t.ks,e.target);var o=e.resumeToken.toBase64();return new Nr(e.targetId,Ct(e.target),r,o,e.sequenceNumber,i,n)}function Xr(t){var e=zn({parent:t.parent,structuredQuery:t.structuredQuery});return\"LAST\"===t.limitType?ee(e,e.limit,\"L\"):e}var $r=function(){function t(){}return t.prototype.Ms=function(t,e){return Zr(t).get(e).next((function(t){if(t)return{id:(e=t).bundleId,createTime:Gr(e.createTime),version:e.version};var e}))},t.prototype.Ls=function(t,e){return Zr(t).put({bundleId:(n=e).id,createTime:Wr(kn(n.createTime)),version:n.version});var n},t.prototype.$s=function(t,e){return ti(t).get(e).next((function(t){if(t)return{name:(e=t).name,query:Xr(e.bundledQuery),readTime:Gr(e.readTime)};var e}))},t.prototype.Bs=function(t,e){return ti(t).put(function(t){return{name:t.name,readTime:Wr(kn(t.readTime)),bundledQuery:t.bundledQuery}}(e))},t}();function Zr(t){return Fr(t,xr.store)}function ti(t){return Fr(t,Dr.store)}var ei=function(){function t(){this.qs=new ni}return t.prototype.Us=function(t,e){return this.qs.add(e),nr.resolve()},t.prototype.Qs=function(t,e){return nr.resolve(this.qs.getEntries(e))},t}(),ni=function(){function t(){this.index={}}return t.prototype.add=function(t){var e=t.et(),n=t.Z(),r=this.index[e]||new Je(q.J),i=!r.has(n);return this.index[e]=r.add(n),i},t.prototype.has=function(t){var e=t.et(),n=t.Z(),r=this.index[e];return r&&r.has(n)},t.prototype.getEntries=function(t){return(this.index[t]||new Je(q.J)).rt()},t}(),ri=function(){function t(){this.Ks=new ni}return t.prototype.Us=function(t,e){var n=this;if(!this.Ks.has(e)){var r=e.et(),i=e.Z();t.Vs((function(){n.Ks.add(e)}));var o={collectionId:r,parent:yr(i)};return ii(t).put(o)}return nr.resolve()},t.prototype.Qs=function(t,e){var n=[],r=IDBKeyRange.bound([e,\"\"],[_(e),\"\"],!1,!0);return ii(t).os(r).next((function(t){for(var r=0,i=t;r<i.length;r++){var o=i[r];if(o.collectionId!==e)break;n.push(br(o.parent))}return n}))},t}();function ii(t){return Fr(t,Rr.store)}var oi={js:!1,Ws:0,Gs:0,zs:0},ai=function(){function t(t,e,n){this.Hs=t,this.Js=e,this.Ys=n}return t.Xs=function(e){return new t(e,t.Zs,t.ti)},t}();function si(t){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(e){if(t.code!==E.FAILED_PRECONDITION||t.message!==dr)throw t;return c(\"LocalStore\",\"Unexpectedly lost primary lease\"),[2]}))}))}ai.Zs=10,ai.ti=1e3,ai.ei=new ai(41943040,ai.Zs,ai.ti),ai.ni=new ai(-1,0,0);var ui=function(){function t(t,e){this.si=t,this.ii=e,this.ri={}}return t.prototype.get=function(t){var e=this.si(t),n=this.ri[e];if(void 0!==n)for(var r=0,i=n;r<i.length;r++){var o=i[r],a=o[0],s=o[1];if(this.ii(a,t))return s}},t.prototype.has=function(t){return void 0!==this.get(t)},t.prototype.set=function(t,e){var n=this.si(t),r=this.ri[n];if(void 0!==r){for(var i=0;i<r.length;i++)if(this.ii(r[i][0],t))return void(r[i]=[t,e]);r.push([t,e])}else this.ri[n]=[[t,e]]},t.prototype.delete=function(t){var e=this.si(t),n=this.ri[e];if(void 0===n)return!1;for(var r=0;r<n.length;r++)if(this.ii(n[r][0],t))return 1===n.length?delete this.ri[e]:n.splice(r,1),!0;return!1},t.prototype.forEach=function(t){W(this.ri,(function(e,n){for(var r=0,i=n;r<i.length;r++){var o=i[r],a=o[0],s=o[1];t(a,s)}}))},t.prototype.nt=function(){return G(this.ri)},t}(),ci=function(){function t(){this.oi=new ui((function(t){return t.toString()}),(function(t,e){return t.isEqual(e)})),this.ci=!1}return t.prototype.ai=function(t){var e=this.oi.get(t);return e?e.readTime:U.min()},t.prototype.ui=function(t,e){this.hi(),this.oi.set(t.key,{li:t,readTime:e})},t.prototype._i=function(t,e){void 0===e&&(e=null),this.hi(),this.oi.set(t,{li:null,readTime:e})},t.prototype.fi=function(t,e){this.hi();var n=this.oi.get(e);return void 0!==n?nr.resolve(n.li):this.di(t,e)},t.prototype.getEntries=function(t,e){return this.wi(t,e)},t.prototype.apply=function(t){return this.hi(),this.ci=!0,this.Ei(t)},t.prototype.hi=function(){},t}();function li(t,e,n){var r=t.store(Tr.store),i=t.store(Ir.store),o=[],a=IDBKeyRange.only(n.batchId),s=0,u=r.ls({range:a},(function(t,e,n){return s++,n.delete()}));o.push(u.next((function(){d(1===s)})));for(var c=[],l=0,h=n.mutations;l<h.length;l++){var f=h[l],p=Ir.key(e,f.key.path,n.batchId);o.push(i.delete(p)),c.push(f.key)}return nr.$n(o).next((function(){return c}))}function hi(t){var e;if(t.document)e=t.document;else if(t.unknownDocument)e=t.unknownDocument;else{if(!t.noDocument)throw p();e=t.noDocument}return JSON.stringify(e).length}var fi=function(){function t(t,e,n,r){this.userId=t,this.Kt=e,this.Ti=n,this.Ii=r,this.mi={}}return t.Ai=function(e,n,r,i){return d(\"\"!==e.uid),new t(e.A()?e.uid:\"\",n,r,i)},t.prototype.Ri=function(t){var e=!0,n=IDBKeyRange.bound([this.userId,Number.NEGATIVE_INFINITY],[this.userId,Number.POSITIVE_INFINITY]);return di(t).ls({index:Tr.userMutationsIndex,range:n},(function(t,n,r){e=!1,r.done()})).next((function(){return e}))},t.prototype.Pi=function(t,e,n,r){var i=this,o=vi(t),a=di(t);return a.add({}).next((function(s){d(\"number\"==typeof s);for(var u=new Ur(s,e,n,r),c=function(t,e,n){var r=n.baseMutations.map((function(e){return Un(t.ks,e)})),i=n.mutations.map((function(e){return Un(t.ks,e)}));return new Tr(e,n.batchId,n.Ss.toMillis(),r,i)}(i.Kt,i.userId,u),l=[],h=new Je((function(t,e){return m(t.ot(),e.ot())})),f=0,p=r;f<p.length;f++){var v=p[f],y=Ir.key(i.userId,v.key.path,s);h=h.add(v.key.path.Z()),l.push(a.put(c)),l.push(o.put(y,Ir.PLACEHOLDER))}return h.forEach((function(e){l.push(i.Ti.Us(t,e))})),t.Vs((function(){i.mi[s]=u.keys()})),nr.$n(l).next((function(){return u}))}))},t.prototype.yi=function(t,e){var n=this;return di(t).get(e).next((function(t){return t?(d(t.userId===n.userId),Qr(n.Kt,t)):null}))},t.prototype.gi=function(t,e){var n=this;return this.mi[e]?nr.resolve(this.mi[e]):this.yi(t,e).next((function(t){if(t){var r=t.keys();return n.mi[e]=r,r}return null}))},t.prototype.Vi=function(t,e){var n=this,r=e+1,i=IDBKeyRange.lowerBound([this.userId,r]),o=null;return di(t).ls({index:Tr.userMutationsIndex,range:i},(function(t,e,i){e.userId===n.userId&&(d(e.batchId>=r),o=Qr(n.Kt,e)),i.done()})).next((function(){return o}))},t.prototype.pi=function(t){var e=IDBKeyRange.upperBound([this.userId,Number.POSITIVE_INFINITY]),n=-1;return di(t).ls({index:Tr.userMutationsIndex,range:e,reverse:!0},(function(t,e,r){n=e.batchId,r.done()})).next((function(){return n}))},t.prototype.bi=function(t){var e=this,n=IDBKeyRange.bound([this.userId,-1],[this.userId,Number.POSITIVE_INFINITY]);return di(t).os(Tr.userMutationsIndex,n).next((function(t){return t.map((function(t){return Qr(e.Kt,t)}))}))},t.prototype.vi=function(t,e){var n=this,r=Ir.prefixForPath(this.userId,e.path),i=IDBKeyRange.lowerBound(r),o=[];return vi(t).ls({range:i},(function(r,i,a){var s=r[0],u=r[1],c=r[2],l=br(u);if(s===n.userId&&e.path.isEqual(l))return di(t).get(c).next((function(t){if(!t)throw p();d(t.userId===n.userId),o.push(Qr(n.Kt,t))}));a.done()})).next((function(){return o}))},t.prototype.Si=function(t,e){var n=this,r=new Je(m),i=[];return e.forEach((function(e){var o=Ir.prefixForPath(n.userId,e.path),a=IDBKeyRange.lowerBound(o),s=vi(t).ls({range:a},(function(t,i,o){var a=t[0],s=t[1],u=t[2],c=br(s);a===n.userId&&e.path.isEqual(c)?r=r.add(u):o.done()}));i.push(s)})),nr.$n(i).next((function(){return n.Di(t,r)}))},t.prototype.Ci=function(t,e){var n=this,r=e.path,i=r.length+1,o=Ir.prefixForPath(this.userId,r),a=IDBKeyRange.lowerBound(o),s=new Je(m);return vi(t).ls({range:a},(function(t,e,o){var a=t[0],u=t[1],c=t[2],l=br(u);a===n.userId&&r.st(l)?l.length===i&&(s=s.add(c)):o.done()})).next((function(){return n.Di(t,s)}))},t.prototype.Di=function(t,e){var n=this,r=[],i=[];return e.forEach((function(e){i.push(di(t).get(e).next((function(t){if(null===t)throw p();d(t.userId===n.userId),r.push(Qr(n.Kt,t))})))})),nr.$n(i).next((function(){return r}))},t.prototype.xi=function(t,e){var n=this;return li(t.bs,this.userId,e).next((function(r){return t.Vs((function(){n.Ni(e.batchId)})),nr.forEach(r,(function(e){return n.Ii.Oi(t,e)}))}))},t.prototype.Ni=function(t){delete this.mi[t]},t.prototype.Fi=function(t){var e=this;return this.Ri(t).next((function(n){if(!n)return nr.resolve();var r=IDBKeyRange.lowerBound(Ir.prefixForUser(e.userId)),i=[];return vi(t).ls({range:r},(function(t,n,r){if(t[0]===e.userId){var o=br(t[1]);i.push(o)}else r.done()})).next((function(){d(0===i.length)}))}))},t.prototype.ki=function(t,e){return pi(t,this.userId,e)},t.prototype.Mi=function(t){var e=this;return yi(t).get(this.userId).next((function(t){return t||new Er(e.userId,-1,\"\")}))},t}();function pi(t,e,n){var r=Ir.prefixForPath(e,n.path),i=r[1],o=IDBKeyRange.lowerBound(r),a=!1;return vi(t).ls({range:o,hs:!0},(function(t,n,r){var o=t[0],s=t[1];t[2],o===e&&s===i&&(a=!0),r.done()})).next((function(){return a}))}function di(t){return Fr(t,Tr.store)}function vi(t){return Fr(t,Ir.store)}function yi(t){return Fr(t,Er.store)}var gi=function(){function t(t){this.Li=t}return t.prototype.next=function(){return this.Li+=2,this.Li},t.$i=function(){return new t(0)},t.Bi=function(){return new t(-1)},t}(),mi=function(){function t(t,e){this.Ii=t,this.Kt=e}return t.prototype.qi=function(t){var e=this;return this.Ui(t).next((function(n){var r=new gi(n.highestTargetId);return n.highestTargetId=r.next(),e.Qi(t,n).next((function(){return n.highestTargetId}))}))},t.prototype.Ki=function(t){return this.Ui(t).next((function(t){return U.j(new F(t.lastRemoteSnapshotVersion.seconds,t.lastRemoteSnapshotVersion.nanoseconds))}))},t.prototype.ji=function(t){return this.Ui(t).next((function(t){return t.highestListenSequenceNumber}))},t.prototype.Wi=function(t,e,n){var r=this;return this.Ui(t).next((function(i){return i.highestListenSequenceNumber=e,n&&(i.lastRemoteSnapshotVersion=n.G()),e>i.highestListenSequenceNumber&&(i.highestListenSequenceNumber=e),r.Qi(t,i)}))},t.prototype.Gi=function(t,e){var n=this;return this.zi(t,e).next((function(){return n.Ui(t).next((function(r){return r.targetCount+=1,n.Hi(e,r),n.Qi(t,r)}))}))},t.prototype.Ji=function(t,e){return this.zi(t,e)},t.prototype.Yi=function(t,e){var n=this;return this.Xi(t,e.targetId).next((function(){return bi(t).delete(e.targetId)})).next((function(){return n.Ui(t)})).next((function(e){return d(e.targetCount>0),e.targetCount-=1,n.Qi(t,e)}))},t.prototype.Zi=function(t,e,n){var r=this,i=0,o=[];return bi(t).ls((function(a,s){var u=Yr(s);u.sequenceNumber<=e&&null===n.get(u.targetId)&&(i++,o.push(r.Yi(t,u)))})).next((function(){return nr.$n(o)})).next((function(){return i}))},t.prototype.mn=function(t,e){return bi(t).ls((function(t,n){var r=Yr(n);e(r)}))},t.prototype.Ui=function(t){return _i(t).get(Pr.key).next((function(t){return d(null!==t),t}))},t.prototype.Qi=function(t,e){return _i(t).put(Pr.key,e)},t.prototype.zi=function(t,e){return bi(t).put(Jr(this.Kt,e))},t.prototype.Hi=function(t,e){var n=!1;return t.targetId>e.highestTargetId&&(e.highestTargetId=t.targetId,n=!0),t.sequenceNumber>e.highestListenSequenceNumber&&(e.highestListenSequenceNumber=t.sequenceNumber,n=!0),n},t.prototype.tr=function(t){return this.Ui(t).next((function(t){return t.targetCount}))},t.prototype.er=function(t,e){var n=Ct(e),r=IDBKeyRange.bound([n,Number.NEGATIVE_INFINITY],[n,Number.POSITIVE_INFINITY]),i=null;return bi(t).ls({range:r,index:Nr.queryTargetsIndexName},(function(t,n,r){var o=Yr(n);kt(e,o.target)&&(i=o,r.done())})).next((function(){return i}))},t.prototype.nr=function(t,e,n){var r=this,i=[],o=wi(t);return e.forEach((function(e){var a=yr(e.path);i.push(o.put(new Ar(n,a))),i.push(r.Ii.sr(t,n,e))})),nr.$n(i)},t.prototype.ir=function(t,e,n){var r=this,i=wi(t);return nr.forEach(e,(function(e){var o=yr(e.path);return nr.$n([i.delete([n,o]),r.Ii.rr(t,n,e)])}))},t.prototype.Xi=function(t,e){var n=wi(t),r=IDBKeyRange.bound([e],[e+1],!1,!0);return n.delete(r)},t.prototype.cr=function(t,e){var n=IDBKeyRange.bound([e],[e+1],!1,!0),r=wi(t),i=sn();return r.ls({range:n,hs:!0},(function(t,e,n){var r=br(t[1]),o=new H(r);i=i.add(o)})).next((function(){return i}))},t.prototype.ki=function(t,e){var n=yr(e.path),r=IDBKeyRange.bound([n],[_(n)],!1,!0),i=0;return wi(t).ls({index:Ar.documentTargetsIndex,hs:!0,range:r},(function(t,e,n){var r=t[0];t[1],0!==r&&(i++,n.done())})).next((function(){return i>0}))},t.prototype.Dn=function(t,e){return bi(t).get(e).next((function(t){return t?Yr(t):null}))},t}();function bi(t){return Fr(t,Nr.store)}function _i(t){return Fr(t,Pr.store)}function wi(t){return Fr(t,Ar.store)}function Ei(t,e){var n=t[0],r=t[1],i=e[0],o=e[1],a=m(n,i);return 0===a?m(r,o):a}var Ti=function(){function t(t){this.ar=t,this.buffer=new Je(Ei),this.ur=0}return t.prototype.hr=function(){return++this.ur},t.prototype.lr=function(t){var e=[t,this.hr()];if(this.buffer.size<this.ar)this.buffer=this.buffer.add(e);else{var n=this.buffer.last();Ei(e,n)<0&&(this.buffer=this.buffer.delete(n).add(e))}},Object.defineProperty(t.prototype,\"maxValue\",{get:function(){return this.buffer.last()[0]},enumerable:!1,configurable:!0}),t}(),Ii=function(){function t(t,e){this._r=t,this.fs=e,this.dr=!1,this.wr=null}return t.prototype.start=function(t){-1!==this._r.params.Hs&&this.Er(t)},t.prototype.stop=function(){this.wr&&(this.wr.cancel(),this.wr=null)},Object.defineProperty(t.prototype,\"Tr\",{get:function(){return null!==this.wr},enumerable:!1,configurable:!0}),t.prototype.Er=function(t){var e=this,n=this.dr?3e5:6e4;c(\"LruGarbageCollector\",\"Garbage collection scheduled in \"+n+\"ms\"),this.wr=this.fs.Ir(\"lru_garbage_collection\",n,(function(){return Object(a.b)(e,void 0,void 0,(function(){var e;return Object(a.d)(this,(function(n){switch(n.label){case 0:this.wr=null,this.dr=!0,n.label=1;case 1:return n.trys.push([1,3,,7]),[4,t.mr(this._r)];case 2:return n.sent(),[3,7];case 3:return sr(e=n.sent())?(c(\"LruGarbageCollector\",\"Ignoring IndexedDB error during garbage collection: \",e),[3,6]):[3,4];case 4:return[4,si(e)];case 5:n.sent(),n.label=6;case 6:return[3,7];case 7:return[4,this.Er(t)];case 8:return n.sent(),[2]}}))}))}))},t}(),Si=function(){function t(t,e){this.Ar=t,this.params=e}return t.prototype.Rr=function(t,e){return this.Ar.Pr(t).next((function(t){return Math.floor(e/100*t)}))},t.prototype.yr=function(t,e){var n=this;if(0===e)return nr.resolve(M.U);var r=new Ti(e);return this.Ar.mn(t,(function(t){return r.lr(t.sequenceNumber)})).next((function(){return n.Ar.gr(t,(function(t){return r.lr(t)}))})).next((function(){return r.maxValue}))},t.prototype.Zi=function(t,e,n){return this.Ar.Zi(t,e,n)},t.prototype.Vr=function(t,e){return this.Ar.Vr(t,e)},t.prototype.pr=function(t,e){var n=this;return-1===this.params.Hs?(c(\"LruGarbageCollector\",\"Garbage collection skipped; disabled\"),nr.resolve(oi)):this.br(t).next((function(r){return r<n.params.Hs?(c(\"LruGarbageCollector\",\"Garbage collection skipped; Cache size \"+r+\" is lower than threshold \"+n.params.Hs),oi):n.vr(t,e)}))},t.prototype.br=function(t){return this.Ar.br(t)},t.prototype.vr=function(t,e){var n,i,o,a,s,l,h,f=this,p=Date.now();return this.Rr(t,this.params.Js).next((function(e){return e>f.params.Ys?(c(\"LruGarbageCollector\",\"Capping sequence numbers to collect down to the maximum of \"+f.params.Ys+\" from \"+e),i=f.params.Ys):i=e,a=Date.now(),f.yr(t,i)})).next((function(r){return n=r,s=Date.now(),f.Zi(t,n,e)})).next((function(e){return o=e,l=Date.now(),f.Vr(t,n)})).next((function(t){return h=Date.now(),u()<=r.a.DEBUG&&c(\"LruGarbageCollector\",\"LRU Garbage Collection\\n\\tCounted targets in \"+(a-p)+\"ms\\n\\tDetermined least recently used \"+i+\" in \"+(s-a)+\"ms\\n\\tRemoved \"+o+\" targets in \"+(l-s)+\"ms\\n\\tRemoved \"+t+\" documents in \"+(h-l)+\"ms\\nTotal Duration: \"+(h-p)+\"ms\"),nr.resolve({js:!0,Ws:i,Gs:o,zs:t})}))},t}(),Oi=function(){function t(t,e){this.db=t,this._r=function(t,e){return new Si(t,e)}(this,e)}return t.prototype.Pr=function(t){var e=this.Sr(t);return this.db.Dr().tr(t).next((function(t){return e.next((function(e){return t+e}))}))},t.prototype.Sr=function(t){var e=0;return this.gr(t,(function(t){e++})).next((function(){return e}))},t.prototype.mn=function(t,e){return this.db.Dr().mn(t,e)},t.prototype.gr=function(t,e){return this.Cr(t,(function(t,n){return e(n)}))},t.prototype.sr=function(t,e,n){return Ci(t,n)},t.prototype.rr=function(t,e,n){return Ci(t,n)},t.prototype.Zi=function(t,e,n){return this.db.Dr().Zi(t,e,n)},t.prototype.Oi=function(t,e){return Ci(t,e)},t.prototype.Nr=function(t,e){return function(t,e){var n=!1;return yi(t)._s((function(r){return pi(t,r,e).next((function(t){return t&&(n=!0),nr.resolve(!t)}))})).next((function(){return n}))}(t,e)},t.prototype.Vr=function(t,e){var n=this,r=this.db.Fr().Or(),i=[],o=0;return this.Cr(t,(function(a,s){if(s<=e){var u=n.Nr(t,a).next((function(e){if(!e)return o++,r.fi(t,a).next((function(){return r._i(a),wi(t).delete([0,yr(a.path)])}))}));i.push(u)}})).next((function(){return nr.$n(i)})).next((function(){return r.apply(t)})).next((function(){return o}))},t.prototype.removeTarget=function(t,e){var n=e.Lt(t.vs);return this.db.Dr().Ji(t,n)},t.prototype.kr=function(t,e){return Ci(t,e)},t.prototype.Cr=function(t,e){var n,r=wi(t),i=M.U;return r.ls({index:Ar.documentTargetsIndex},(function(t,r){var o=t[0],a=(t[1],r.path),s=r.sequenceNumber;0===o?(i!==M.U&&e(new H(br(n)),i),i=s,n=a):i=M.U})).next((function(){i!==M.U&&e(new H(br(n)),i)}))},t.prototype.br=function(t){return this.db.Fr().Mr(t)},t}();function Ci(t,e){return wi(t).put(function(t,e){return new Ar(0,yr(t.path),e)}(e,t.vs))}var ki=function(){function t(t,e){this.Kt=t,this.Ti=e}return t.prototype.ui=function(t,e,n){return Pi(t).put(Ri(e),n)},t.prototype._i=function(t,e){var n=Pi(t),r=Ri(e);return n.delete(r)},t.prototype.updateMetadata=function(t,e){var n=this;return this.getMetadata(t).next((function(r){return r.byteSize+=e,n.Lr(t,r)}))},t.prototype.fi=function(t,e){var n=this;return Pi(t).get(Ri(e)).next((function(t){return n.$r(t)}))},t.prototype.Br=function(t,e){var n=this;return Pi(t).get(Ri(e)).next((function(t){var e=n.$r(t);return e?{li:e,size:hi(t)}:null}))},t.prototype.getEntries=function(t,e){var n=this,r=tn();return this.qr(t,e,(function(t,e){var i=n.$r(e);r=r.Ht(t,i)})).next((function(){return r}))},t.prototype.Ur=function(t,e){var n=this,r=tn(),i=new Ge(H.J);return this.qr(t,e,(function(t,e){var o=n.$r(e);o?(r=r.Ht(t,o),i=i.Ht(t,hi(e))):(r=r.Ht(t,null),i=i.Ht(t,0))})).next((function(){return{Qr:r,Kr:i}}))},t.prototype.qr=function(t,e,n){if(e.nt())return nr.resolve();var r=IDBKeyRange.bound(e.first().path.rt(),e.last().path.rt()),i=e.ee(),o=i.ce();return Pi(t).ls({range:r},(function(t,e,r){for(var a=H.Tt(t);o&&H.J(o,a)<0;)n(o,null),o=i.ce();o&&o.isEqual(a)&&(n(o,e),o=i.ae()?i.ce():null),o?r.rs(o.path.rt()):r.done()})).next((function(){for(;o;)n(o,null),o=i.ae()?i.ce():null}))},t.prototype.jr=function(t,e,n){var r=this,i=nn(),o=e.path.length+1,a={};if(n.isEqual(U.min())){var s=e.path.rt();a.range=IDBKeyRange.lowerBound(s)}else{var u=e.path.rt(),c=Hr(n);a.range=IDBKeyRange.lowerBound([u,c],!0),a.index=Cr.collectionReadTimeIndex}return Pi(t).ls(a,(function(t,n,a){if(t.length===o){var s=Br(r.Kt,n);e.path.st(s.key.path)?s instanceof Et&&oe(e,s)&&(i=i.Ht(s.key,s)):a.done()}})).next((function(){return i}))},t.prototype.Or=function(t){return new Ni(this,!!t&&t.Wr)},t.prototype.Mr=function(t){return this.getMetadata(t).next((function(t){return t.byteSize}))},t.prototype.getMetadata=function(t){return Ai(t).get(kr.key).next((function(t){return d(!!t),t}))},t.prototype.Lr=function(t,e){return Ai(t).put(kr.key,e)},t.prototype.$r=function(t){if(t){var e=Br(this.Kt,t);return e instanceof Tt&&e.version.isEqual(U.min())?null:e}return null},t}(),Ni=function(t){function e(e,n){var r=this;return(r=t.call(this)||this).Gr=e,r.Wr=n,r.zr=new ui((function(t){return t.toString()}),(function(t,e){return t.isEqual(e)})),r}return Object(a.c)(e,t),e.prototype.Ei=function(t){var e=this,n=[],r=0,i=new Je((function(t,e){return m(t.ot(),e.ot())}));return this.oi.forEach((function(o,a){var s=e.zr.get(o);if(a.li){var u=zr(e.Gr.Kt,a.li,e.ai(o));i=i.add(o.path.Z());var c=hi(u);r+=c-s,n.push(e.Gr.ui(t,o,u))}else if(r-=s,e.Wr){var l=zr(e.Gr.Kt,new Tt(o,U.min()),e.ai(o));n.push(e.Gr.ui(t,o,l))}else n.push(e.Gr._i(t,o))})),i.forEach((function(r){n.push(e.Gr.Ti.Us(t,r))})),n.push(this.Gr.updateMetadata(t,r)),nr.$n(n)},e.prototype.di=function(t,e){var n=this;return this.Gr.Br(t,e).next((function(t){return null===t?(n.zr.set(e,0),null):(n.zr.set(e,t.size),t.li)}))},e.prototype.wi=function(t,e){var n=this;return this.Gr.Ur(t,e).next((function(t){var e=t.Qr;return t.Kr.forEach((function(t,e){n.zr.set(t,e)})),e}))},e}(ci);function Ai(t){return Fr(t,kr.store)}function Pi(t){return Fr(t,Cr.store)}function Ri(t){return t.path.rt()}var ji=function(){function t(t){this.Kt=t}return t.prototype.Yn=function(t,e,n,r){var i=this;d(n<r&&n>=0&&r<=11);var o=new rr(\"createOrUpgrade\",e);n<1&&r>=1&&(function(t){t.createObjectStore(wr.store)}(t),function(t){t.createObjectStore(Er.store,{keyPath:Er.keyPath}),t.createObjectStore(Tr.store,{keyPath:Tr.keyPath,autoIncrement:!0}).createIndex(Tr.userMutationsIndex,Tr.userMutationsKeyPath,{unique:!0}),t.createObjectStore(Ir.store)}(t),xi(t),function(t){t.createObjectStore(Cr.store)}(t));var a=nr.resolve();return n<3&&r>=3&&(0!==n&&(function(t){t.deleteObjectStore(Ar.store),t.deleteObjectStore(Nr.store),t.deleteObjectStore(Pr.store)}(t),xi(t)),a=a.next((function(){return function(t){var e=t.store(Pr.store),n=new Pr(0,0,U.min().G(),0);return e.put(Pr.key,n)}(o)}))),n<4&&r>=4&&(0!==n&&(a=a.next((function(){return function(t,e){return e.store(Tr.store).os().next((function(n){t.deleteObjectStore(Tr.store),t.createObjectStore(Tr.store,{keyPath:Tr.keyPath,autoIncrement:!0}).createIndex(Tr.userMutationsIndex,Tr.userMutationsKeyPath,{unique:!0});var r=e.store(Tr.store),i=n.map((function(t){return r.put(t)}));return nr.$n(i)}))}(t,o)}))),a=a.next((function(){!function(t){t.createObjectStore(jr.store,{keyPath:jr.keyPath})}(t)}))),n<5&&r>=5&&(a=a.next((function(){return i.Hr(o)}))),n<6&&r>=6&&(a=a.next((function(){return function(t){t.createObjectStore(kr.store)}(t),i.Jr(o)}))),n<7&&r>=7&&(a=a.next((function(){return i.Yr(o)}))),n<8&&r>=8&&(a=a.next((function(){return i.Xr(t,o)}))),n<9&&r>=9&&(a=a.next((function(){!function(t){t.objectStoreNames.contains(\"remoteDocumentChanges\")&&t.deleteObjectStore(\"remoteDocumentChanges\")}(t),function(t){var e=t.objectStore(Cr.store);e.createIndex(Cr.readTimeIndex,Cr.readTimeIndexPath,{unique:!1}),e.createIndex(Cr.collectionReadTimeIndex,Cr.collectionReadTimeIndexPath,{unique:!1})}(e)}))),n<10&&r>=10&&(a=a.next((function(){return i.Zr(o)}))),n<11&&r>=11&&(a=a.next((function(){!function(t){t.createObjectStore(xr.store,{keyPath:xr.keyPath})}(t),function(t){t.createObjectStore(Dr.store,{keyPath:Dr.keyPath})}(t)}))),a},t.prototype.Jr=function(t){var e=0;return t.store(Cr.store).ls((function(t,n){e+=hi(n)})).next((function(){var n=new kr(e);return t.store(kr.store).put(kr.key,n)}))},t.prototype.Hr=function(t){var e=this,n=t.store(Er.store),r=t.store(Tr.store);return n.os().next((function(n){return nr.forEach(n,(function(n){var i=IDBKeyRange.bound([n.userId,-1],[n.userId,n.lastAcknowledgedBatchId]);return r.os(Tr.userMutationsIndex,i).next((function(r){return nr.forEach(r,(function(r){d(r.userId===n.userId);var i=Qr(e.Kt,r);return li(t,n.userId,i).next((function(){}))}))}))}))}))},t.prototype.Yr=function(t){var e=t.store(Ar.store),n=t.store(Cr.store);return t.store(Pr.store).get(Pr.key).next((function(t){var r=[];return n.ls((function(n,i){var o=new q(n),a=function(t){return[0,yr(t)]}(o);r.push(e.get(a).next((function(n){return n?nr.resolve():function(n){return e.put(new Ar(0,yr(n),t.highestListenSequenceNumber))}(o)})))})).next((function(){return nr.$n(r)}))}))},t.prototype.Xr=function(t,e){t.createObjectStore(Rr.store,{keyPath:Rr.keyPath});var n=e.store(Rr.store),r=new ni,i=function(t){if(r.add(t)){var e=t.et(),i=t.Z();return n.put({collectionId:e,parent:yr(i)})}};return e.store(Cr.store).ls({hs:!0},(function(t,e){var n=new q(t);return i(n.Z())})).next((function(){return e.store(Ir.store).ls({hs:!0},(function(t,e){t[0];var n=t[1],r=(t[2],br(n));return i(r.Z())}))}))},t.prototype.Zr=function(t){var e=this,n=t.store(Nr.store);return n.ls((function(t,r){var i=Yr(r),o=Jr(e.Kt,i);return n.put(o)}))},t}();function xi(t){t.createObjectStore(Ar.store,{keyPath:Ar.keyPath}).createIndex(Ar.documentTargetsIndex,Ar.documentTargetsKeyPath,{unique:!0}),t.createObjectStore(Nr.store,{keyPath:Nr.keyPath}).createIndex(Nr.queryTargetsIndexName,Nr.queryTargetsKeyPath,{unique:!0}),t.createObjectStore(Pr.store)}var Di=\"Failed to obtain exclusive access to the persistence layer. To allow shared access, multi-tab synchronization has to be enabled in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.\",Li=function(){function t(e,n,r,i,o,a,s,u,c,h){if(this.allowTabSynchronization=e,this.persistenceKey=n,this.clientId=r,this.eo=o,this.window=a,this.document=s,this.no=c,this.so=h,this.io=null,this.ro=!1,this.isPrimary=!1,this.networkEnabled=!0,this.oo=null,this.inForeground=!1,this.co=null,this.ao=null,this.uo=Number.NEGATIVE_INFINITY,this.ho=function(t){return Promise.resolve()},!t.jn())throw new T(E.UNIMPLEMENTED,\"This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.\");this.Ii=new Oi(this,i),this.lo=n+\"main\",this.Kt=new qr(u),this._o=new ir(this.lo,11,new ji(this.Kt)),this.fo=new mi(this.Ii,this.Kt),this.Ti=new ri,this.wo=function(t,e){return new ki(t,e)}(this.Kt,this.Ti),this.Eo=new $r,this.window&&this.window.localStorage?this.To=this.window.localStorage:(this.To=null,!1===h&&l(\"IndexedDbPersistence\",\"LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page.\"))}return t.prototype.start=function(){var t=this;return this.Io().then((function(){if(!t.isPrimary&&!t.allowTabSynchronization)throw new T(E.FAILED_PRECONDITION,Di);return t.mo(),t.Ao(),t.Ro(),t.runTransaction(\"getHighestListenSequenceNumber\",\"readonly\",(function(e){return t.fo.ji(e)}))})).then((function(e){t.io=new M(e,t.no)})).then((function(){t.ro=!0})).catch((function(e){return t._o&&t._o.close(),Promise.reject(e)}))},t.prototype.Po=function(t){var e=this;return this.ho=function(n){return Object(a.b)(e,void 0,void 0,(function(){return Object(a.d)(this,(function(e){return this.Tr?[2,t(n)]:[2]}))}))},t(this.isPrimary)},t.prototype.yo=function(t){var e=this;this._o.Zn((function(n){return Object(a.b)(e,void 0,void 0,(function(){return Object(a.d)(this,(function(e){switch(e.label){case 0:return null===n.newVersion?[4,t()]:[3,2];case 1:e.sent(),e.label=2;case 2:return[2]}}))}))}))},t.prototype.Vo=function(t){var e=this;this.networkEnabled!==t&&(this.networkEnabled=t,this.eo.ys((function(){return Object(a.b)(e,void 0,void 0,(function(){return Object(a.d)(this,(function(t){switch(t.label){case 0:return this.Tr?[4,this.Io()]:[3,2];case 1:t.sent(),t.label=2;case 2:return[2]}}))}))})))},t.prototype.Io=function(){var t=this;return this.runTransaction(\"updateClientMetadataAndTryBecomePrimary\",\"readwrite\",(function(e){return Fi(e).put(new jr(t.clientId,Date.now(),t.networkEnabled,t.inForeground)).next((function(){if(t.isPrimary)return t.po(e).next((function(e){e||(t.isPrimary=!1,t.eo.bo((function(){return t.ho(!1)})))}))})).next((function(){return t.vo(e)})).next((function(n){return t.isPrimary&&!n?t.So(e).next((function(){return!1})):!!n&&t.Do(e).next((function(){return!0}))}))})).catch((function(e){if(sr(e))return c(\"IndexedDbPersistence\",\"Failed to extend owner lease: \",e),t.isPrimary;if(!t.allowTabSynchronization)throw e;return c(\"IndexedDbPersistence\",\"Releasing owner lease after error during lease refresh\",e),!1})).then((function(e){t.isPrimary!==e&&t.eo.bo((function(){return t.ho(e)})),t.isPrimary=e}))},t.prototype.po=function(t){var e=this;return Mi(t).get(wr.key).next((function(t){return nr.resolve(e.Co(t))}))},t.prototype.xo=function(t){return Fi(t).delete(this.clientId)},t.prototype.No=function(){return Object(a.b)(this,void 0,void 0,(function(){var t,e,n,r,i=this;return Object(a.d)(this,(function(o){switch(o.label){case 0:return!this.isPrimary||this.Oo(this.uo,18e5)?[3,2]:(this.uo=Date.now(),[4,this.runTransaction(\"maybeGarbageCollectMultiClientState\",\"readwrite-primary\",(function(t){var e=Fr(t,jr.store);return e.os().next((function(t){var n=i.Fo(t,18e5),r=t.filter((function(t){return-1===n.indexOf(t)}));return nr.forEach(r,(function(t){return e.delete(t.clientId)})).next((function(){return r}))}))})).catch((function(){return[]}))]);case 1:if(t=o.sent(),this.To)for(e=0,n=t;e<n.length;e++)r=n[e],this.To.removeItem(this.ko(r.clientId));o.label=2;case 2:return[2]}}))}))},t.prototype.Ro=function(){var t=this;this.ao=this.eo.Ir(\"client_metadata_refresh\",4e3,(function(){return t.Io().then((function(){return t.No()})).then((function(){return t.Ro()}))}))},t.prototype.Co=function(t){return!!t&&t.ownerId===this.clientId},t.prototype.vo=function(t){var e=this;return this.so?nr.resolve(!0):Mi(t).get(wr.key).next((function(n){if(null!==n&&e.Oo(n.leaseTimestampMs,5e3)&&!e.Mo(n.ownerId)){if(e.Co(n)&&e.networkEnabled)return!0;if(!e.Co(n)){if(!n.allowTabSynchronization)throw new T(E.FAILED_PRECONDITION,Di);return!1}}return!(!e.networkEnabled||!e.inForeground)||Fi(t).os().next((function(t){return void 0===e.Fo(t,5e3).find((function(t){if(e.clientId!==t.clientId){var n=!e.networkEnabled&&t.networkEnabled,r=!e.inForeground&&t.inForeground,i=e.networkEnabled===t.networkEnabled;if(n||r&&i)return!0}return!1}))}))})).next((function(t){return e.isPrimary!==t&&c(\"IndexedDbPersistence\",\"Client \"+(t?\"is\":\"is not\")+\" eligible for a primary lease.\"),t}))},t.prototype.Lo=function(){return Object(a.b)(this,void 0,void 0,(function(){var t=this;return Object(a.d)(this,(function(e){switch(e.label){case 0:return this.ro=!1,this.$o(),this.ao&&(this.ao.cancel(),this.ao=null),this.Bo(),this.qo(),[4,this._o.runTransaction(\"shutdown\",\"readwrite\",[wr.store,jr.store],(function(e){var n=new Mr(e,M.U);return t.So(n).next((function(){return t.xo(n)}))}))];case 1:return e.sent(),this._o.close(),this.Uo(),[2]}}))}))},t.prototype.Fo=function(t,e){var n=this;return t.filter((function(t){return n.Oo(t.updateTimeMs,e)&&!n.Mo(t.clientId)}))},t.prototype.Qo=function(){var t=this;return this.runTransaction(\"getActiveClients\",\"readonly\",(function(e){return Fi(e).os().next((function(e){return t.Fo(e,18e5).map((function(t){return t.clientId}))}))}))},Object.defineProperty(t.prototype,\"Tr\",{get:function(){return this.ro},enumerable:!1,configurable:!0}),t.prototype.Ko=function(t){return fi.Ai(t,this.Kt,this.Ti,this.Ii)},t.prototype.Dr=function(){return this.fo},t.prototype.Fr=function(){return this.wo},t.prototype.jo=function(){return this.Ti},t.prototype.Wo=function(){return this.Eo},t.prototype.runTransaction=function(t,e,n){var r=this;c(\"IndexedDbPersistence\",\"Starting transaction:\",t);var i,o=\"readonly\"===e?\"readonly\":\"readwrite\";return this._o.runTransaction(t,o,Lr,(function(o){return i=new Mr(o,r.io?r.io.next():M.U),\"readwrite-primary\"===e?r.po(i).next((function(t){return!!t||r.vo(i)})).next((function(e){if(!e)throw l(\"Failed to obtain primary lease for action '\"+t+\"'.\"),r.isPrimary=!1,r.eo.bo((function(){return r.ho(!1)})),new T(E.FAILED_PRECONDITION,dr);return n(i)})).next((function(t){return r.Do(i).next((function(){return t}))})):r.Go(i).next((function(){return n(i)}))})).then((function(t){return i.ps(),t}))},t.prototype.Go=function(t){var e=this;return Mi(t).get(wr.key).next((function(t){if(null!==t&&e.Oo(t.leaseTimestampMs,5e3)&&!e.Mo(t.ownerId)&&!e.Co(t)&&!(e.so||e.allowTabSynchronization&&t.allowTabSynchronization))throw new T(E.FAILED_PRECONDITION,Di)}))},t.prototype.Do=function(t){var e=new wr(this.clientId,this.allowTabSynchronization,Date.now());return Mi(t).put(wr.key,e)},t.jn=function(){return ir.jn()},t.prototype.So=function(t){var e=this,n=Mi(t);return n.get(wr.key).next((function(t){return e.Co(t)?(c(\"IndexedDbPersistence\",\"Releasing primary lease.\"),n.delete(wr.key)):nr.resolve()}))},t.prototype.Oo=function(t,e){var n=Date.now();return!(t<n-e||t>n&&(l(\"Detected an update time that is in the future: \"+t+\" > \"+n),1))},t.prototype.mo=function(){var t=this;null!==this.document&&\"function\"==typeof this.document.addEventListener&&(this.co=function(){t.eo.ys((function(){return t.inForeground=\"visible\"===t.document.visibilityState,t.Io()}))},this.document.addEventListener(\"visibilitychange\",this.co),this.inForeground=\"visible\"===this.document.visibilityState)},t.prototype.Bo=function(){this.co&&(this.document.removeEventListener(\"visibilitychange\",this.co),this.co=null)},t.prototype.Ao=function(){var t,e=this;\"function\"==typeof(null===(t=this.window)||void 0===t?void 0:t.addEventListener)&&(this.oo=function(){e.$o(),e.eo.ys((function(){return e.Lo()}))},this.window.addEventListener(\"unload\",this.oo))},t.prototype.qo=function(){this.oo&&(this.window.removeEventListener(\"unload\",this.oo),this.oo=null)},t.prototype.Mo=function(t){var e;try{var n=null!==(null===(e=this.To)||void 0===e?void 0:e.getItem(this.ko(t)));return c(\"IndexedDbPersistence\",\"Client '\"+t+\"' \"+(n?\"is\":\"is not\")+\" zombied in LocalStorage\"),n}catch(t){return l(\"IndexedDbPersistence\",\"Failed to get zombied client id.\",t),!1}},t.prototype.$o=function(){if(this.To)try{this.To.setItem(this.ko(this.clientId),String(Date.now()))}catch(t){l(\"Failed to set zombie client id.\",t)}},t.prototype.Uo=function(){if(this.To)try{this.To.removeItem(this.ko(this.clientId))}catch(t){}},t.prototype.ko=function(t){return\"firestore_zombie_\"+this.persistenceKey+\"_\"+t},t}();function Mi(t){return Fr(t,wr.store)}function Fi(t){return Fr(t,jr.store)}function Ui(t,e){var n=t.projectId;return t.m||(n+=\".\"+t.database),\"firestore/\"+e+\"/\"+n+\"/\"}var Vi=function(t,e){this.progress=t,this.zo=e},qi=function(){function t(t,e,n){this.wo=t,this.Ho=e,this.Ti=n}return t.prototype.Jo=function(t,e){var n=this;return this.Ho.vi(t,e).next((function(r){return n.Yo(t,e,r)}))},t.prototype.Yo=function(t,e,n){return this.wo.fi(t,e).next((function(t){for(var r=0,i=n;r<i.length;r++)t=i[r].xs(e,t);return t}))},t.prototype.Xo=function(t,e,n){var r=tn();return e.forEach((function(t,e){for(var i=0,o=n;i<o.length;i++)e=o[i].xs(t,e);r=r.Ht(t,e)})),r},t.prototype.Zo=function(t,e){var n=this;return this.wo.getEntries(t,e).next((function(e){return n.tc(t,e)}))},t.prototype.tc=function(t,e){var n=this;return this.Ho.Si(t,e).next((function(r){var i=n.Xo(t,e,r),o=Ze();return i.forEach((function(t,e){e||(e=new Tt(t,U.min())),o=o.Ht(t,e)})),o}))},t.prototype.jr=function(t,e,n){return function(t){return H.Et(t.path)&&null===t.collectionGroup&&0===t.filters.length}(e)?this.ec(t,e.path):$t(e)?this.nc(t,e,n):this.sc(t,e,n)},t.prototype.ec=function(t,e){return this.Jo(t,new H(e)).next((function(t){var e=nn();return t instanceof Et&&(e=e.Ht(t.key,t)),e}))},t.prototype.nc=function(t,e,n){var r=this,i=e.collectionGroup,o=nn();return this.Ti.Qs(t,i).next((function(a){return nr.forEach(a,(function(a){var s=function(t,e){return new Kt(e,null,t.Nt.slice(),t.filters.slice(),t.limit,t.limitType,t.startAt,t.endAt)}(e,a.child(i));return r.sc(t,s,n).next((function(t){t.forEach((function(t,e){o=o.Ht(t,e)}))}))})).next((function(){return o}))}))},t.prototype.sc=function(t,e,n){var r,i,o=this;return this.wo.jr(t,e,n).next((function(n){return r=n,o.Ho.Ci(t,e)})).next((function(e){return i=e,o.ic(t,i,r).next((function(t){r=t;for(var e=0,n=i;e<n.length;e++)for(var o=n[e],a=0,s=o.mutations;a<s.length;a++){var u=s[a],c=u.key,l=Ae(u,r.get(c),0,o.Ss);r=l instanceof Et?r.Ht(c,l):r.remove(c)}}))})).next((function(){return r.forEach((function(t,n){oe(e,n)||(r=r.remove(t))})),r}))},t.prototype.ic=function(t,e,n){for(var r=sn(),i=0,o=e;i<o.length;i++)for(var a=0,s=o[i].mutations;a<s.length;a++){var u=s[a];u instanceof De&&null===n.get(u.key)&&(r=r.add(u.key))}var c=n;return this.wo.getEntries(t,r).next((function(t){return t.forEach((function(t,e){null!==e&&e instanceof Et&&(c=c.Ht(t,e))})),c}))},t}(),Bi=function(){function t(t,e,n,r){this.targetId=t,this.fromCache=e,this.rc=n,this.oc=r}return t.cc=function(e,n){for(var r=sn(),i=sn(),o=0,a=n.docChanges;o<a.length;o++){var s=a[o];switch(s.type){case 0:r=r.add(s.doc.key);break;case 1:i=i.add(s.doc.key)}}return new t(e,n.fromCache,r,i)},t}(),zi=function(){function t(){}return t.prototype.ac=function(t){this.uc=t},t.prototype.jr=function(t,e,n,i){var o=this;return function(t){return 0===t.filters.length&&null===t.limit&&null==t.startAt&&null==t.endAt&&(0===t.Nt.length||1===t.Nt.length&&t.Nt[0].field.ht())}(e)||n.isEqual(U.min())?this.hc(t,e):this.uc.Zo(t,i).next((function(a){var s=o.lc(e,a);return(Qt(e)||Yt(e))&&o._c(e.limitType,s,i,n)?o.hc(t,e):(u()<=r.a.DEBUG&&c(\"QueryEngine\",\"Re-using previous result from %s to execute query: %s\",n.toString(),ie(e)),o.uc.jr(t,e,n).next((function(t){return s.forEach((function(e){t=t.Ht(e.key,e)})),t})))}))},t.prototype.lc=function(t,e){var n=new Je(ae(t));return e.forEach((function(e,r){r instanceof Et&&oe(t,r)&&(n=n.add(r))})),n},t.prototype._c=function(t,e,n,r){if(n.size!==e.size)return!0;var i=\"F\"===t?e.last():e.first();return!!i&&(i.hasPendingWrites||i.version.u(r)>0)},t.prototype.hc=function(t,e){return u()<=r.a.DEBUG&&c(\"QueryEngine\",\"Using full collection scan to execute query:\",ie(e)),this.uc.jr(t,e,U.min())},t}(),Hi=function(){function t(t,e,n,r){this.persistence=t,this.fc=e,this.Kt=r,this.dc=new Ge(m),this.wc=new ui((function(t){return Ct(t)}),kt),this.Ec=U.min(),this.Ho=t.Ko(n),this.Tc=t.Fr(),this.fo=t.Dr(),this.Ic=new qi(this.Tc,this.Ho,this.persistence.jo()),this.Eo=t.Wo(),this.fc.ac(this.Ic)}return t.prototype.mr=function(t){var e=this;return this.persistence.runTransaction(\"Collect garbage\",\"readwrite-primary\",(function(n){return t.pr(n,e.dc)}))},t}();function Ki(t,e,n,r){return new Hi(t,e,n,r)}function Wi(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r,i,o;return Object(a.d)(this,(function(a){switch(a.label){case 0:return n=v(t),r=n.Ho,i=n.Ic,[4,n.persistence.runTransaction(\"Handle user change\",\"readonly\",(function(t){var o;return n.Ho.bi(t).next((function(a){return o=a,r=n.persistence.Ko(e),i=new qi(n.Tc,r,n.persistence.jo()),r.bi(t)})).next((function(e){for(var n=[],r=[],a=sn(),s=0,u=o;s<u.length;s++){var c=u[s];n.push(c.batchId);for(var l=0,h=c.mutations;l<h.length;l++){var f=h[l];a=a.add(f.key)}}for(var p=0,d=e;p<d.length;p++){var v=d[p];r.push(v.batchId);for(var y=0,g=v.mutations;y<g.length;y++){var m=g[y];a=a.add(m.key)}}return i.Zo(t,a).next((function(t){return{mc:t,Ac:n,Rc:r}}))}))}))];case 1:return o=a.sent(),[2,(n.Ho=r,n.Ic=i,n.fc.ac(n.Ic),o)]}}))}))}function Gi(t,e){var n=v(t);return n.persistence.runTransaction(\"Acknowledge batch\",\"readwrite-primary\",(function(t){var r=e.batch.keys(),i=n.Tc.Or({Wr:!0});return function(t,e,n,r){var i=n.batch,o=i.keys(),a=nr.resolve();return o.forEach((function(t){a=a.next((function(){return r.fi(e,t)})).next((function(e){var o=e,a=n.Fs.get(t);d(null!==a),(!o||o.version.u(a)<0)&&(o=i.Ds(t,o,n))&&r.ui(o,n.Os)}))})),a.next((function(){return t.Ho.xi(e,i)}))}(n,t,e,i).next((function(){return i.apply(t)})).next((function(){return n.Ho.Fi(t)})).next((function(){return n.Ic.Zo(t,r)}))}))}function Qi(t){var e=v(t);return e.persistence.runTransaction(\"Get last remote snapshot version\",\"readonly\",(function(t){return e.fo.Ki(t)}))}function Yi(t,e){var n=v(t),r=e.Mt,i=n.dc;return n.persistence.runTransaction(\"Apply remote event\",\"readwrite-primary\",(function(t){var o=n.Tc.Or({Wr:!0});i=n.dc;var a=[];e.Fe.forEach((function(e,o){var s=i.get(o);if(s){a.push(n.fo.ir(t,e.Ke,o).next((function(){return n.fo.nr(t,e.Ue,o)})));var u=e.resumeToken;if(u.o()>0){var c=s.$t(u,r).Lt(t.vs);i=i.Ht(o,c),function(t,e,n){return d(e.resumeToken.o()>0),0===t.resumeToken.o()||e.Mt.W()-t.Mt.W()>=3e8||n.Ue.size+n.Qe.size+n.Ke.size>0}(s,c,e)&&a.push(n.fo.Ji(t,c))}}}));var s=Ze();if(e.Me.forEach((function(r,i){e.Le.has(r)&&a.push(n.persistence.Ii.kr(t,r))})),a.push(Ji(t,o,e.Me,r,void 0).next((function(t){s=t}))),!r.isEqual(U.min())){var u=n.fo.Ki(t).next((function(e){return n.fo.Wi(t,t.vs,r)}));a.push(u)}return nr.$n(a).next((function(){return o.apply(t)})).next((function(){return n.Ic.tc(t,s)}))})).then((function(t){return n.dc=i,t}))}function Ji(t,e,n,r,i){var o=sn();return n.forEach((function(t){return o=o.add(t)})),e.getEntries(t,o).next((function(t){var o=Ze();return n.forEach((function(n,a){var s=t.get(n),u=(null==i?void 0:i.get(n))||r;a instanceof Tt&&a.version.isEqual(U.min())?(e._i(n,u),o=o.Ht(n,a)):null==s||a.version.u(s.version)>0||0===a.version.u(s.version)&&s.hasPendingWrites?(e.ui(a,u),o=o.Ht(n,a)):c(\"LocalStore\",\"Ignoring outdated watch update for \",n,\". Current version:\",s.version,\" Watch version:\",a.version)})),o}))}function Xi(t,e){var n=v(t);return n.persistence.runTransaction(\"Get next mutation batch\",\"readonly\",(function(t){return void 0===e&&(e=-1),n.Ho.Vi(t,e)}))}function $i(t,e){var n=v(t);return n.persistence.runTransaction(\"Allocate target\",\"readwrite\",(function(t){var r;return n.fo.er(t,e).next((function(i){return i?(r=i,nr.resolve(r)):n.fo.qi(t).next((function(i){return r=new ue(e,i,0,t.vs),n.fo.Gi(t,r).next((function(){return r}))}))}))})).then((function(t){var r=n.dc.get(t.targetId);return(null===r||t.Mt.u(r.Mt)>0)&&(n.dc=n.dc.Ht(t.targetId,t),n.wc.set(e,t.targetId)),t}))}function Zi(t,e,n){return Object(a.b)(this,void 0,void 0,(function(){var r,i,o,s;return Object(a.d)(this,(function(a){switch(a.label){case 0:r=v(t),i=r.dc.get(e),o=n?\"readwrite\":\"readwrite-primary\",a.label=1;case 1:return a.trys.push([1,4,,5]),n?[3,3]:[4,r.persistence.runTransaction(\"Release target\",o,(function(t){return r.persistence.Ii.removeTarget(t,i)}))];case 2:a.sent(),a.label=3;case 3:return[3,5];case 4:if(!sr(s=a.sent()))throw s;return c(\"LocalStore\",\"Failed to update sequence numbers for target \"+e+\": \"+s),[3,5];case 5:return r.dc=r.dc.remove(e),r.wc.delete(i.target),[2]}}))}))}function to(t,e,n){var r=v(t),i=U.min(),o=sn();return r.persistence.runTransaction(\"Execute query\",\"readonly\",(function(t){return function(t,e,n){var r=v(t),i=r.wc.get(n);return void 0!==i?nr.resolve(r.dc.get(i)):r.fo.er(e,n)}(r,t,te(e)).next((function(e){if(e)return i=e.lastLimboFreeSnapshotVersion,r.fo.cr(t,e.targetId).next((function(t){o=t}))})).next((function(){return r.fc.jr(t,e,n?i:U.min(),n?o:sn())})).next((function(t){return{documents:t,Pc:o}}))}))}function eo(t,e){var n=v(t),r=v(n.fo),i=n.dc.get(e);return i?Promise.resolve(i.target):n.persistence.runTransaction(\"Get target data\",\"readonly\",(function(t){return r.Dn(t,e).next((function(t){return t?t.target:null}))}))}function no(t){var e=v(t);return e.persistence.runTransaction(\"Get new document changes\",\"readonly\",(function(t){return function(t,e,n){var r=v(t),i=Ze(),o=Hr(n),a=Pi(e),s=IDBKeyRange.lowerBound(o,!0);return a.ls({index:Cr.readTimeIndex,range:s},(function(t,e){var n=Br(r.Kt,e);i=i.Ht(n.key,n),o=e.readTime})).next((function(){return{zo:i,readTime:Kr(o)}}))}(e.Tc,t,e.Ec)})).then((function(t){var n=t.zo,r=t.readTime;return e.Ec=r,n}))}function ro(t){return Object(a.b)(this,void 0,void 0,(function(){var e;return Object(a.d)(this,(function(n){return[2,(e=v(t)).persistence.runTransaction(\"Synchronize last document change read time\",\"readonly\",(function(t){return function(t){var e=Pi(t),n=U.min();return e.ls({index:Cr.readTimeIndex,reverse:!0},(function(t,e,r){e.readTime&&(n=Kr(e.readTime)),r.done()})).next((function(){return n}))}(t)})).then((function(t){e.Ec=t}))]}))}))}function io(t,e,n,r){return Object(a.b)(this,void 0,void 0,(function(){var i,o,s,u,c,l,h,f,p,d;return Object(a.d)(this,(function(a){switch(a.label){case 0:for(i=v(t),o=sn(),s=Ze(),u=on(),c=0,l=n;c<l.length;c++)h=l[c],f=e.yc(h.metadata.name),h.document&&(o=o.add(f)),s=s.Ht(f,e.gc(h)),u=u.Ht(f,e.Vc(h.metadata.readTime));return p=i.Tc.Or({Wr:!0}),[4,$i(i,function(t){return te(Gt(q.ct(\"__bundle__/docs/\"+t)))}(r))];case 1:return d=a.sent(),[2,i.persistence.runTransaction(\"Apply bundle documents\",\"readwrite\",(function(t){return Ji(t,p,s,U.min(),u).next((function(e){return p.apply(t),e})).next((function(e){return i.fo.Xi(t,d.targetId).next((function(){return i.fo.nr(t,o,d.targetId)})).next((function(){return i.Ic.tc(t,e)}))}))}))]}}))}))}function oo(t,e,n){return void 0===n&&(n=sn()),Object(a.b)(this,void 0,void 0,(function(){var r,i;return Object(a.d)(this,(function(o){switch(o.label){case 0:return[4,$i(t,te(Xr(e.bundledQuery)))];case 1:return r=o.sent(),[2,(i=v(t)).persistence.runTransaction(\"Save named query\",\"readwrite\",(function(t){var o=kn(e.readTime);if(r.Mt.u(o)>=0)return i.Eo.Bs(t,e);var a=r.$t(w.h,o);return i.dc=i.dc.Ht(a.targetId,a),i.fo.Ji(t,a).next((function(){return i.fo.Xi(t,r.targetId)})).next((function(){return i.fo.nr(t,n,r.targetId)})).next((function(){return i.Eo.Bs(t,e)}))}))]}}))}))}var ao=function(){function t(t){this.Kt=t,this.bc=new Map,this.vc=new Map}return t.prototype.Ms=function(t,e){return nr.resolve(this.bc.get(e))},t.prototype.Ls=function(t,e){var n;return this.bc.set(e.id,{id:(n=e).id,version:n.version,createTime:kn(n.createTime)}),nr.resolve()},t.prototype.$s=function(t,e){return nr.resolve(this.vc.get(e))},t.prototype.Bs=function(t,e){return this.vc.set(e.name,function(t){return{name:t.name,query:Xr(t.bundledQuery),readTime:kn(t.readTime)}}(e)),nr.resolve()},t}(),so=function(){function t(){this.Sc=new Je(uo.Dc),this.Cc=new Je(uo.xc)}return t.prototype.nt=function(){return this.Sc.nt()},t.prototype.sr=function(t,e){var n=new uo(t,e);this.Sc=this.Sc.add(n),this.Cc=this.Cc.add(n)},t.prototype.Nc=function(t,e){var n=this;t.forEach((function(t){return n.sr(t,e)}))},t.prototype.rr=function(t,e){this.Oc(new uo(t,e))},t.prototype.Fc=function(t,e){var n=this;t.forEach((function(t){return n.rr(t,e)}))},t.prototype.kc=function(t){var e=this,n=new H(new q([])),r=new uo(n,t),i=new uo(n,t+1),o=[];return this.Cc.Ae([r,i],(function(t){e.Oc(t),o.push(t.key)})),o},t.prototype.Mc=function(){var t=this;this.Sc.forEach((function(e){return t.Oc(e)}))},t.prototype.Oc=function(t){this.Sc=this.Sc.delete(t),this.Cc=this.Cc.delete(t)},t.prototype.Lc=function(t){var e=new H(new q([])),n=new uo(e,t),r=new uo(e,t+1),i=sn();return this.Cc.Ae([n,r],(function(t){i=i.add(t.key)})),i},t.prototype.ki=function(t){var e=new uo(t,0),n=this.Sc.Pe(e);return null!==n&&t.isEqual(n.key)},t}(),uo=function(){function t(t,e){this.key=t,this.$c=e}return t.Dc=function(t,e){return H.J(t.key,e.key)||m(t.$c,e.$c)},t.xc=function(t,e){return m(t.$c,e.$c)||H.J(t.key,e.key)},t}(),co=function(){function t(t,e){this.Ti=t,this.Ii=e,this.Ho=[],this.Bc=1,this.qc=new Je(uo.Dc)}return t.prototype.Ri=function(t){return nr.resolve(0===this.Ho.length)},t.prototype.Pi=function(t,e,n,r){var i=this.Bc;this.Bc++,this.Ho.length>0&&this.Ho[this.Ho.length-1];var o=new Ur(i,e,n,r);this.Ho.push(o);for(var a=0,s=r;a<s.length;a++){var u=s[a];this.qc=this.qc.add(new uo(u.key,i)),this.Ti.Us(t,u.key.path.Z())}return nr.resolve(o)},t.prototype.yi=function(t,e){return nr.resolve(this.Uc(e))},t.prototype.Vi=function(t,e){var n=e+1,r=this.Qc(n),i=r<0?0:r;return nr.resolve(this.Ho.length>i?this.Ho[i]:null)},t.prototype.pi=function(){return nr.resolve(0===this.Ho.length?-1:this.Bc-1)},t.prototype.bi=function(t){return nr.resolve(this.Ho.slice())},t.prototype.vi=function(t,e){var n=this,r=new uo(e,0),i=new uo(e,Number.POSITIVE_INFINITY),o=[];return this.qc.Ae([r,i],(function(t){var e=n.Uc(t.$c);o.push(e)})),nr.resolve(o)},t.prototype.Si=function(t,e){var n=this,r=new Je(m);return e.forEach((function(t){var e=new uo(t,0),i=new uo(t,Number.POSITIVE_INFINITY);n.qc.Ae([e,i],(function(t){r=r.add(t.$c)}))})),nr.resolve(this.Kc(r))},t.prototype.Ci=function(t,e){var n=e.path,r=n.length+1,i=n;H.Et(i)||(i=i.child(\"\"));var o=new uo(new H(i),0),a=new Je(m);return this.qc.Re((function(t){var e=t.key.path;return!!n.st(e)&&(e.length===r&&(a=a.add(t.$c)),!0)}),o),nr.resolve(this.Kc(a))},t.prototype.Kc=function(t){var e=this,n=[];return t.forEach((function(t){var r=e.Uc(t);null!==r&&n.push(r)})),n},t.prototype.xi=function(t,e){var n=this;d(0===this.jc(e.batchId,\"removed\")),this.Ho.shift();var r=this.qc;return nr.forEach(e.mutations,(function(i){var o=new uo(i.key,e.batchId);return r=r.delete(o),n.Ii.Oi(t,i.key)})).next((function(){n.qc=r}))},t.prototype.Ni=function(t){},t.prototype.ki=function(t,e){var n=new uo(e,0),r=this.qc.Pe(n);return nr.resolve(e.isEqual(r&&r.key))},t.prototype.Fi=function(t){return this.Ho.length,nr.resolve()},t.prototype.jc=function(t,e){return this.Qc(t)},t.prototype.Qc=function(t){return 0===this.Ho.length?0:t-this.Ho[0].batchId},t.prototype.Uc=function(t){var e=this.Qc(t);return e<0||e>=this.Ho.length?null:this.Ho[e]},t}(),lo=function(){function t(t,e){this.Ti=t,this.Wc=e,this.docs=new Ge(H.J),this.size=0}return t.prototype.ui=function(t,e,n){var r=e.key,i=this.docs.get(r),o=i?i.size:0,a=this.Wc(e);return this.docs=this.docs.Ht(r,{li:e,size:a,readTime:n}),this.size+=a-o,this.Ti.Us(t,r.path.Z())},t.prototype._i=function(t){var e=this.docs.get(t);e&&(this.docs=this.docs.remove(t),this.size-=e.size)},t.prototype.fi=function(t,e){var n=this.docs.get(e);return nr.resolve(n?n.li:null)},t.prototype.getEntries=function(t,e){var n=this,r=tn();return e.forEach((function(t){var e=n.docs.get(t);r=r.Ht(t,e?e.li:null)})),nr.resolve(r)},t.prototype.jr=function(t,e,n){for(var r=nn(),i=new H(e.path.child(\"\")),o=this.docs.ne(i);o.ae();){var a=o.ce(),s=a.key,u=a.value,c=u.li,l=u.readTime;if(!e.path.st(s.path))break;l.u(n)<=0||c instanceof Et&&oe(e,c)&&(r=r.Ht(c.key,c))}return nr.resolve(r)},t.prototype.Gc=function(t,e){return nr.forEach(this.docs,(function(t){return e(t)}))},t.prototype.Or=function(t){return new ho(this)},t.prototype.Mr=function(t){return nr.resolve(this.size)},t}(),ho=function(t){function e(e){var n=this;return(n=t.call(this)||this).Gr=e,n}return Object(a.c)(e,t),e.prototype.Ei=function(t){var e=this,n=[];return this.oi.forEach((function(r,i){i&&i.li?n.push(e.Gr.ui(t,i.li,e.ai(r))):e.Gr._i(r)})),nr.$n(n)},e.prototype.di=function(t,e){return this.Gr.fi(t,e)},e.prototype.wi=function(t,e){return this.Gr.getEntries(t,e)},e}(ci),fo=function(){function t(t){this.persistence=t,this.zc=new ui((function(t){return Ct(t)}),kt),this.lastRemoteSnapshotVersion=U.min(),this.highestTargetId=0,this.Hc=0,this.Jc=new so,this.targetCount=0,this.Yc=gi.$i()}return t.prototype.mn=function(t,e){return this.zc.forEach((function(t,n){return e(n)})),nr.resolve()},t.prototype.Ki=function(t){return nr.resolve(this.lastRemoteSnapshotVersion)},t.prototype.ji=function(t){return nr.resolve(this.Hc)},t.prototype.qi=function(t){return this.highestTargetId=this.Yc.next(),nr.resolve(this.highestTargetId)},t.prototype.Wi=function(t,e,n){return n&&(this.lastRemoteSnapshotVersion=n),e>this.Hc&&(this.Hc=e),nr.resolve()},t.prototype.zi=function(t){this.zc.set(t.target,t);var e=t.targetId;e>this.highestTargetId&&(this.Yc=new gi(e),this.highestTargetId=e),t.sequenceNumber>this.Hc&&(this.Hc=t.sequenceNumber)},t.prototype.Gi=function(t,e){return this.zi(e),this.targetCount+=1,nr.resolve()},t.prototype.Ji=function(t,e){return this.zi(e),nr.resolve()},t.prototype.Yi=function(t,e){return this.zc.delete(e.target),this.Jc.kc(e.targetId),this.targetCount-=1,nr.resolve()},t.prototype.Zi=function(t,e,n){var r=this,i=0,o=[];return this.zc.forEach((function(a,s){s.sequenceNumber<=e&&null===n.get(s.targetId)&&(r.zc.delete(a),o.push(r.Xi(t,s.targetId)),i++)})),nr.$n(o).next((function(){return i}))},t.prototype.tr=function(t){return nr.resolve(this.targetCount)},t.prototype.er=function(t,e){var n=this.zc.get(e)||null;return nr.resolve(n)},t.prototype.nr=function(t,e,n){return this.Jc.Nc(e,n),nr.resolve()},t.prototype.ir=function(t,e,n){this.Jc.Fc(e,n);var r=this.persistence.Ii,i=[];return r&&e.forEach((function(e){i.push(r.Oi(t,e))})),nr.$n(i)},t.prototype.Xi=function(t,e){return this.Jc.kc(e),nr.resolve()},t.prototype.cr=function(t,e){var n=this.Jc.Lc(e);return nr.resolve(n)},t.prototype.ki=function(t,e){return nr.resolve(this.Jc.ki(e))},t}(),po=function(){function t(t,e){var n=this;this.Xc={},this.io=new M(0),this.ro=!1,this.ro=!0,this.Ii=t(this),this.fo=new fo(this),this.Ti=new ei,this.wo=function(t,e){return new lo(t,(function(t){return n.Ii.Zc(t)}))}(this.Ti),this.Kt=new qr(e),this.Eo=new ao(this.Kt)}return t.prototype.start=function(){return Promise.resolve()},t.prototype.Lo=function(){return this.ro=!1,Promise.resolve()},Object.defineProperty(t.prototype,\"Tr\",{get:function(){return this.ro},enumerable:!1,configurable:!0}),t.prototype.yo=function(){},t.prototype.Vo=function(){},t.prototype.jo=function(){return this.Ti},t.prototype.Ko=function(t){var e=this.Xc[t.R()];return e||(e=new co(this.Ti,this.Ii),this.Xc[t.R()]=e),e},t.prototype.Dr=function(){return this.fo},t.prototype.Fr=function(){return this.wo},t.prototype.Wo=function(){return this.Eo},t.prototype.runTransaction=function(t,e,n){var r=this;c(\"MemoryPersistence\",\"Starting transaction:\",t);var i=new vo(this.io.next());return this.Ii.ta(),n(i).next((function(t){return r.Ii.ea(i).next((function(){return t}))})).Mn().then((function(t){return i.ps(),t}))},t.prototype.na=function(t,e){return nr.Bn(Object.values(this.Xc).map((function(n){return function(){return n.ki(t,e)}})))},t}(),vo=function(t){function e(e){var n=this;return(n=t.call(this)||this).vs=e,n}return Object(a.c)(e,t),e}(vr),yo=function(){function t(t){this.persistence=t,this.sa=new so,this.ia=null}return t.ra=function(e){return new t(e)},Object.defineProperty(t.prototype,\"oa\",{get:function(){if(this.ia)return this.ia;throw p()},enumerable:!1,configurable:!0}),t.prototype.sr=function(t,e,n){return this.sa.sr(n,e),this.oa.delete(n.toString()),nr.resolve()},t.prototype.rr=function(t,e,n){return this.sa.rr(n,e),this.oa.add(n.toString()),nr.resolve()},t.prototype.Oi=function(t,e){return this.oa.add(e.toString()),nr.resolve()},t.prototype.removeTarget=function(t,e){var n=this;this.sa.kc(e.targetId).forEach((function(t){return n.oa.add(t.toString())}));var r=this.persistence.Dr();return r.cr(t,e.targetId).next((function(t){t.forEach((function(t){return n.oa.add(t.toString())}))})).next((function(){return r.Yi(t,e)}))},t.prototype.ta=function(){this.ia=new Set},t.prototype.ea=function(t){var e=this,n=this.persistence.Fr().Or();return nr.forEach(this.oa,(function(r){var i=H.ft(r);return e.ca(t,i).next((function(t){t||n._i(i)}))})).next((function(){return e.ia=null,n.apply(t)}))},t.prototype.kr=function(t,e){var n=this;return this.ca(t,e).next((function(t){t?n.oa.delete(e.toString()):n.oa.add(e.toString())}))},t.prototype.Zc=function(t){return 0},t.prototype.ca=function(t,e){var n=this;return nr.Bn([function(){return nr.resolve(n.sa.ki(e))},function(){return n.persistence.Dr().ki(t,e)},function(){return n.persistence.na(t,e)}])},t}();function go(t,e){return\"firestore_clients_\"+t+\"_\"+e}function mo(t,e,n){var r=\"firestore_mutations_\"+t+\"_\"+n;return e.A()&&(r+=\"_\"+e.uid),r}function bo(t,e){return\"firestore_targets_\"+t+\"_\"+e}var _o=function(){function t(t,e,n,r){this.user=t,this.batchId=e,this.state=n,this.error=r}return t.aa=function(e,n,r){var i=JSON.parse(r),o=\"object\"==typeof i&&-1!==[\"pending\",\"acknowledged\",\"rejected\"].indexOf(i.state)&&(void 0===i.error||\"object\"==typeof i.error),a=void 0;return o&&i.error&&(o=\"string\"==typeof i.error.message&&\"string\"==typeof i.error.code)&&(a=new T(i.error.code,i.error.message)),o?new t(e,n,i.state,a):(l(\"SharedClientState\",\"Failed to parse mutation state for ID '\"+n+\"': \"+r),null)},t.prototype.ua=function(){var t={state:this.state,updateTimeMs:Date.now()};return this.error&&(t.error={code:this.error.code,message:this.error.message}),JSON.stringify(t)},t}(),wo=function(){function t(t,e,n){this.targetId=t,this.state=e,this.error=n}return t.aa=function(e,n){var r=JSON.parse(n),i=\"object\"==typeof r&&-1!==[\"not-current\",\"current\",\"rejected\"].indexOf(r.state)&&(void 0===r.error||\"object\"==typeof r.error),o=void 0;return i&&r.error&&(i=\"string\"==typeof r.error.message&&\"string\"==typeof r.error.code)&&(o=new T(r.error.code,r.error.message)),i?new t(e,r.state,o):(l(\"SharedClientState\",\"Failed to parse target state for ID '\"+e+\"': \"+n),null)},t.prototype.ua=function(){var t={state:this.state,updateTimeMs:Date.now()};return this.error&&(t.error={code:this.error.code,message:this.error.message}),JSON.stringify(t)},t}(),Eo=function(){function t(t,e){this.clientId=t,this.activeTargetIds=e}return t.aa=function(e,n){for(var r=JSON.parse(n),i=\"object\"==typeof r&&r.activeTargetIds instanceof Array,o=cn(),a=0;i&&a<r.activeTargetIds.length;++a)i=it(r.activeTargetIds[a]),o=o.add(r.activeTargetIds[a]);return i?new t(e,o):(l(\"SharedClientState\",\"Failed to parse client data for instance '\"+e+\"': \"+n),null)},t}(),To=function(){function t(t,e){this.clientId=t,this.onlineState=e}return t.aa=function(e){var n=JSON.parse(e);return\"object\"==typeof n&&-1!==[\"Unknown\",\"Online\",\"Offline\"].indexOf(n.onlineState)&&\"string\"==typeof n.clientId?new t(n.clientId,n.onlineState):(l(\"SharedClientState\",\"Failed to parse online state: \"+e),null)},t}(),Io=function(){function t(){this.activeTargetIds=cn()}return t.prototype.ha=function(t){this.activeTargetIds=this.activeTargetIds.add(t)},t.prototype.la=function(t){this.activeTargetIds=this.activeTargetIds.delete(t)},t.prototype.ua=function(){var t={activeTargetIds:this.activeTargetIds.rt(),updateTimeMs:Date.now()};return JSON.stringify(t)},t}(),So=function(){function t(t,e,n,r,i){this.window=t,this.eo=e,this.persistenceKey=n,this._a=r,this.fa=null,this.da=null,this.L=null,this.wa=this.Ea.bind(this),this.Ta=new Ge(m),this.Tr=!1,this.Ia=[];var o=n.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");this.storage=this.window.localStorage,this.currentUser=i,this.ma=go(this.persistenceKey,this._a),this.Aa=function(t){return\"firestore_sequence_number_\"+t}(this.persistenceKey),this.Ta=this.Ta.Ht(this._a,new Io),this.Ra=new RegExp(\"^firestore_clients_\"+o+\"_([^_]*)$\"),this.Pa=new RegExp(\"^firestore_mutations_\"+o+\"_(\\\\d+)(?:_(.*))?$\"),this.ya=new RegExp(\"^firestore_targets_\"+o+\"_(\\\\d+)$\"),this.ga=function(t){return\"firestore_online_state_\"+t}(this.persistenceKey),this.Va=function(t){return\"firestore_bundle_loaded_\"+t}(this.persistenceKey),this.window.addEventListener(\"storage\",this.wa)}return t.jn=function(t){return!(!t||!t.localStorage)},t.prototype.start=function(){return Object(a.b)(this,void 0,void 0,(function(){var t,e,n,r,i,o,s,u,c,l,h,f=this;return Object(a.d)(this,(function(a){switch(a.label){case 0:return[4,this.fa.Qo()];case 1:for(t=a.sent(),e=0,n=t;e<n.length;e++)(r=n[e])!==this._a&&(i=this.getItem(go(this.persistenceKey,r)))&&(o=Eo.aa(r,i))&&(this.Ta=this.Ta.Ht(o.clientId,o));for(this.pa(),(s=this.storage.getItem(this.ga))&&(u=this.ba(s))&&this.va(u),c=0,l=this.Ia;c<l.length;c++)h=l[c],this.Ea(h);return this.Ia=[],this.window.addEventListener(\"unload\",(function(){return f.Lo()})),this.Tr=!0,[2]}}))}))},t.prototype.q=function(t){this.setItem(this.Aa,JSON.stringify(t))},t.prototype.Sa=function(){return this.Da(this.Ta)},t.prototype.Ca=function(t){var e=!1;return this.Ta.forEach((function(n,r){r.activeTargetIds.has(t)&&(e=!0)})),e},t.prototype.xa=function(t){this.Na(t,\"pending\")},t.prototype.Oa=function(t,e,n){this.Na(t,e,n),this.Fa(t)},t.prototype.ka=function(t){var e=\"not-current\";if(this.Ca(t)){var n=this.storage.getItem(bo(this.persistenceKey,t));if(n){var r=wo.aa(t,n);r&&(e=r.state)}}return this.Ma.ha(t),this.pa(),e},t.prototype.La=function(t){this.Ma.la(t),this.pa()},t.prototype.$a=function(t){return this.Ma.activeTargetIds.has(t)},t.prototype.Ba=function(t){this.removeItem(bo(this.persistenceKey,t))},t.prototype.qa=function(t,e,n){this.Ua(t,e,n)},t.prototype.Qa=function(t,e,n){var r=this;e.forEach((function(t){r.Fa(t)})),this.currentUser=t,n.forEach((function(t){r.xa(t)}))},t.prototype.Ka=function(t){this.ja(t)},t.prototype.Wa=function(){this.Ga()},t.prototype.Lo=function(){this.Tr&&(this.window.removeEventListener(\"storage\",this.wa),this.removeItem(this.ma),this.Tr=!1)},t.prototype.getItem=function(t){var e=this.storage.getItem(t);return c(\"SharedClientState\",\"READ\",t,e),e},t.prototype.setItem=function(t,e){c(\"SharedClientState\",\"SET\",t,e),this.storage.setItem(t,e)},t.prototype.removeItem=function(t){c(\"SharedClientState\",\"REMOVE\",t),this.storage.removeItem(t)},t.prototype.Ea=function(t){var e=this,n=t;if(n.storageArea===this.storage){if(c(\"SharedClientState\",\"EVENT\",n.key,n.newValue),n.key===this.ma)return void l(\"Received WebStorage notification for local change. Another client might have garbage-collected our state\");this.eo.bo((function(){return Object(a.b)(e,void 0,void 0,(function(){var t,e,r,i,o,s;return Object(a.d)(this,(function(a){if(this.Tr){if(null!==n.key)if(this.Ra.test(n.key)){if(null==n.newValue)return t=this.za(n.key),[2,this.Ha(t,null)];if(e=this.Ja(n.key,n.newValue))return[2,this.Ha(e.clientId,e)]}else if(this.Pa.test(n.key)){if(null!==n.newValue&&(r=this.Ya(n.key,n.newValue)))return[2,this.Xa(r)]}else if(this.ya.test(n.key)){if(null!==n.newValue&&(i=this.Za(n.key,n.newValue)))return[2,this.tu(i)]}else if(n.key===this.ga){if(null!==n.newValue&&(o=this.ba(n.newValue)))return[2,this.va(o)]}else if(n.key===this.Aa)(s=function(t){var e=M.U;if(null!=t)try{var n=JSON.parse(t);d(\"number\"==typeof n),e=n}catch(t){l(\"SharedClientState\",\"Failed to read sequence number from WebStorage\",t)}return e}(n.newValue))!==M.U&&this.L(s);else if(n.key===this.Va)return[2,this.fa.eu()]}else this.Ia.push(n);return[2]}))}))}))}},Object.defineProperty(t.prototype,\"Ma\",{get:function(){return this.Ta.get(this._a)},enumerable:!1,configurable:!0}),t.prototype.pa=function(){this.setItem(this.ma,this.Ma.ua())},t.prototype.Na=function(t,e,n){var r=new _o(this.currentUser,t,e,n),i=mo(this.persistenceKey,this.currentUser,t);this.setItem(i,r.ua())},t.prototype.Fa=function(t){var e=mo(this.persistenceKey,this.currentUser,t);this.removeItem(e)},t.prototype.ja=function(t){var e={clientId:this._a,onlineState:t};this.storage.setItem(this.ga,JSON.stringify(e))},t.prototype.Ua=function(t,e,n){var r=bo(this.persistenceKey,t),i=new wo(t,e,n);this.setItem(r,i.ua())},t.prototype.Ga=function(){this.setItem(this.Va,\"value-not-used\")},t.prototype.za=function(t){var e=this.Ra.exec(t);return e?e[1]:null},t.prototype.Ja=function(t,e){var n=this.za(t);return Eo.aa(n,e)},t.prototype.Ya=function(t,e){var n=this.Pa.exec(t),r=Number(n[1]),i=void 0!==n[2]?n[2]:null;return _o.aa(new P(i),r,e)},t.prototype.Za=function(t,e){var n=this.ya.exec(t),r=Number(n[1]);return wo.aa(r,e)},t.prototype.ba=function(t){return To.aa(t)},t.prototype.Xa=function(t){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(e){return t.user.uid===this.currentUser.uid?[2,this.fa.nu(t.batchId,t.state,t.error)]:(c(\"SharedClientState\",\"Ignoring mutation for non-active user \"+t.user.uid),[2])}))}))},t.prototype.tu=function(t){return this.fa.su(t.targetId,t.state,t.error)},t.prototype.Ha=function(t,e){var n=this,r=e?this.Ta.Ht(t,e):this.Ta.remove(t),i=this.Da(this.Ta),o=this.Da(r),a=[],s=[];return o.forEach((function(t){i.has(t)||a.push(t)})),i.forEach((function(t){o.has(t)||s.push(t)})),this.fa.iu(a,s).then((function(){n.Ta=r}))},t.prototype.va=function(t){this.Ta.get(t.clientId)&&this.da(t.onlineState)},t.prototype.Da=function(t){var e=cn();return t.forEach((function(t,n){e=e.ye(n.activeTargetIds)})),e},t}(),Oo=function(){function t(){this.ru=new Io,this.ou={},this.da=null,this.L=null}return t.prototype.xa=function(t){},t.prototype.Oa=function(t,e,n){},t.prototype.ka=function(t){return this.ru.ha(t),this.ou[t]||\"not-current\"},t.prototype.qa=function(t,e,n){this.ou[t]=e},t.prototype.La=function(t){this.ru.la(t)},t.prototype.$a=function(t){return this.ru.activeTargetIds.has(t)},t.prototype.Ba=function(t){delete this.ou[t]},t.prototype.Sa=function(){return this.ru.activeTargetIds},t.prototype.Ca=function(t){return this.ru.activeTargetIds.has(t)},t.prototype.start=function(){return this.ru=new Io,Promise.resolve()},t.prototype.Qa=function(t,e,n){},t.prototype.Ka=function(t){},t.prototype.Lo=function(){},t.prototype.q=function(t){},t.prototype.Wa=function(){},t}(),Co=function(){function t(){}return t.prototype.cu=function(t){},t.prototype.Lo=function(){},t}(),ko=function(){function t(){var t=this;this.au=function(){return t.uu()},this.hu=function(){return t.lu()},this._u=[],this.fu()}return t.prototype.cu=function(t){this._u.push(t)},t.prototype.Lo=function(){window.removeEventListener(\"online\",this.au),window.removeEventListener(\"offline\",this.hu)},t.prototype.fu=function(){window.addEventListener(\"online\",this.au),window.addEventListener(\"offline\",this.hu)},t.prototype.uu=function(){c(\"ConnectivityMonitor\",\"Network connectivity changed: AVAILABLE\");for(var t=0,e=this._u;t<e.length;t++)(0,e[t])(0)},t.prototype.lu=function(){c(\"ConnectivityMonitor\",\"Network connectivity changed: UNAVAILABLE\");for(var t=0,e=this._u;t<e.length;t++)(0,e[t])(1)},t.jn=function(){return\"undefined\"!=typeof window&&void 0!==window.addEventListener&&void 0!==window.removeEventListener},t}(),No={BatchGetDocuments:\"batchGet\",Commit:\"commit\",RunQuery:\"runQuery\"},Ao=function(){function t(t){this.du=t.du,this.wu=t.wu}return t.prototype.Eu=function(t){this.Tu=t},t.prototype.Iu=function(t){this.mu=t},t.prototype.onMessage=function(t){this.Au=t},t.prototype.close=function(){this.wu()},t.prototype.send=function(t){this.du(t)},t.prototype.Ru=function(){this.Tu()},t.prototype.Pu=function(t){this.mu(t)},t.prototype.yu=function(t){this.Au(t)},t}(),Po=function(t){function e(e){var n=this;return(n=t.call(this,e)||this).forceLongPolling=e.forceLongPolling,n.I=e.I,n}return Object(a.c)(e,t),e.prototype.Du=function(t,e,n,r){return new Promise((function(i,a){var s=new o.f;s.listenOnce(o.c.COMPLETE,(function(){try{switch(s.getLastErrorCode()){case o.a.NO_ERROR:var e=s.getResponseJson();c(\"Connection\",\"XHR received:\",JSON.stringify(e)),i(e);break;case o.a.TIMEOUT:c(\"Connection\",'RPC \"'+t+'\" timed out'),a(new T(E.DEADLINE_EXCEEDED,\"Request time out\"));break;case o.a.HTTP_ERROR:var n=s.getStatus();if(c(\"Connection\",'RPC \"'+t+'\" failed with status:',n,\"response text:\",s.getResponseText()),n>0){var r=s.getResponseJson().error;if(r&&r.status&&r.message){var u=function(t){var e=t.toLowerCase().replace(/_/g,\"-\");return Object.values(E).indexOf(e)>=0?e:E.UNKNOWN}(r.status);a(new T(u,r.message))}else a(new T(E.UNKNOWN,\"Server responded with status \"+s.getStatus()))}else a(new T(E.UNAVAILABLE,\"Connection failed.\"));break;default:p()}}finally{c(\"Connection\",'RPC \"'+t+'\" completed.')}}));var u=JSON.stringify(r);s.send(e,\"POST\",u,n,15)}))},e.prototype.xu=function(t,e){var n=[this.Vu,\"/\",\"google.firestore.v1.Firestore\",\"/\",t,\"/channel\"],r=Object(o.g)(),a=Object(o.h)(),s={httpSessionIdParam:\"gsessionid\",initMessageHeaders:{},messageUrlParams:{database:\"projects/\"+this.T.projectId+\"/databases/\"+this.T.database},sendRawJson:!0,supportsCrossDomainXhr:!0,internalChannelParams:{forwardChannelRequestTimeoutMs:6e5},forceLongPolling:this.forceLongPolling,detectBufferingProxy:this.I};this.Su(s.initMessageHeaders,e),Object(i.x)()||Object(i.A)()||Object(i.t)()||Object(i.v)()||Object(i.B)()||Object(i.s)()||(s.httpHeadersOverwriteParam=\"$httpHeaders\");var u=n.join(\"\");c(\"Connection\",\"Creating WebChannel: \"+u,s);var l=r.createWebChannel(u,s),f=!1,p=!1,v=new Ao({du:function(t){p?c(\"Connection\",\"Not sending because WebChannel is closed:\",t):(f||(c(\"Connection\",\"Opening WebChannel transport.\"),l.open(),f=!0),c(\"Connection\",\"WebChannel sending:\",t),l.send(t))},wu:function(){return l.close()}}),y=function(t,e,n){t.listen(e,(function(t){try{n(t)}catch(t){setTimeout((function(){throw t}),0)}}))};return y(l,o.e.EventType.OPEN,(function(){p||c(\"Connection\",\"WebChannel transport opened.\")})),y(l,o.e.EventType.CLOSE,(function(){p||(p=!0,c(\"Connection\",\"WebChannel transport closed\"),v.Pu())})),y(l,o.e.EventType.ERROR,(function(t){p||(p=!0,h(\"Connection\",\"WebChannel transport errored:\",t),v.Pu(new T(E.UNAVAILABLE,\"The operation could not be completed\")))})),y(l,o.e.EventType.MESSAGE,(function(t){var e;if(!p){var n=t.data[0];d(!!n);var r=n,i=r.error||(null===(e=r[0])||void 0===e?void 0:e.error);if(i){c(\"Connection\",\"WebChannel received error:\",i);var o=i.status,a=function(t){var e=Ve[t];if(void 0!==e)return We(e)}(o),s=i.message;void 0===a&&(a=E.INTERNAL,s=\"Unknown error status: \"+o+\" with message \"+i.message),p=!0,v.Pu(new T(a,s)),l.close()}else c(\"Connection\",\"WebChannel received:\",n),v.yu(n)}})),y(a,o.b.STAT_EVENT,(function(t){t.stat===o.d.PROXY?c(\"Connection\",\"Detected buffering proxy\"):t.stat===o.d.NOPROXY&&c(\"Connection\",\"Detected no buffering proxy\")})),setTimeout((function(){v.Ru()}),0),v},e}(function(){function t(t){this.gu=t,this.T=t.T;var e=t.ssl?\"https\":\"http\";this.Vu=e+\"://\"+t.host,this.pu=\"projects/\"+this.T.projectId+\"/databases/\"+this.T.database+\"/documents\"}return t.prototype.bu=function(t,e,n,r){var i=this.vu(t,e);c(\"RestConnection\",\"Sending: \",i,n);var o={};return this.Su(o,r),this.Du(t,i,o,n).then((function(t){return c(\"RestConnection\",\"Received: \",t),t}),(function(e){throw h(\"RestConnection\",t+\" failed with error: \",e,\"url: \",i,\"request:\",n),e}))},t.prototype.Cu=function(t,e,n,r){return this.bu(t,e,n,r)},t.prototype.Su=function(t,e){if(t[\"X-Goog-Api-Client\"]=\"gl-js/ fire/8.2.2\",t[\"Content-Type\"]=\"text/plain\",e)for(var n in e.V)e.V.hasOwnProperty(n)&&(t[n]=e.V[n])},t.prototype.vu=function(t,e){var n=No[t];return this.Vu+\"/v1/\"+e+\":\"+n},t}());function Ro(){return\"undefined\"!=typeof window?window:null}function jo(){return\"undefined\"!=typeof document?document:null}function xo(t){return new In(t,!0)}var Do=function(){function t(t,e,n,r,i){void 0===n&&(n=1e3),void 0===r&&(r=1.5),void 0===i&&(i=6e4),this.eo=t,this.ds=e,this.Nu=n,this.Ou=r,this.Fu=i,this.ku=0,this.Mu=null,this.Lu=Date.now(),this.reset()}return t.prototype.reset=function(){this.ku=0},t.prototype.$u=function(){this.ku=this.Fu},t.prototype.Bu=function(t){var e=this;this.cancel();var n=Math.floor(this.ku+this.qu()),r=Math.max(0,Date.now()-this.Lu),i=Math.max(0,n-r);i>0&&c(\"ExponentialBackoff\",\"Backing off for \"+i+\" ms (base delay: \"+this.ku+\" ms, delay with jitter: \"+n+\" ms, last attempt: \"+r+\" ms ago)\"),this.Mu=this.eo.Ir(this.ds,i,(function(){return e.Lu=Date.now(),t()})),this.ku*=this.Ou,this.ku<this.Nu&&(this.ku=this.Nu),this.ku>this.Fu&&(this.ku=this.Fu)},t.prototype.Uu=function(){null!==this.Mu&&(this.Mu.Ps(),this.Mu=null)},t.prototype.cancel=function(){null!==this.Mu&&(this.Mu.cancel(),this.Mu=null)},t.prototype.qu=function(){return(Math.random()-.5)*this.ku},t}(),Lo=function(){function t(t,e,n,r,i,o){this.eo=t,this.Qu=n,this.Ku=r,this.ju=i,this.listener=o,this.state=0,this.Wu=0,this.Gu=null,this.stream=null,this.zu=new Do(t,e)}return t.prototype.Hu=function(){return 1===this.state||2===this.state||4===this.state},t.prototype.Ju=function(){return 2===this.state},t.prototype.start=function(){3!==this.state?this.auth():this.Yu()},t.prototype.stop=function(){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(t){switch(t.label){case 0:return this.Hu()?[4,this.close(0)]:[3,2];case 1:t.sent(),t.label=2;case 2:return[2]}}))}))},t.prototype.Xu=function(){this.state=0,this.zu.reset()},t.prototype.Zu=function(){var t=this;this.Ju()&&null===this.Gu&&(this.Gu=this.eo.Ir(this.Qu,6e4,(function(){return t.th()})))},t.prototype.eh=function(t){this.nh(),this.stream.send(t)},t.prototype.th=function(){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(t){return this.Ju()?[2,this.close(0)]:[2]}))}))},t.prototype.nh=function(){this.Gu&&(this.Gu.cancel(),this.Gu=null)},t.prototype.close=function(t,e){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(n){switch(n.label){case 0:return this.nh(),this.zu.cancel(),this.Wu++,3!==t?this.zu.reset():e&&e.code===E.RESOURCE_EXHAUSTED?(l(e.toString()),l(\"Using maximum backoff delay to prevent overloading the backend.\"),this.zu.$u()):e&&e.code===E.UNAUTHENTICATED&&this.ju.v(),null!==this.stream&&(this.sh(),this.stream.close(),this.stream=null),this.state=t,[4,this.listener.Iu(e)];case 1:return n.sent(),[2]}}))}))},t.prototype.sh=function(){},t.prototype.auth=function(){var t=this;this.state=1;var e=this.ih(this.Wu),n=this.Wu;this.ju.getToken().then((function(e){t.Wu===n&&t.rh(e)}),(function(n){e((function(){var e=new T(E.UNKNOWN,\"Fetching auth token failed: \"+n.message);return t.oh(e)}))}))},t.prototype.rh=function(t){var e=this,n=this.ih(this.Wu);this.stream=this.ah(t),this.stream.Eu((function(){n((function(){return e.state=2,e.listener.Eu()}))})),this.stream.Iu((function(t){n((function(){return e.oh(t)}))})),this.stream.onMessage((function(t){n((function(){return e.onMessage(t)}))}))},t.prototype.Yu=function(){var t=this;this.state=4,this.zu.Bu((function(){return Object(a.b)(t,void 0,void 0,(function(){return Object(a.d)(this,(function(t){return this.state=0,this.start(),[2]}))}))}))},t.prototype.oh=function(t){return c(\"PersistentStream\",\"close with error: \"+t),this.stream=null,this.close(3,t)},t.prototype.ih=function(t){var e=this;return function(n){e.eo.ys((function(){return e.Wu===t?n():(c(\"PersistentStream\",\"stream callback skipped by getCloseGuardedDispatcher.\"),Promise.resolve())}))}},t}(),Mo=function(t){function e(e,n,r,i,o){var a=this;return(a=t.call(this,e,\"listen_stream_connection_backoff\",\"listen_stream_idle\",n,r,o)||this).Kt=i,a}return Object(a.c)(e,t),e.prototype.ah=function(t){return this.Ku.xu(\"Listen\",t)},e.prototype.onMessage=function(t){this.zu.reset();var e=function(t,e){var n;if(\"targetChange\"in e){e.targetChange;var r=function(t){return\"NO_CHANGE\"===t?0:\"ADD\"===t?1:\"REMOVE\"===t?2:\"CURRENT\"===t?3:\"RESET\"===t?4:p()}(e.targetChange.targetChangeType||\"NO_CHANGE\"),i=e.targetChange.targetIds||[],o=function(t,e){return t.qt?(d(void 0===e||\"string\"==typeof e),w.fromBase64String(e||\"\")):(d(void 0===e||e instanceof Uint8Array),w.fromUint8Array(e||new Uint8Array))}(t,e.targetChange.resumeToken),a=(s=e.targetChange.cause)&&function(t){var e=void 0===t.code?E.UNKNOWN:We(t.code);return new T(e,t.message||\"\")}(s);n=new gn(r,i,o,a||null)}else if(\"documentChange\"in e){e.documentChange,(r=e.documentChange).document,r.document.name,r.document.updateTime,i=Rn(t,r.document.name),o=kn(r.document.updateTime);var s=new mt({mapValue:{fields:r.document.fields}}),u=(a=new Et(i,o,s,{}),r.targetIds||[]),c=r.removedTargetIds||[];n=new vn(u,c,a.key,a)}else if(\"documentDelete\"in e)e.documentDelete,(r=e.documentDelete).document,i=Rn(t,r.document),o=r.readTime?kn(r.readTime):U.min(),s=new Tt(i,o),a=r.removedTargetIds||[],n=new vn([],a,s.key,s);else if(\"documentRemove\"in e)e.documentRemove,(r=e.documentRemove).document,i=Rn(t,r.document),o=r.removedTargetIds||[],n=new vn([],o,i,null);else{if(!(\"filter\"in e))return p();e.filter;var l=e.filter;l.targetId,r=l.count||0,i=new He(r),o=l.targetId,n=new yn(o,i)}return n}(this.Kt,t),n=function(t){if(!(\"targetChange\"in t))return U.min();var e=t.targetChange;return e.targetIds&&e.targetIds.length?U.min():e.readTime?kn(e.readTime):U.min()}(t);return this.listener.uh(e,n)},e.prototype.hh=function(t){var e={};e.database=Dn(this.Kt),e.addTarget=function(t,e){var n,r=e.target;return(n=Nt(r)?{documents:qn(t,r)}:{query:Bn(t,r)}).targetId=e.targetId,e.resumeToken.o()>0?n.resumeToken=On(t,e.resumeToken):e.Mt.u(U.min())>0&&(n.readTime=Sn(t,e.Mt.G())),n}(this.Kt,t);var n=function(t,e){var n=function(t,e){switch(e){case 0:return null;case 1:return\"existence-filter-mismatch\";case 2:return\"limbo-document\";default:return p()}}(0,e.kt);return null==n?null:{\"goog-listen-tags\":n}}(this.Kt,t);n&&(e.labels=n),this.eh(e)},e.prototype.lh=function(t){var e={};e.database=Dn(this.Kt),e.removeTarget=t,this.eh(e)},e}(Lo),Fo=function(t){function e(e,n,r,i,o){var a=this;return(a=t.call(this,e,\"write_stream_connection_backoff\",\"write_stream_idle\",n,r,o)||this).Kt=i,a._h=!1,a}return Object(a.c)(e,t),Object.defineProperty(e.prototype,\"fh\",{get:function(){return this._h},enumerable:!1,configurable:!0}),e.prototype.start=function(){this._h=!1,this.lastStreamToken=void 0,t.prototype.start.call(this)},e.prototype.sh=function(){this._h&&this.dh([])},e.prototype.ah=function(t){return this.Ku.xu(\"Write\",t)},e.prototype.onMessage=function(t){if(d(!!t.streamToken),this.lastStreamToken=t.streamToken,this._h){this.zu.reset();var e=function(t,e){return t&&t.length>0?(d(void 0!==e),t.map((function(t){return function(t,e){var n=t.updateTime?kn(t.updateTime):kn(e);n.isEqual(U.min())&&(n=kn(e));var r=null;return t.transformResults&&t.transformResults.length>0&&(r=t.transformResults),new Se(n,r)}(t,e)}))):[]}(t.writeResults,t.commitTime),n=kn(t.commitTime);return this.listener.wh(n,e)}return d(!t.writeResults||0===t.writeResults.length),this._h=!0,this.listener.Eh()},e.prototype.Th=function(){var t={};t.database=Dn(this.Kt),this.eh(t)},e.prototype.dh=function(t){var e=this,n={streamToken:this.lastStreamToken,writes:t.map((function(t){return Un(e.Kt,t)}))};this.eh(n)},e}(Lo),Uo=function(t){function e(e,n,r){var i=this;return(i=t.call(this)||this).credentials=e,i.Ku=n,i.Kt=r,i.Ih=!1,i}return Object(a.c)(e,t),e.prototype.mh=function(){if(this.Ih)throw new T(E.FAILED_PRECONDITION,\"The client has already been terminated.\")},e.prototype.bu=function(t,e,n){var r=this;return this.mh(),this.credentials.getToken().then((function(i){return r.Ku.bu(t,e,n,i)})).catch((function(t){throw t.code===E.UNAUTHENTICATED&&r.credentials.v(),t}))},e.prototype.Cu=function(t,e,n){var r=this;return this.mh(),this.credentials.getToken().then((function(i){return r.Ku.Cu(t,e,n,i)})).catch((function(t){throw t.code===E.UNAUTHENTICATED&&r.credentials.v(),t}))},e.prototype.terminate=function(){this.Ih=!1},e}((function(){})),Vo=function(){function t(t,e){this.fs=t,this.da=e,this.state=\"Unknown\",this.Ah=0,this.Rh=null,this.Ph=!0}return t.prototype.yh=function(){var t=this;0===this.Ah&&(this.gh(\"Unknown\"),this.Rh=this.fs.Ir(\"online_state_timeout\",1e4,(function(){return t.Rh=null,t.Vh(\"Backend didn't respond within 10 seconds.\"),t.gh(\"Offline\"),Promise.resolve()})))},t.prototype.ph=function(t){\"Online\"===this.state?this.gh(\"Unknown\"):(this.Ah++,this.Ah>=1&&(this.bh(),this.Vh(\"Connection failed 1 times. Most recent error: \"+t.toString()),this.gh(\"Offline\")))},t.prototype.set=function(t){this.bh(),this.Ah=0,\"Online\"===t&&(this.Ph=!1),this.gh(t)},t.prototype.gh=function(t){t!==this.state&&(this.state=t,this.da(t))},t.prototype.Vh=function(t){var e=\"Could not reach Cloud Firestore backend. \"+t+\"\\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.\";this.Ph?(l(e),this.Ph=!1):c(\"OnlineStateTracker\",e)},t.prototype.bh=function(){null!==this.Rh&&(this.Rh.cancel(),this.Rh=null)},t}(),qo=function(t,e,n,r,i){var o=this;this.Sh=t,this.Dh=e,this.fs=n,this.Ch={},this.xh=[],this.Nh=new Map,this.Oh=new Set,this.Fh=[],this.kh=i,this.kh.cu((function(t){n.ys((function(){return Object(a.b)(o,void 0,void 0,(function(){return Object(a.d)(this,(function(t){switch(t.label){case 0:return Jo(this)?(c(\"RemoteStore\",\"Restarting streams for network reachability change.\"),[4,function(t){return Object(a.b)(this,void 0,void 0,(function(){var e;return Object(a.d)(this,(function(n){switch(n.label){case 0:return(e=v(t)).Oh.add(4),[4,zo(e)];case 1:return n.sent(),e.Mh.set(\"Unknown\"),e.Oh.delete(4),[4,Bo(e)];case 2:return n.sent(),[2]}}))}))}(this)]):[3,2];case 1:t.sent(),t.label=2;case 2:return[2]}}))}))}))})),this.Mh=new Vo(n,r)};function Bo(t){return Object(a.b)(this,void 0,void 0,(function(){var e,n;return Object(a.d)(this,(function(r){switch(r.label){case 0:if(!Jo(t))return[3,4];e=0,n=t.Fh,r.label=1;case 1:return e<n.length?[4,(0,n[e])(!0)]:[3,4];case 2:r.sent(),r.label=3;case 3:return e++,[3,1];case 4:return[2]}}))}))}function zo(t){return Object(a.b)(this,void 0,void 0,(function(){var e,n;return Object(a.d)(this,(function(r){switch(r.label){case 0:e=0,n=t.Fh,r.label=1;case 1:return e<n.length?[4,(0,n[e])(!1)]:[3,4];case 2:r.sent(),r.label=3;case 3:return e++,[3,1];case 4:return[2]}}))}))}function Ho(t,e){var n=v(t);n.Nh.has(e.targetId)||(n.Nh.set(e.targetId,e),Yo(n)?Qo(n):ha(n).Ju()&&Wo(n,e))}function Ko(t,e){var n=v(t),r=ha(n);n.Nh.delete(e),r.Ju()&&Go(n,e),0===n.Nh.size&&(r.Ju()?r.Zu():Jo(n)&&n.Mh.set(\"Unknown\"))}function Wo(t,e){t.Lh.cn(e.targetId),ha(t).hh(e)}function Go(t,e){t.Lh.cn(e),ha(t).lh(e)}function Qo(t){t.Lh=new bn({Sn:function(e){return t.Ch.Sn(e)},Dn:function(e){return t.Nh.get(e)||null}}),ha(t).start(),t.Mh.yh()}function Yo(t){return Jo(t)&&!ha(t).Hu()&&t.Nh.size>0}function Jo(t){return 0===v(t).Oh.size}function Xo(t){t.Lh=void 0}function $o(t){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(e){return t.Nh.forEach((function(e,n){Wo(t,e)})),[2]}))}))}function Zo(t,e){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(n){return Xo(t),Yo(t)?(t.Mh.ph(e),Qo(t)):t.Mh.set(\"Unknown\"),[2]}))}))}function ta(t,e,n){return Object(a.b)(this,void 0,void 0,(function(){var r,i,o;return Object(a.d)(this,(function(s){switch(s.label){case 0:if(t.Mh.set(\"Online\"),!(e instanceof gn&&2===e.state&&e.cause))return[3,6];s.label=1;case 1:return s.trys.push([1,3,,5]),[4,function(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r,i,o;return Object(a.d)(this,(function(a){switch(a.label){case 0:n=e.cause,r=0,i=e.targetIds,a.label=1;case 1:return r<i.length?(o=i[r],t.Nh.has(o)?[4,t.Ch.$h(o,n)]:[3,3]):[3,5];case 2:a.sent(),t.Nh.delete(o),t.Lh.removeTarget(o),a.label=3;case 3:a.label=4;case 4:return r++,[3,1];case 5:return[2]}}))}))}(t,e)];case 2:return s.sent(),[3,5];case 3:return r=s.sent(),c(\"RemoteStore\",\"Failed to remove targets %s: %s \",e.targetIds.join(\",\"),r),[4,ea(t,r)];case 4:return s.sent(),[3,5];case 5:return[3,13];case 6:if(e instanceof vn?t.Lh.wn(e):e instanceof yn?t.Lh.yn(e):t.Lh.In(e),n.isEqual(U.min()))return[3,13];s.label=7;case 7:return s.trys.push([7,11,,13]),[4,Qi(t.Sh)];case 8:return i=s.sent(),n.u(i)>=0?[4,function(t,e){var n=t.Lh.pn(e);return n.Fe.forEach((function(n,r){if(n.resumeToken.o()>0){var i=t.Nh.get(r);i&&t.Nh.set(r,i.$t(n.resumeToken,e))}})),n.ke.forEach((function(e){var n=t.Nh.get(e);if(n){t.Nh.set(e,n.$t(w.h,n.Mt)),Go(t,e);var r=new ue(n.target,e,1,n.sequenceNumber);Wo(t,r)}})),t.Ch.Bh(n)}(t,n)]:[3,10];case 9:s.sent(),s.label=10;case 10:return[3,13];case 11:return c(\"RemoteStore\",\"Failed to raise snapshot:\",o=s.sent()),[4,ea(t,o)];case 12:return s.sent(),[3,13];case 13:return[2]}}))}))}function ea(t,e,n){return Object(a.b)(this,void 0,void 0,(function(){var r=this;return Object(a.d)(this,(function(i){switch(i.label){case 0:if(!sr(e))throw e;return t.Oh.add(1),[4,zo(t)];case 1:return i.sent(),t.Mh.set(\"Offline\"),n||(n=function(){return Qi(t.Sh)}),t.fs.bo((function(){return Object(a.b)(r,void 0,void 0,(function(){return Object(a.d)(this,(function(e){switch(e.label){case 0:return c(\"RemoteStore\",\"Retrying IndexedDB access\"),[4,n()];case 1:return e.sent(),t.Oh.delete(1),[4,Bo(t)];case 2:return e.sent(),[2]}}))}))})),[2]}}))}))}function na(t,e){return e().catch((function(n){return ea(t,n,e)}))}function ra(t){return Object(a.b)(this,void 0,void 0,(function(){var e,n,r,i,o;return Object(a.d)(this,(function(a){switch(a.label){case 0:e=v(t),n=fa(e),r=e.xh.length>0?e.xh[e.xh.length-1].batchId:-1,a.label=1;case 1:if(!function(t){return Jo(t)&&t.xh.length<10}(e))return[3,7];a.label=2;case 2:return a.trys.push([2,4,,6]),[4,Xi(e.Sh,r)];case 3:return null===(i=a.sent())?(0===e.xh.length&&n.Zu(),[3,7]):(r=i.batchId,function(t,e){t.xh.push(e);var n=fa(t);n.Ju()&&n.fh&&n.dh(e.mutations)}(e,i),[3,6]);case 4:return o=a.sent(),[4,ea(e,o)];case 5:return a.sent(),[3,6];case 6:return[3,1];case 7:return ia(e)&&oa(e),[2]}}))}))}function ia(t){return Jo(t)&&!fa(t).Hu()&&t.xh.length>0}function oa(t){fa(t).start()}function aa(t){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(e){return fa(t).Th(),[2]}))}))}function sa(t){return Object(a.b)(this,void 0,void 0,(function(){var e,n,r,i;return Object(a.d)(this,(function(o){for(e=fa(t),n=0,r=t.xh;n<r.length;n++)i=r[n],e.dh(i.mutations);return[2]}))}))}function ua(t,e,n){return Object(a.b)(this,void 0,void 0,(function(){var r,i;return Object(a.d)(this,(function(o){switch(o.label){case 0:return r=t.xh.shift(),i=Vr.from(r,e,n),[4,na(t,(function(){return t.Ch.qh(i)}))];case 1:return o.sent(),[4,ra(t)];case 2:return o.sent(),[2]}}))}))}function ca(t,e){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(n){switch(n.label){case 0:return e&&fa(t).fh?[4,function(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r;return Object(a.d)(this,(function(i){switch(i.label){case 0:return Ke(r=e.code)&&r!==E.ABORTED?(n=t.xh.shift(),fa(t).Xu(),[4,na(t,(function(){return t.Ch.Uh(n.batchId,e)}))]):[3,3];case 1:return i.sent(),[4,ra(t)];case 2:i.sent(),i.label=3;case 3:return[2]}}))}))}(t,e)]:[3,2];case 1:n.sent(),n.label=2;case 2:return ia(t)&&oa(t),[2]}}))}))}function la(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n;return Object(a.d)(this,(function(r){switch(r.label){case 0:return n=v(t),e?(n.Oh.delete(2),[4,Bo(n)]):[3,2];case 1:return r.sent(),[3,5];case 2:return e?[3,4]:(n.Oh.add(2),[4,zo(n)]);case 3:r.sent(),n.Mh.set(\"Unknown\"),r.label=4;case 4:r.label=5;case 5:return[2]}}))}))}function ha(t){var e=this;return t.Qh||(t.Qh=function(t,e,n){var r=v(t);return r.mh(),new Mo(e,r.Ku,r.credentials,r.Kt,n)}(t.Dh,t.fs,{Eu:$o.bind(null,t),Iu:Zo.bind(null,t),uh:ta.bind(null,t)}),t.Fh.push((function(n){return Object(a.b)(e,void 0,void 0,(function(){return Object(a.d)(this,(function(e){switch(e.label){case 0:return n?(t.Qh.Xu(),Yo(t)?Qo(t):t.Mh.set(\"Unknown\"),[3,3]):[3,1];case 1:return[4,t.Qh.stop()];case 2:e.sent(),Xo(t),e.label=3;case 3:return[2]}}))}))}))),t.Qh}function fa(t){var e=this;return t.Kh||(t.Kh=function(t,e,n){var r=v(t);return r.mh(),new Fo(e,r.Ku,r.credentials,r.Kt,n)}(t.Dh,t.fs,{Eu:aa.bind(null,t),Iu:ca.bind(null,t),Eh:sa.bind(null,t),wh:ua.bind(null,t)}),t.Fh.push((function(n){return Object(a.b)(e,void 0,void 0,(function(){return Object(a.d)(this,(function(e){switch(e.label){case 0:return n?(t.Kh.Xu(),[4,ra(t)]):[3,2];case 1:return e.sent(),[3,4];case 2:return[4,t.Kh.stop()];case 3:e.sent(),t.xh.length>0&&(c(\"RemoteStore\",\"Stopping write stream with \"+t.xh.length+\" pending writes\"),t.xh=[]),e.label=4;case 4:return[2]}}))}))}))),t.Kh}var pa=function(){this.jh=void 0,this.listeners=[]},da=function(){this.queries=new ui((function(t){return re(t)}),ne),this.onlineState=\"Unknown\",this.Wh=new Set};function va(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r,i,o,s,u,c;return Object(a.d)(this,(function(a){switch(a.label){case 0:if(n=v(t),r=e.query,i=!1,(o=n.queries.get(r))||(i=!0,o=new pa),!i)return[3,4];a.label=1;case 1:return a.trys.push([1,3,,4]),s=o,[4,n.Gh(r)];case 2:return s.jh=a.sent(),[3,4];case 3:return u=a.sent(),c=pr(u,\"Initialization of query '\"+ie(e.query)+\"' failed\"),[2,void e.onError(c)];case 4:return n.queries.set(r,o),o.listeners.push(e),e.zh(n.onlineState),o.jh&&e.Hh(o.jh)&&ba(n),[2]}}))}))}function ya(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r,i,o,s;return Object(a.d)(this,(function(a){return n=v(t),r=e.query,i=!1,(o=n.queries.get(r))&&(s=o.listeners.indexOf(e))>=0&&(o.listeners.splice(s,1),i=0===o.listeners.length),i?[2,(n.queries.delete(r),n.Jh(r))]:[2]}))}))}function ga(t,e){for(var n=v(t),r=!1,i=0,o=e;i<o.length;i++){var a=o[i],s=a.query,u=n.queries.get(s);if(u){for(var c=0,l=u.listeners;c<l.length;c++)l[c].Hh(a)&&(r=!0);u.jh=a}}r&&ba(n)}function ma(t,e,n){var r=v(t),i=r.queries.get(e);if(i)for(var o=0,a=i.listeners;o<a.length;o++)a[o].onError(n);r.queries.delete(e)}function ba(t){t.Wh.forEach((function(t){t.next()}))}var _a=function(){function t(t,e,n){this.query=t,this.Yh=e,this.Xh=!1,this.Zh=null,this.onlineState=\"Unknown\",this.options=n||{}}return t.prototype.Hh=function(t){if(!this.options.includeMetadataChanges){for(var e=[],n=0,r=t.docChanges;n<r.length;n++){var i=r[n];3!==i.type&&e.push(i)}t=new fn(t.query,t.docs,t.De,e,t.Ce,t.fromCache,t.xe,!0)}var o=!1;return this.Xh?this.tl(t)&&(this.Yh.next(t),o=!0):this.el(t,this.onlineState)&&(this.nl(t),o=!0),this.Zh=t,o},t.prototype.onError=function(t){this.Yh.error(t)},t.prototype.zh=function(t){this.onlineState=t;var e=!1;return this.Zh&&!this.Xh&&this.el(this.Zh,t)&&(this.nl(this.Zh),e=!0),e},t.prototype.el=function(t,e){if(!t.fromCache)return!0;var n=\"Offline\"!==e;return!(this.options.sl&&n||t.docs.nt()&&\"Offline\"!==e)},t.prototype.tl=function(t){if(t.docChanges.length>0)return!0;var e=this.Zh&&this.Zh.hasPendingWrites!==t.hasPendingWrites;return!(!t.xe&&!e)&&!0===this.options.includeMetadataChanges},t.prototype.nl=function(t){t=fn.Oe(t.query,t.docs,t.Ce,t.fromCache),this.Xh=!0,this.Yh.next(t)},t}(),wa=function(){function t(t,e){this.payload=t,this.byteLength=e}return t.prototype.il=function(){return\"metadata\"in this.payload},t}(),Ea=function(){function t(t){this.Kt=t}return t.prototype.yc=function(t){return Rn(this.Kt,t)},t.prototype.gc=function(t){return t.metadata.exists?Fn(this.Kt,t.document,!1):new Tt(this.yc(t.metadata.name),this.Vc(t.metadata.readTime))},t.prototype.Vc=function(t){return kn(t)},t}(),Ta=function(){function t(t,e,n){this.rl=t,this.Sh=e,this.Kt=n,this.queries=[],this.documents=[],this.progress=Ia(t)}return t.prototype.ol=function(t){this.progress.bytesLoaded+=t.byteLength;var e=this.progress.documentsLoaded;return t.payload.namedQuery?this.queries.push(t.payload.namedQuery):t.payload.documentMetadata?(this.documents.push({metadata:t.payload.documentMetadata}),t.payload.documentMetadata.exists||++e):t.payload.document&&(this.documents[this.documents.length-1].document=t.payload.document,++e),e!==this.progress.documentsLoaded?(this.progress.documentsLoaded=e,Object.assign({},this.progress)):null},t.prototype.cl=function(t){for(var e=new Map,n=new Ea(this.Kt),r=0,i=t;r<i.length;r++){var o=i[r];if(o.metadata.queries)for(var a=n.yc(o.metadata.name),s=0,u=o.metadata.queries;s<u.length;s++){var c=u[s],l=(e.get(c)||sn()).add(a);e.set(c,l)}}return e},t.prototype.complete=function(){return Object(a.b)(this,void 0,void 0,(function(){var t,e,n,r,i;return Object(a.d)(this,(function(o){switch(o.label){case 0:return[4,io(this.Sh,new Ea(this.Kt),this.documents,this.rl.id)];case 1:t=o.sent(),e=this.cl(this.documents),n=0,r=this.queries,o.label=2;case 2:return n<r.length?(i=r[n],[4,oo(this.Sh,i,e.get(i.name))]):[3,5];case 3:o.sent(),o.label=4;case 4:return n++,[3,2];case 5:return[2,(this.progress.taskState=\"Success\",new Vi(Object.assign({},this.progress),t))]}}))}))},t}();function Ia(t){return{taskState:\"Running\",documentsLoaded:0,bytesLoaded:0,totalDocuments:t.totalDocuments,totalBytes:t.totalBytes}}var Sa=function(t){this.key=t},Oa=function(t){this.key=t},Ca=function(){function t(t,e){this.query=t,this.al=e,this.ul=null,this.qe=!1,this.hl=sn(),this.Ce=sn(),this.ll=ae(t),this._l=new ln(this.ll)}return Object.defineProperty(t.prototype,\"fl\",{get:function(){return this.al},enumerable:!1,configurable:!0}),t.prototype.dl=function(t,e){var n=this,r=e?e.wl:new hn,i=e?e._l:this._l,o=e?e.Ce:this.Ce,a=i,s=!1,u=Qt(this.query)&&i.size===this.query.limit?i.last():null,c=Yt(this.query)&&i.size===this.query.limit?i.first():null;if(t.Zt((function(t,e){var l=i.get(t),h=e instanceof Et?e:null;h&&(h=oe(n.query,h)?h:null);var f=!!l&&n.Ce.has(l.key),p=!!h&&(h.bt||n.Ce.has(h.key)&&h.hasCommittedMutations),d=!1;l&&h?l.data().isEqual(h.data())?f!==p&&(r.track({type:3,doc:h}),d=!0):n.El(l,h)||(r.track({type:2,doc:h}),d=!0,(u&&n.ll(h,u)>0||c&&n.ll(h,c)<0)&&(s=!0)):!l&&h?(r.track({type:0,doc:h}),d=!0):l&&!h&&(r.track({type:1,doc:l}),d=!0,(u||c)&&(s=!0)),d&&(h?(a=a.add(h),o=p?o.add(t):o.delete(t)):(a=a.delete(t),o=o.delete(t)))})),Qt(this.query)||Yt(this.query))for(;a.size>this.query.limit;){var l=Qt(this.query)?a.last():a.first();a=a.delete(l.key),o=o.delete(l.key),r.track({type:1,doc:l})}return{_l:a,wl:r,_c:s,Ce:o}},t.prototype.El=function(t,e){return t.bt&&e.hasCommittedMutations&&!e.bt},t.prototype.Ei=function(t,e,n){var r=this,i=this._l;this._l=t._l,this.Ce=t.Ce;var o=t.wl.Se();o.sort((function(t,e){return function(t,e){var n=function(t){switch(t){case 0:return 1;case 2:case 3:return 2;case 1:return 0;default:return p()}};return n(t)-n(e)}(t.type,e.type)||r.ll(t.doc,e.doc)})),this.Tl(n);var a=e?this.Il():[],s=0===this.hl.size&&this.qe?1:0,u=s!==this.ul;return this.ul=s,0!==o.length||u?{snapshot:new fn(this.query,t._l,i,o,t.Ce,0===s,u,!1),ml:a}:{ml:a}},t.prototype.zh=function(t){return this.qe&&\"Offline\"===t?(this.qe=!1,this.Ei({_l:this._l,wl:new hn,Ce:this.Ce,_c:!1},!1)):{ml:[]}},t.prototype.Al=function(t){return!this.al.has(t)&&!!this._l.has(t)&&!this._l.get(t).bt},t.prototype.Tl=function(t){var e=this;t&&(t.Ue.forEach((function(t){return e.al=e.al.add(t)})),t.Qe.forEach((function(t){})),t.Ke.forEach((function(t){return e.al=e.al.delete(t)})),this.qe=t.qe)},t.prototype.Il=function(){var t=this;if(!this.qe)return[];var e=this.hl;this.hl=sn(),this._l.forEach((function(e){t.Al(e.key)&&(t.hl=t.hl.add(e.key))}));var n=[];return e.forEach((function(e){t.hl.has(e)||n.push(new Oa(e))})),this.hl.forEach((function(t){e.has(t)||n.push(new Sa(t))})),n},t.prototype.Rl=function(t){this.al=t.Pc,this.hl=sn();var e=this.dl(t.documents);return this.Ei(e,!0)},t.prototype.Pl=function(){return fn.Oe(this.query,this._l,this.Ce,0===this.ul)},t}(),ka=function(t,e,n){this.query=t,this.targetId=e,this.view=n},Na=function(t){this.key=t,this.yl=!1},Aa=function(){function t(t,e,n,r,i,o){this.Sh=t,this.gl=e,this.Vl=n,this.pl=r,this.currentUser=i,this.bl=o,this.vl={},this.Sl=new ui((function(t){return re(t)}),ne),this.Dl=new Map,this.Cl=[],this.xl=new Ge(H.J),this.Nl=new Map,this.Ol=new so,this.Fl={},this.kl=new Map,this.Ml=gi.Bi(),this.onlineState=\"Unknown\",this.Ll=void 0}return Object.defineProperty(t.prototype,\"$l\",{get:function(){return!0===this.Ll},enumerable:!1,configurable:!0}),t}();function Pa(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r,i,o,s,u;return Object(a.d)(this,(function(a){switch(a.label){case 0:return n=as(t),(o=n.Sl.get(e))?(r=o.targetId,n.pl.ka(r),i=o.view.Pl(),[3,4]):[3,1];case 1:return[4,$i(n.Sh,te(e))];case 2:return s=a.sent(),u=n.pl.ka(s.targetId),r=s.targetId,[4,Ra(n,e,r,\"current\"===u)];case 3:i=a.sent(),n.$l&&Ho(n.gl,s),a.label=4;case 4:return[2,i]}}))}))}function Ra(t,e,n,r){return Object(a.b)(this,void 0,void 0,(function(){var i,o,s,u,c,l;return Object(a.d)(this,(function(h){switch(h.label){case 0:return t.Bl=function(e,n,r){return function(t,e,n,r){return Object(a.b)(this,void 0,void 0,(function(){var i,o,s;return Object(a.d)(this,(function(a){switch(a.label){case 0:return(i=e.view.dl(n))._c?[4,to(t.Sh,e.query,!1).then((function(t){var n=t.documents;return e.view.dl(n,i)}))]:[3,2];case 1:i=a.sent(),a.label=2;case 2:return o=r&&r.Fe.get(e.targetId),s=e.view.Ei(i,t.$l,o),[2,(Ka(t,e.targetId,s.ml),s.snapshot)]}}))}))}(t,e,n,r)},[4,to(t.Sh,e,!0)];case 1:return i=h.sent(),o=new Ca(e,i.Pc),s=o.dl(i.documents),u=dn.Be(n,r&&\"Offline\"!==t.onlineState),c=o.Ei(s,t.$l,u),Ka(t,n,c.ml),l=new ka(e,n,o),[2,(t.Sl.set(e,l),t.Dl.has(n)?t.Dl.get(n).push(e):t.Dl.set(n,[e]),c.snapshot)]}}))}))}function ja(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r,i;return Object(a.d)(this,(function(o){switch(o.label){case 0:return n=v(t),r=n.Sl.get(e),(i=n.Dl.get(r.targetId)).length>1?[2,(n.Dl.set(r.targetId,i.filter((function(t){return!ne(t,e)}))),void n.Sl.delete(e))]:n.$l?(n.pl.La(r.targetId),n.pl.Ca(r.targetId)?[3,2]:[4,Zi(n.Sh,r.targetId,!1).then((function(){n.pl.Ba(r.targetId),Ko(n.gl,r.targetId),za(n,r.targetId)})).catch(si)]):[3,3];case 1:o.sent(),o.label=2;case 2:return[3,5];case 3:return za(n,r.targetId),[4,Zi(n.Sh,r.targetId,!0)];case 4:o.sent(),o.label=5;case 5:return[2]}}))}))}function xa(t,e,n){return Object(a.b)(this,void 0,void 0,(function(){var r,i,o,s;return Object(a.d)(this,(function(a){switch(a.label){case 0:r=ss(t),a.label=1;case 1:return a.trys.push([1,5,,6]),[4,function(t,e){var n,r=v(t),i=F.now(),o=e.reduce((function(t,e){return t.add(e.key)}),sn());return r.persistence.runTransaction(\"Locally write mutations\",\"readwrite\",(function(t){return r.Ic.Zo(t,o).next((function(o){n=o;for(var a=[],s=0,u=e;s<u.length;s++){var c=u[s],l=Pe(c,n.get(c.key));null!=l&&a.push(new De(c.key,l,_t(l.proto.mapValue),Oe.exists(!0)))}return r.Ho.Pi(t,i,a,e)}))})).then((function(t){var e=t.Ns(n);return{batchId:t.batchId,oi:e}}))}(r.Sh,e)];case 2:return i=a.sent(),r.pl.xa(i.batchId),function(t,e,n){var r=t.Fl[t.currentUser.R()];r||(r=new Ge(m)),r=r.Ht(e,n),t.Fl[t.currentUser.R()]=r}(r,i.batchId,n),[4,Qa(r,i.oi)];case 3:return a.sent(),[4,ra(r.gl)];case 4:return a.sent(),[3,6];case 5:return o=a.sent(),s=pr(o,\"Failed to persist write\"),n.reject(s),[3,6];case 6:return[2]}}))}))}function Da(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r;return Object(a.d)(this,(function(i){switch(i.label){case 0:n=v(t),i.label=1;case 1:return i.trys.push([1,4,,6]),[4,Yi(n.Sh,e)];case 2:return r=i.sent(),e.Fe.forEach((function(t,e){var r=n.Nl.get(e);r&&(d(t.Ue.size+t.Qe.size+t.Ke.size<=1),t.Ue.size>0?r.yl=!0:t.Qe.size>0?d(r.yl):t.Ke.size>0&&(d(r.yl),r.yl=!1))})),[4,Qa(n,r,e)];case 3:return i.sent(),[3,6];case 4:return[4,si(i.sent())];case 5:return i.sent(),[3,6];case 6:return[2]}}))}))}function La(t,e,n){var r=v(t);if(r.$l&&0===n||!r.$l&&1===n){var i=[];r.Sl.forEach((function(t,n){var r=n.view.zh(e);r.snapshot&&i.push(r.snapshot)})),function(t,e){var n=v(t);n.onlineState=e;var r=!1;n.queries.forEach((function(t,n){for(var i=0,o=n.listeners;i<o.length;i++)o[i].zh(e)&&(r=!0)})),r&&ba(n)}(r.Vl,e),i.length&&r.vl.uh(i),r.onlineState=e,r.$l&&r.pl.Ka(e)}}function Ma(t,e,n){return Object(a.b)(this,void 0,void 0,(function(){var r,i,o,s,u,c;return Object(a.d)(this,(function(a){switch(a.label){case 0:return(r=v(t)).pl.qa(e,\"rejected\",n),i=r.Nl.get(e),(o=i&&i.key)?(s=(s=new Ge(H.J)).Ht(o,new Tt(o,U.min())),u=sn().add(o),c=new pn(U.min(),new Map,new Je(m),s,u),[4,Da(r,c)]):[3,2];case 1:return a.sent(),r.xl=r.xl.remove(o),r.Nl.delete(e),Ga(r),[3,4];case 2:return[4,Zi(r.Sh,e,!1).then((function(){return za(r,e,n)})).catch(si)];case 3:a.sent(),a.label=4;case 4:return[2]}}))}))}function Fa(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r,i;return Object(a.d)(this,(function(o){switch(o.label){case 0:n=v(t),r=e.batch.batchId,o.label=1;case 1:return o.trys.push([1,4,,6]),[4,Gi(n.Sh,e)];case 2:return i=o.sent(),Ba(n,r,null),qa(n,r),n.pl.Oa(r,\"acknowledged\"),[4,Qa(n,i)];case 3:return o.sent(),[3,6];case 4:return[4,si(o.sent())];case 5:return o.sent(),[3,6];case 6:return[2]}}))}))}function Ua(t,e,n){return Object(a.b)(this,void 0,void 0,(function(){var r,i;return Object(a.d)(this,(function(o){switch(o.label){case 0:r=v(t),o.label=1;case 1:return o.trys.push([1,4,,6]),[4,function(t,e){var n=v(t);return n.persistence.runTransaction(\"Reject batch\",\"readwrite-primary\",(function(t){var r;return n.Ho.yi(t,e).next((function(e){return d(null!==e),r=e.keys(),n.Ho.xi(t,e)})).next((function(){return n.Ho.Fi(t)})).next((function(){return n.Ic.Zo(t,r)}))}))}(r.Sh,e)];case 2:return i=o.sent(),Ba(r,e,n),qa(r,e),r.pl.Oa(e,\"rejected\",n),[4,Qa(r,i)];case 3:return o.sent(),[3,6];case 4:return[4,si(o.sent())];case 5:return o.sent(),[3,6];case 6:return[2]}}))}))}function Va(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r,i,o,s;return Object(a.d)(this,(function(a){switch(a.label){case 0:Jo((n=v(t)).gl)||c(\"SyncEngine\",\"The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled.\"),a.label=1;case 1:return a.trys.push([1,3,,4]),[4,function(t){var e=v(t);return e.persistence.runTransaction(\"Get highest unacknowledged batch id\",\"readonly\",(function(t){return e.Ho.pi(t)}))}(n.Sh)];case 2:return-1===(r=a.sent())?[2,void e.resolve()]:((i=n.kl.get(r)||[]).push(e),n.kl.set(r,i),[3,4]);case 3:return o=a.sent(),s=pr(o,\"Initialization of waitForPendingWrites() operation failed\"),e.reject(s),[3,4];case 4:return[2]}}))}))}function qa(t,e){(t.kl.get(e)||[]).forEach((function(t){t.resolve()})),t.kl.delete(e)}function Ba(t,e,n){var r=v(t),i=r.Fl[r.currentUser.R()];if(i){var o=i.get(e);o&&(n?o.reject(n):o.resolve(),i=i.remove(e)),r.Fl[r.currentUser.R()]=i}}function za(t,e,n){void 0===n&&(n=null),t.pl.La(e);for(var r=0,i=t.Dl.get(e);r<i.length;r++){var o=i[r];t.Sl.delete(o),n&&t.vl.ql(o,n)}t.Dl.delete(e),t.$l&&t.Ol.kc(e).forEach((function(e){t.Ol.ki(e)||Ha(t,e)}))}function Ha(t,e){var n=t.xl.get(e);null!==n&&(Ko(t.gl,n),t.xl=t.xl.remove(e),t.Nl.delete(n),Ga(t))}function Ka(t,e,n){for(var r=0,i=n;r<i.length;r++){var o=i[r];o instanceof Sa?(t.Ol.sr(o.key,e),Wa(t,o)):o instanceof Oa?(c(\"SyncEngine\",\"Document no longer in limbo: \"+o.key),t.Ol.rr(o.key,e),t.Ol.ki(o.key)||Ha(t,o.key)):p()}}function Wa(t,e){var n=e.key;t.xl.get(n)||(c(\"SyncEngine\",\"New document in limbo: \"+n),t.Cl.push(n),Ga(t))}function Ga(t){for(;t.Cl.length>0&&t.xl.size<t.bl;){var e=t.Cl.shift(),n=t.Ml.next();t.Nl.set(n,new Na(e)),t.xl=t.xl.Ht(e,n),Ho(t.gl,new ue(te(Gt(e.path)),n,2,M.U))}}function Qa(t,e,n){return Object(a.b)(this,void 0,void 0,(function(){var r,i,o,s;return Object(a.d)(this,(function(u){switch(u.label){case 0:return r=v(t),i=[],o=[],s=[],r.Sl.nt()?[3,3]:(r.Sl.forEach((function(t,a){s.push(r.Bl(a,e,n).then((function(t){if(t){r.$l&&r.pl.qa(a.targetId,t.fromCache?\"not-current\":\"current\"),i.push(t);var e=Bi.cc(a.targetId,t);o.push(e)}})))})),[4,Promise.all(s)]);case 1:return u.sent(),r.vl.uh(i),[4,function(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r,i,o,s,u,l,h,f;return Object(a.d)(this,(function(a){switch(a.label){case 0:n=v(t),a.label=1;case 1:return a.trys.push([1,3,,4]),[4,n.persistence.runTransaction(\"notifyLocalViewChanges\",\"readwrite\",(function(t){return nr.forEach(e,(function(e){return nr.forEach(e.rc,(function(r){return n.persistence.Ii.sr(t,e.targetId,r)})).next((function(){return nr.forEach(e.oc,(function(r){return n.persistence.Ii.rr(t,e.targetId,r)}))}))}))}))];case 2:return a.sent(),[3,4];case 3:if(!sr(r=a.sent()))throw r;return c(\"LocalStore\",\"Failed to update sequence numbers: \"+r),[3,4];case 4:for(i=0,o=e;i<o.length;i++)s=o[i],u=s.targetId,s.fromCache||(l=n.dc.get(u),h=l.Mt,f=l.Bt(h),n.dc=n.dc.Ht(u,f));return[2]}}))}))}(r.Sh,o)];case 2:u.sent(),u.label=3;case 3:return[2]}}))}))}function Ya(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r;return Object(a.d)(this,(function(i){switch(i.label){case 0:return(n=v(t)).currentUser.isEqual(e)?[3,3]:(c(\"SyncEngine\",\"User change. New user:\",e.R()),[4,Wi(n.Sh,e)]);case 1:return r=i.sent(),n.currentUser=e,function(t,e){t.kl.forEach((function(t){t.forEach((function(t){t.reject(new T(E.CANCELLED,\"'waitForPendingWrites' promise is rejected due to a user change.\"))}))})),t.kl.clear()}(n),n.pl.Qa(e,r.Ac,r.Rc),[4,Qa(n,r.mc)];case 2:i.sent(),i.label=3;case 3:return[2]}}))}))}function Ja(t,e){var n=v(t),r=n.Nl.get(e);if(r&&r.yl)return sn().add(r.key);var i=sn(),o=n.Dl.get(e);if(!o)return i;for(var a=0,s=o;a<s.length;a++){var u=s[a],c=n.Sl.get(u);i=i.ye(c.view.fl)}return i}function Xa(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r,i;return Object(a.d)(this,(function(o){switch(o.label){case 0:return[4,to((n=v(t)).Sh,e.query,!0)];case 1:return r=o.sent(),i=e.view.Rl(r),[2,(n.$l&&Ka(n,e.targetId,i.ml),i)]}}))}))}function $a(t){return Object(a.b)(this,void 0,void 0,(function(){var e;return Object(a.d)(this,(function(n){return[2,no((e=v(t)).Sh).then((function(t){return Qa(e,t)}))]}))}))}function Za(t,e,n,r){return Object(a.b)(this,void 0,void 0,(function(){var i,o;return Object(a.d)(this,(function(a){switch(a.label){case 0:return[4,function(t,e){var n=v(t),r=v(n.Ho);return n.persistence.runTransaction(\"Lookup mutation documents\",\"readonly\",(function(t){return r.gi(t,e).next((function(e){return e?n.Ic.Zo(t,e):nr.resolve(null)}))}))}((i=v(t)).Sh,e)];case 1:return null===(o=a.sent())?[3,6]:\"pending\"!==n?[3,3]:[4,ra(i.gl)];case 2:return a.sent(),[3,4];case 3:\"acknowledged\"===n||\"rejected\"===n?(Ba(i,e,r||null),qa(i,e),function(t,e){v(v(t).Ho).Ni(e)}(i.Sh,e)):p(),a.label=4;case 4:return[4,Qa(i,o)];case 5:return a.sent(),[3,7];case 6:c(\"SyncEngine\",\"Cannot apply mutation batch with id: \"+e),a.label=7;case 7:return[2]}}))}))}function ts(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r,i,o,s,u,c,l;return Object(a.d)(this,(function(a){switch(a.label){case 0:return as(n=v(t)),ss(n),!0!==e||!0===n.Ll?[3,3]:(r=n.pl.Sa(),[4,es(n,r.rt())]);case 1:return i=a.sent(),n.Ll=!0,[4,la(n.gl,!0)];case 2:for(a.sent(),o=0,s=i;o<s.length;o++)u=s[o],Ho(n.gl,u);return[3,7];case 3:return!1!==e||!1===n.Ll?[3,7]:(c=[],l=Promise.resolve(),n.Dl.forEach((function(t,e){n.pl.$a(e)?c.push(e):l=l.then((function(){return za(n,e),Zi(n.Sh,e,!0)})),Ko(n.gl,e)})),[4,l]);case 4:return a.sent(),[4,es(n,c)];case 5:return a.sent(),function(t){var e=v(t);e.Nl.forEach((function(t,n){Ko(e.gl,n)})),e.Ol.Mc(),e.Nl=new Map,e.xl=new Ge(H.J)}(n),n.Ll=!1,[4,la(n.gl,!1)];case 6:a.sent(),a.label=7;case 7:return[2]}}))}))}function es(t,e,n){return Object(a.b)(this,void 0,void 0,(function(){var n,r,i,o,s,u,c,l,h,f,p,d,y,g;return Object(a.d)(this,(function(a){switch(a.label){case 0:n=v(t),r=[],i=[],o=0,s=e,a.label=1;case 1:return o<s.length?(u=s[o],c=void 0,(l=n.Dl.get(u))&&0!==l.length?[4,$i(n.Sh,te(l[0]))]:[3,7]):[3,13];case 2:c=a.sent(),h=0,f=l,a.label=3;case 3:return h<f.length?(p=f[h],d=n.Sl.get(p),[4,Xa(n,d)]):[3,6];case 4:(y=a.sent()).snapshot&&i.push(y.snapshot),a.label=5;case 5:return h++,[3,3];case 6:return[3,11];case 7:return[4,eo(n.Sh,u)];case 8:return g=a.sent(),[4,$i(n.Sh,g)];case 9:return c=a.sent(),[4,Ra(n,ns(g),u,!1)];case 10:a.sent(),a.label=11;case 11:r.push(c),a.label=12;case 12:return o++,[3,1];case 13:return[2,(n.vl.uh(i),r)]}}))}))}function ns(t){return Wt(t.path,t.collectionGroup,t.orderBy,t.filters,t.limit,\"F\",t.startAt,t.endAt)}function rs(t){var e=v(t);return v(v(e.Sh).persistence).Qo()}function is(t,e,n,r){return Object(a.b)(this,void 0,void 0,(function(){var i,o,s;return Object(a.d)(this,(function(a){switch(a.label){case 0:return(i=v(t)).Ll?(c(\"SyncEngine\",\"Ignoring unexpected query state notification.\"),[3,8]):[3,1];case 1:if(!i.Dl.has(e))return[3,8];switch(n){case\"current\":case\"not-current\":return[3,2];case\"rejected\":return[3,5]}return[3,7];case 2:return[4,no(i.Sh)];case 3:return o=a.sent(),s=pn.$e(e,\"current\"===n),[4,Qa(i,o,s)];case 4:return a.sent(),[3,8];case 5:return[4,Zi(i.Sh,e,!0)];case 6:return a.sent(),za(i,e,r),[3,8];case 7:p(),a.label=8;case 8:return[2]}}))}))}function os(t,e,n){return Object(a.b)(this,void 0,void 0,(function(){var r,i,o,s,u,l,h,f,p,d;return Object(a.d)(this,(function(v){switch(v.label){case 0:if(!(r=as(t)).Ll)return[3,10];i=0,o=e,v.label=1;case 1:return i<o.length?(s=o[i],r.Dl.has(s)?(c(\"SyncEngine\",\"Adding an already active target \"+s),[3,5]):[4,eo(r.Sh,s)]):[3,6];case 2:return u=v.sent(),[4,$i(r.Sh,u)];case 3:return l=v.sent(),[4,Ra(r,ns(u),l.targetId,!1)];case 4:v.sent(),Ho(r.gl,l),v.label=5;case 5:return i++,[3,1];case 6:h=function(t){return Object(a.d)(this,(function(e){switch(e.label){case 0:return r.Dl.has(t)?[4,Zi(r.Sh,t,!1).then((function(){Ko(r.gl,t),za(r,t)})).catch(si)]:[3,2];case 1:e.sent(),e.label=2;case 2:return[2]}}))},f=0,p=n,v.label=7;case 7:return f<p.length?(d=p[f],[5,h(d)]):[3,10];case 8:v.sent(),v.label=9;case 9:return f++,[3,7];case 10:return[2]}}))}))}function as(t){var e=v(t);return e.gl.Ch.Bh=Da.bind(null,e),e.gl.Ch.Sn=Ja.bind(null,e),e.gl.Ch.$h=Ma.bind(null,e),e.vl.uh=ga.bind(null,e.Vl),e.vl.ql=ma.bind(null,e.Vl),e}function ss(t){var e=v(t);return e.gl.Ch.qh=Fa.bind(null,e),e.gl.Ch.Uh=Ua.bind(null,e),e}function us(t,e,n){var r=v(t);(function(t,e,n){return Object(a.b)(this,void 0,void 0,(function(){var r,i,o,s,u,c;return Object(a.d)(this,(function(a){switch(a.label){case 0:return a.trys.push([0,14,,15]),[4,e.getMetadata()];case 1:return r=a.sent(),[4,function(t,e){var n=v(t),r=kn(e.createTime);return n.persistence.runTransaction(\"hasNewerBundle\",\"readonly\",(function(t){return n.Eo.Ms(t,e.id)})).then((function(t){return!!t&&t.createTime.u(r)>=0}))}(t.Sh,r)];case 2:return a.sent()?[4,e.close()]:[3,4];case 3:return[2,(a.sent(),void n.Ul(function(t){return{taskState:\"Success\",documentsLoaded:t.totalDocuments,bytesLoaded:t.totalBytes,totalDocuments:t.totalDocuments,totalBytes:t.totalBytes}}(r)))];case 4:return n.Ql(Ia(r)),i=new Ta(r,t.Sh,e.Kt),[4,e.Kl()];case 5:o=a.sent(),a.label=6;case 6:return o?[4,i.ol(o)]:[3,10];case 7:return(s=a.sent())&&n.Ql(s),[4,e.Kl()];case 8:o=a.sent(),a.label=9;case 9:return[3,6];case 10:return[4,i.complete()];case 11:return u=a.sent(),[4,Qa(t,u.zo,void 0)];case 12:return a.sent(),[4,function(t,e){var n=v(t);return n.persistence.runTransaction(\"Save bundle\",\"readwrite\",(function(t){return n.Eo.Ls(t,e)}))}(t.Sh,r)];case 13:return a.sent(),n.Ul(u.progress),[3,15];case 14:return h(\"SyncEngine\",\"Loading bundle failed with \"+(c=a.sent())),n.jl(c),[3,15];case 15:return[2]}}))}))})(r,e,n).then((function(){r.pl.Wa()}))}var cs=function(){function t(){this.synchronizeTabs=!1}return t.prototype.initialize=function(t){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(e){switch(e.label){case 0:return this.Kt=xo(t.gu.T),this.pl=this.Wl(t),this.persistence=this.Gl(t),[4,this.persistence.start()];case 1:return e.sent(),this.zl=this.Hl(t),this.Sh=this.Jl(t),[2]}}))}))},t.prototype.Hl=function(t){return null},t.prototype.Jl=function(t){return Ki(this.persistence,new zi,t.Yl,this.Kt)},t.prototype.Gl=function(t){return new po(yo.ra,this.Kt)},t.prototype.Wl=function(t){return new Oo},t.prototype.terminate=function(){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(t){switch(t.label){case 0:return this.zl&&this.zl.stop(),[4,this.pl.Lo()];case 1:return t.sent(),[4,this.persistence.Lo()];case 2:return t.sent(),[2]}}))}))},t}(),ls=function(t){function e(e,n,r){var i=this;return(i=t.call(this)||this).Xl=e,i.cacheSizeBytes=n,i.forceOwnership=r,i.synchronizeTabs=!1,i}return Object(a.c)(e,t),e.prototype.initialize=function(e){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(n){switch(n.label){case 0:return[4,t.prototype.initialize.call(this,e)];case 1:return n.sent(),[4,ro(this.Sh)];case 2:return n.sent(),[4,this.Xl.initialize(this,e)];case 3:return n.sent(),[4,ss(this.Xl.fa)];case 4:return n.sent(),[4,ra(this.Xl.gl)];case 5:return n.sent(),[2]}}))}))},e.prototype.Jl=function(t){return Ki(this.persistence,new zi,t.Yl,this.Kt)},e.prototype.Hl=function(t){var e=this.persistence.Ii._r;return new Ii(e,t.fs)},e.prototype.Gl=function(t){var e=Ui(t.gu.T,t.gu.persistenceKey),n=void 0!==this.cacheSizeBytes?ai.Xs(this.cacheSizeBytes):ai.ei;return new Li(this.synchronizeTabs,e,t.clientId,n,t.fs,Ro(),jo(),this.Kt,this.pl,!!this.forceOwnership)},e.prototype.Wl=function(t){return new Oo},e}(cs),hs=function(t){function e(e,n){var r=this;return(r=t.call(this,e,n,!1)||this).Xl=e,r.cacheSizeBytes=n,r.synchronizeTabs=!0,r}return Object(a.c)(e,t),e.prototype.initialize=function(e){return Object(a.b)(this,void 0,void 0,(function(){var n,r=this;return Object(a.d)(this,(function(i){switch(i.label){case 0:return[4,t.prototype.initialize.call(this,e)];case 1:return i.sent(),n=this.Xl.fa,this.pl instanceof So?(this.pl.fa={nu:Za.bind(null,n),su:is.bind(null,n),iu:os.bind(null,n),Qo:rs.bind(null,n),eu:$a.bind(null,n)},[4,this.pl.start()]):[3,3];case 2:i.sent(),i.label=3;case 3:return[4,this.persistence.Po((function(t){return Object(a.b)(r,void 0,void 0,(function(){return Object(a.d)(this,(function(e){switch(e.label){case 0:return[4,ts(this.Xl.fa,t)];case 1:return e.sent(),this.zl&&(t&&!this.zl.Tr?this.zl.start(this.Sh):t||this.zl.stop()),[2]}}))}))}))];case 4:return i.sent(),[2]}}))}))},e.prototype.Wl=function(t){var e=Ro();if(!So.jn(e))throw new T(E.UNIMPLEMENTED,\"IndexedDB persistence is only available on platforms that support LocalStorage.\");var n=Ui(t.gu.T,t.gu.persistenceKey);return new So(e,t.fs,n,t.clientId,t.Yl)},e}(ls),fs=function(){function t(){}return t.prototype.initialize=function(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n=this;return Object(a.d)(this,(function(r){switch(r.label){case 0:return this.Sh?[3,2]:(this.Sh=t.Sh,this.pl=t.pl,this.Dh=this.Zl(e),this.gl=this.t_(e),this.Vl=this.e_(e),this.fa=this.n_(e,!t.synchronizeTabs),this.pl.da=function(t){return La(n.fa,t,1)},this.gl.Ch.s_=Ya.bind(null,this.fa),[4,la(this.gl,this.fa.$l)]);case 1:r.sent(),r.label=2;case 2:return[2]}}))}))},t.prototype.e_=function(t){return new da},t.prototype.Zl=function(t){var e,n=xo(t.gu.T),r=(e=t.gu,new Po(e));return function(t,e,n){return new Uo(t,e,n)}(t.credentials,r,n)},t.prototype.t_=function(t){var e,n,r,i,o,a=this;return e=this.Sh,n=this.Dh,r=t.fs,i=function(t){return La(a.fa,t,0)},o=ko.jn()?new ko:new Co,new qo(e,n,r,i,o)},t.prototype.n_=function(t,e){return function(t,e,n,r,i,o,a){var s=new Aa(t,e,n,r,i,o);return a&&(s.Ll=!0),s}(this.Sh,this.gl,this.Vl,this.pl,t.Yl,t.bl,e)},t.prototype.terminate=function(){return function(t){return Object(a.b)(this,void 0,void 0,(function(){var e;return Object(a.d)(this,(function(n){switch(n.label){case 0:return e=v(t),c(\"RemoteStore\",\"RemoteStore shutting down.\"),e.Oh.add(5),[4,zo(e)];case 1:return n.sent(),e.kh.Lo(),e.Mh.set(\"Unknown\"),[2]}}))}))}(this.gl)},t}();function ps(t,e){void 0===e&&(e=10240);var n=0;return{read:function(){return Object(a.b)(this,void 0,void 0,(function(){var r;return Object(a.d)(this,(function(i){return n<t.byteLength?(r={value:t.slice(n,n+e),done:!1},[2,(n+=e,r)]):[2,{done:!0}]}))}))},cancel:function(){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(t){return[2]}))}))},releaseLock:function(){}}}var ds=function(){function t(t){this.observer=t,this.muted=!1}return t.prototype.next=function(t){this.observer.next&&this.i_(this.observer.next,t)},t.prototype.error=function(t){this.observer.error?this.i_(this.observer.error,t):console.error(\"Uncaught Error in snapshot listener:\",t)},t.prototype.r_=function(){this.muted=!0},t.prototype.i_=function(t,e){var n=this;this.muted||setTimeout((function(){n.muted||t(e)}),0)},t}(),vs=function(){function t(t,e){var n=this;this.o_=t,this.Kt=e,this.metadata=new er,this.buffer=new Uint8Array,this.c_=new TextDecoder(\"utf-8\"),this.a_().then((function(t){t&&t.il()?n.metadata.resolve(t.payload.metadata):n.metadata.reject(new Error(\"The first element of the bundle is not a metadata, it is\\n             \"+JSON.stringify(null==t?void 0:t.payload)))}),(function(t){return n.metadata.reject(t)}))}return t.prototype.close=function(){return this.o_.cancel()},t.prototype.getMetadata=function(){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(t){return[2,this.metadata.promise]}))}))},t.prototype.Kl=function(){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(t){switch(t.label){case 0:return[4,this.getMetadata()];case 1:return[2,(t.sent(),this.a_())]}}))}))},t.prototype.a_=function(){return Object(a.b)(this,void 0,void 0,(function(){var t,e,n,r;return Object(a.d)(this,(function(i){switch(i.label){case 0:return[4,this.u_()];case 1:return null===(t=i.sent())?[2,null]:(e=this.c_.decode(t),n=Number(e),isNaN(n)&&this.h_(\"length string (\"+e+\") is not valid number\"),[4,this.l_(n)]);case 2:return r=i.sent(),[2,new wa(JSON.parse(r),t.length+n)]}}))}))},t.prototype.__=function(){return this.buffer.findIndex((function(t){return t===\"{\".charCodeAt(0)}))},t.prototype.u_=function(){return Object(a.b)(this,void 0,void 0,(function(){var t,e;return Object(a.d)(this,(function(n){switch(n.label){case 0:return this.__()<0?[4,this.f_()]:[3,3];case 1:if(n.sent())return[3,3];n.label=2;case 2:return[3,0];case 3:return 0===this.buffer.length?[2,null]:((t=this.__())<0&&this.h_(\"Reached the end of bundle when a length string is expected.\"),e=this.buffer.slice(0,t),[2,(this.buffer=this.buffer.slice(t),e)])}}))}))},t.prototype.l_=function(t){return Object(a.b)(this,void 0,void 0,(function(){var e;return Object(a.d)(this,(function(n){switch(n.label){case 0:return this.buffer.length<t?[4,this.f_()]:[3,3];case 1:n.sent()&&this.h_(\"Reached the end of bundle when more is expected.\"),n.label=2;case 2:return[3,0];case 3:return e=this.c_.decode(this.buffer.slice(0,t)),[2,(this.buffer=this.buffer.slice(t),e)]}}))}))},t.prototype.h_=function(t){throw this.o_.cancel(),new Error(\"Invalid bundle format: \"+t)},t.prototype.f_=function(){return Object(a.b)(this,void 0,void 0,(function(){var t,e;return Object(a.d)(this,(function(n){switch(n.label){case 0:return[4,this.o_.read()];case 1:return(t=n.sent()).done||((e=new Uint8Array(this.buffer.length+t.value.length)).set(this.buffer),e.set(t.value,this.buffer.length),this.buffer=e),[2,t.done]}}))}))},t}(),ys=function(){function t(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var n=0;n<t.length;++n)if(0===t[n].length)throw new T(E.INVALID_ARGUMENT,\"Invalid field name at argument $(i + 1). Field names must not be empty.\");this.d_=new z(t)}return t.prototype.isEqual=function(t){return this.d_.isEqual(t.d_)},t}(),gs=function(t){this._methodName=t};function ms(t,e,n){if(!n)throw new T(E.INVALID_ARGUMENT,\"Function \"+t+\"() cannot be called with an empty \"+e+\".\")}function bs(t,e){if(void 0===e)return{merge:!1};if(void 0!==e.mergeFields&&void 0!==e.merge)throw new T(E.INVALID_ARGUMENT,\"Invalid options passed to function \"+t+'(): You cannot specify both \"merge\" and \"mergeFields\".');return e}function _s(t,e,n,r){if(!0===e&&!0===r)throw new T(E.INVALID_ARGUMENT,t+\" and \"+n+\" cannot be used together.\")}function ws(t){if(!H.Et(t))throw new T(E.INVALID_ARGUMENT,\"Invalid document reference. Document references must have an even number of segments, but \"+t+\" has \"+t.length+\".\")}function Es(t){if(H.Et(t))throw new T(E.INVALID_ARGUMENT,\"Invalid collection reference. Collection references must have an odd number of segments, but \"+t+\" has \"+t.length+\".\")}function Ts(t){if(void 0===t)return\"undefined\";if(null===t)return\"null\";if(\"string\"==typeof t)return t.length>20&&(t=t.substring(0,20)+\"...\"),JSON.stringify(t);if(\"number\"==typeof t||\"boolean\"==typeof t)return\"\"+t;if(\"object\"==typeof t){if(t instanceof Array)return\"an array\";var e=function(t){if(t.constructor){var e=/function\\s+([^\\s(]+)\\s*\\(/.exec(t.constructor.toString());if(e&&e.length>1)return e[1]}return null}(t);return e?\"a custom \"+e+\" object\":\"an object\"}return\"function\"==typeof t?\"a function\":p()}function Is(t,e){if(\"_delegate\"in t&&(t=t._),!(t instanceof e)){if(e.name===t.constructor.name)throw new T(E.INVALID_ARGUMENT,\"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");var n=Ts(t);throw new T(E.INVALID_ARGUMENT,\"Expected type '\"+e.name+\"', but it was: \"+n)}return t}function Ss(t,e){if(e<=0)throw new T(E.INVALID_ARGUMENT,\"Function \"+t+\"() requires a positive number, but it was: \"+e+\".\")}var Os=function(){function t(t){var e;if(void 0===t.host){if(void 0!==t.ssl)throw new T(E.INVALID_ARGUMENT,\"Can't provide ssl option if host option is not set\");this.host=\"firestore.googleapis.com\",this.ssl=!0}else this.host=t.host,this.ssl=null===(e=t.ssl)||void 0===e||e;if(this.credentials=t.credentials,this.ignoreUndefinedProperties=!!t.ignoreUndefinedProperties,void 0===t.cacheSizeBytes)this.cacheSizeBytes=41943040;else{if(-1!==t.cacheSizeBytes&&t.cacheSizeBytes<1048576)throw new T(E.INVALID_ARGUMENT,\"cacheSizeBytes must be at least 1048576\");this.cacheSizeBytes=t.cacheSizeBytes}this.experimentalForceLongPolling=!!t.experimentalForceLongPolling,this.experimentalAutoDetectLongPolling=!!t.experimentalAutoDetectLongPolling,_s(\"experimentalForceLongPolling\",t.experimentalForceLongPolling,\"experimentalAutoDetectLongPolling\",t.experimentalAutoDetectLongPolling)}return t.prototype.isEqual=function(t){return this.host===t.host&&this.ssl===t.ssl&&this.credentials===t.credentials&&this.cacheSizeBytes===t.cacheSizeBytes&&this.experimentalForceLongPolling===t.experimentalForceLongPolling&&this.experimentalAutoDetectLongPolling===t.experimentalAutoDetectLongPolling&&this.ignoreUndefinedProperties===t.ignoreUndefinedProperties},t}(),Cs=new Map,ks=function(){function t(t,e){this.w_=\"(lite)\",this.E_=new Os({}),this.T_=!1,t instanceof A?(this.I_=t,this.m_=new j):(this.A_=t,this.I_=function(t){if(!Object.prototype.hasOwnProperty.apply(t.options,[\"projectId\"]))throw new T(E.INVALID_ARGUMENT,'\"projectId\" not provided in firebase.initializeApp.');return new A(t.options.projectId)}(t),this.m_=new x(e))}return Object.defineProperty(t.prototype,\"app\",{get:function(){if(!this.A_)throw new T(E.FAILED_PRECONDITION,\"Firestore was not initialized using the Firebase SDK. 'app' is not available\");return this.A_},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"R_\",{get:function(){return this.T_},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"P_\",{get:function(){return void 0!==this.y_},enumerable:!1,configurable:!0}),t.prototype.g_=function(t){if(this.T_)throw new T(E.FAILED_PRECONDITION,\"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");this.E_=new Os(t),void 0!==t.credentials&&(this.m_=function(t){if(!t)return new j;switch(t.type){case\"gapi\":var e=t.client;return d(!(\"object\"!=typeof e||null===e||!e.auth||!e.auth.getAuthHeaderValueForFirstParty)),new L(e,t.sessionIndex||\"0\");case\"provider\":return t.client;default:throw new T(E.INVALID_ARGUMENT,\"makeCredentialsProvider failed due to invalid credential type\")}}(t.credentials))},t.prototype.V_=function(){return this.E_},t.prototype.p_=function(){return this.T_=!0,this.E_},t.prototype._delete=function(){return this.y_||(this.y_=this.b_()),this.y_},t.prototype.b_=function(){return this,(t=Cs.get(this))&&(c(\"ComponentProvider\",\"Removing Datastore\"),Cs.delete(this),t.terminate()),Promise.resolve();var t},t}(),Ns=function(){function t(t,e,n){this.v_=e,this.S_=n,this.type=\"document\",this.firestore=t}return Object.defineProperty(t.prototype,\"D_\",{get:function(){return this.S_.path},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"id\",{get:function(){return this.S_.path.et()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"path\",{get:function(){return this.S_.path.ot()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"parent\",{get:function(){return new Ps(this.firestore,this.v_,this.S_.path.Z())},enumerable:!1,configurable:!0}),t.prototype.withConverter=function(e){return new t(this.firestore,e,this.S_)},t}(),As=function(){function t(t,e,n){this.v_=e,this.C_=n,this.type=\"query\",this.firestore=t}return t.prototype.withConverter=function(e){return new t(this.firestore,e,this.C_)},t}(),Ps=function(t){function e(e,n,r){var i=this;return(i=t.call(this,e,n,Gt(r))||this).firestore=e,i.D_=r,i.type=\"collection\",i}return Object(a.c)(e,t),Object.defineProperty(e.prototype,\"id\",{get:function(){return this.C_.path.et()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"path\",{get:function(){return this.C_.path.ot()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"parent\",{get:function(){var t=this.D_.Z();return t.nt()?null:new Ns(this.firestore,null,new H(t))},enumerable:!1,configurable:!0}),e.prototype.withConverter=function(t){return new e(this.firestore,t,this.D_)},e}(As);function Rs(t,e){for(var n,r=[],i=2;i<arguments.length;i++)r[i-2]=arguments[i];if(t instanceof S&&(t=t._),ms(\"collection\",\"path\",e),t instanceof ks)return Es(n=q.ct.apply(q,Object(a.g)([e],r))),new Ps(t,null,n);if(!(t instanceof Ns||t instanceof Ps))throw new T(E.INVALID_ARGUMENT,\"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");return Es(n=q.ct.apply(q,Object(a.g)([t.path],r)).child(q.ct(e))),new Ps(t.firestore,null,n)}function js(t,e){for(var n,r=[],i=2;i<arguments.length;i++)r[i-2]=arguments[i];if(t instanceof S&&(t=t._),1===arguments.length&&(e=g.t()),ms(\"doc\",\"path\",e),t instanceof ks)return ws(n=q.ct.apply(q,Object(a.g)([e],r))),new Ns(t,null,new H(n));if(!(t instanceof Ns||t instanceof Ps))throw new T(E.INVALID_ARGUMENT,\"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");return ws(n=t.D_.child(q.ct.apply(q,Object(a.g)([e],r)))),new Ns(t.firestore,t instanceof Ps?t.v_:null,new H(n))}function xs(t,e){return t instanceof S&&(t=t._),e instanceof S&&(e=e._),(t instanceof Ns||t instanceof Ps)&&(e instanceof Ns||e instanceof Ps)&&t.firestore===e.firestore&&t.path===e.path&&t.v_===e.v_}function Ds(t,e){return t instanceof S&&(t=t._),e instanceof S&&(e=e._),t instanceof As&&e instanceof As&&t.firestore===e.firestore&&ne(t.C_,e.C_)&&t.v_===e.v_}var Ls=function(){function t(t,e){if(!isFinite(t)||t<-90||t>90)throw new T(E.INVALID_ARGUMENT,\"Latitude must be a number between -90 and 90, but was: \"+t);if(!isFinite(e)||e<-180||e>180)throw new T(E.INVALID_ARGUMENT,\"Longitude must be a number between -180 and 180, but was: \"+e);this.x_=t,this.N_=e}return Object.defineProperty(t.prototype,\"latitude\",{get:function(){return this.x_},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"longitude\",{get:function(){return this.N_},enumerable:!1,configurable:!0}),t.prototype.isEqual=function(t){return this.x_===t.x_&&this.N_===t.N_},t.prototype.toJSON=function(){return{latitude:this.x_,longitude:this.N_}},t.prototype.K=function(t){return m(this.x_,t.x_)||m(this.N_,t.N_)},t}(),Ms=/^__.*__$/,Fs=function(){function t(t,e,n){this.data=t,this.zt=e,this.fieldTransforms=n}return t.prototype.O_=function(t,e){return null!==this.zt?new De(t,this.data,this.zt,e,this.fieldTransforms):new xe(t,this.data,e,this.fieldTransforms)},t}(),Us=function(){function t(t,e,n){this.data=t,this.zt=e,this.fieldTransforms=n}return t.prototype.O_=function(t,e){return new De(t,this.data,this.zt,e,this.fieldTransforms)},t}();function Vs(t){switch(t){case 0:case 2:case 1:return!0;case 3:case 4:return!1;default:throw p()}}var qs=function(){function t(t,e,n,r,i,o){this.settings=t,this.T=e,this.Kt=n,this.ignoreUndefinedProperties=r,void 0===i&&this.F_(),this.fieldTransforms=i||[],this.zt=o||[]}return Object.defineProperty(t.prototype,\"path\",{get:function(){return this.settings.path},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"k_\",{get:function(){return this.settings.k_},enumerable:!1,configurable:!0}),t.prototype.M_=function(e){return new t(Object.assign(Object.assign({},this.settings),e),this.T,this.Kt,this.ignoreUndefinedProperties,this.fieldTransforms,this.zt)},t.prototype.L_=function(t){var e,n=null===(e=this.path)||void 0===e?void 0:e.child(t),r=this.M_({path:n,B_:!1});return r.q_(t),r},t.prototype.U_=function(t){var e,n=null===(e=this.path)||void 0===e?void 0:e.child(t),r=this.M_({path:n,B_:!1});return r.F_(),r},t.prototype.Q_=function(t){return this.M_({path:void 0,B_:!0})},t.prototype.K_=function(t){return su(t,this.settings.methodName,this.settings.j_||!1,this.path,this.settings.W_)},t.prototype.contains=function(t){return void 0!==this.zt.find((function(e){return t.st(e)}))||void 0!==this.fieldTransforms.find((function(e){return t.st(e.field)}))},t.prototype.F_=function(){if(this.path)for(var t=0;t<this.path.length;t++)this.q_(this.path.get(t))},t.prototype.q_=function(t){if(0===t.length)throw this.K_(\"Document fields must not be empty\");if(Vs(this.k_)&&Ms.test(t))throw this.K_('Document fields cannot begin and end with \"__\"')},t}(),Bs=function(){function t(t,e,n){this.T=t,this.ignoreUndefinedProperties=e,this.Kt=n||xo(t)}return t.prototype.G_=function(t,e,n,r){return void 0===r&&(r=!1),new qs({k_:t,methodName:e,W_:n,path:z.at(),B_:!1,j_:r},this.T,this.Kt,this.ignoreUndefinedProperties)},t}();function zs(t){var e=t.p_(),n=xo(t.I_);return new Bs(t.I_,!!e.ignoreUndefinedProperties,n)}function Hs(t,e,n,r,i,o){void 0===o&&(o={});var a=t.G_(o.merge||o.mergeFields?2:0,e,n,i);ru(\"Data must be an object, but it was:\",a,r);var s,u,c=eu(r,a);if(o.merge)s=new Q(a.zt),u=a.fieldTransforms;else if(o.mergeFields){for(var l=[],h=0,f=o.mergeFields;h<f.length;h++){var p=iu(e,f[h],n);if(!a.contains(p))throw new T(E.INVALID_ARGUMENT,\"Field '\"+p+\"' is specified in your field mask but missing from your input data.\");uu(l,p)||l.push(p)}s=new Q(l),u=a.fieldTransforms.filter((function(t){return s.It(t.field)}))}else s=null,u=a.fieldTransforms;return new Fs(new mt(c),s,u)}var Ks=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(a.c)(e,t),e.prototype.z_=function(t){if(2!==t.k_)throw 1===t.k_?t.K_(this._methodName+\"() can only appear at the top level of your update data\"):t.K_(this._methodName+\"() cannot be used with set() unless you pass {merge:true}\");return t.zt.push(t.path),null},e.prototype.isEqual=function(t){return t instanceof e},e}(gs);function Ws(t,e,n){return new qs({k_:3,W_:e.settings.W_,methodName:t._methodName,B_:n},e.T,e.Kt,e.ignoreUndefinedProperties)}var Gs=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(a.c)(e,t),e.prototype.z_=function(t){return new Ie(t.path,new ye)},e.prototype.isEqual=function(t){return t instanceof e},e}(gs),Qs=function(t){function e(e,n){var r=this;return(r=t.call(this,e)||this).H_=n,r}return Object(a.c)(e,t),e.prototype.z_=function(t){var e=Ws(this,t,!0),n=this.H_.map((function(t){return tu(t,e)})),r=new ge(n);return new Ie(t.path,r)},e.prototype.isEqual=function(t){return this===t},e}(gs),Ys=function(t){function e(e,n){var r=this;return(r=t.call(this,e)||this).H_=n,r}return Object(a.c)(e,t),e.prototype.z_=function(t){var e=Ws(this,t,!0),n=this.H_.map((function(t){return tu(t,e)})),r=new be(n);return new Ie(t.path,r)},e.prototype.isEqual=function(t){return this===t},e}(gs),Js=function(t){function e(e,n){var r=this;return(r=t.call(this,e)||this).J_=n,r}return Object(a.c)(e,t),e.prototype.z_=function(t){var e=new we(t.Kt,he(t.Kt,this.J_));return new Ie(t.path,e)},e.prototype.isEqual=function(t){return this===t},e}(gs);function Xs(t,e,n,r){var i=t.G_(1,e,n);ru(\"Data must be an object, but it was:\",i,r);var o=[],a=new bt;W(r,(function(t,r){var s=au(e,t,n);r instanceof S&&(r=r._);var u=i.U_(s);if(r instanceof Ks)o.push(s);else{var c=tu(r,u);null!=c&&(o.push(s),a.set(s,c))}}));var s=new Q(o);return new Us(a.yt(),s,i.fieldTransforms)}function $s(t,e,n,r,i,o){var a=t.G_(1,e,n),s=[iu(e,r,n)],u=[i];if(o.length%2!=0)throw new T(E.INVALID_ARGUMENT,\"Function \"+e+\"() needs to be called with an even number of arguments that alternate between field names and values.\");for(var c=0;c<o.length;c+=2)s.push(iu(e,o[c])),u.push(o[c+1]);for(var l=[],h=new bt,f=s.length-1;f>=0;--f)if(!uu(l,s[f])){var p=s[f],d=u[f];d instanceof S&&(d=d._);var v=a.U_(p);if(d instanceof Ks)l.push(p);else{var y=tu(d,v);null!=y&&(l.push(p),h.set(p,y))}}var g=new Q(l);return new Us(h.yt(),g,a.fieldTransforms)}function Zs(t,e,n,r){return void 0===r&&(r=!1),tu(n,t.G_(r?4:3,e))}function tu(t,e){if(t instanceof S&&(t=t._),nu(t))return ru(\"Unsupported field value:\",e,t),eu(t,e);if(t instanceof gs)return function(t,e){if(!Vs(e.k_))throw e.K_(t._methodName+\"() can only be used with update() and set()\");if(!e.path)throw e.K_(t._methodName+\"() is not currently supported inside arrays\");var n=t.z_(e);n&&e.fieldTransforms.push(n)}(t,e),null;if(e.path&&e.zt.push(e.path),t instanceof Array){if(e.settings.B_&&4!==e.k_)throw e.K_(\"Nested arrays are not supported\");return function(t,e){for(var n=[],r=0,i=0,o=t;i<o.length;i++){var a=tu(o[i],e.Q_(r));null==a&&(a={nullValue:\"NULL_VALUE\"}),n.push(a),r++}return{arrayValue:{values:n}}}(t,e)}return function(t,e){if(t instanceof S&&(t=t._),null===t)return{nullValue:\"NULL_VALUE\"};if(\"number\"==typeof t)return he(e.Kt,t);if(\"boolean\"==typeof t)return{booleanValue:t};if(\"string\"==typeof t)return{stringValue:t};if(t instanceof Date){var n=F.fromDate(t);return{timestampValue:Sn(e.Kt,n)}}if(t instanceof F)return n=new F(t.seconds,1e3*Math.floor(t.nanoseconds/1e3)),{timestampValue:Sn(e.Kt,n)};if(t instanceof Ls)return{geoPointValue:{latitude:t.latitude,longitude:t.longitude}};if(t instanceof I)return{bytesValue:On(e.Kt,t.l)};if(t instanceof Ns){n=e.T;var r=t.firestore.I_;if(!r.isEqual(n))throw e.K_(\"Document reference is for database \"+r.projectId+\"/\"+r.database+\" but should be for database \"+n.projectId+\"/\"+n.database);return{referenceValue:Nn(t.firestore.I_||e.T,t.S_.path)}}if(void 0===t&&e.ignoreUndefinedProperties)return null;throw e.K_(\"Unsupported field value: \"+Ts(t))}(t,e)}function eu(t,e){var n={};return G(t)?e.path&&e.path.length>0&&e.zt.push(e.path):W(t,(function(t,r){var i=tu(r,e.L_(t));null!=i&&(n[t]=i)})),{mapValue:{fields:n}}}function nu(t){return!(\"object\"!=typeof t||null===t||t instanceof Array||t instanceof Date||t instanceof F||t instanceof Ls||t instanceof I||t instanceof Ns||t instanceof gs)}function ru(t,e,n){if(!nu(n)||!function(t){return\"object\"==typeof t&&null!==t&&(Object.getPrototypeOf(t)===Object.prototype||null===Object.getPrototypeOf(t))}(n)){var r=Ts(n);throw\"an object\"===r?e.K_(t+\" a custom object\"):e.K_(t+\" \"+r)}}function iu(t,e,n){if(e instanceof S&&(e=e._),e instanceof ys)return e.d_;if(\"string\"==typeof e)return au(t,e);throw su(\"Field path arguments must be of type string or FieldPath.\",t,!1,void 0,n)}var ou=new RegExp(\"[~\\\\*/\\\\[\\\\]]\");function au(t,e,n){if(e.search(ou)>=0)throw su(\"Invalid field path (\"+e+\"). Paths must not contain '~', '*', '/', '[', or ']'\",t,!1,void 0,n);try{return(new(ys.bind.apply(ys,Object(a.g)([void 0],e.split(\".\"))))).d_}catch(r){throw su(\"Invalid field path (\"+e+\"). Paths must not be empty, begin with '.', end with '.', or contain '..'\",t,!1,void 0,n)}}function su(t,e,n,r,i){var o=r&&!r.nt(),a=void 0!==i,s=\"Function \"+e+\"() called with invalid data\";n&&(s+=\" (via `toFirestore()`)\");var u=\"\";return(o||a)&&(u+=\" (found\",o&&(u+=\" in field \"+r),a&&(u+=\" in document \"+i),u+=\")\"),new T(E.INVALID_ARGUMENT,(s+=\". \")+t+u)}function uu(t,e){return t.some((function(t){return t.isEqual(e)}))}var cu=function(){function t(t){this.Dh=t,this.Y_=new Map,this.mutations=[],this.X_=!1,this.Z_=null,this.tf=new Set}return t.prototype.ef=function(t){return Object(a.b)(this,void 0,void 0,(function(){var e,n=this;return Object(a.d)(this,(function(r){switch(r.label){case 0:if(this.nf(),this.mutations.length>0)throw new T(E.INVALID_ARGUMENT,\"Firestore transactions require all reads to be executed before all writes.\");return[4,function(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r,i,o,s,u;return Object(a.d)(this,(function(a){switch(a.label){case 0:return n=v(t),r=Dn(n.Kt)+\"/documents\",i={documents:e.map((function(t){return Pn(n.Kt,t)}))},[4,n.Cu(\"BatchGetDocuments\",r,i)];case 1:return o=a.sent(),s=new Map,o.forEach((function(t){var e=function(t,e){return\"found\"in e?function(t,e){d(!!e.found),e.found.name,e.found.updateTime;var n=Rn(t,e.found.name),r=kn(e.found.updateTime),i=new mt({mapValue:{fields:e.found.fields}});return new Et(n,r,i,{})}(t,e):\"missing\"in e?function(t,e){d(!!e.missing),d(!!e.readTime);var n=Rn(t,e.missing),r=kn(e.readTime);return new Tt(n,r)}(t,e):p()}(n.Kt,t);s.set(e.key.toString(),e)})),u=[],[2,(e.forEach((function(t){var e=s.get(t.toString());d(!!e),u.push(e)})),u)]}}))}))}(this.Dh,t)];case 1:return[2,((e=r.sent()).forEach((function(t){t instanceof Tt||t instanceof Et?n.sf(t):p()})),e)]}}))}))},t.prototype.set=function(t,e){this.write(e.O_(t,this.Gt(t))),this.tf.add(t.toString())},t.prototype.update=function(t,e){try{this.write(e.O_(t,this.rf(t)))}catch(t){this.Z_=t}this.tf.add(t.toString())},t.prototype.delete=function(t){this.write(new Be(t,this.Gt(t))),this.tf.add(t.toString())},t.prototype.commit=function(){return Object(a.b)(this,void 0,void 0,(function(){var t,e=this;return Object(a.d)(this,(function(n){switch(n.label){case 0:if(this.nf(),this.Z_)throw this.Z_;return t=this.Y_,this.mutations.forEach((function(e){t.delete(e.key.toString())})),t.forEach((function(t,n){var r=H.ft(n);e.mutations.push(new ze(r,e.Gt(r)))})),[4,function(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r,i;return Object(a.d)(this,(function(o){switch(o.label){case 0:return n=v(t),r=Dn(n.Kt)+\"/documents\",i={writes:e.map((function(t){return Un(n.Kt,t)}))},[4,n.bu(\"Commit\",r,i)];case 1:return o.sent(),[2]}}))}))}(this.Dh,this.mutations)];case 1:return n.sent(),this.X_=!0,[2]}}))}))},t.prototype.sf=function(t){var e;if(t instanceof Et)e=t.version;else{if(!(t instanceof Tt))throw p();e=U.min()}var n=this.Y_.get(t.key.toString());if(n){if(!e.isEqual(n))throw new T(E.ABORTED,\"Document version changed between two reads.\")}else this.Y_.set(t.key.toString(),e)},t.prototype.Gt=function(t){var e=this.Y_.get(t.toString());return!this.tf.has(t.toString())&&e?Oe.updateTime(e):Oe.jt()},t.prototype.rf=function(t){var e=this.Y_.get(t.toString());if(!this.tf.has(t.toString())&&e){if(e.isEqual(U.min()))throw new T(E.INVALID_ARGUMENT,\"Can't update a document that doesn't exist.\");return Oe.updateTime(e)}return Oe.exists(!0)},t.prototype.write=function(t){this.nf(),this.mutations.push(t)},t.prototype.nf=function(){},t}(),lu=function(){function t(t,e,n,r){this.fs=t,this.Dh=e,this.updateFunction=n,this.Ts=r,this.cf=5,this.zu=new Do(this.fs,\"transaction_retry\")}return t.prototype.run=function(){this.af()},t.prototype.af=function(){var t=this;this.zu.Bu((function(){return Object(a.b)(t,void 0,void 0,(function(){var t,e,n=this;return Object(a.d)(this,(function(r){return t=new cu(this.Dh),(e=this.uf(t))&&e.then((function(e){n.fs.ys((function(){return t.commit().then((function(){n.Ts.resolve(e)})).catch((function(t){n.hf(t)}))}))})).catch((function(t){n.hf(t)})),[2]}))}))}))},t.prototype.uf=function(t){try{var e=this.updateFunction(t);return!nt(e)&&e.catch&&e.then?e:(this.Ts.reject(Error(\"Transaction callback must return a Promise\")),null)}catch(t){return this.Ts.reject(t),null}},t.prototype.hf=function(t){var e=this;this.cf>0&&this.lf(t)?(this.cf-=1,this.fs.ys((function(){return e.af(),Promise.resolve()}))):this.Ts.reject(t)},t.prototype.lf=function(t){if(\"FirebaseError\"===t.name){var e=t.code;return\"aborted\"===e||\"failed-precondition\"===e||!Ke(e)}return!1},t}(),hu=function(){function t(t,e,n){var r=this;this.credentials=t,this.fs=e,this.gu=n,this.user=P.UNAUTHENTICATED,this.clientId=g.t(),this._f=function(){},this.N=new er,this.credentials.S((function(t){c(\"FirestoreClient\",\"Received user=\",t.uid),r.user=t,r._f(t),r.N.resolve()}))}return t.prototype.getConfiguration=function(){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(t){switch(t.label){case 0:return[4,this.N.promise];case 1:return[2,(t.sent(),{fs:this.fs,gu:this.gu,clientId:this.clientId,credentials:this.credentials,Yl:this.user,bl:100})]}}))}))},t.prototype.ff=function(t){var e=this;this._f=t,this.N.promise.then((function(){return e._f(e.user)}))},t.prototype.df=function(){if(this.fs.wf)throw new T(E.FAILED_PRECONDITION,\"The client has already been terminated.\")},t.prototype.terminate=function(){var t=this;this.fs.Ef();var e=new er;return this.fs.Tf((function(){return Object(a.b)(t,void 0,void 0,(function(){var t,n;return Object(a.d)(this,(function(r){switch(r.label){case 0:return r.trys.push([0,5,,6]),this.If?[4,this.If.terminate()]:[3,2];case 1:r.sent(),r.label=2;case 2:return this.mf?[4,this.mf.terminate()]:[3,4];case 3:r.sent(),r.label=4;case 4:return this.credentials.D(),e.resolve(),[3,6];case 5:return t=r.sent(),n=pr(t,\"Failed to shutdown persistence\"),e.reject(n),[3,6];case 6:return[2]}}))}))})),e.promise},t}();function fu(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r,i=this;return Object(a.d)(this,(function(o){switch(o.label){case 0:return t.fs.Af(),c(\"FirestoreClient\",\"Initializing OfflineComponentProvider\"),[4,t.getConfiguration()];case 1:return n=o.sent(),[4,e.initialize(n)];case 2:return o.sent(),r=n.Yl,t.ff((function(n){r.isEqual(n)||(r=n,t.fs.bo((function(){return Object(a.b)(i,void 0,void 0,(function(){return Object(a.d)(this,(function(t){switch(t.label){case 0:return[4,Wi(e.Sh,n)];case 1:return t.sent(),[2]}}))}))})))})),e.persistence.yo((function(){return t.terminate()})),t.mf=e,[2]}}))}))}function pu(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r;return Object(a.d)(this,(function(i){switch(i.label){case 0:return t.fs.Af(),[4,du(t)];case 1:return n=i.sent(),c(\"FirestoreClient\",\"Initializing OnlineComponentProvider\"),[4,t.getConfiguration()];case 2:return r=i.sent(),[4,e.initialize(n,r)];case 3:return i.sent(),t.ff((function(n){return t.fs.bo((function(){return function(t,e){return Object(a.b)(this,void 0,void 0,(function(){var n,r;return Object(a.d)(this,(function(i){switch(i.label){case 0:return(n=v(t)).fs.Af(),c(\"RemoteStore\",\"RemoteStore received new credentials\"),r=Jo(n),n.Oh.add(3),[4,zo(n)];case 1:return i.sent(),r&&n.Mh.set(\"Unknown\"),[4,n.Ch.s_(e)];case 2:return i.sent(),n.Oh.delete(3),[4,Bo(n)];case 3:return i.sent(),[2]}}))}))}(e.gl,n)}))})),t.If=e,[2]}}))}))}function du(t){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(e){switch(e.label){case 0:return t.mf?[3,2]:(c(\"FirestoreClient\",\"Using default OfflineComponentProvider\"),[4,fu(t,new cs)]);case 1:e.sent(),e.label=2;case 2:return[2,t.mf]}}))}))}function vu(t){return Object(a.b)(this,void 0,void 0,(function(){return Object(a.d)(this,(function(e){switch(e.label){case 0:return t.If?[3,2]:(c(\"FirestoreClient\",\"Using default OnlineComponentProvider\"),[4,pu(t,new fs)]);case 1:e.sent(),e.label=2;case 2:return[2,t.If]}}))}))}function yu(t){return du(t).then((function(t){return t.persistence}))}function gu(t){return du(t).then((function(t){return t.Sh}))}function mu(t){return vu(t).then((function(t){return t.gl}))}function bu(t){return vu(t).then((function(t){return t.fa}))}function _u(t){return Object(a.b)(this,void 0,void 0,(function(){var e,n;return Object(a.d)(this,(function(r){switch(r.label){case 0:return[4,vu(t)];case 1:return e=r.sent(),[2,((n=e.Vl).Gh=Pa.bind(null,e.fa),n.Jh=ja.bind(null,e.fa),n)]}}))}))}function wu(t,e,n){var r=this;void 0===n&&(n={});var i=new er;return t.fs.ys((function(){return Object(a.b)(r,void 0,void 0,(function(){var r;return Object(a.d)(this,(function(o){switch(o.label){case 0:return r=function(t,e,n,r,i){var o=new ds({next:function(o){e.ys((function(){return ya(t,a)}));var s=o.docs.has(n);!s&&o.fromCache?i.reject(new T(E.UNAVAILABLE,\"Failed to get document because the client is offline.\")):s&&o.fromCache&&r&&\"server\"===r.source?i.reject(new T(E.UNAVAILABLE,'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to \"server\" to retrieve the cached document.)')):i.resolve(o)},error:function(t){return i.reject(t)}}),a=new _a(Gt(n.path),o,{includeMetadataChanges:!0,sl:!0});return va(t,a)},[4,_u(t)];case 1:return[2,r.apply(void 0,[o.sent(),t.fs,e,n,i])]}}))}))})),i.promise}function Eu(t,e,n){var r=this;void 0===n&&(n={});var i=new er;return t.fs.ys((function(){return Object(a.b)(r,void 0,void 0,(function(){var r;return Object(a.d)(this,(function(o){switch(o.label){case 0:return r=function(t,e,n,r,i){var o=new ds({next:function(n){e.ys((function(){return ya(t,a)})),n.fromCache&&\"server\"===r.source?i.reject(new T(E.UNAVAILABLE,'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to \"server\" to retrieve the cached documents.)')):i.resolve(n)},error:function(t){return i.reject(t)}}),a=new _a(n,o,{includeMetadataChanges:!0,sl:!0});return va(t,a)},[4,_u(t)];case 1:return[2,r.apply(void 0,[o.sent(),t.fs,e,n,i])]}}))}))})),i.promise}var Tu=function(){function t(){var t=this;this.Rf=Promise.resolve(),this.Pf=[],this.yf=!1,this.gf=[],this.Vf=null,this.pf=!1,this.bf=[],this.zu=new Do(this,\"async_queue_retry\"),this.vf=function(){var e=jo();e&&c(\"AsyncQueue\",\"Visibility state changed to \"+e.visibilityState),t.zu.Uu()};var e=jo();e&&\"function\"==typeof e.addEventListener&&e.addEventListener(\"visibilitychange\",this.vf)}return Object.defineProperty(t.prototype,\"wf\",{get:function(){return this.yf},enumerable:!1,configurable:!0}),t.prototype.ys=function(t){this.enqueue(t)},t.prototype.Tf=function(t){this.Sf(),this.Df(t)},t.prototype.Ef=function(){if(!this.yf){this.yf=!0;var t=jo();t&&\"function\"==typeof t.removeEventListener&&t.removeEventListener(\"visibilitychange\",this.vf)}},t.prototype.enqueue=function(t){return this.Sf(),this.yf?new Promise((function(t){})):this.Df(t)},t.prototype.bo=function(t){var e=this;this.ys((function(){return e.Pf.push(t),e.Cf()}))},t.prototype.Cf=function(){return Object(a.b)(this,void 0,void 0,(function(){var t,e=this;return Object(a.d)(this,(function(n){switch(n.label){case 0:if(0===this.Pf.length)return[3,5];n.label=1;case 1:return n.trys.push([1,3,,4]),[4,this.Pf[0]()];case 2:return n.sent(),this.Pf.shift(),this.zu.reset(),[3,4];case 3:if(!sr(t=n.sent()))throw t;return c(\"AsyncQueue\",\"Operation failed with retryable error: \"+t),[3,4];case 4:this.Pf.length>0&&this.zu.Bu((function(){return e.Cf()})),n.label=5;case 5:return[2]}}))}))},t.prototype.Df=function(t){var e=this,n=this.Rf.then((function(){return e.pf=!0,t().catch((function(t){throw e.Vf=t,e.pf=!1,l(\"INTERNAL UNHANDLED ERROR: \",function(t){var e=t.message||\"\";return t.stack&&(e=t.stack.includes(t.message)?t.stack:t.message+\"\\n\"+t.stack),e}(t)),t})).then((function(t){return e.pf=!1,t}))}));return this.Rf=n,n},t.prototype.Ir=function(t,e,n){var r=this;this.Sf(),this.bf.indexOf(t)>-1&&(e=0);var i=fr.Is(this,t,e,n,(function(t){return r.xf(t)}));return this.gf.push(i),i},t.prototype.Sf=function(){this.Vf&&p()},t.prototype.Af=function(){},t.prototype.Nf=function(){return Object(a.b)(this,void 0,void 0,(function(){var t;return Object(a.d)(this,(function(e){switch(e.label){case 0:return[4,t=this.Rf];case 1:e.sent(),e.label=2;case 2:if(t!==this.Rf)return[3,0];e.label=3;case 3:return[2]}}))}))},t.prototype.Of=function(t){for(var e=0,n=this.gf;e<n.length;e++)if(n[e].ds===t)return!0;return!1},t.prototype.Ff=function(t){var e=this;return this.Nf().then((function(){e.gf.sort((function(t,e){return t.ws-e.ws}));for(var n=0,r=e.gf;n<r.length;n++){var i=r[n];if(i.Ps(),\"all\"!==t&&i.ds===t)break}return e.Nf()}))},t.prototype.kf=function(t){this.bf.push(t)},t.prototype.xf=function(t){var e=this.gf.indexOf(t);this.gf.splice(e,1)},t}(),Iu=-1,Su=function(t){function e(e,n){var r=this;return(r=t.call(this,e,n)||this).Mf=new Tu,r.w_=\"name\"in e?e.name:\"[DEFAULT]\",r}return Object(a.c)(e,t),e.prototype.b_=function(){return this.Lf||Cu(this),this.Lf.terminate()},e}(ks);function Ou(t){return t.Lf||Cu(t),t.Lf.df(),t.Lf}function Cu(t){var e=t.p_(),n=function(t,e,n){return new N(t,e,n.host,n.ssl,n.experimentalForceLongPolling,n.experimentalAutoDetectLongPolling)}(t.I_,t.w_,e);t.Lf=new hu(t.m_,t.Mf,n)}function ku(t,e,n){var r=this,i=new er;return t.fs.enqueue((function(){return Object(a.b)(r,void 0,void 0,(function(){var r;return Object(a.d)(this,(function(o){switch(o.label){case 0:return o.trys.push([0,3,,4]),[4,fu(t,n)];case 1:return o.sent(),[4,pu(t,e)];case 2:return o.sent(),i.resolve(),[3,4];case 3:if(!function(t){return\"FirebaseError\"===t.name?t.code===E.FAILED_PRECONDITION||t.code===E.UNIMPLEMENTED:!(\"undefined\"!=typeof DOMException&&t instanceof DOMException)||22===t.code||20===t.code||11===t.code}(r=o.sent()))throw r;return console.warn(\"Error enabling offline persistence. Falling back to persistence disabled: \"+r),i.reject(r),[3,4];case 4:return[2]}}))}))})).then((function(){return i.promise}))}function Nu(t){if(t.R_||t.P_)throw new T(E.FAILED_PRECONDITION,\"Firestore has already been started and persistence can no longer be enabled. You can only enable persistence before calling any other methods on a Firestore object.\")}var Au=function(){function t(){}return t.prototype.$f=function(t,e){switch(void 0===e&&(e=\"none\"),ot(t)){case 0:return null;case 1:return t.booleanValue;case 2:return X(t.integerValue||t.doubleValue);case 3:return this.Bf(t.timestampValue);case 4:return this.qf(t,e);case 5:return t.stringValue;case 6:return this.Uf($(t.bytesValue));case 7:return this.Qf(t.referenceValue);case 8:return this.Kf(t.geoPointValue);case 9:return this.jf(t.arrayValue,e);case 10:return this.Wf(t.mapValue,e);default:throw p()}},t.prototype.Wf=function(t,e){var n=this,r={};return W(t.fields||{},(function(t,i){r[t]=n.$f(i,e)})),r},t.prototype.Kf=function(t){return new Ls(X(t.latitude),X(t.longitude))},t.prototype.jf=function(t,e){var n=this;return(t.values||[]).map((function(t){return n.$f(t,e)}))},t.prototype.qf=function(t,e){switch(e){case\"previous\":var n=tt(t);return null==n?null:this.$f(n,e);case\"estimate\":return this.Bf(et(t));default:return null}},t.prototype.Bf=function(t){var e=J(t);return new F(e.seconds,e.nanos)},t.prototype.Gf=function(t,e){var n=q.ct(t);d(tr(n));var r=new A(n.get(1),n.get(3)),i=new H(n.X(5));return r.isEqual(e)||l(\"Document \"+i+\" contains a document reference within a different database (\"+r.projectId+\"/\"+r.database+\") which is not supported. It will be treated as a reference in the current database (\"+e.projectId+\"/\"+e.database+\") instead.\"),i},t}(),Pu=function(){function t(t,e,n,r,i){this.zf=t,this.Hf=e,this.S_=n,this.Jf=r,this.v_=i}return Object.defineProperty(t.prototype,\"id\",{get:function(){return this.S_.path.et()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"ref\",{get:function(){return new Ns(this.zf,this.v_,this.S_)},enumerable:!1,configurable:!0}),t.prototype.exists=function(){return null!==this.Jf},t.prototype.data=function(){if(this.Jf){if(this.v_){var t=new Ru(this.zf,this.Hf,this.S_,this.Jf,null);return this.v_.fromFirestore(t)}return this.Hf.$f(this.Jf.vt())}},t.prototype.get=function(t){if(this.Jf){var e=this.Jf.data().field(ju(\"DocumentSnapshot.get\",t));if(null!==e)return this.Hf.$f(e)}},t}(),Ru=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(a.c)(e,t),e.prototype.data=function(){return t.prototype.data.call(this)},e}(Pu);function ju(t,e){return\"string\"==typeof e?au(t,e):e instanceof S?e._.d_:e.d_}function xu(t){if(Yt(t)&&0===t.Nt.length)throw new T(E.UNIMPLEMENTED,\"limitToLast() queries require specifying at least one orderBy() clause\")}var Du=function(){};function Lu(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];for(var r=0,i=e;r<i.length;r++){var o=i[r];t=o.Yf(t)}return t}var Mu=function(t){function e(e,n,r){var i=this;return(i=t.call(this)||this).Xf=e,i.Zf=n,i.td=r,i.type=\"where\",i}return Object(a.c)(e,t),e.prototype.Yf=function(t){var e=zs(t.firestore),n=function(t,e,n,r,i,o,a){var s;if(i.ht()){if(\"array-contains\"===o||\"array-contains-any\"===o)throw new T(E.INVALID_ARGUMENT,\"Invalid Query. You can't perform '\"+o+\"' queries on FieldPath.documentId().\");if(\"in\"===o||\"not-in\"===o){Hu(a,o);for(var u=[],c=0,l=a;c<l.length;c++){var h=l[c];u.push(zu(r,t,h))}s={arrayValue:{values:u}}}else s=zu(r,t,a)}else\"in\"!==o&&\"not-in\"!==o&&\"array-contains-any\"!==o||Hu(a,o),s=Zs(n,\"where\",a,\"in\"===o||\"not-in\"===o);var f=At.create(i,o,s);return function(t,e){if(e.xt()){var n=Xt(t);if(null!==n&&!n.isEqual(e.field))throw new T(E.INVALID_ARGUMENT,\"Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '\"+n.toString()+\"' and '\"+e.field.toString()+\"'\");var r=Jt(t);null!==r&&Ku(t,e.field,r)}var i=function(t,e){for(var n=0,r=t.filters;n<r.length;n++){var i=r[n];if(e.indexOf(i.op)>=0)return i.op}return null}(t,function(t){switch(t){case\"!=\":return[\"!=\",\"not-in\"];case\"array-contains\":return[\"array-contains\",\"array-contains-any\",\"not-in\"];case\"in\":return[\"array-contains-any\",\"in\",\"not-in\"];case\"array-contains-any\":return[\"array-contains\",\"array-contains-any\",\"in\",\"not-in\"];case\"not-in\":return[\"array-contains\",\"array-contains-any\",\"in\",\"not-in\",\"!=\"];default:return[]}}(e.op));if(null!==i)throw i===e.op?new T(E.INVALID_ARGUMENT,\"Invalid query. You cannot use more than one '\"+e.op.toString()+\"' filter.\"):new T(E.INVALID_ARGUMENT,\"Invalid query. You cannot use '\"+e.op.toString()+\"' filters with '\"+i.toString()+\"' filters.\")}(t,f),f}(t.C_,0,e,t.firestore.I_,this.Xf,this.Zf,this.td);return new As(t.firestore,t.v_,function(t,e){var n=t.filters.concat([e]);return new Kt(t.path,t.collectionGroup,t.Nt.slice(),n,t.limit,t.limitType,t.startAt,t.endAt)}(t.C_,n))},e}(Du),Fu=function(t){function e(e,n){var r=this;return(r=t.call(this)||this).Xf=e,r.ed=n,r.type=\"orderBy\",r}return Object(a.c)(e,t),e.prototype.Yf=function(t){var e=function(t,e,n){if(null!==t.startAt)throw new T(E.INVALID_ARGUMENT,\"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");if(null!==t.endAt)throw new T(E.INVALID_ARGUMENT,\"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");var r=new qt(e,n);return function(t,e){if(null===Jt(t)){var n=Xt(t);null!==n&&Ku(t,n,e.field)}}(t,r),r}(t.C_,this.Xf,this.ed);return new As(t.firestore,t.v_,function(t,e){var n=t.Nt.concat([e]);return new Kt(t.path,t.collectionGroup,n,t.filters.slice(),t.limit,t.limitType,t.startAt,t.endAt)}(t.C_,e))},e}(Du),Uu=function(t){function e(e,n,r){var i=this;return(i=t.call(this)||this).type=e,i.nd=n,i.sd=r,i}return Object(a.c)(e,t),e.prototype.Yf=function(t){return new As(t.firestore,t.v_,ee(t.C_,this.nd,this.sd))},e}(Du),Vu=function(t){function e(e,n,r){var i=this;return(i=t.call(this)||this).type=e,i.rd=n,i.od=r,i}return Object(a.c)(e,t),e.prototype.Yf=function(t){var e=Bu(t,this.type,this.rd,this.od);return new As(t.firestore,t.v_,function(t,e){return new Kt(t.path,t.collectionGroup,t.Nt.slice(),t.filters.slice(),t.limit,t.limitType,e,t.endAt)}(t.C_,e))},e}(Du),qu=function(t){function e(e,n,r){var i=this;return(i=t.call(this)||this).type=e,i.rd=n,i.od=r,i}return Object(a.c)(e,t),e.prototype.Yf=function(t){var e=Bu(t,this.type,this.rd,this.od);return new As(t.firestore,t.v_,function(t,e){return new Kt(t.path,t.collectionGroup,t.Nt.slice(),t.filters.slice(),t.limit,t.limitType,t.startAt,e)}(t.C_,e))},e}(Du);function Bu(t,e,n,r){if(n[0]instanceof S&&(n[0]=n[0]._),n[0]instanceof Pu)return function(t,e,n,r,i){if(!r)throw new T(E.NOT_FOUND,\"Can't use a DocumentSnapshot that doesn't exist for \"+n+\"().\");for(var o=[],a=0,s=Zt(t);a<s.length;a++){var u=s[a];if(u.field.ht())o.push(ft(e,r.key));else{var c=r.field(u.field);if(Z(c))throw new T(E.INVALID_ARGUMENT,'Invalid query. You are trying to start or end a query using a document for which the field \"'+u.field+'\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');if(null===c){var l=u.field.ot();throw new T(E.INVALID_ARGUMENT,\"Invalid query. You are trying to start or end a query using a document for which the field '\"+l+\"' (used as the orderBy) does not exist.\")}o.push(c)}}return new Ut(o,i)}(t.C_,t.firestore.I_,e,n[0].Jf,r);var i=zs(t.firestore);return function(t,e,n,r,i,o){var a=t.Nt;if(i.length>a.length)throw new T(E.INVALID_ARGUMENT,\"Too many arguments provided to \"+r+\"(). The number of arguments must be less than or equal to the number of orderBy() clauses\");for(var s=[],u=0;u<i.length;u++){var c=i[u];if(a[u].field.ht()){if(\"string\"!=typeof c)throw new T(E.INVALID_ARGUMENT,\"Invalid query. Expected a string for document ID in \"+r+\"(), but got a \"+typeof c);if(!$t(t)&&-1!==c.indexOf(\"/\"))throw new T(E.INVALID_ARGUMENT,\"Invalid query. When querying a collection and ordering by FieldPath.documentId(), the value passed to \"+r+\"() must be a plain document ID, but '\"+c+\"' contains a slash.\");var l=t.path.child(q.ct(c));if(!H.Et(l))throw new T(E.INVALID_ARGUMENT,\"Invalid query. When querying a collection group and ordering by FieldPath.documentId(), the value passed to \"+r+\"() must result in a valid document path, but '\"+l+\"' is not because it contains an odd number of segments.\");var h=new H(l);s.push(ft(e,h))}else{var f=Zs(n,r,c);s.push(f)}}return new Ut(s,o)}(t.C_,t.firestore.I_,i,e,n,r)}function zu(t,e,n){if(n instanceof S&&(n=n._),\"string\"==typeof n){if(\"\"===n)throw new T(E.INVALID_ARGUMENT,\"Invalid query. When querying with FieldPath.documentId(), you must provide a valid document ID, but it was an empty string.\");if(!$t(e)&&-1!==n.indexOf(\"/\"))throw new T(E.INVALID_ARGUMENT,\"Invalid query. When querying a collection by FieldPath.documentId(), you must provide a plain document ID, but '\"+n+\"' contains a '/' character.\");var r=e.path.child(q.ct(n));if(!H.Et(r))throw new T(E.INVALID_ARGUMENT,\"Invalid query. When querying a collection group by FieldPath.documentId(), the value provided must result in a valid document path, but '\"+r+\"' is not because it has an odd number of segments (\"+r.length+\").\");return ft(t,new H(r))}if(n instanceof Ns)return ft(t,n.S_);throw new T(E.INVALID_ARGUMENT,\"Invalid query. When querying with FieldPath.documentId(), you must provide a valid string or a DocumentReference, but it was: \"+Ts(n)+\".\")}function Hu(t,e){if(!Array.isArray(t)||0===t.length)throw new T(E.INVALID_ARGUMENT,\"Invalid Query. A non-empty array is required for '\"+e.toString()+\"' filters.\");if(t.length>10)throw new T(E.INVALID_ARGUMENT,\"Invalid Query. '\"+e.toString()+\"' filters support a maximum of 10 elements in the value array.\")}function Ku(t,e,n){if(!n.isEqual(e))throw new T(E.INVALID_ARGUMENT,\"Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '\"+e.toString()+\"' and so you must also use '\"+e.toString()+\"' as your first argument to orderBy(), but your first orderBy() is on field '\"+n.toString()+\"' instead.\")}function Wu(t){return function(t,e){if(\"object\"!=typeof t||null===t)return!1;for(var n=t,r=0,i=[\"next\",\"error\",\"complete\"];r<i.length;r++){var o=i[r];if(o in n&&\"function\"==typeof n[o])return!0}return!1}(t)}function Gu(t,e,n){return t?n&&(n.merge||n.mergeFields)?t.toFirestore(e,n):t.toFirestore(e):e}var Qu=function(t){function e(e){var n=this;return(n=t.call(this)||this).firestore=e,n}return Object(a.c)(e,t),e.prototype.Uf=function(t){return new I(t)},e.prototype.Qf=function(t){var e=this.Gf(t,this.firestore.I_);return new Ns(this.firestore,null,e)},e}(Au),Yu=function(){function t(t,e){this.hasPendingWrites=t,this.fromCache=e}return t.prototype.isEqual=function(t){return this.hasPendingWrites===t.hasPendingWrites&&this.fromCache===t.fromCache},t}(),Ju=function(t){function e(e,n,r,i,o,a){var s=this;return(s=t.call(this,e,n,r,i,a)||this).zf=e,s.ad=e,s.metadata=o,s}return Object(a.c)(e,t),e.prototype.exists=function(){return t.prototype.exists.call(this)},e.prototype.data=function(t){if(void 0===t&&(t={}),this.Jf){if(this.v_){var e=new Xu(this.zf,this.Hf,this.S_,this.Jf,this.metadata,null);return this.v_.fromFirestore(e,t)}return this.Hf.$f(this.Jf.vt(),t.serverTimestamps)}},e.prototype.get=function(t,e){if(void 0===e&&(e={}),this.Jf){var n=this.Jf.data().field(ju(\"DocumentSnapshot.get\",t));if(null!==n)return this.Hf.$f(n,e.serverTimestamps)}},e}(Pu),Xu=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(a.c)(e,t),e.prototype.data=function(e){return void 0===e&&(e={}),t.prototype.data.call(this,e)},e}(Ju),$u=function(){function t(t,e,n,r){this.zf=t,this.Hf=e,this.ud=r,this.metadata=new Yu(r.hasPendingWrites,r.fromCache),this.query=n}return Object.defineProperty(t.prototype,\"docs\",{get:function(){var t=[];return this.forEach((function(e){return t.push(e)})),t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"size\",{get:function(){return this.ud.docs.size},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"empty\",{get:function(){return 0===this.size},enumerable:!1,configurable:!0}),t.prototype.forEach=function(t,e){var n=this;this.ud.docs.forEach((function(r){t.call(e,new Xu(n.zf,n.Hf,r.key,r,new Yu(n.ud.Ce.has(r.key),n.ud.fromCache),n.query.v_))}))},t.prototype.docChanges=function(t){void 0===t&&(t={});var e=!!t.includeMetadataChanges;if(e&&this.ud.Ne)throw new T(E.INVALID_ARGUMENT,\"To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().\");return this.hd&&this.ld===e||(this.hd=function(t,e){if(t.ud.De.nt()){var n=0;return t.ud.docChanges.map((function(e){var r=new Xu(t.zf,t.Hf,e.doc.key,e.doc,new Yu(t.ud.Ce.has(e.doc.key),t.ud.fromCache),t.query.v_);return e.doc,{type:\"added\",doc:r,oldIndex:-1,newIndex:n++}}))}var r=t.ud.De;return t.ud.docChanges.filter((function(t){return e||3!==t.type})).map((function(e){var n=new Xu(t.zf,t.Hf,e.doc.key,e.doc,new Yu(t.ud.Ce.has(e.doc.key),t.ud.fromCache),t.query.v_),i=-1,o=-1;return 0!==e.type&&(i=r.indexOf(e.doc.key),r=r.delete(e.doc.key)),1!==e.type&&(o=(r=r.add(e.doc)).indexOf(e.doc.key)),{type:Zu(e.type),doc:n,oldIndex:i,newIndex:o}}))}(this,e),this.ld=e),this.hd},t}();function Zu(t){switch(t){case 0:return\"added\";case 2:case 3:return\"modified\";case 1:return\"removed\";default:return p()}}function tc(t,e){return t instanceof Ju&&e instanceof Ju?t.zf===e.zf&&t.S_.isEqual(e.S_)&&(null===t.Jf?null===e.Jf:t.Jf.isEqual(e.Jf))&&t.v_===e.v_:t instanceof $u&&e instanceof $u&&t.zf===e.zf&&Ds(t.query,e.query)&&t.metadata.isEqual(e.metadata)&&t.ud.isEqual(e.ud)}var ec=function(t){function e(e){var n=this;return(n=t.call(this)||this).firestore=e,n}return Object(a.c)(e,t),e.prototype.Uf=function(t){return new I(t)},e.prototype.Qf=function(t){var e=this.Gf(t,this.firestore.I_);return new Ns(this.firestore,null,e)},e}(Au);function nc(t,e,n){for(var r=[],i=3;i<arguments.length;i++)r[i-3]=arguments[i];t=Is(t,Ns);var o=Is(t.firestore,Su),a=zs(o);return e instanceof S&&(e=e._),ic(o,[(\"string\"==typeof e||e instanceof ys?$s(a,\"updateDoc\",t.S_,e,n,r):Xs(a,\"updateDoc\",t.S_,e)).O_(t.S_,Oe.exists(!0))])}function rc(t){for(var e,n,r,i=[],o=1;o<arguments.length;o++)i[o-1]=arguments[o];t instanceof S&&(t=t._);var s={includeMetadataChanges:!1},u=0;\"object\"!=typeof i[u]||Wu(i[u])||(s=i[u],u++);var c,l,h,f={includeMetadataChanges:s.includeMetadataChanges};if(Wu(i[u])){var p=i[u];i[u]=null===(e=p.next)||void 0===e?void 0:e.bind(p),i[u+1]=null===(n=p.error)||void 0===n?void 0:n.bind(p),i[u+2]=null===(r=p.complete)||void 0===r?void 0:r.bind(p)}if(t instanceof Ns)l=Is(t.firestore,Su),h=Gt(t.S_.path),c={next:function(e){i[u]&&i[u](oc(l,t,e))},error:i[u+1],complete:i[u+2]};else{var d=Is(t,As);l=Is(d.firestore,Su),h=d.C_;var v=new ec(l);c={next:function(t){i[u]&&i[u](new $u(l,v,d,t))},error:i[u+1],complete:i[u+2]},xu(t.C_)}return function(t,e,n,r){var i=this,o=new ds(r),s=new _a(e,o,n);return t.fs.ys((function(){return Object(a.b)(i,void 0,void 0,(function(){var e;return Object(a.d)(this,(function(n){switch(n.label){case 0:return e=va,[4,_u(t)];case 1:return[2,e.apply(void 0,[n.sent(),s])]}}))}))})),function(){o.r_(),t.fs.ys((function(){return Object(a.b)(i,void 0,void 0,(function(){var e;return Object(a.d)(this,(function(n){switch(n.label){case 0:return e=ya,[4,_u(t)];case 1:return[2,e.apply(void 0,[n.sent(),s])]}}))}))}))}}(Ou(l),h,f,c)}function ic(t,e){return function(t,e){var n=this,r=new er;return t.fs.ys((function(){return Object(a.b)(n,void 0,void 0,(function(){var n;return Object(a.d)(this,(function(i){switch(i.label){case 0:return n=xa,[4,bu(t)];case 1:return[2,n.apply(void 0,[i.sent(),e,r])]}}))}))})),r.promise}(Ou(t),e)}function oc(t,e,n){var r=n.docs.get(e.S_),i=new ec(t);return new Ju(t,i,e.S_,r,new Yu(n.hasPendingWrites,n.fromCache),e.v_)}var ac=function(){function t(t,e){this.zf=t,this._d=e,this.fd=[],this.dd=!1,this.wd=zs(t)}return t.prototype.set=function(t,e,n){this.Ed();var r=sc(t,this.zf),i=Gu(r.v_,e,n),o=Hs(this.wd,\"WriteBatch.set\",r.S_,i,null!==r.v_,n);return this.fd.push(o.O_(r.S_,Oe.jt())),this},t.prototype.update=function(t,e,n){for(var r=[],i=3;i<arguments.length;i++)r[i-3]=arguments[i];this.Ed();var o,a=sc(t,this.zf);return e instanceof S&&(e=e._),o=\"string\"==typeof e||e instanceof ys?$s(this.wd,\"WriteBatch.update\",a.S_,e,n,r):Xs(this.wd,\"WriteBatch.update\",a.S_,e),this.fd.push(o.O_(a.S_,Oe.exists(!0))),this},t.prototype.delete=function(t){this.Ed();var e=sc(t,this.zf);return this.fd=this.fd.concat(new Be(e.S_,Oe.jt())),this},t.prototype.commit=function(){return this.Ed(),this.dd=!0,this.fd.length>0?this._d(this.fd):Promise.resolve()},t.prototype.Ed=function(){if(this.dd)throw new T(E.FAILED_PRECONDITION,\"A write batch can no longer be used after commit() has been called.\")},t}();function sc(t,e){if(t instanceof S&&(t=t._),t.firestore!==e)throw new T(E.INVALID_ARGUMENT,\"Provided document reference is from a different Firestore instance.\");return t}var uc=function(t){function e(e,n){var r=this;return(r=t.call(this,e,n)||this).zf=e,r}return Object(a.c)(e,t),e.prototype.get=function(e){var n=this,r=sc(e,this.zf),i=new ec(this.zf);return t.prototype.get.call(this,e).then((function(t){return new Ju(n.zf,i,r.S_,t.Jf,new Yu(!1,!1),r.v_)}))},e}(function(){function t(t,e){this.zf=t,this.Td=e,this.wd=zs(t)}return t.prototype.get=function(t){var e=this,n=sc(t,this.zf),r=new Qu(this.zf);return this.Td.ef([n.S_]).then((function(t){if(!t||1!==t.length)return p();var i=t[0];if(i instanceof Tt)return new Pu(e.zf,r,n.S_,null,n.v_);if(i instanceof Et)return new Pu(e.zf,r,i.key,i,n.v_);throw p()}))},t.prototype.set=function(t,e,n){var r=sc(t,this.zf),i=Gu(r.v_,e,n),o=Hs(this.wd,\"Transaction.set\",r.S_,i,null!==r.v_,n);return this.Td.set(r.S_,o),this},t.prototype.update=function(t,e,n){for(var r=[],i=3;i<arguments.length;i++)r[i-3]=arguments[i];var o,a=sc(t,this.zf);return e instanceof S&&(e=e._),o=\"string\"==typeof e||e instanceof ys?$s(this.wd,\"Transaction.update\",a.S_,e,n,r):Xs(this.wd,\"Transaction.update\",a.S_,e),this.Td.update(a.S_,o),this},t.prototype.delete=function(t){var e=sc(t,this.zf);return this.Td.delete(e.S_),this},t}()),cc=function(){function t(){}return t.prototype.enableIndexedDbPersistence=function(t,e){return function(t,e){Nu(t=Is(t,Su));var n=Ou(t),r=t.p_(),i=new fs;return ku(n,i,new ls(i,r.cacheSizeBytes,null==e?void 0:e.forceOwnership))}(t._,{forceOwnership:e})},t.prototype.enableMultiTabIndexedDbPersistence=function(t){return function(t){Nu(t=Is(t,Su));var e=Ou(t),n=t.p_(),r=new fs;return ku(e,r,new hs(r,n.cacheSizeBytes))}(t._)},t.prototype.clearIndexedDbPersistence=function(t){return function(t){var e=this;if(t.R_&&!t.P_)throw new T(E.FAILED_PRECONDITION,\"Persistence can only be cleared before a Firestore instance is initialized or after it is terminated.\");var n=new er;return t.Mf.Tf((function(){return Object(a.b)(e,void 0,void 0,(function(){var e;return Object(a.d)(this,(function(r){switch(r.label){case 0:return r.trys.push([0,2,,3]),[4,function(t){return Object(a.b)(this,void 0,void 0,(function(){var e;return Object(a.d)(this,(function(n){switch(n.label){case 0:return ir.jn()?(e=t+\"main\",[4,ir.delete(e)]):[2,Promise.resolve()];case 1:return n.sent(),[2]}}))}))}(Ui(t.I_,t.w_))];case 1:return r.sent(),n.resolve(),[3,3];case 2:return e=r.sent(),n.reject(e),[3,3];case 3:return[2]}}))}))})),n.promise}(t._)},t}(),lc=function(t){function e(e,n,r){var i=this;return(i=t.call(this,n)||this).Id=r,i.INTERNAL={delete:function(){return i.terminate()}},e instanceof A||(i.md=e),i}return Object(a.c)(e,t),Object.defineProperty(e.prototype,\"I_\",{get:function(){return this._.I_},enumerable:!1,configurable:!0}),e.prototype.settings=function(t){t.merge&&delete(t=Object.assign(Object.assign({},this._.V_()),t)).merge,this._.g_(t)},e.prototype.useEmulator=function(t,e){!function(t,e,n){var r=(t=Is(t,ks)).V_();\"firestore.googleapis.com\"!==r.host&&r.host!==e&&h(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"),t.g_(Object.assign(Object.assign({},r),{host:e+\":\"+n,ssl:!1}))}(this._,t,e)},e.prototype.enableNetwork=function(){return function(t){var e=this;return t.fs.enqueue((function(){return Object(a.b)(e,void 0,void 0,(function(){var e,n;return Object(a.d)(this,(function(r){switch(r.label){case 0:return[4,yu(t)];case 1:return e=r.sent(),[4,mu(t)];case 2:return n=r.sent(),[2,(e.Vo(!0),function(t){var e=v(t);return e.Oh.delete(0),Bo(e)}(n))]}}))}))}))}(Ou(Is(this._,Su)))},e.prototype.disableNetwork=function(){return function(t){var e=this;return t.fs.enqueue((function(){return Object(a.b)(e,void 0,void 0,(function(){var e,n;return Object(a.d)(this,(function(r){switch(r.label){case 0:return[4,yu(t)];case 1:return e=r.sent(),[4,mu(t)];case 2:return n=r.sent(),[2,(e.Vo(!1),function(t){return Object(a.b)(this,void 0,void 0,(function(){var e;return Object(a.d)(this,(function(n){switch(n.label){case 0:return(e=v(t)).Oh.add(0),[4,zo(e)];case 1:return n.sent(),e.Mh.set(\"Offline\"),[2]}}))}))}(n))]}}))}))}))}(Ou(Is(this._,Su)))},e.prototype.enablePersistence=function(t){var e=!1,n=!1;return t&&_s(\"synchronizeTabs\",e=!!t.synchronizeTabs,\"experimentalForceOwningTab\",n=!!t.experimentalForceOwningTab),e?this.Id.enableMultiTabIndexedDbPersistence(this):this.Id.enableIndexedDbPersistence(this,n)},e.prototype.clearPersistence=function(){return this.Id.clearIndexedDbPersistence(this)},e.prototype.terminate=function(){return this.app._removeServiceInstance(\"firestore\"),this.app._removeServiceInstance(\"firestore-exp\"),this._._delete()},e.prototype.waitForPendingWrites=function(){return function(t){var e=this,n=new er;return t.fs.ys((function(){return Object(a.b)(e,void 0,void 0,(function(){var e;return Object(a.d)(this,(function(r){switch(r.label){case 0:return e=Va,[4,bu(t)];case 1:return[2,e.apply(void 0,[r.sent(),n])]}}))}))})),n.promise}(Ou(Is(this._,Su)))},e.prototype.onSnapshotsInSync=function(t){return function(t,e){return function(t,e){var n=this,r=new ds(e);return t.fs.ys((function(){return Object(a.b)(n,void 0,void 0,(function(){var e;return Object(a.d)(this,(function(n){switch(n.label){case 0:return e=function(t,e){v(t).Wh.add(e),e.next()},[4,_u(t)];case 1:return[2,e.apply(void 0,[n.sent(),r])]}}))}))})),function(){r.r_(),t.fs.ys((function(){return Object(a.b)(n,void 0,void 0,(function(){var e;return Object(a.d)(this,(function(n){switch(n.label){case 0:return e=function(t,e){v(t).Wh.delete(e)},[4,_u(t)];case 1:return[2,e.apply(void 0,[n.sent(),r])]}}))}))}))}}(Ou(t=Is(t,Su)),Wu(e)?e:{next:e})}(this._,t)},Object.defineProperty(e.prototype,\"app\",{get:function(){if(!this.md)throw new T(E.FAILED_PRECONDITION,\"Firestore was not initialized using the Firebase SDK. 'app' is not available\");return this.md},enumerable:!1,configurable:!0}),e.prototype.collection=function(t){try{return new Ic(this,Rs(this._,t))}catch(t){throw yc(t,\"collection()\",\"Firestore.collection()\")}},e.prototype.doc=function(t){try{return new vc(this,js(this._,t))}catch(t){throw yc(t,\"doc()\",\"Firestore.doc()\")}},e.prototype.collectionGroup=function(t){try{return new wc(this,function(t,e){if(t=Is(t,ks),ms(\"collectionGroup\",\"collection id\",e),e.indexOf(\"/\")>=0)throw new T(E.INVALID_ARGUMENT,\"Invalid collection ID '\"+e+\"' passed to function collectionGroup(). Collection IDs must not contain '/'.\");return new As(t,null,function(t){return new Kt(q.at(),t)}(e))}(this._,t))}catch(t){throw yc(t,\"collectionGroup()\",\"Firestore.collectionGroup()\")}},e.prototype.runTransaction=function(t){var e=this;return function(t,e){return function(t,e){var n=this,r=new er;return t.fs.ys((function(){return Object(a.b)(n,void 0,void 0,(function(){var n;return Object(a.d)(this,(function(i){switch(i.label){case 0:return[4,function(t){return vu(t).then((function(t){return t.Dh}))}(t)];case 1:return n=i.sent(),new lu(t.fs,n,e,r).run(),[2]}}))}))})),r.promise}(Ou(t),(function(n){return e(new uc(t,n))}))}(this._,(function(n){return t(new pc(e,n))}))},e.prototype.batch=function(){var t=this;return Ou(this._),new dc(new ac(this._,(function(e){return ic(t._,e)})))},e.prototype.loadBundle=function(t){throw new T(E.FAILED_PRECONDITION,'\"loadBundle()\" does not exist, have you imported \"firebase/firestore/bundle\"?')},e.prototype.namedQuery=function(t){throw new T(E.FAILED_PRECONDITION,'\"namedQuery()\" does not exist, have you imported \"firebase/firestore/bundle\"?')},e}(S),hc=function(t){function e(e){var n=this;return(n=t.call(this)||this).firestore=e,n}return Object(a.c)(e,t),e.prototype.Uf=function(t){return new k(new I(t))},e.prototype.Qf=function(t){var e=this.Gf(t,this.firestore.I_);return vc.Ad(e,this.firestore,null)},e}(Au);function fc(t){var e;e=t,s.setLogLevel(e)}var pc=function(t){function e(e,n){var r=this;return(r=t.call(this,n)||this).zf=e,r.Hf=new hc(e),r}return Object(a.c)(e,t),e.prototype.get=function(t){var e=this,n=Sc(t);return this._.get(n).then((function(t){return new bc(e.zf,new Ju(e.zf._,e.Hf,t.S_,t.Jf,t.metadata,n.v_))}))},e.prototype.set=function(t,e,n){var r=Sc(t);return n?(bs(\"Transaction.set\",n),this._.set(r,e,n)):this._.set(r,e),this},e.prototype.update=function(t,e,n){for(var r,i=[],o=3;o<arguments.length;o++)i[o-3]=arguments[o];var s=Sc(t);return 2===arguments.length?this._.update(s,e):(r=this._).update.apply(r,Object(a.g)([s,e,n],i)),this},e.prototype.delete=function(t){var e=Sc(t);return this._.delete(e),this},e}(S),dc=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(a.c)(e,t),e.prototype.set=function(t,e,n){var r=Sc(t);return n?(bs(\"WriteBatch.set\",n),this._.set(r,e,n)):this._.set(r,e),this},e.prototype.update=function(t,e,n){for(var r,i=[],o=3;o<arguments.length;o++)i[o-3]=arguments[o];var s=Sc(t);return 2===arguments.length?this._.update(s,e):(r=this._).update.apply(r,Object(a.g)([s,e,n],i)),this},e.prototype.delete=function(t){var e=Sc(t);return this._.delete(e),this},e.prototype.commit=function(){return this._.commit()},e}(S),vc=function(t){function e(e,n){var r=this;return(r=t.call(this,n)||this).firestore=e,r.Hf=new hc(e),r}return Object(a.c)(e,t),e.Rd=function(t,n,r){if(t.length%2!=0)throw new T(E.INVALID_ARGUMENT,\"Invalid document reference. Document references must have an even number of segments, but \"+t.ot()+\" has \"+t.length);return new e(n,new Ns(n._,r,new H(t)))},e.Ad=function(t,n,r){return new e(n,new Ns(n._,r,t))},Object.defineProperty(e.prototype,\"id\",{get:function(){return this._.id},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"parent\",{get:function(){return new Ic(this.firestore,this._.parent)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"path\",{get:function(){return this._.path},enumerable:!1,configurable:!0}),e.prototype.collection=function(t){try{return new Ic(this.firestore,Rs(this._,t))}catch(t){throw yc(t,\"collection()\",\"DocumentReference.collection()\")}},e.prototype.isEqual=function(t){return t instanceof S&&(t=t._),t instanceof Ns&&xs(this._,t)},e.prototype.set=function(t,e){e=bs(\"DocumentReference.set\",e);try{return function(t,e,n){t=Is(t,Ns);var r=Is(t.firestore,Su),i=Gu(t.v_,e,n);return ic(r,[Hs(zs(r),\"setDoc\",t.S_,i,null!==t.v_,n).O_(t.S_,Oe.jt())])}(this._,t,e)}catch(t){throw yc(t,\"setDoc()\",\"DocumentReference.set()\")}},e.prototype.update=function(t,e){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];try{return 1===arguments.length?nc(this._,t):nc.apply(void 0,Object(a.g)([this._,t,e],n))}catch(t){throw yc(t,\"updateDoc()\",\"DocumentReference.update()\")}},e.prototype.delete=function(){return ic(Is((t=this._).firestore,Su),[new Be(t.S_,Oe.jt())]);var t},e.prototype.onSnapshot=function(){for(var t=this,e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var r=gc(e),i=mc(e,(function(e){return new bc(t.firestore,new Ju(t.firestore._,t.Hf,e.S_,e.Jf,e.metadata,t._.v_))}));return rc(this._,r,i)},e.prototype.get=function(t){var e=this;return(\"cache\"===(null==t?void 0:t.source)?function(t){t=Is(t,Ns);var e=Is(t.firestore,Su),n=Ou(e),r=new ec(e);return function(t,e){var n=this,r=new er;return t.fs.ys((function(){return Object(a.b)(n,void 0,void 0,(function(){var n;return Object(a.d)(this,(function(i){switch(i.label){case 0:return n=function(t,e,n){return Object(a.b)(this,void 0,void 0,(function(){var r,i;return Object(a.d)(this,(function(o){switch(o.label){case 0:return o.trys.push([0,2,,3]),[4,function(t,e){var n=v(t);return n.persistence.runTransaction(\"read document\",\"readonly\",(function(t){return n.Ic.Jo(t,e)}))}(t,e)];case 1:return(i=o.sent())instanceof Et?n.resolve(i):i instanceof Tt?n.resolve(null):n.reject(new T(E.UNAVAILABLE,\"Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)\")),[3,3];case 2:return r=o.sent(),i=pr(r,\"Failed to get document '\"+e+\" from cache\"),n.reject(i),[3,3];case 3:return[2]}}))}))},[4,gu(t)];case 1:return[2,n.apply(void 0,[i.sent(),e,r])]}}))}))})),r.promise}(n,t.S_).then((function(n){return new Ju(e,r,t.S_,n,new Yu(n instanceof Et&&n.bt,!0),t.v_)}))}(this._):\"server\"===(null==t?void 0:t.source)?function(t){t=Is(t,Ns);var e=Is(t.firestore,Su);return wu(Ou(e),t.S_,{source:\"server\"}).then((function(n){return oc(e,t,n)}))}(this._):function(t){t=Is(t,Ns);var e=Is(t.firestore,Su);return wu(Ou(e),t.S_).then((function(n){return oc(e,t,n)}))}(this._)).then((function(t){return new bc(e.firestore,new Ju(e.firestore._,e.Hf,t.S_,t.Jf,t.metadata,e._.v_))}))},e.prototype.withConverter=function(t){return new e(this.firestore,this._.withConverter(t))},e}(S);function yc(t,e,n){return t.message=t.message.replace(e,n),t}function gc(t){for(var e=0,n=t;e<n.length;e++){var r=n[e];if(\"object\"==typeof r&&!Wu(r))return r}return{}}function mc(t,e){var n,r,i;return{next:function(t){i.next&&i.next(e(t))},error:null===(n=(i=Wu(t[0])?t[0]:Wu(t[1])?t[1]:\"function\"==typeof t[0]?{next:t[0],error:t[1],complete:t[2]}:{next:t[1],error:t[2],complete:t[3]}).error)||void 0===n?void 0:n.bind(i),complete:null===(r=i.complete)||void 0===r?void 0:r.bind(i)}}var bc=function(t){function e(e,n){var r=this;return(r=t.call(this,n)||this).zf=e,r}return Object(a.c)(e,t),Object.defineProperty(e.prototype,\"ref\",{get:function(){return new vc(this.zf,this._.ref)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"id\",{get:function(){return this._.id},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"metadata\",{get:function(){return this._.metadata},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"exists\",{get:function(){return this._.exists()},enumerable:!1,configurable:!0}),e.prototype.data=function(t){return this._.data(t)},e.prototype.get=function(t,e){return this._.get(t,e)},e.prototype.isEqual=function(t){return tc(this._,t._)},e}(S),_c=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(a.c)(e,t),e.prototype.data=function(t){return this._.data(t)},e}(bc),wc=function(t){function e(e,n){var r=this;return(r=t.call(this,n)||this).firestore=e,r.Hf=new hc(e),r}return Object(a.c)(e,t),e.prototype.where=function(t,n,r){try{return new e(this.firestore,Lu(this._,function(t,e,n){var r=e,i=ju(\"where\",t);return new Mu(i,r,n)}(t,n,r)))}catch(t){throw yc(t,/(orderBy|where)\\(\\)/,\"Query.$1()\")}},e.prototype.orderBy=function(t,n){try{return new e(this.firestore,Lu(this._,function(t,e){void 0===e&&(e=\"asc\");var n=e,r=ju(\"orderBy\",t);return new Fu(r,n)}(t,n)))}catch(t){throw yc(t,/(orderBy|where)\\(\\)/,\"Query.$1()\")}},e.prototype.limit=function(t){try{return new e(this.firestore,Lu(this._,function(t){return Ss(\"limit\",t),new Uu(\"limit\",t,\"F\")}(t)))}catch(t){throw yc(t,\"limit()\",\"Query.limit()\")}},e.prototype.limitToLast=function(t){try{return new e(this.firestore,Lu(this._,function(t){return Ss(\"limitToLast\",t),new Uu(\"limitToLast\",t,\"L\")}(t)))}catch(t){throw yc(t,\"limitToLast()\",\"Query.limitToLast()\")}},e.prototype.startAt=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];try{return new e(this.firestore,Lu(this._,function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new Vu(\"startAt\",t,!0)}.apply(void 0,t)))}catch(t){throw yc(t,\"startAt()\",\"Query.startAt()\")}},e.prototype.startAfter=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];try{return new e(this.firestore,Lu(this._,function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new Vu(\"startAfter\",t,!1)}.apply(void 0,t)))}catch(t){throw yc(t,\"startAfter()\",\"Query.startAfter()\")}},e.prototype.endBefore=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];try{return new e(this.firestore,Lu(this._,function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new qu(\"endBefore\",t,!0)}.apply(void 0,t)))}catch(t){throw yc(t,\"endBefore()\",\"Query.endBefore()\")}},e.prototype.endAt=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];try{return new e(this.firestore,Lu(this._,function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new qu(\"endAt\",t,!1)}.apply(void 0,t)))}catch(t){throw yc(t,\"endAt()\",\"Query.endAt()\")}},e.prototype.isEqual=function(t){return Ds(this._,t._)},e.prototype.get=function(t){var e=this;return(\"cache\"===(null==t?void 0:t.source)?function(t){t=Is(t,As);var e=Is(t.firestore,Su),n=Ou(e),r=new ec(e);return function(t,e){var n=this,r=new er;return t.fs.ys((function(){return Object(a.b)(n,void 0,void 0,(function(){var n;return Object(a.d)(this,(function(i){switch(i.label){case 0:return n=function(t,e,n){return Object(a.b)(this,void 0,void 0,(function(){var r,i,o,s,u;return Object(a.d)(this,(function(a){switch(a.label){case 0:return a.trys.push([0,2,,3]),[4,to(t,e,!0)];case 1:return u=a.sent(),r=new Ca(e,u.Pc),i=r.dl(u.documents),o=r.Ei(i,!1),n.resolve(o.snapshot),[3,3];case 2:return s=a.sent(),u=pr(s,\"Failed to execute query '\"+e+\" against cache\"),n.reject(u),[3,3];case 3:return[2]}}))}))},[4,gu(t)];case 1:return[2,n.apply(void 0,[i.sent(),e,r])]}}))}))})),r.promise}(n,t.C_).then((function(n){return new $u(e,r,t,n)}))}(this._):\"server\"===(null==t?void 0:t.source)?function(t){t=Is(t,As);var e=Is(t.firestore,Su),n=Ou(e),r=new ec(e);return Eu(n,t.C_,{source:\"server\"}).then((function(n){return new $u(e,r,t,n)}))}(this._):function(t){t=Is(t,As);var e=Is(t.firestore,Su),n=Ou(e),r=new ec(e);return xu(t.C_),Eu(n,t.C_).then((function(n){return new $u(e,r,t,n)}))}(this._)).then((function(t){return new Tc(e.firestore,new $u(e.firestore._,e.Hf,e._,t.ud))}))},e.prototype.onSnapshot=function(){for(var t=this,e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var r=gc(e),i=mc(e,(function(e){return new Tc(t.firestore,new $u(t.firestore._,t.Hf,t._,e.ud))}));return rc(this._,r,i)},e.prototype.withConverter=function(t){return new e(this.firestore,this._.withConverter(t))},e}(S),Ec=function(t){function e(e,n){var r=this;return(r=t.call(this,n)||this).zf=e,r}return Object(a.c)(e,t),Object.defineProperty(e.prototype,\"type\",{get:function(){return this._.type},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"doc\",{get:function(){return new _c(this.zf,this._.doc)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"oldIndex\",{get:function(){return this._.oldIndex},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"newIndex\",{get:function(){return this._.newIndex},enumerable:!1,configurable:!0}),e}(S),Tc=function(t){function e(e,n){var r=this;return(r=t.call(this,n)||this).zf=e,r}return Object(a.c)(e,t),Object.defineProperty(e.prototype,\"query\",{get:function(){return new wc(this.zf,this._.query)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"metadata\",{get:function(){return this._.metadata},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"size\",{get:function(){return this._.size},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"empty\",{get:function(){return this._.empty},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"docs\",{get:function(){var t=this;return this._.docs.map((function(e){return new _c(t.zf,e)}))},enumerable:!1,configurable:!0}),e.prototype.docChanges=function(t){var e=this;return this._.docChanges(t).map((function(t){return new Ec(e.zf,t)}))},e.prototype.forEach=function(t,e){var n=this;this._.forEach((function(r){t.call(e,new _c(n.zf,r))}))},e.prototype.isEqual=function(t){return tc(this._,t._)},e}(S),Ic=function(t){function e(e,n){var r=this;return(r=t.call(this,e,n)||this).firestore=e,r._=n,r}return Object(a.c)(e,t),Object.defineProperty(e.prototype,\"id\",{get:function(){return this._.id},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"path\",{get:function(){return this._.path},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"parent\",{get:function(){var t=this._.parent;return t?new vc(this.firestore,t):null},enumerable:!1,configurable:!0}),e.prototype.doc=function(t){try{return new vc(this.firestore,void 0===t?js(this._):js(this._,t))}catch(t){throw yc(t,\"doc()\",\"CollectionReference.doc()\")}},e.prototype.add=function(t){var e=this;return function(t,e){var n=Is(t.firestore,Su),r=js(t),i=Gu(t.v_,e);return ic(n,[Hs(zs(t.firestore),\"addDoc\",r.S_,i,null!==t.v_,{}).O_(r.S_,Oe.exists(!1))]).then((function(){return r}))}(this._,t).then((function(t){return new vc(e.firestore,t)}))},e.prototype.isEqual=function(t){return xs(this._,t._)},e.prototype.withConverter=function(t){return new e(this.firestore,this._.withConverter(t))},e}(wc);function Sc(t){return t instanceof S&&(t=t._),Is(t,Ns)}var Oc=function(t){function e(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return t.call(this,new(ys.bind.apply(ys,Object(a.g)([void 0],e))))||this}return Object(a.c)(e,t),e.documentId=function(){return new e(z.lt().ot())},e.prototype.isEqual=function(t){return t instanceof S&&(t=t._),t instanceof ys&&this._.d_.isEqual(t.d_)},e}(S),Cc=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(a.c)(e,t),e.serverTimestamp=function(){var t=new Gs(\"serverTimestamp\");return t._methodName=\"FieldValue.serverTimestamp\",new e(t)},e.delete=function(){var t=new Ks(\"deleteField\");return t._methodName=\"FieldValue.delete\",new e(t)},e.arrayUnion=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];var r=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new Qs(\"arrayUnion\",t)}.apply(void 0,t);return r._methodName=\"FieldValue.arrayUnion\",new e(r)},e.arrayRemove=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];var r=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new Ys(\"arrayRemove\",t)}.apply(void 0,t);return r._methodName=\"FieldValue.arrayRemove\",new e(r)},e.increment=function(t){var n=function(t){return new Js(\"increment\",t)}(t);return n._methodName=\"FieldValue.increment\",new e(n)},e.prototype.isEqual=function(t){return this._.isEqual(t._)},e}(S),kc=function(){function t(){this.Pd={},this.yd=new er,this.gd={taskState:\"Running\",totalBytes:0,totalDocuments:0,bytesLoaded:0,documentsLoaded:0}}return t.prototype.onProgress=function(t,e,n){this.Pd={next:t,error:e,complete:n}},t.prototype.catch=function(t){return this.yd.promise.catch(t)},t.prototype.then=function(t,e){return this.yd.promise.then(t,e)},t.prototype.Ul=function(t){this.Ql(t),this.Pd.complete&&this.Pd.complete(),this.yd.resolve(t)},t.prototype.jl=function(t){this.gd.taskState=\"Error\",this.Pd.next&&this.Pd.next(this.gd),this.Pd.error&&this.Pd.error(t),this.yd.reject(t)},t.prototype.Ql=function(t){this.gd=t,this.Pd.next&&this.Pd.next(t)},t}();function Nc(t,e){var n=new kc;return function(t,e,n,r){var i=this,o=function(t,e){return function(t,e){return new vs(t,e)}(function(t,e){if(t instanceof Uint8Array)return ps(t,e);if(t instanceof ArrayBuffer)return ps(new Uint8Array(t),e);if(t instanceof ReadableStream)return t.getReader();throw new Error(\"Source of `toByteStreamReader` has to be a ArrayBuffer or ReadableStream\")}(\"string\"==typeof t?(new TextEncoder).encode(t):t),e)}(n,xo(e));t.fs.ys((function(){return Object(a.b)(i,void 0,void 0,(function(){var e;return Object(a.d)(this,(function(n){switch(n.label){case 0:return e=us,[4,bu(t)];case 1:return e.apply(void 0,[n.sent(),o,r]),[2]}}))}))}))}(Ou(t._),t.I_,e,n),n}function Ac(t,e){return function(t,e){var n=this;return t.fs.enqueue((function(){return Object(a.b)(n,void 0,void 0,(function(){var n;return Object(a.d)(this,(function(r){switch(r.label){case 0:return n=function(t,e){var n=v(t);return n.persistence.runTransaction(\"Get named query\",\"readonly\",(function(t){return n.Eo.$s(t,e)}))},[4,gu(t)];case 1:return[2,n.apply(void 0,[r.sent(),e])]}}))}))}))}(Ou(t._),e).then((function(e){return e?new wc(t,new As(t._,null,e.query)):null}))}}).call(this,n(13))},function(t,e,n){\"use strict\";(function(t){n.d(e,\"a\",(function(){return ir})),n.d(e,\"b\",(function(){return ar})),n.d(e,\"c\",(function(){return or})),n.d(e,\"d\",(function(){return sr})),n.d(e,\"e\",(function(){return ur})),n.d(e,\"f\",(function(){return cr})),n.d(e,\"g\",(function(){return nr})),n.d(e,\"h\",(function(){return rr}));var r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)};function i(t){var e=\"function\"===typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&\"number\"===typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}var o,a=\"undefined\"!==typeof globalThis?globalThis:\"undefined\"!==typeof window?window:\"undefined\"!==typeof t?t:\"undefined\"!==typeof self?self:{},s=s||{},u=a||self;function c(){}function l(t){var e=typeof t;return\"array\"==(e=\"object\"!=e?e:t?Array.isArray(t)?\"array\":e:\"null\")||\"object\"==e&&\"number\"==typeof t.length}function h(t){var e=typeof t;return\"object\"==e&&null!=t||\"function\"==e}var f=\"closure_uid_\"+(1e9*Math.random()>>>0),p=0;function d(t,e,n){return t.call.apply(t.bind,arguments)}function v(t,e,n){if(!t)throw Error();if(2<arguments.length){var r=Array.prototype.slice.call(arguments,2);return function(){var n=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(n,r),t.apply(e,n)}}return function(){return t.apply(e,arguments)}}function y(t,e,n){return(y=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?d:v).apply(null,arguments)}function g(t,e){var n=Array.prototype.slice.call(arguments,1);return function(){var e=n.slice();return e.push.apply(e,arguments),t.apply(this,e)}}function m(){return Date.now()}function b(t,e){function n(){}n.prototype=e.prototype,t.X=e.prototype,t.prototype=new n,t.prototype.constructor=t,t.Kb=function(t,n,r){for(var i=Array(arguments.length-2),o=2;o<arguments.length;o++)i[o-2]=arguments[o];return e.prototype[n].apply(t,i)}}function _(){this.j=this.j,this.i=this.i}_.prototype.j=!1,_.prototype.ja=function(){if(!this.j&&(this.j=!0,this.G(),0))(function(t){Object.prototype.hasOwnProperty.call(t,f)&&t[f]||(t[f]=++p)})(this)},_.prototype.G=function(){if(this.i)for(;this.i.length;)this.i.shift()()};var w=Array.prototype.indexOf?function(t,e){return Array.prototype.indexOf.call(t,e,void 0)}:function(t,e){if(\"string\"===typeof t)return\"string\"!==typeof e||1!=e.length?-1:t.indexOf(e,0);for(var n=0;n<t.length;n++)if(n in t&&t[n]===e)return n;return-1},E=Array.prototype.forEach?function(t,e,n){Array.prototype.forEach.call(t,e,n)}:function(t,e,n){for(var r=t.length,i=\"string\"===typeof t?t.split(\"\"):t,o=0;o<r;o++)o in i&&e.call(n,i[o],o,t)};function T(t){return Array.prototype.concat.apply([],arguments)}function I(t){var e=t.length;if(0<e){for(var n=Array(e),r=0;r<e;r++)n[r]=t[r];return n}return[]}function S(t){return/^[\\s\\xa0]*$/.test(t)}var O,C=String.prototype.trim?function(t){return t.trim()}:function(t){return/^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(t)[1]};function k(t,e){return-1!=t.indexOf(e)}function N(t,e){return t<e?-1:t>e?1:0}t:{var A=u.navigator;if(A){var P=A.userAgent;if(P){O=P;break t}}O=\"\"}function R(t,e,n){for(var r in t)e.call(n,t[r],r,t)}function j(t){var e={};for(var n in t)e[n]=t[n];return e}var x=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");function D(t,e){for(var n,r,i=1;i<arguments.length;i++){for(n in r=arguments[i])t[n]=r[n];for(var o=0;o<x.length;o++)n=x[o],Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}}function L(t){return L[\" \"](t),t}L[\" \"]=c;var M,F=k(O,\"Opera\"),U=k(O,\"Trident\")||k(O,\"MSIE\"),V=k(O,\"Edge\"),q=V||U,B=k(O,\"Gecko\")&&!(k(O.toLowerCase(),\"webkit\")&&!k(O,\"Edge\"))&&!(k(O,\"Trident\")||k(O,\"MSIE\"))&&!k(O,\"Edge\"),z=k(O.toLowerCase(),\"webkit\")&&!k(O,\"Edge\");function H(){var t=u.document;return t?t.documentMode:void 0}t:{var K=\"\",W=function(){var t=O;return B?/rv:([^\\);]+)(\\)|;)/.exec(t):V?/Edge\\/([\\d\\.]+)/.exec(t):U?/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(t):z?/WebKit\\/(\\S+)/.exec(t):F?/(?:Version)[ \\/]?(\\S+)/.exec(t):void 0}();if(W&&(K=W?W[1]:\"\"),U){var G=H();if(null!=G&&G>parseFloat(K)){M=String(G);break t}}M=K}var Q,Y={};function J(t){return function(t,e){var n=Y;return Object.prototype.hasOwnProperty.call(n,t)?n[t]:n[t]=e(t)}(t,(function(){for(var e=0,n=C(String(M)).split(\".\"),r=C(String(t)).split(\".\"),i=Math.max(n.length,r.length),o=0;0==e&&o<i;o++){var a=n[o]||\"\",s=r[o]||\"\";do{if(a=/(\\d*)(\\D*)(.*)/.exec(a)||[\"\",\"\",\"\",\"\"],s=/(\\d*)(\\D*)(.*)/.exec(s)||[\"\",\"\",\"\",\"\"],0==a[0].length&&0==s[0].length)break;e=N(0==a[1].length?0:parseInt(a[1],10),0==s[1].length?0:parseInt(s[1],10))||N(0==a[2].length,0==s[2].length)||N(a[2],s[2]),a=a[3],s=s[3]}while(0==e)}return 0<=e}))}if(u.document&&U){var X=H();Q=X||(parseInt(M,10)||void 0)}else Q=void 0;var $=Q,Z=!U||9<=Number($),tt=U&&!J(\"9\"),et=function(){if(!u.addEventListener||!Object.defineProperty)return!1;var t=!1,e=Object.defineProperty({},\"passive\",{get:function(){t=!0}});try{u.addEventListener(\"test\",c,e),u.removeEventListener(\"test\",c,e)}catch(n){}return t}();function nt(t,e){this.type=t,this.a=this.target=e,this.defaultPrevented=!1}function rt(t,e){if(nt.call(this,t?t.type:\"\"),this.relatedTarget=this.a=this.target=null,this.button=this.screenY=this.screenX=this.clientY=this.clientX=0,this.key=\"\",this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1,this.pointerId=0,this.pointerType=\"\",this.c=null,t){var n=this.type=t.type,r=t.changedTouches&&t.changedTouches.length?t.changedTouches[0]:null;if(this.target=t.target||t.srcElement,this.a=e,e=t.relatedTarget){if(B){t:{try{L(e.nodeName);var i=!0;break t}catch(o){}i=!1}i||(e=null)}}else\"mouseover\"==n?e=t.fromElement:\"mouseout\"==n&&(e=t.toElement);this.relatedTarget=e,r?(this.clientX=void 0!==r.clientX?r.clientX:r.pageX,this.clientY=void 0!==r.clientY?r.clientY:r.pageY,this.screenX=r.screenX||0,this.screenY=r.screenY||0):(this.clientX=void 0!==t.clientX?t.clientX:t.pageX,this.clientY=void 0!==t.clientY?t.clientY:t.pageY,this.screenX=t.screenX||0,this.screenY=t.screenY||0),this.button=t.button,this.key=t.key||\"\",this.ctrlKey=t.ctrlKey,this.altKey=t.altKey,this.shiftKey=t.shiftKey,this.metaKey=t.metaKey,this.pointerId=t.pointerId||0,this.pointerType=\"string\"===typeof t.pointerType?t.pointerType:it[t.pointerType]||\"\",this.c=t,t.defaultPrevented&&this.b()}}nt.prototype.b=function(){this.defaultPrevented=!0},b(rt,nt);var it={2:\"touch\",3:\"pen\",4:\"mouse\"};rt.prototype.b=function(){rt.X.b.call(this);var t=this.c;if(t.preventDefault)t.preventDefault();else if(t.returnValue=!1,tt)try{(t.ctrlKey||112<=t.keyCode&&123>=t.keyCode)&&(t.keyCode=-1)}catch(e){}};var ot=\"closure_listenable_\"+(1e6*Math.random()|0),at=0;function st(t,e,n,r,i){this.listener=t,this.proxy=null,this.src=e,this.type=n,this.capture=!!r,this.ca=i,this.key=++at,this.Y=this.Z=!1}function ut(t){t.Y=!0,t.listener=null,t.proxy=null,t.src=null,t.ca=null}function ct(t){this.src=t,this.a={},this.b=0}function lt(t,e){var n=e.type;if(n in t.a){var r,i=t.a[n],o=w(i,e);(r=0<=o)&&Array.prototype.splice.call(i,o,1),r&&(ut(e),0==t.a[n].length&&(delete t.a[n],t.b--))}}function ht(t,e,n,r){for(var i=0;i<t.length;++i){var o=t[i];if(!o.Y&&o.listener==e&&o.capture==!!n&&o.ca==r)return i}return-1}ct.prototype.add=function(t,e,n,r,i){var o=t.toString();(t=this.a[o])||(t=this.a[o]=[],this.b++);var a=ht(t,e,r,i);return-1<a?(e=t[a],n||(e.Z=!1)):((e=new st(e,this.src,o,!!r,i)).Z=n,t.push(e)),e};var ft=\"closure_lm_\"+(1e6*Math.random()|0),pt={};function dt(t,e,n,r,i){if(r&&r.once)return yt(t,e,n,r,i);if(Array.isArray(e)){for(var o=0;o<e.length;o++)dt(t,e[o],n,r,i);return null}return n=It(n),t&&t[ot]?t.va(e,n,h(r)?!!r.capture:!!r,i):vt(t,e,n,!1,r,i)}function vt(t,e,n,r,i,o){if(!e)throw Error(\"Invalid event type\");var a=h(i)?!!i.capture:!!i;if(a&&!Z)return null;var s=Et(t);if(s||(t[ft]=s=new ct(t)),(n=s.add(e,n,r,a,o)).proxy)return n;if(r=function(){var t=wt,e=Z?function(n){return t.call(e.src,e.listener,n)}:function(n){if(!(n=t.call(e.src,e.listener,n)))return n};return e}(),n.proxy=r,r.src=t,r.listener=n,t.addEventListener)et||(i=a),void 0===i&&(i=!1),t.addEventListener(e.toString(),r,i);else if(t.attachEvent)t.attachEvent(bt(e.toString()),r);else{if(!t.addListener||!t.removeListener)throw Error(\"addEventListener and attachEvent are unavailable.\");t.addListener(r)}return n}function yt(t,e,n,r,i){if(Array.isArray(e)){for(var o=0;o<e.length;o++)yt(t,e[o],n,r,i);return null}return n=It(n),t&&t[ot]?t.wa(e,n,h(r)?!!r.capture:!!r,i):vt(t,e,n,!0,r,i)}function gt(t,e,n,r,i){if(Array.isArray(e))for(var o=0;o<e.length;o++)gt(t,e[o],n,r,i);else r=h(r)?!!r.capture:!!r,n=It(n),t&&t[ot]?(t=t.c,(e=String(e).toString())in t.a&&(-1<(n=ht(o=t.a[e],n,r,i))&&(ut(o[n]),Array.prototype.splice.call(o,n,1),0==o.length&&(delete t.a[e],t.b--)))):t&&(t=Et(t))&&(e=t.a[e.toString()],t=-1,e&&(t=ht(e,n,r,i)),(n=-1<t?e[t]:null)&&mt(n))}function mt(t){if(\"number\"!==typeof t&&t&&!t.Y){var e=t.src;if(e&&e[ot])lt(e.c,t);else{var n=t.type,r=t.proxy;e.removeEventListener?e.removeEventListener(n,r,t.capture):e.detachEvent?e.detachEvent(bt(n),r):e.addListener&&e.removeListener&&e.removeListener(r),(n=Et(e))?(lt(n,t),0==n.b&&(n.src=null,e[ft]=null)):ut(t)}}}function bt(t){return t in pt?pt[t]:pt[t]=\"on\"+t}function _t(t,e){var n=t.listener,r=t.ca||t.src;return t.Z&&mt(t),n.call(r,e)}function wt(t,e){if(t.Y)return!0;if(!Z){if(!e)t:{e=[\"window\",\"event\"];for(var n=u,r=0;r<e.length;r++)if(null==(n=n[e[r]])){e=null;break t}e=n}return _t(t,e=new rt(e,this))}return _t(t,new rt(e,this))}function Et(t){return(t=t[ft])instanceof ct?t:null}var Tt=\"__closure_events_fn_\"+(1e9*Math.random()>>>0);function It(t){return\"function\"===typeof t?t:(t[Tt]||(t[Tt]=function(e){return t.handleEvent(e)}),t[Tt])}function St(){_.call(this),this.c=new ct(this),this.J=this,this.C=null}function Ot(t,e){var n,r=t.C;if(r)for(n=[];r;r=r.C)n.push(r);if(t=t.J,r=e.type||e,\"string\"===typeof e)e=new nt(e,t);else if(e instanceof nt)e.target=e.target||t;else{var i=e;D(e=new nt(r,t),i)}if(i=!0,n)for(var o=n.length-1;0<=o;o--){var a=e.a=n[o];i=Ct(a,r,!0,e)&&i}if(i=Ct(a=e.a=t,r,!0,e)&&i,i=Ct(a,r,!1,e)&&i,n)for(o=0;o<n.length;o++)i=Ct(a=e.a=n[o],r,!1,e)&&i}function Ct(t,e,n,r){if(!(e=t.c.a[String(e)]))return!0;e=e.concat();for(var i=!0,o=0;o<e.length;++o){var a=e[o];if(a&&!a.Y&&a.capture==n){var s=a.listener,u=a.ca||a.src;a.Z&&lt(t.c,a),i=!1!==s.call(u,r)&&i}}return i&&!r.defaultPrevented}b(St,_),St.prototype[ot]=!0,(o=St.prototype).addEventListener=function(t,e,n,r){dt(this,t,e,n,r)},o.removeEventListener=function(t,e,n,r){gt(this,t,e,n,r)},o.G=function(){if(St.X.G.call(this),this.c){var t,e=this.c;for(t in e.a){for(var n=e.a[t],r=0;r<n.length;r++)ut(n[r]);delete e.a[t],e.b--}}this.C=null},o.va=function(t,e,n,r){return this.c.add(String(t),e,!1,n,r)},o.wa=function(t,e,n,r){return this.c.add(String(t),e,!0,n,r)};var kt=u.JSON.stringify;function Nt(){this.b=this.a=null}var At,Pt=new(function(){function t(t,e){this.c=t,this.f=e,this.b=0,this.a=null}return t.prototype.get=function(){var t;return 0<this.b?(this.b--,t=this.a,this.a=t.next,t.next=null):t=this.c(),t},t}())((function(){return new jt}),(function(t){t.reset()}));function Rt(){var t=Mt,e=null;return t.a&&(e=t.a,t.a=t.a.next,t.a||(t.b=null),e.next=null),e}function jt(){this.next=this.b=this.a=null}function xt(t){u.setTimeout((function(){throw t}),0)}function Dt(t,e){At||function(){var t=u.Promise.resolve(void 0);At=function(){t.then(Ft)}}(),Lt||(At(),Lt=!0),Mt.add(t,e)}Nt.prototype.add=function(t,e){var n=Pt.get();n.set(t,e),this.b?this.b.next=n:this.a=n,this.b=n},jt.prototype.set=function(t,e){this.a=t,this.b=e,this.next=null},jt.prototype.reset=function(){this.next=this.b=this.a=null};var Lt=!1,Mt=new Nt;function Ft(){for(var t;t=Rt();){try{t.a.call(t.b)}catch(n){xt(n)}var e=Pt;e.f(t),100>e.b&&(e.b++,t.next=e.a,e.a=t)}Lt=!1}function Ut(t,e){St.call(this),this.b=t||1,this.a=e||u,this.f=y(this.Za,this),this.g=m()}function Vt(t){t.aa=!1,t.M&&(t.a.clearTimeout(t.M),t.M=null)}function qt(t,e,n){if(\"function\"===typeof t)n&&(t=y(t,n));else{if(!t||\"function\"!=typeof t.handleEvent)throw Error(\"Invalid listener argument\");t=y(t.handleEvent,t)}return 2147483647<Number(e)?-1:u.setTimeout(t,e||0)}function Bt(t){t.a=qt((function(){t.a=null,t.c&&(t.c=!1,Bt(t))}),t.h);var e=t.b;t.b=null,t.g.apply(null,e)}b(Ut,St),(o=Ut.prototype).aa=!1,o.M=null,o.Za=function(){if(this.aa){var t=m()-this.g;0<t&&t<.8*this.b?this.M=this.a.setTimeout(this.f,this.b-t):(this.M&&(this.a.clearTimeout(this.M),this.M=null),Ot(this,\"tick\"),this.aa&&(Vt(this),this.start()))}},o.start=function(){this.aa=!0,this.M||(this.M=this.a.setTimeout(this.f,this.b),this.g=m())},o.G=function(){Ut.X.G.call(this),Vt(this),delete this.a};var zt=function(t){function e(e,n){var r=t.call(this)||this;return r.g=e,r.h=n,r.b=null,r.c=!1,r.a=null,r}return function(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}(e,t),e.prototype.f=function(t){this.b=arguments,this.a?this.c=!0:Bt(this)},e.prototype.G=function(){t.prototype.G.call(this),this.a&&(u.clearTimeout(this.a),this.a=null,this.c=!1,this.b=null)},e}(_);function Ht(t){_.call(this),this.b=t,this.a={}}b(Ht,_);var Kt=[];function Wt(t,e,n,r){Array.isArray(n)||(n&&(Kt[0]=n.toString()),n=Kt);for(var i=0;i<n.length;i++){var o=dt(e,n[i],r||t.handleEvent,!1,t.b||t);if(!o)break;t.a[o.key]=o}}function Gt(t){R(t.a,(function(t,e){this.a.hasOwnProperty(e)&&mt(t)}),t),t.a={}}function Qt(){this.a=!0}function Yt(t,e,n,r){t.info((function(){return\"XMLHTTP TEXT (\"+e+\"): \"+function(t,e){if(!t.a)return e;if(!e)return null;try{var n=JSON.parse(e);if(n)for(t=0;t<n.length;t++)if(Array.isArray(n[t])){var r=n[t];if(!(2>r.length)){var i=r[1];if(Array.isArray(i)&&!(1>i.length)){var o=i[0];if(\"noop\"!=o&&\"stop\"!=o&&\"close\"!=o)for(var a=1;a<i.length;a++)i[a]=\"\"}}}return kt(n)}catch(s){return e}}(t,n)+(r?\" \"+r:\"\")}))}Ht.prototype.G=function(){Ht.X.G.call(this),Gt(this)},Ht.prototype.handleEvent=function(){throw Error(\"EventHandler.handleEvent not implemented\")},Qt.prototype.info=function(){};var Jt={},Xt=null;function $t(){return Xt=Xt||new St}function Zt(t){nt.call(this,Jt.Fa,t)}function te(t){var e=$t();Ot(e,new Zt(e,t))}function ee(t,e){nt.call(this,Jt.STAT_EVENT,t),this.stat=e}function ne(t){var e=$t();Ot(e,new ee(e,t))}function re(t){nt.call(this,Jt.Ga,t)}function ie(t,e){if(\"function\"!==typeof t)throw Error(\"Fn must not be null and must be a function\");return u.setTimeout((function(){t()}),e)}Jt.Fa=\"serverreachability\",b(Zt,nt),Jt.STAT_EVENT=\"statevent\",b(ee,nt),Jt.Ga=\"timingevent\",b(re,nt);var oe={NO_ERROR:0,$a:1,nb:2,mb:3,hb:4,lb:5,ob:6,Da:7,TIMEOUT:8,rb:9},ae={fb:\"complete\",Bb:\"success\",Ea:\"error\",Da:\"abort\",tb:\"ready\",ub:\"readystatechange\",TIMEOUT:\"timeout\",pb:\"incrementaldata\",sb:\"progress\",ib:\"downloadprogress\",Jb:\"uploadprogress\"};function se(){}function ue(t){var e;return(e=t.a)||(e=t.a={}),e}function ce(){}se.prototype.a=null;var le,he={OPEN:\"a\",eb:\"b\",Ea:\"c\",qb:\"d\"};function fe(){nt.call(this,\"d\")}function pe(){nt.call(this,\"c\")}function de(){}function ve(t,e,n,r){this.g=t,this.c=e,this.f=n,this.S=r||1,this.J=new Ht(this),this.P=ye,t=q?125:void 0,this.R=new Ut(t),this.B=null,this.b=!1,this.j=this.l=this.i=this.H=this.u=this.T=this.o=null,this.s=[],this.a=null,this.D=0,this.h=this.m=null,this.N=-1,this.A=!1,this.O=0,this.F=null,this.V=this.C=this.U=this.I=!1}b(fe,nt),b(pe,nt),b(de,se),le=new de;var ye=45e3,ge={},me={};function be(t,e,n){t.H=1,t.i=qe(De(e)),t.j=n,t.I=!0,_e(t,null)}function _e(t,e){t.u=m(),Te(t),t.l=De(t.i);var n=t.l,r=t.S;Array.isArray(r)||(r=[String(r)]),tn(n.b,\"t\",r),t.D=0,t.a=Yn(t.g,t.g.C?e:null),0<t.O&&(t.F=new zt(y(t.Ca,t,t.a),t.O)),Wt(t.J,t.a,\"readystatechange\",t.Xa),e=t.B?j(t.B):{},t.j?(t.m||(t.m=\"POST\"),e[\"Content-Type\"]=\"application/x-www-form-urlencoded\",t.a.ba(t.l,t.m,t.j,e)):(t.m=\"GET\",t.a.ba(t.l,t.m,null,e)),te(1),function(t,e,n,r,i,o){t.info((function(){if(t.a)if(o)for(var a=\"\",s=o.split(\"&\"),u=0;u<s.length;u++){var c=s[u].split(\"=\");if(1<c.length){var l=c[0];c=c[1];var h=l.split(\"_\");a=2<=h.length&&\"type\"==h[1]?a+(l+\"=\")+c+\"&\":a+(l+\"=redacted&\")}}else a=null;else a=o;return\"XMLHTTP REQ (\"+r+\") [attempt \"+i+\"]: \"+e+\"\\n\"+n+\"\\n\"+a}))}(t.c,t.m,t.l,t.f,t.S,t.j)}function we(t,e,n){for(var r=!0;!t.A&&t.D<n.length;){var i=Ee(t,n);if(i==me){4==e&&(t.h=4,ne(14),r=!1),Yt(t.c,t.f,null,\"[Incomplete Response]\");break}if(i==ge){t.h=4,ne(15),Yt(t.c,t.f,n,\"[Invalid Chunk]\"),r=!1;break}Yt(t.c,t.f,i,null),ke(t,i)}4==e&&0==n.length&&(t.h=1,ne(16),r=!1),t.b=t.b&&r,r?0<n.length&&!t.V&&(t.V=!0,(e=t.g).a==t&&e.U&&!e.F&&(e.c.info(\"Great, no buffering proxy detected. Bytes received: \"+n.length),qn(e),e.F=!0,ne(11))):(Yt(t.c,t.f,n,\"[Invalid Chunked Response]\"),Ce(t),Oe(t))}function Ee(t,e){var n=t.D,r=e.indexOf(\"\\n\",n);return-1==r?me:(n=Number(e.substring(n,r)),isNaN(n)?ge:(r+=1)+n>e.length?me:(e=e.substr(r,n),t.D=r+n,e))}function Te(t){t.T=m()+t.P,Ie(t,t.P)}function Ie(t,e){if(null!=t.o)throw Error(\"WatchDog timer not null\");t.o=ie(y(t.Va,t),e)}function Se(t){t.o&&(u.clearTimeout(t.o),t.o=null)}function Oe(t){0==t.g.v||t.A||Hn(t.g,t)}function Ce(t){Se(t);var e=t.F;e&&\"function\"==typeof e.ja&&e.ja(),t.F=null,Vt(t.R),Gt(t.J),t.a&&(e=t.a,t.a=null,e.abort(),e.ja())}function ke(t,e){try{var n=t.g;if(0!=n.v&&(n.a==t||un(n.b,t)))if(n.I=t.N,!t.C&&un(n.b,t)&&3==n.v){try{var r=n.ka.a.parse(e)}catch(g){r=null}if(Array.isArray(r)&&3==r.length){var i=r;if(0==i[0]){t:if(!n.j){if(n.a){if(!(n.a.u+3e3<t.u))break t;zn(n),Rn(n)}Vn(n),ne(18)}}else n.oa=i[1],0<n.oa-n.P&&37500>i[2]&&n.H&&0==n.o&&!n.m&&(n.m=ie(y(n.Sa,n),6e3));if(1>=sn(n.b)&&n.ea){try{n.ea()}catch(g){}n.ea=void 0}}else Wn(n,11)}else if((t.C||n.a==t)&&zn(n),!S(e))for(e=r=n.ka.a.parse(e),r=0;r<e.length;r++)if(i=e[r],n.P=i[0],i=i[1],2==n.v)if(\"c\"==i[0]){n.J=i[1],n.ga=i[2];var o=i[3];null!=o&&(n.ha=o,n.c.info(\"VER=\"+n.ha));var a=i[4];null!=a&&(n.pa=a,n.c.info(\"SVER=\"+n.pa));var s=i[5];if(null!=s&&\"number\"===typeof s&&0<s){var u=1.5*s;n.D=u,n.c.info(\"backChannelRequestTimeoutMs_=\"+u)}u=n;var c=t.a;if(c){var l=c.a?c.a.getResponseHeader(\"X-Client-Wire-Protocol\"):null;if(l){var h=u.b;!h.a&&(k(l,\"spdy\")||k(l,\"quic\")||k(l,\"h2\"))&&(h.f=h.g,h.a=new Set,h.b&&(cn(h,h.b),h.b=null))}if(u.A){var f=c.a?c.a.getResponseHeader(\"X-HTTP-Session-Id\"):null;f&&(u.na=f,Ve(u.B,u.A,f))}}n.v=3,n.f&&n.f.ta(),n.U&&(n.N=m()-t.u,n.c.info(\"Handshake RTT: \"+n.N+\"ms\"));var p=t;if((u=n).la=Qn(u,u.C?u.ga:null,u.fa),p.C){ln(u.b,p);var d=p,v=u.D;v&&d.setTimeout(v),d.o&&(Se(d),Te(d)),u.a=p}else Un(u);0<n.g.length&&Dn(n)}else\"stop\"!=i[0]&&\"close\"!=i[0]||Wn(n,7);else 3==n.v&&(\"stop\"==i[0]||\"close\"==i[0]?\"stop\"==i[0]?Wn(n,7):Pn(n):\"noop\"!=i[0]&&n.f&&n.f.sa(i),n.o=0);te(4)}catch(g){}}function Ne(t,e){if(t.forEach&&\"function\"==typeof t.forEach)t.forEach(e,void 0);else if(l(t)||\"string\"===typeof t)E(t,e,void 0);else{if(t.L&&\"function\"==typeof t.L)var n=t.L();else if(t.K&&\"function\"==typeof t.K)n=void 0;else if(l(t)||\"string\"===typeof t){n=[];for(var r=t.length,i=0;i<r;i++)n.push(i)}else for(i in n=[],r=0,t)n[r++]=i;i=(r=function(t){if(t.K&&\"function\"==typeof t.K)return t.K();if(\"string\"===typeof t)return t.split(\"\");if(l(t)){for(var e=[],n=t.length,r=0;r<n;r++)e.push(t[r]);return e}for(r in e=[],n=0,t)e[n++]=t[r];return e}(t)).length;for(var o=0;o<i;o++)e.call(void 0,r[o],n&&n[o],t)}}function Ae(t,e){this.b={},this.a=[],this.c=0;var n=arguments.length;if(1<n){if(n%2)throw Error(\"Uneven number of arguments\");for(var r=0;r<n;r+=2)this.set(arguments[r],arguments[r+1])}else if(t)if(t instanceof Ae)for(n=t.L(),r=0;r<n.length;r++)this.set(n[r],t.get(n[r]));else for(r in t)this.set(r,t[r])}function Pe(t){if(t.c!=t.a.length){for(var e=0,n=0;e<t.a.length;){var r=t.a[e];Re(t.b,r)&&(t.a[n++]=r),e++}t.a.length=n}if(t.c!=t.a.length){var i={};for(n=e=0;e<t.a.length;)Re(i,r=t.a[e])||(t.a[n++]=r,i[r]=1),e++;t.a.length=n}}function Re(t,e){return Object.prototype.hasOwnProperty.call(t,e)}(o=ve.prototype).setTimeout=function(t){this.P=t},o.Xa=function(t){t=t.target;var e=this.F;e&&3==Cn(t)?e.f():this.Ca(t)},o.Ca=function(t){try{if(t==this.a)t:{var e=Cn(this.a),n=this.a.ua(),r=this.a.W();if(!(3>e||3==e&&!q&&!this.a.$())){this.A||4!=e||7==n||te(8==n||0>=r?3:2),Se(this);var i=this.a.W();this.N=i;var o=this.a.$();if(this.b=200==i,function(t,e,n,r,i,o,a){t.info((function(){return\"XMLHTTP RESP (\"+r+\") [ attempt \"+i+\"]: \"+e+\"\\n\"+n+\"\\n\"+o+\" \"+a}))}(this.c,this.m,this.l,this.f,this.S,e,i),this.b){if(this.U&&!this.C){e:{if(this.a){var a,s=this.a;if((a=s.a?s.a.getResponseHeader(\"X-HTTP-Initial-Response\"):null)&&!S(a)){var u=a;break e}}u=null}if(!u){this.b=!1,this.h=3,ne(12),Ce(this),Oe(this);break t}Yt(this.c,this.f,u,\"Initial handshake response via X-HTTP-Initial-Response\"),this.C=!0,ke(this,u)}this.I?(we(this,e,o),q&&this.b&&3==e&&(Wt(this.J,this.R,\"tick\",this.Wa),this.R.start())):(Yt(this.c,this.f,o,null),ke(this,o)),4==e&&Ce(this),this.b&&!this.A&&(4==e?Hn(this.g,this):(this.b=!1,Te(this)))}else 400==i&&0<o.indexOf(\"Unknown SID\")?(this.h=3,ne(12)):(this.h=0,ne(13)),Ce(this),Oe(this)}}}catch(c){}},o.Wa=function(){if(this.a){var t=Cn(this.a),e=this.a.$();this.D<e.length&&(Se(this),we(this,t,e),this.b&&4!=t&&Te(this))}},o.cancel=function(){this.A=!0,Ce(this)},o.Va=function(){this.o=null;var t=m();0<=t-this.T?(function(t,e){t.info((function(){return\"TIMEOUT: \"+e}))}(this.c,this.l),2!=this.H&&(te(3),ne(17)),Ce(this),this.h=2,Oe(this)):Ie(this,this.T-t)},(o=Ae.prototype).K=function(){Pe(this);for(var t=[],e=0;e<this.a.length;e++)t.push(this.b[this.a[e]]);return t},o.L=function(){return Pe(this),this.a.concat()},o.get=function(t,e){return Re(this.b,t)?this.b[t]:e},o.set=function(t,e){Re(this.b,t)||(this.c++,this.a.push(t)),this.b[t]=e},o.forEach=function(t,e){for(var n=this.L(),r=0;r<n.length;r++){var i=n[r],o=this.get(i);t.call(e,o,i,this)}};var je=/^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^\\\\/?#]*)@)?([^\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\/?#]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/;function xe(t,e){if(this.c=this.j=this.f=\"\",this.h=null,this.i=this.g=\"\",this.a=!1,t instanceof xe){this.a=void 0!==e?e:t.a,Le(this,t.f),this.j=t.j,Me(this,t.c),Fe(this,t.h),this.g=t.g,e=t.b;var n=new Je;n.c=e.c,e.a&&(n.a=new Ae(e.a),n.b=e.b),Ue(this,n),this.i=t.i}else t&&(n=String(t).match(je))?(this.a=!!e,Le(this,n[1]||\"\",!0),this.j=Be(n[2]||\"\"),Me(this,n[3]||\"\",!0),Fe(this,n[4]),this.g=Be(n[5]||\"\",!0),Ue(this,n[6]||\"\",!0),this.i=Be(n[7]||\"\")):(this.a=!!e,this.b=new Je(null,this.a))}function De(t){return new xe(t)}function Le(t,e,n){t.f=n?Be(e,!0):e,t.f&&(t.f=t.f.replace(/:$/,\"\"))}function Me(t,e,n){t.c=n?Be(e,!0):e}function Fe(t,e){if(e){if(e=Number(e),isNaN(e)||0>e)throw Error(\"Bad port number \"+e);t.h=e}else t.h=null}function Ue(t,e,n){e instanceof Je?(t.b=e,function(t,e){e&&!t.f&&(Xe(t),t.c=null,t.a.forEach((function(t,e){var n=e.toLowerCase();e!=n&&($e(this,e),tn(this,n,t))}),t)),t.f=e}(t.b,t.a)):(n||(e=ze(e,Qe)),t.b=new Je(e,t.a))}function Ve(t,e,n){t.b.set(e,n)}function qe(t){return Ve(t,\"zx\",Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^m()).toString(36)),t}function Be(t,e){return t?e?decodeURI(t.replace(/%25/g,\"%2525\")):decodeURIComponent(t):\"\"}function ze(t,e,n){return\"string\"===typeof t?(t=encodeURI(t).replace(e,He),n&&(t=t.replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),t):null}function He(t){return\"%\"+((t=t.charCodeAt(0))>>4&15).toString(16)+(15&t).toString(16)}xe.prototype.toString=function(){var t=[],e=this.f;e&&t.push(ze(e,Ke,!0),\":\");var n=this.c;return(n||\"file\"==e)&&(t.push(\"//\"),(e=this.j)&&t.push(ze(e,Ke,!0),\"@\"),t.push(encodeURIComponent(String(n)).replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),null!=(n=this.h)&&t.push(\":\",String(n))),(n=this.g)&&(this.c&&\"/\"!=n.charAt(0)&&t.push(\"/\"),t.push(ze(n,\"/\"==n.charAt(0)?Ge:We,!0))),(n=this.b.toString())&&t.push(\"?\",n),(n=this.i)&&t.push(\"#\",ze(n,Ye)),t.join(\"\")};var Ke=/[#\\/\\?@]/g,We=/[#\\?:]/g,Ge=/[#\\?]/g,Qe=/[#\\?@]/g,Ye=/#/g;function Je(t,e){this.b=this.a=null,this.c=t||null,this.f=!!e}function Xe(t){t.a||(t.a=new Ae,t.b=0,t.c&&function(t,e){if(t){t=t.split(\"&\");for(var n=0;n<t.length;n++){var r=t[n].indexOf(\"=\"),i=null;if(0<=r){var o=t[n].substring(0,r);i=t[n].substring(r+1)}else o=t[n];e(o,i?decodeURIComponent(i.replace(/\\+/g,\" \")):\"\")}}}(t.c,(function(e,n){t.add(decodeURIComponent(e.replace(/\\+/g,\" \")),n)})))}function $e(t,e){Xe(t),e=en(t,e),Re(t.a.b,e)&&(t.c=null,t.b-=t.a.get(e).length,Re((t=t.a).b,e)&&(delete t.b[e],t.c--,t.a.length>2*t.c&&Pe(t)))}function Ze(t,e){return Xe(t),e=en(t,e),Re(t.a.b,e)}function tn(t,e,n){$e(t,e),0<n.length&&(t.c=null,t.a.set(en(t,e),I(n)),t.b+=n.length)}function en(t,e){return e=String(e),t.f&&(e=e.toLowerCase()),e}(o=Je.prototype).add=function(t,e){Xe(this),this.c=null,t=en(this,t);var n=this.a.get(t);return n||this.a.set(t,n=[]),n.push(e),this.b+=1,this},o.forEach=function(t,e){Xe(this),this.a.forEach((function(n,r){E(n,(function(n){t.call(e,n,r,this)}),this)}),this)},o.L=function(){Xe(this);for(var t=this.a.K(),e=this.a.L(),n=[],r=0;r<e.length;r++)for(var i=t[r],o=0;o<i.length;o++)n.push(e[r]);return n},o.K=function(t){Xe(this);var e=[];if(\"string\"===typeof t)Ze(this,t)&&(e=T(e,this.a.get(en(this,t))));else{t=this.a.K();for(var n=0;n<t.length;n++)e=T(e,t[n])}return e},o.set=function(t,e){return Xe(this),this.c=null,Ze(this,t=en(this,t))&&(this.b-=this.a.get(t).length),this.a.set(t,[e]),this.b+=1,this},o.get=function(t,e){return t&&0<(t=this.K(t)).length?String(t[0]):e},o.toString=function(){if(this.c)return this.c;if(!this.a)return\"\";for(var t=[],e=this.a.L(),n=0;n<e.length;n++){var r=e[n],i=encodeURIComponent(String(r));r=this.K(r);for(var o=0;o<r.length;o++){var a=i;\"\"!==r[o]&&(a+=\"=\"+encodeURIComponent(String(r[o]))),t.push(a)}}return this.c=t.join(\"&\")};var nn=function(t,e){this.b=t,this.a=e};function rn(t){this.g=t||on,u.PerformanceNavigationTiming?t=0<(t=u.performance.getEntriesByType(\"navigation\")).length&&(\"hq\"==t[0].nextHopProtocol||\"h2\"==t[0].nextHopProtocol):t=!!(u.ia&&u.ia.ya&&u.ia.ya()&&u.ia.ya().Lb),this.f=t?this.g:1,this.a=null,1<this.f&&(this.a=new Set),this.b=null,this.c=[]}var on=10;function an(t){return!!t.b||!!t.a&&t.a.size>=t.f}function sn(t){return t.b?1:t.a?t.a.size:0}function un(t,e){return t.b?t.b==e:!!t.a&&t.a.has(e)}function cn(t,e){t.a?t.a.add(e):t.b=e}function ln(t,e){t.b&&t.b==e?t.b=null:t.a&&t.a.has(e)&&t.a.delete(e)}function hn(t){var e,n;if(null!=t.b)return t.c.concat(t.b.s);if(null!=t.a&&0!==t.a.size){var r=t.c;try{for(var o=i(t.a.values()),a=o.next();!a.done;a=o.next()){var s=a.value;r=r.concat(s.s)}}catch(u){e={error:u}}finally{try{a&&!a.done&&(n=o.return)&&n.call(o)}finally{if(e)throw e.error}}return r}return I(t.c)}function fn(){}function pn(){this.a=new fn}function dn(t,e,n){var r=n||\"\";try{Ne(t,(function(t,n){var i=t;h(t)&&(i=kt(t)),e.push(r+n+\"=\"+encodeURIComponent(i))}))}catch(i){throw e.push(r+\"type=\"+encodeURIComponent(\"_badmap\")),i}}function vn(t,e,n,r,i){try{e.onload=null,e.onerror=null,e.onabort=null,e.ontimeout=null,i(r)}catch(o){}}rn.prototype.cancel=function(){var t,e;if(this.c=hn(this),this.b)this.b.cancel(),this.b=null;else if(this.a&&0!==this.a.size){try{for(var n=i(this.a.values()),r=n.next();!r.done;r=n.next()){r.value.cancel()}}catch(o){t={error:o}}finally{try{r&&!r.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}this.a.clear()}},fn.prototype.stringify=function(t){return u.JSON.stringify(t,void 0)},fn.prototype.parse=function(t){return u.JSON.parse(t,void 0)};var yn=u.JSON.parse;function gn(t){St.call(this),this.headers=new Ae,this.H=t||null,this.b=!1,this.s=this.a=null,this.B=\"\",this.h=0,this.f=\"\",this.g=this.A=this.l=this.u=!1,this.o=0,this.m=null,this.I=mn,this.D=this.F=!1}b(gn,St);var mn=\"\",bn=/^https?$/i,_n=[\"POST\",\"PUT\"];function wn(t){return\"content-type\"==t.toLowerCase()}function En(t,e){t.b=!1,t.a&&(t.g=!0,t.a.abort(),t.g=!1),t.f=e,t.h=5,Tn(t),Sn(t)}function Tn(t){t.u||(t.u=!0,Ot(t,\"complete\"),Ot(t,\"error\"))}function In(t){if(t.b&&\"undefined\"!=typeof s&&(!t.s[1]||4!=Cn(t)||2!=t.W()))if(t.l&&4==Cn(t))qt(t.za,0,t);else if(Ot(t,\"readystatechange\"),4==Cn(t)){t.b=!1;try{var e,n=t.W();t:switch(n){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var r=!0;break t;default:r=!1}if(!(e=r)){var i;if(i=0===n){var o=String(t.B).match(je)[1]||null;if(!o&&u.self&&u.self.location){var a=u.self.location.protocol;o=a.substr(0,a.length-1)}i=!bn.test(o?o.toLowerCase():\"\")}e=i}if(e)Ot(t,\"complete\"),Ot(t,\"success\");else{t.h=6;try{var c=2<Cn(t)?t.a.statusText:\"\"}catch(n){c=\"\"}t.f=c+\" [\"+t.W()+\"]\",Tn(t)}}finally{Sn(t)}}}function Sn(t,e){if(t.a){On(t);var n=t.a,r=t.s[0]?c:null;t.a=null,t.s=null,e||Ot(t,\"ready\");try{n.onreadystatechange=r}catch(i){}}}function On(t){t.a&&t.D&&(t.a.ontimeout=null),t.m&&(u.clearTimeout(t.m),t.m=null)}function Cn(t){return t.a?t.a.readyState:0}function kn(t,e,n){t:{for(r in n){var r=!1;break t}r=!0}r||(n=function(t){var e=\"\";return R(t,(function(t,n){e+=n,e+=\":\",e+=t,e+=\"\\r\\n\"})),e}(n),\"string\"===typeof t?null!=n&&encodeURIComponent(String(n)):Ve(t,e,n))}function Nn(t,e,n){return n&&n.internalChannelParams&&n.internalChannelParams[t]||e}function An(t){this.pa=0,this.g=[],this.c=new Qt,this.ga=this.la=this.B=this.fa=this.a=this.na=this.A=this.V=this.i=this.O=this.l=null,this.Oa=this.R=0,this.La=Nn(\"failFast\",!1,t),this.H=this.m=this.j=this.h=this.f=null,this.S=!0,this.I=this.oa=this.P=-1,this.T=this.o=this.u=0,this.Ha=Nn(\"baseRetryDelayMs\",5e3,t),this.Ra=Nn(\"retryDelaySeedMs\",1e4,t),this.Ma=Nn(\"forwardChannelMaxRetries\",2,t),this.ma=Nn(\"forwardChannelRequestTimeoutMs\",2e4,t),this.Na=t&&t.g||void 0,this.D=void 0,this.C=t&&t.supportsCrossDomainXhr||!1,this.J=\"\",this.b=new rn(t&&t.concurrentRequestLimit),this.ka=new pn,this.da=t&&t.fastHandshake||!1,this.Ia=t&&t.b||!1,t&&t.f&&(this.c.a=!1),t&&t.forceLongPolling&&(this.S=!1),this.U=!this.da&&this.S&&t&&t.detectBufferingProxy||!1,this.ea=void 0,this.N=0,this.F=!1,this.s=null,(this.Ka=t&&t.c||!1)&&this.c.info(\"Opt-in to enable Chrome Origin Trials.\")}function Pn(t){if(jn(t),3==t.v){var e=t.R++,n=De(t.B);Ve(n,\"SID\",t.J),Ve(n,\"RID\",e),Ve(n,\"TYPE\",\"terminate\"),Mn(t,n),(e=new ve(t,t.c,e,void 0)).H=2,e.i=qe(De(n)),n=!1,u.navigator&&u.navigator.sendBeacon&&(n=u.navigator.sendBeacon(e.i.toString(),\"\")),!n&&u.Image&&((new Image).src=e.i,n=!0),n||(e.a=Yn(e.g,null),e.a.ba(e.i)),e.u=m(),Te(e)}Gn(t)}function Rn(t){t.a&&(qn(t),t.a.cancel(),t.a=null)}function jn(t){Rn(t),t.j&&(u.clearTimeout(t.j),t.j=null),zn(t),t.b.cancel(),t.h&&(\"number\"===typeof t.h&&u.clearTimeout(t.h),t.h=null)}function xn(t,e){t.g.push(new nn(t.Oa++,e)),3==t.v&&Dn(t)}function Dn(t){an(t.b)||t.h||(t.h=!0,Dt(t.Ba,t),t.u=0)}function Ln(t,e){var n;n=e?e.f:t.R++;var r=De(t.B);Ve(r,\"SID\",t.J),Ve(r,\"RID\",n),Ve(r,\"AID\",t.P),Mn(t,r),t.i&&t.l&&kn(r,t.i,t.l),n=new ve(t,t.c,n,t.u+1),null===t.i&&(n.B=t.l),e&&(t.g=e.s.concat(t.g)),e=Fn(t,n,1e3),n.setTimeout(Math.round(.5*t.ma)+Math.round(.5*t.ma*Math.random())),cn(t.b,n),be(n,r,e)}function Mn(t,e){t.f&&Ne({},(function(t,n){Ve(e,n,t)}))}function Fn(t,e,n){n=Math.min(t.g.length,n);var r=t.f?y(t.f.Ja,t.f,t):null;t:for(var i=t.g,o=-1;;){var a=[\"count=\"+n];-1==o?0<n?(o=i[0].b,a.push(\"ofs=\"+o)):o=0:a.push(\"ofs=\"+o);for(var s=!0,u=0;u<n;u++){var c=i[u].b,l=i[u].a;if(0>(c-=o))o=Math.max(0,i[u].b-100),s=!1;else try{dn(l,a,\"req\"+c+\"_\")}catch(h){r&&r(l)}}if(s){r=a.join(\"&\");break t}}return t=t.g.splice(0,n),e.s=t,r}function Un(t){t.a||t.j||(t.T=1,Dt(t.Aa,t),t.o=0)}function Vn(t){return!(t.a||t.j||3<=t.o)&&(t.T++,t.j=ie(y(t.Aa,t),Kn(t,t.o)),t.o++,!0)}function qn(t){null!=t.s&&(u.clearTimeout(t.s),t.s=null)}function Bn(t){t.a=new ve(t,t.c,\"rpc\",t.T),null===t.i&&(t.a.B=t.l),t.a.O=0;var e=De(t.la);Ve(e,\"RID\",\"rpc\"),Ve(e,\"SID\",t.J),Ve(e,\"CI\",t.H?\"0\":\"1\"),Ve(e,\"AID\",t.P),Mn(t,e),Ve(e,\"TYPE\",\"xmlhttp\"),t.i&&t.l&&kn(e,t.i,t.l),t.D&&t.a.setTimeout(t.D);var n=t.a;t=t.ga,n.H=1,n.i=qe(De(e)),n.j=null,n.I=!0,_e(n,t)}function zn(t){null!=t.m&&(u.clearTimeout(t.m),t.m=null)}function Hn(t,e){var n=null;if(t.a==e){zn(t),qn(t),t.a=null;var r=2}else{if(!un(t.b,e))return;n=e.s,ln(t.b,e),r=1}if(t.I=e.N,0!=t.v)if(e.b)if(1==r){n=e.j?e.j.length:0,e=m()-e.u;var i=t.u;Ot(r=$t(),new re(r,n,e,i)),Dn(t)}else Un(t);else if(3==(i=e.h)||0==i&&0<t.I||!(1==r&&function(t,e){return!(sn(t.b)>=t.b.f-(t.h?1:0))&&(t.h?(t.g=e.s.concat(t.g),!0):!(1==t.v||2==t.v||t.u>=(t.La?0:t.Ma))&&(t.h=ie(y(t.Ba,t,e),Kn(t,t.u)),t.u++,!0))}(t,e)||2==r&&Vn(t)))switch(n&&0<n.length&&(e=t.b,e.c=e.c.concat(n)),i){case 1:Wn(t,5);break;case 4:Wn(t,10);break;case 3:Wn(t,6);break;default:Wn(t,2)}}function Kn(t,e){var n=t.Ha+Math.floor(Math.random()*t.Ra);return t.f||(n*=2),n*e}function Wn(t,e){if(t.c.info(\"Error code \"+e),2==e){var n=null;t.f&&(n=null);var r=y(t.Ya,t);n||(n=new xe(\"//www.google.com/images/cleardot.gif\"),u.location&&\"http\"==u.location.protocol||Le(n,\"https\"),qe(n)),function(t,e){var n=new Qt;if(u.Image){var r=new Image;r.onload=g(vn,n,r,\"TestLoadImage: loaded\",!0,e),r.onerror=g(vn,n,r,\"TestLoadImage: error\",!1,e),r.onabort=g(vn,n,r,\"TestLoadImage: abort\",!1,e),r.ontimeout=g(vn,n,r,\"TestLoadImage: timeout\",!1,e),u.setTimeout((function(){r.ontimeout&&r.ontimeout()}),1e4),r.src=t}else e(!1)}(n.toString(),r)}else ne(2);t.v=0,t.f&&t.f.ra(e),Gn(t),jn(t)}function Gn(t){t.v=0,t.I=-1,t.f&&(0==hn(t.b).length&&0==t.g.length||(t.b.c.length=0,I(t.g),t.g.length=0),t.f.qa())}function Qn(t,e,n){var r=function(t){return t instanceof xe?De(t):new xe(t,void 0)}(n);if(\"\"!=r.c)e&&Me(r,e+\".\"+r.c),Fe(r,r.h);else{var i=u.location;r=function(t,e,n,r){var i=new xe(null,void 0);return t&&Le(i,t),e&&Me(i,e),n&&Fe(i,n),r&&(i.g=r),i}(i.protocol,e?e+\".\"+i.hostname:i.hostname,+i.port,n)}return t.V&&R(t.V,(function(t,e){Ve(r,e,t)})),e=t.A,n=t.na,e&&n&&Ve(r,e,n),Ve(r,\"VER\",t.ha),Mn(t,r),r}function Yn(t,e){if(e&&!t.C)throw Error(\"Can't create secondary domain capable XhrIo object.\");return(e=new gn(t.Na)).F=t.C,e}function Jn(){}function Xn(){if(U&&!(10<=Number($)))throw Error(\"Environmental error: no available transport.\")}function $n(t,e){St.call(this),this.a=new An(e),this.o=t,this.b=e&&e.messageUrlParams||null,t=e&&e.messageHeaders||null,e&&e.clientProtocolHeaderRequired&&(t?t[\"X-Client-Protocol\"]=\"webchannel\":t={\"X-Client-Protocol\":\"webchannel\"}),this.a.l=t,t=e&&e.initMessageHeaders||null,e&&e.messageContentType&&(t?t[\"X-WebChannel-Content-Type\"]=e.messageContentType:t={\"X-WebChannel-Content-Type\":e.messageContentType}),e&&e.a&&(t?t[\"X-WebChannel-Client-Profile\"]=e.a:t={\"X-WebChannel-Client-Profile\":e.a}),this.a.O=t,(t=e&&e.httpHeadersOverwriteParam)&&!S(t)&&(this.a.i=t),this.m=e&&e.supportsCrossDomainXhr||!1,this.l=e&&e.sendRawJson||!1,(e=e&&e.httpSessionIdParam)&&!S(e)&&(this.a.A=e,null!==(t=this.b)&&e in t&&(e in(t=this.b)&&delete t[e])),this.f=new er(this)}function Zn(t){fe.call(this);var e=t.__sm__;if(e){t:{for(var n in e){t=n;break t}t=void 0}(this.c=t)?(t=this.c,this.data=null!==e&&t in e?e[t]:void 0):this.data=e}else this.data=t}function tr(){pe.call(this),this.status=1}function er(t){this.a=t}(o=gn.prototype).ba=function(t,e,n,r){if(this.a)throw Error(\"[goog.net.XhrIo] Object is active with another request=\"+this.B+\"; newUri=\"+t);e=e?e.toUpperCase():\"GET\",this.B=t,this.f=\"\",this.h=0,this.u=!1,this.b=!0,this.a=new XMLHttpRequest,this.s=this.H?ue(this.H):ue(le),this.a.onreadystatechange=y(this.za,this);try{this.A=!0,this.a.open(e,String(t),!0),this.A=!1}catch(o){return void En(this,o)}t=n||\"\";var i=new Ae(this.headers);r&&Ne(r,(function(t,e){i.set(e,t)})),r=function(t){t:{for(var e=wn,n=t.length,r=\"string\"===typeof t?t.split(\"\"):t,i=0;i<n;i++)if(i in r&&e.call(void 0,r[i],i,t)){e=i;break t}e=-1}return 0>e?null:\"string\"===typeof t?t.charAt(e):t[e]}(i.L()),n=u.FormData&&t instanceof u.FormData,!(0<=w(_n,e))||r||n||i.set(\"Content-Type\",\"application/x-www-form-urlencoded;charset=utf-8\"),i.forEach((function(t,e){this.a.setRequestHeader(e,t)}),this),this.I&&(this.a.responseType=this.I),\"withCredentials\"in this.a&&this.a.withCredentials!==this.F&&(this.a.withCredentials=this.F);try{On(this),0<this.o&&((this.D=function(t){return U&&J(9)&&\"number\"===typeof t.timeout&&void 0!==t.ontimeout}(this.a))?(this.a.timeout=this.o,this.a.ontimeout=y(this.xa,this)):this.m=qt(this.xa,this.o,this)),this.l=!0,this.a.send(t),this.l=!1}catch(o){En(this,o)}},o.xa=function(){\"undefined\"!=typeof s&&this.a&&(this.f=\"Timed out after \"+this.o+\"ms, aborting\",this.h=8,Ot(this,\"timeout\"),this.abort(8))},o.abort=function(t){this.a&&this.b&&(this.b=!1,this.g=!0,this.a.abort(),this.g=!1,this.h=t||7,Ot(this,\"complete\"),Ot(this,\"abort\"),Sn(this))},o.G=function(){this.a&&(this.b&&(this.b=!1,this.g=!0,this.a.abort(),this.g=!1),Sn(this,!0)),gn.X.G.call(this)},o.za=function(){this.j||(this.A||this.l||this.g?In(this):this.Ua())},o.Ua=function(){In(this)},o.W=function(){try{return 2<Cn(this)?this.a.status:-1}catch(t){return-1}},o.$=function(){try{return this.a?this.a.responseText:\"\"}catch(t){return\"\"}},o.Pa=function(t){if(this.a){var e=this.a.responseText;return t&&0==e.indexOf(t)&&(e=e.substring(t.length)),yn(e)}},o.ua=function(){return this.h},o.Qa=function(){return\"string\"===typeof this.f?this.f:String(this.f)},(o=An.prototype).ha=8,o.v=1,o.Ba=function(t){if(this.h)if(this.h=null,1==this.v){if(!t){this.R=Math.floor(1e5*Math.random()),t=this.R++;var e,n=new ve(this,this.c,t,void 0),r=this.l;if(this.O&&(r?D(r=j(r),this.O):r=this.O),null===this.i&&(n.B=r),this.da)t:{for(var i=e=0;i<this.g.length;i++){var o=this.g[i];if(void 0===(o=\"__data__\"in o.a&&\"string\"===typeof(o=o.a.__data__)?o.length:void 0))break;if(4096<(e+=o)){e=i;break t}if(4096===e||i===this.g.length-1){e=i+1;break t}}e=1e3}else e=1e3;e=Fn(this,n,e),Ve(i=De(this.B),\"RID\",t),Ve(i,\"CVER\",22),this.A&&Ve(i,\"X-HTTP-Session-Id\",this.A),Mn(this,i),this.i&&r&&kn(i,this.i,r),cn(this.b,n),this.Ia&&Ve(i,\"TYPE\",\"init\"),this.da?(Ve(i,\"$req\",e),Ve(i,\"SID\",\"null\"),n.U=!0,be(n,i,null)):be(n,i,e),this.v=2}}else 3==this.v&&(t?Ln(this,t):0==this.g.length||an(this.b)||Ln(this))},o.Aa=function(){if(this.j=null,Bn(this),this.U&&!(this.F||null==this.a||0>=this.N)){var t=2*this.N;this.c.info(\"BP detection timer enabled: \"+t),this.s=ie(y(this.Ta,this),t)}},o.Ta=function(){this.s&&(this.s=null,this.c.info(\"BP detection timeout reached.\"),this.c.info(\"Buffering proxy detected and switch to long-polling!\"),this.H=!1,this.F=!0,ne(10),Rn(this),Bn(this))},o.Sa=function(){null!=this.m&&(this.m=null,Rn(this),Vn(this),ne(19))},o.Ya=function(t){t?(this.c.info(\"Successfully pinged google.com\"),ne(2)):(this.c.info(\"Failed to ping google.com\"),ne(1))},(o=Jn.prototype).ta=function(){},o.sa=function(){},o.ra=function(){},o.qa=function(){},o.Ja=function(){},Xn.prototype.a=function(t,e){return new $n(t,e)},b($n,St),$n.prototype.g=function(){this.a.f=this.f,this.m&&(this.a.C=!0);var t=this.a,e=this.o,n=this.b||void 0;ne(0),t.fa=e,t.V=n||{},t.H=t.S,t.B=Qn(t,null,t.fa),Dn(t)},$n.prototype.close=function(){Pn(this.a)},$n.prototype.h=function(t){if(\"string\"===typeof t){var e={};e.__data__=t,xn(this.a,e)}else this.l?((e={}).__data__=kt(t),xn(this.a,e)):xn(this.a,t)},$n.prototype.G=function(){this.a.f=null,delete this.f,Pn(this.a),delete this.a,$n.X.G.call(this)},b(Zn,fe),b(tr,pe),b(er,Jn),er.prototype.ta=function(){Ot(this.a,\"a\")},er.prototype.sa=function(t){Ot(this.a,new Zn(t))},er.prototype.ra=function(t){Ot(this.a,new tr(t))},er.prototype.qa=function(){Ot(this.a,\"b\")},Xn.prototype.createWebChannel=Xn.prototype.a,$n.prototype.send=$n.prototype.h,$n.prototype.open=$n.prototype.g,$n.prototype.close=$n.prototype.close,oe.NO_ERROR=0,oe.TIMEOUT=8,oe.HTTP_ERROR=6,ae.COMPLETE=\"complete\",ce.EventType=he,he.OPEN=\"a\",he.CLOSE=\"b\",he.ERROR=\"c\",he.MESSAGE=\"d\",St.prototype.listen=St.prototype.va,gn.prototype.listenOnce=gn.prototype.wa,gn.prototype.getLastError=gn.prototype.Qa,gn.prototype.getLastErrorCode=gn.prototype.ua,gn.prototype.getStatus=gn.prototype.W,gn.prototype.getResponseJson=gn.prototype.Pa,gn.prototype.getResponseText=gn.prototype.$,gn.prototype.send=gn.prototype.ba;var nr=function(){return new Xn},rr=function(){return $t()},ir=oe,or=ae,ar=Jt,sr={gb:0,jb:1,kb:2,Db:3,Ib:4,Fb:5,Gb:6,Eb:7,Cb:8,Hb:9,PROXY:10,NOPROXY:11,Ab:12,wb:13,xb:14,vb:15,yb:16,zb:17,bb:18,ab:19,cb:20},ur=ce,cr=gn}).call(this,n(12))},function(t,e,n){\"use strict\";t.exports=n(17)},function(t,e,n){!function(t){\"use strict\";function e(t){return Array.prototype.slice.call(t)}function n(t){return new Promise((function(e,n){t.onsuccess=function(){e(t.result)},t.onerror=function(){n(t.error)}}))}function r(t,e,r){var i,o=new Promise((function(o,a){n(i=t[e].apply(t,r)).then(o,a)}));return o.request=i,o}function i(t,e,n){var i=r(t,e,n);return i.then((function(t){if(t)return new l(t,i.request)}))}function o(t,e,n){n.forEach((function(n){Object.defineProperty(t.prototype,n,{get:function(){return this[e][n]},set:function(t){this[e][n]=t}})}))}function a(t,e,n,i){i.forEach((function(i){i in n.prototype&&(t.prototype[i]=function(){return r(this[e],i,arguments)})}))}function s(t,e,n,r){r.forEach((function(r){r in n.prototype&&(t.prototype[r]=function(){return this[e][r].apply(this[e],arguments)})}))}function u(t,e,n,r){r.forEach((function(r){r in n.prototype&&(t.prototype[r]=function(){return i(this[e],r,arguments)})}))}function c(t){this._index=t}function l(t,e){this._cursor=t,this._request=e}function h(t){this._store=t}function f(t){this._tx=t,this.complete=new Promise((function(e,n){t.oncomplete=function(){e()},t.onerror=function(){n(t.error)},t.onabort=function(){n(t.error)}}))}function p(t,e,n){this._db=t,this.oldVersion=e,this.transaction=new f(n)}function d(t){this._db=t}function v(t,e,n){var i=r(indexedDB,\"open\",[t,e]),o=i.request;return o&&(o.onupgradeneeded=function(t){n&&n(new p(o.result,t.oldVersion,o.transaction))}),i.then((function(t){return new d(t)}))}function y(t){return r(indexedDB,\"deleteDatabase\",[t])}o(c,\"_index\",[\"name\",\"keyPath\",\"multiEntry\",\"unique\"]),a(c,\"_index\",IDBIndex,[\"get\",\"getKey\",\"getAll\",\"getAllKeys\",\"count\"]),u(c,\"_index\",IDBIndex,[\"openCursor\",\"openKeyCursor\"]),o(l,\"_cursor\",[\"direction\",\"key\",\"primaryKey\",\"value\"]),a(l,\"_cursor\",IDBCursor,[\"update\",\"delete\"]),[\"advance\",\"continue\",\"continuePrimaryKey\"].forEach((function(t){t in IDBCursor.prototype&&(l.prototype[t]=function(){var e=this,r=arguments;return Promise.resolve().then((function(){return e._cursor[t].apply(e._cursor,r),n(e._request).then((function(t){if(t)return new l(t,e._request)}))}))})})),h.prototype.createIndex=function(){return new c(this._store.createIndex.apply(this._store,arguments))},h.prototype.index=function(){return new c(this._store.index.apply(this._store,arguments))},o(h,\"_store\",[\"name\",\"keyPath\",\"indexNames\",\"autoIncrement\"]),a(h,\"_store\",IDBObjectStore,[\"put\",\"add\",\"delete\",\"clear\",\"get\",\"getAll\",\"getKey\",\"getAllKeys\",\"count\"]),u(h,\"_store\",IDBObjectStore,[\"openCursor\",\"openKeyCursor\"]),s(h,\"_store\",IDBObjectStore,[\"deleteIndex\"]),f.prototype.objectStore=function(){return new h(this._tx.objectStore.apply(this._tx,arguments))},o(f,\"_tx\",[\"objectStoreNames\",\"mode\"]),s(f,\"_tx\",IDBTransaction,[\"abort\"]),p.prototype.createObjectStore=function(){return new h(this._db.createObjectStore.apply(this._db,arguments))},o(p,\"_db\",[\"name\",\"version\",\"objectStoreNames\"]),s(p,\"_db\",IDBDatabase,[\"deleteObjectStore\",\"close\"]),d.prototype.transaction=function(){return new f(this._db.transaction.apply(this._db,arguments))},o(d,\"_db\",[\"name\",\"version\",\"objectStoreNames\"]),s(d,\"_db\",IDBDatabase,[\"close\"]),[\"openCursor\",\"openKeyCursor\"].forEach((function(t){[h,c].forEach((function(n){t in n.prototype&&(n.prototype[t.replace(\"open\",\"iterate\")]=function(){var n=e(arguments),r=n[n.length-1],i=this._store||this._index,o=i[t].apply(i,n.slice(0,-1));o.onsuccess=function(){r(o.result)}})}))})),[c,h].forEach((function(t){t.prototype.getAll||(t.prototype.getAll=function(t,e){var n=this,r=[];return new Promise((function(i){n.iterateCursor(t,(function(t){t?(r.push(t.value),void 0===e||r.length!=e?t.continue():i(r)):i(r)}))}))})})),t.openDb=v,t.deleteDb=y,Object.defineProperty(t,\"__esModule\",{value:!0})}(e)},function(t,e,n){\"use strict\";function r(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function i(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(\"undefined\"!==typeof Symbol&&Symbol.iterator in Object(t)){var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(u){i=!0,o=u}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}}(t,e)||function(t,e){if(t){if(\"string\"===typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===n&&t.constructor&&(n=t.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(t):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(t,e):void 0}}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}n.d(e,\"a\",(function(){return i}))},function(t,e,n){\"use strict\";var r=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function a(t){if(null===t||void 0===t)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(t)}t.exports=function(){try{if(!Object.assign)return!1;var t=new String(\"abc\");if(t[5]=\"de\",\"5\"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},n=0;n<10;n++)e[\"_\"+String.fromCharCode(n)]=n;if(\"0123456789\"!==Object.getOwnPropertyNames(e).map((function(t){return e[t]})).join(\"\"))return!1;var r={};return\"abcdefghijklmnopqrst\".split(\"\").forEach((function(t){r[t]=t})),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},r)).join(\"\")}catch(i){return!1}}()?Object.assign:function(t,e){for(var n,s,u=a(t),c=1;c<arguments.length;c++){for(var l in n=Object(arguments[c]))i.call(n,l)&&(u[l]=n[l]);if(r){s=r(n);for(var h=0;h<s.length;h++)o.call(n,s[h])&&(u[s[h]]=n[s[h]])}}return u}},function(t,e){var n;n=function(){return this}();try{n=n||new Function(\"return this\")()}catch(r){\"object\"===typeof window&&(n=window)}t.exports=n},function(t,e){var n,r,i=t.exports={};function o(){throw new Error(\"setTimeout has not been defined\")}function a(){throw new Error(\"clearTimeout has not been defined\")}function s(t){if(n===setTimeout)return setTimeout(t,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n=\"function\"===typeof setTimeout?setTimeout:o}catch(t){n=o}try{r=\"function\"===typeof clearTimeout?clearTimeout:a}catch(t){r=a}}();var u,c=[],l=!1,h=-1;function f(){l&&u&&(l=!1,u.length?c=u.concat(c):h=-1,c.length&&p())}function p(){if(!l){var t=s(f);l=!0;for(var e=c.length;e;){for(u=c,c=[];++h<e;)u&&u[h].run();h=-1,e=c.length}u=null,l=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function v(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];c.push(new d(t,e)),1!==c.length||l||s(p)},d.prototype.run=function(){this.fun.apply(null,this.array)},i.title=\"browser\",i.browser=!0,i.env={},i.argv=[],i.version=\"\",i.versions={},i.on=v,i.addListener=v,i.once=v,i.off=v,i.removeListener=v,i.removeAllListeners=v,i.emit=v,i.prependListener=v,i.prependOnceListener=v,i.listeners=function(t){return[]},i.binding=function(t){throw new Error(\"process.binding is not supported\")},i.cwd=function(){return\"/\"},i.chdir=function(t){throw new Error(\"process.chdir is not supported\")},i.umask=function(){return 0}},function(t,e,n){\"use strict\";!function t(){if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&\"function\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(e){console.error(e)}}(),t.exports=n(18)},function(t,e,n){\"use strict\";n.d(e,\"a\",(function(){return i.a}));var r,i=n(2),o=(n(22),n(23),n(4)),a=n(1),s=(n(7),n(6)),u=n(5),c={Firestore:s.d,GeoPoint:s.q,Timestamp:s.t,Blob:s.c,Transaction:s.p,WriteBatch:s.e,DocumentReference:s.a,DocumentSnapshot:s.g,Query:s.i,QueryDocumentSnapshot:s.f,QuerySnapshot:s.m,CollectionReference:s.j,FieldPath:s.o,FieldValue:s.s,setLogLevel:s.b,CACHE_SIZE_UNLIMITED:s.k};(function(t,e){t.INTERNAL.registerComponent(new u.a(\"firestore\",(function(t){return function(t,e){return new s.d(t,new s.h(t,e),new s.r)}(t.getProvider(\"app\").getImmediate(),t.getProvider(\"auth-internal\"))}),\"PUBLIC\").setServiceProps(Object.assign({},c)))})(r=i.a),r.registerVersion(\"@firebase/firestore\",\"2.1.2\"),function(t){t.prototype.loadBundle=function(t){return Object(s.l)(this,t)},t.prototype.namedQuery=function(t){return Object(s.n)(this,t)}}(s.d);var l=n(0),h={OK:\"ok\",CANCELLED:\"cancelled\",UNKNOWN:\"unknown\",INVALID_ARGUMENT:\"invalid-argument\",DEADLINE_EXCEEDED:\"deadline-exceeded\",NOT_FOUND:\"not-found\",ALREADY_EXISTS:\"already-exists\",PERMISSION_DENIED:\"permission-denied\",UNAUTHENTICATED:\"unauthenticated\",RESOURCE_EXHAUSTED:\"resource-exhausted\",FAILED_PRECONDITION:\"failed-precondition\",ABORTED:\"aborted\",OUT_OF_RANGE:\"out-of-range\",UNIMPLEMENTED:\"unimplemented\",INTERNAL:\"internal\",UNAVAILABLE:\"unavailable\",DATA_LOSS:\"data-loss\"},f=function(t){function e(n,r,i){var o=t.call(this,r)||this;return Object.setPrototypeOf(o,e.prototype),o.code=n,o.details=i,o}return Object(l.c)(e,t),e}(Error);var p=function(){function t(t,e){var n=this;this.auth=null,this.messaging=null,this.auth=t.getImmediate({optional:!0}),this.messaging=e.getImmediate({optional:!0}),this.auth||t.get().then((function(t){return n.auth=t}),(function(){})),this.messaging||e.get().then((function(t){return n.messaging=t}),(function(){}))}return t.prototype.getAuthToken=function(){return Object(l.b)(this,void 0,void 0,(function(){var t;return Object(l.d)(this,(function(e){switch(e.label){case 0:if(!this.auth)return[2,void 0];e.label=1;case 1:return e.trys.push([1,3,,4]),[4,this.auth.getToken()];case 2:return(t=e.sent())?[2,t.accessToken]:[2,void 0];case 3:return e.sent(),[2,void 0];case 4:return[2]}}))}))},t.prototype.getInstanceIdToken=function(){return Object(l.b)(this,void 0,void 0,(function(){return Object(l.d)(this,(function(t){if(!this.messaging||!(\"Notification\"in self)||\"granted\"!==Notification.permission)return[2,void 0];try{return[2,this.messaging.getToken()]}catch(r){return[2,void 0]}return[2]}))}))},t.prototype.getContext=function(){return Object(l.b)(this,void 0,void 0,(function(){var t,e;return Object(l.d)(this,(function(n){switch(n.label){case 0:return[4,this.getAuthToken()];case 1:return t=n.sent(),[4,this.getInstanceIdToken()];case 2:return e=n.sent(),[2,{authToken:t,instanceIdToken:e}]}}))}))},t}();function d(t,e){var n={};for(var r in t)t.hasOwnProperty(r)&&(n[r]=e(t[r]));return n}var v=function(){function t(){}return t.prototype.encode=function(t){var e=this;if(null==t)return null;if(t instanceof Number&&(t=t.valueOf()),\"number\"===typeof t&&isFinite(t))return t;if(!0===t||!1===t)return t;if(\"[object String]\"===Object.prototype.toString.call(t))return t;if(Array.isArray(t))return t.map((function(t){return e.encode(t)}));if(\"function\"===typeof t||\"object\"===typeof t)return d(t,(function(t){return e.encode(t)}));throw new Error(\"Data cannot be encoded in JSON: \"+t)},t.prototype.decode=function(t){var e=this;if(null==t)return t;if(t[\"@type\"])switch(t[\"@type\"]){case\"type.googleapis.com/google.protobuf.Int64Value\":case\"type.googleapis.com/google.protobuf.UInt64Value\":var n=Number(t.value);if(isNaN(n))throw new Error(\"Data cannot be decoded from JSON: \"+t);return n;default:throw new Error(\"Data cannot be decoded from JSON: \"+t)}return Array.isArray(t)?t.map((function(t){return e.decode(t)})):\"function\"===typeof t||\"object\"===typeof t?d(t,(function(t){return e.decode(t)})):t},t}();var y=function(){function t(t,e,n,i,o){var a=this;void 0===i&&(i=\"us-central1\"),this.app_=t,this.fetchImpl=o,this.serializer=new v,this.emulatorOrigin=null,this.INTERNAL={delete:function(){return Promise.resolve(a.deleteService())}},this.contextProvider=new p(e,n),this.cancelAllRequests=new Promise((function(t){a.deleteService=function(){return t()}}));try{var s=new URL(i);this.customDomain=s.origin,this.region=\"us-central1\"}catch(r){this.customDomain=null,this.region=i}}return Object.defineProperty(t.prototype,\"app\",{get:function(){return this.app_},enumerable:!1,configurable:!0}),t.prototype._url=function(t){var e=this.app_.options.projectId;return null!==this.emulatorOrigin?this.emulatorOrigin+\"/\"+e+\"/\"+this.region+\"/\"+t:null!==this.customDomain?this.customDomain+\"/\"+t:\"https://\"+this.region+\"-\"+e+\".cloudfunctions.net/\"+t},t.prototype.useEmulator=function(t,e){this.emulatorOrigin=\"http://\"+t+\":\"+e},t.prototype.useFunctionsEmulator=function(t){this.emulatorOrigin=t},t.prototype.httpsCallable=function(t,e){var n=this;return function(r){return n.call(t,r,e||{})}},t.prototype.postJSON=function(t,e,n){return Object(l.b)(this,void 0,void 0,(function(){var r,i;return Object(l.d)(this,(function(o){switch(o.label){case 0:n[\"Content-Type\"]=\"application/json\",o.label=1;case 1:return o.trys.push([1,3,,4]),[4,this.fetchImpl(t,{method:\"POST\",body:JSON.stringify(e),headers:n})];case 2:return r=o.sent(),[3,4];case 3:return o.sent(),[2,{status:0,json:null}];case 4:i=null,o.label=5;case 5:return o.trys.push([5,7,,8]),[4,r.json()];case 6:return i=o.sent(),[3,8];case 7:return o.sent(),[3,8];case 8:return[2,{status:r.status,json:i}]}}))}))},t.prototype.call=function(t,e,n){return Object(l.b)(this,void 0,void 0,(function(){var i,o,a,s,u,c,p,d,v,y,m;return Object(l.d)(this,(function(l){switch(l.label){case 0:return i=this._url(t),e=this.serializer.encode(e),o={data:e},a={},[4,this.contextProvider.getContext()];case 1:return(s=l.sent()).authToken&&(a.Authorization=\"Bearer \"+s.authToken),s.instanceIdToken&&(a[\"Firebase-Instance-ID-Token\"]=s.instanceIdToken),u=n.timeout||7e4,c=function(t){var e,n=new Promise((function(n,r){e=setTimeout((function(){r(new f(\"deadline-exceeded\",\"deadline-exceeded\"))}),t)}));return{timer:e,promise:n}}(u),p=c.timer,d=c.promise,[4,Promise.race([g(p,this.postJSON(i,o,a)),d,g(p,this.cancelAllRequests)])];case 2:if(!(v=l.sent()))throw new f(\"cancelled\",\"Firebase Functions instance was deleted.\");if(y=function(t,e,n){var i=function(t){if(t>=200&&t<300)return\"ok\";switch(t){case 0:return\"internal\";case 400:return\"invalid-argument\";case 401:return\"unauthenticated\";case 403:return\"permission-denied\";case 404:return\"not-found\";case 409:return\"aborted\";case 429:return\"resource-exhausted\";case 499:return\"cancelled\";case 500:return\"internal\";case 501:return\"unimplemented\";case 503:return\"unavailable\";case 504:return\"deadline-exceeded\"}return\"unknown\"}(t),o=i,a=void 0;try{var s=e&&e.error;if(s){var u=s.status;if(\"string\"===typeof u){if(!h[u])return new f(\"internal\",\"internal\");i=h[u],o=u}var c=s.message;\"string\"===typeof c&&(o=c),void 0!==(a=s.details)&&(a=n.decode(a))}}catch(r){}return\"ok\"===i?null:new f(i,o,a)}(v.status,v.json,this.serializer))throw y;if(!v.json)throw new f(\"internal\",\"Response is not valid JSON object.\");if(\"undefined\"===typeof(m=v.json.data)&&(m=v.json.result),\"undefined\"===typeof m)throw new f(\"internal\",\"Response is missing data field.\");return[2,{data:this.serializer.decode(m)}]}}))}))},t}();function g(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n;return Object(l.d)(this,(function(r){switch(r.label){case 0:return[4,e];case 1:return n=r.sent(),clearTimeout(t),[2,n]}}))}))}!function(t,e){var n={Functions:y};t.INTERNAL.registerComponent(new u.a(\"functions\",(function(t,n){var r=t.getProvider(\"app\").getImmediate(),i=t.getProvider(\"auth-internal\"),o=t.getProvider(\"messaging\");return new y(r,i,o,n,e)}),\"PUBLIC\").setServiceProps(n).setMultipleInstances(!0))}(i.a,fetch.bind(self)),i.a.registerVersion(\"@firebase/functions\",\"0.6.1\");var m,b=n(9),_=\"0.4.19\",w=1e4,E=\"w:0.4.19\",T=\"FIS_v2\",I=36e5,S=((m={})[\"missing-app-config-values\"]='Missing App configuration value: \"{$valueName}\"',m[\"not-registered\"]=\"Firebase Installation is not registered.\",m[\"installation-not-found\"]=\"Firebase Installation not found.\",m[\"request-failed\"]='{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',m[\"app-offline\"]=\"Could not process request. Application offline.\",m[\"delete-pending-registration\"]=\"Can't delete installation while there is a pending registration request.\",m),O=new a.b(\"installations\",\"Installations\",S);function C(t){return t instanceof a.c&&t.code.includes(\"request-failed\")}function k(t){return\"https://firebaseinstallations.googleapis.com/v1/projects/\"+t.projectId+\"/installations\"}function N(t){return{token:t.token,requestStatus:2,expiresIn:(e=t.expiresIn,Number(e.replace(\"s\",\"000\"))),creationTime:Date.now()};var e}function A(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n,r;return Object(l.d)(this,(function(i){switch(i.label){case 0:return[4,e.json()];case 1:return n=i.sent(),r=n.error,[2,O.create(\"request-failed\",{requestName:t,serverCode:r.code,serverMessage:r.message,serverStatus:r.status})]}}))}))}function P(t){var e=t.apiKey;return new Headers({\"Content-Type\":\"application/json\",Accept:\"application/json\",\"x-goog-api-key\":e})}function R(t,e){var n=e.refreshToken,r=P(t);return r.append(\"Authorization\",function(t){return\"FIS_v2 \"+t}(n)),r}function j(t){return Object(l.b)(this,void 0,void 0,(function(){var e;return Object(l.d)(this,(function(n){switch(n.label){case 0:return[4,t()];case 1:return(e=n.sent()).status>=500&&e.status<600?[2,t()]:[2,e]}}))}))}function x(t,e){var n=e.fid;return Object(l.b)(this,void 0,void 0,(function(){var e,r,i,o,a,s;return Object(l.d)(this,(function(u){switch(u.label){case 0:return e=k(t),r=P(t),i={fid:n,authVersion:T,appId:t.appId,sdkVersion:E},o={method:\"POST\",headers:r,body:JSON.stringify(i)},[4,j((function(){return fetch(e,o)}))];case 1:return(a=u.sent()).ok?[4,a.json()]:[3,3];case 2:return s=u.sent(),[2,{fid:s.fid||n,registrationStatus:2,refreshToken:s.refreshToken,authToken:N(s.authToken)}];case 3:return[4,A(\"Create Installation\",a)];case 4:throw u.sent()}}))}))}function D(t){return new Promise((function(e){setTimeout(e,t)}))}var L=/^[cdef][\\w-]{21}$/;function M(){try{var t=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(t),t[0]=112+t[0]%16;var e=function(t){return(e=t,btoa(String.fromCharCode.apply(String,Object(l.f)(e))).replace(/\\+/g,\"-\").replace(/\\//g,\"_\")).substr(0,22);var e}(t);return L.test(e)?e:\"\"}catch(n){return\"\"}}function F(t){return t.appName+\"!\"+t.appId}var U=new Map;function V(t,e){var n=F(t);q(n,e),function(t,e){var n=z();n&&n.postMessage({key:t,fid:e});H()}(n,e)}function q(t,e){var n,r,i=U.get(t);if(i)try{for(var o=Object(l.h)(i),a=o.next();!a.done;a=o.next()){(0,a.value)(e)}}catch(s){n={error:s}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}}var B=null;function z(){return!B&&\"BroadcastChannel\"in self&&((B=new BroadcastChannel(\"[Firebase] FID Change\")).onmessage=function(t){q(t.data.key,t.data.fid)}),B}function H(){0===U.size&&B&&(B.close(),B=null)}var K,W,G=\"firebase-installations-store\",Q=null;function Y(){return Q||(Q=Object(b.openDb)(\"firebase-installations-database\",1,(function(t){switch(t.oldVersion){case 0:t.createObjectStore(G)}}))),Q}function J(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n,r,i,o,a;return Object(l.d)(this,(function(s){switch(s.label){case 0:return n=F(t),[4,Y()];case 1:return r=s.sent(),i=r.transaction(G,\"readwrite\"),[4,(o=i.objectStore(G)).get(n)];case 2:return a=s.sent(),[4,o.put(e,n)];case 3:return s.sent(),[4,i.complete];case 4:return s.sent(),a&&a.fid===e.fid||V(t,e.fid),[2,e]}}))}))}function X(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n,r;return Object(l.d)(this,(function(i){switch(i.label){case 0:return e=F(t),[4,Y()];case 1:return n=i.sent(),[4,(r=n.transaction(G,\"readwrite\")).objectStore(G).delete(e)];case 2:return i.sent(),[4,r.complete];case 3:return i.sent(),[2]}}))}))}function $(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n,r,i,o,a,s;return Object(l.d)(this,(function(u){switch(u.label){case 0:return n=F(t),[4,Y()];case 1:return r=u.sent(),i=r.transaction(G,\"readwrite\"),[4,(o=i.objectStore(G)).get(n)];case 2:return a=u.sent(),void 0!==(s=e(a))?[3,4]:[4,o.delete(n)];case 3:return u.sent(),[3,6];case 4:return[4,o.put(s,n)];case 5:u.sent(),u.label=6;case 6:return[4,i.complete];case 7:return u.sent(),!s||a&&a.fid===s.fid||V(t,s.fid),[2,s]}}))}))}function Z(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n,r;return Object(l.d)(this,(function(i){switch(i.label){case 0:return[4,$(t,(function(n){var r=function(t){return nt(t||{fid:M(),registrationStatus:0})}(n),i=function(t,e){if(0===e.registrationStatus){if(!navigator.onLine)return{installationEntry:e,registrationPromise:Promise.reject(O.create(\"app-offline\"))};var n={fid:e.fid,registrationStatus:1,registrationTime:Date.now()};return{installationEntry:n,registrationPromise:function(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n,r;return Object(l.d)(this,(function(i){switch(i.label){case 0:return i.trys.push([0,2,,7]),[4,x(t,e)];case 1:return n=i.sent(),[2,J(t,n)];case 2:return C(r=i.sent())&&409===r.customData.serverCode?[4,X(t)]:[3,4];case 3:return i.sent(),[3,6];case 4:return[4,J(t,{fid:e.fid,registrationStatus:0})];case 5:i.sent(),i.label=6;case 6:throw r;case 7:return[2]}}))}))}(t,n)}}return 1===e.registrationStatus?{installationEntry:e,registrationPromise:tt(t)}:{installationEntry:e}}(t,r);return e=i.registrationPromise,i.installationEntry}))];case 1:return\"\"!==(n=i.sent()).fid?[3,3]:(r={},[4,e]);case 2:return[2,(r.installationEntry=i.sent(),r)];case 3:return[2,{installationEntry:n,registrationPromise:e}]}}))}))}function tt(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n,r,i;return Object(l.d)(this,(function(o){switch(o.label){case 0:return[4,et(t)];case 1:e=o.sent(),o.label=2;case 2:return 1!==e.registrationStatus?[3,5]:[4,D(100)];case 3:return o.sent(),[4,et(t)];case 4:return e=o.sent(),[3,2];case 5:return 0!==e.registrationStatus?[3,7]:[4,Z(t)];case 6:return n=o.sent(),r=n.installationEntry,(i=n.registrationPromise)?[2,i]:[2,r];case 7:return[2,e]}}))}))}function et(t){return $(t,(function(t){if(!t)throw O.create(\"installation-not-found\");return nt(t)}))}function nt(t){return 1===(e=t).registrationStatus&&e.registrationTime+w<Date.now()?{fid:t.fid,registrationStatus:0}:t;var e}function rt(t,e){var n=t.appConfig,r=t.platformLoggerProvider;return Object(l.b)(this,void 0,void 0,(function(){var t,i,o,a,s,u,c;return Object(l.d)(this,(function(l){switch(l.label){case 0:return t=function(t,e){var n=e.fid;return k(t)+\"/\"+n+\"/authTokens:generate\"}(n,e),i=R(n,e),(o=r.getImmediate({optional:!0}))&&i.append(\"x-firebase-client\",o.getPlatformInfoString()),a={installation:{sdkVersion:E}},s={method:\"POST\",headers:i,body:JSON.stringify(a)},[4,j((function(){return fetch(t,s)}))];case 1:return(u=l.sent()).ok?[4,u.json()]:[3,3];case 2:return c=l.sent(),[2,N(c)];case 3:return[4,A(\"Generate Auth Token\",u)];case 4:throw l.sent()}}))}))}function it(t,e){return void 0===e&&(e=!1),Object(l.b)(this,void 0,void 0,(function(){var n,r,i;return Object(l.d)(this,(function(o){switch(o.label){case 0:return[4,$(t.appConfig,(function(r){if(!at(r))throw O.create(\"not-registered\");var i=r.authToken;if(!e&&function(t){return 2===t.requestStatus&&!function(t){var e=Date.now();return e<t.creationTime||t.creationTime+t.expiresIn<e+I}(t)}(i))return r;if(1===i.requestStatus)return n=function(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n,r;return Object(l.d)(this,(function(i){switch(i.label){case 0:return[4,ot(t.appConfig)];case 1:n=i.sent(),i.label=2;case 2:return 1!==n.authToken.requestStatus?[3,5]:[4,D(100)];case 3:return i.sent(),[4,ot(t.appConfig)];case 4:return n=i.sent(),[3,2];case 5:return 0===(r=n.authToken).requestStatus?[2,it(t,e)]:[2,r]}}))}))}(t,e),r;if(!navigator.onLine)throw O.create(\"app-offline\");var o=function(t){var e={requestStatus:1,requestTime:Date.now()};return Object(l.a)(Object(l.a)({},t),{authToken:e})}(r);return n=function(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n,r,i;return Object(l.d)(this,(function(o){switch(o.label){case 0:return o.trys.push([0,3,,8]),[4,rt(t,e)];case 1:return n=o.sent(),i=Object(l.a)(Object(l.a)({},e),{authToken:n}),[4,J(t.appConfig,i)];case 2:return o.sent(),[2,n];case 3:return!C(r=o.sent())||401!==r.customData.serverCode&&404!==r.customData.serverCode?[3,5]:[4,X(t.appConfig)];case 4:return o.sent(),[3,7];case 5:return i=Object(l.a)(Object(l.a)({},e),{authToken:{requestStatus:0}}),[4,J(t.appConfig,i)];case 6:o.sent(),o.label=7;case 7:throw r;case 8:return[2]}}))}))}(t,o),o}))];case 1:return r=o.sent(),n?[4,n]:[3,3];case 2:return i=o.sent(),[3,4];case 3:i=r.authToken,o.label=4;case 4:return[2,i]}}))}))}function ot(t){return $(t,(function(t){if(!at(t))throw O.create(\"not-registered\");var e,n=t.authToken;return 1===(e=n).requestStatus&&e.requestTime+w<Date.now()?Object(l.a)(Object(l.a)({},t),{authToken:{requestStatus:0}}):t}))}function at(t){return void 0!==t&&2===t.registrationStatus}function st(t){return Object(l.b)(this,void 0,void 0,(function(){var e;return Object(l.d)(this,(function(n){switch(n.label){case 0:return[4,Z(t)];case 1:return(e=n.sent().registrationPromise)?[4,e]:[3,3];case 2:n.sent(),n.label=3;case 3:return[2]}}))}))}function ut(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n,r,i,o;return Object(l.d)(this,(function(a){switch(a.label){case 0:return n=function(t,e){var n=e.fid;return k(t)+\"/\"+n}(t,e),r=R(t,e),i={method:\"DELETE\",headers:r},[4,j((function(){return fetch(n,i)}))];case 1:return(o=a.sent()).ok?[3,3]:[4,A(\"Delete Installation\",o)];case 2:throw a.sent();case 3:return[2]}}))}))}function ct(t,e){var n=t.appConfig;return function(t,e){z();var n=F(t),r=U.get(n);r||(r=new Set,U.set(n,r)),r.add(e)}(n,e),function(){!function(t,e){var n=F(t),r=U.get(n);r&&(r.delete(e),0===r.size&&U.delete(n),H())}(n,e)}}function lt(t){return O.create(\"missing-app-config-values\",{valueName:t})}(K=i.a).INTERNAL.registerComponent(new u.a(\"installations\",(function(t){var e=t.getProvider(\"app\").getImmediate(),n={appConfig:function(t){var e,n;if(!t||!t.options)throw lt(\"App Configuration\");if(!t.name)throw lt(\"App Name\");try{for(var r=Object(l.h)([\"projectId\",\"apiKey\",\"appId\"]),i=r.next();!i.done;i=r.next()){var o=i.value;if(!t.options[o])throw lt(o)}}catch(a){e={error:a}}finally{try{i&&!i.done&&(n=r.return)&&n.call(r)}finally{if(e)throw e.error}}return{appName:t.name,projectId:t.options.projectId,apiKey:t.options.apiKey,appId:t.options.appId}}(e),platformLoggerProvider:t.getProvider(\"platform-logger\")};return{app:e,getId:function(){return function(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n,r;return Object(l.d)(this,(function(i){switch(i.label){case 0:return[4,Z(t.appConfig)];case 1:return e=i.sent(),n=e.installationEntry,(r=e.registrationPromise)?r.catch(console.error):it(t).catch(console.error),[2,n.fid]}}))}))}(n)},getToken:function(t){return function(t,e){return void 0===e&&(e=!1),Object(l.b)(this,void 0,void 0,(function(){return Object(l.d)(this,(function(n){switch(n.label){case 0:return[4,st(t.appConfig)];case 1:return n.sent(),[4,it(t,e)];case 2:return[2,n.sent().token]}}))}))}(n,t)},delete:function(){return function(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n;return Object(l.d)(this,(function(r){switch(r.label){case 0:return[4,$(e=t.appConfig,(function(t){if(!t||0!==t.registrationStatus)return t}))];case 1:if(!(n=r.sent()))return[3,6];if(1!==n.registrationStatus)return[3,2];throw O.create(\"delete-pending-registration\");case 2:if(2!==n.registrationStatus)return[3,6];if(navigator.onLine)return[3,3];throw O.create(\"app-offline\");case 3:return[4,ut(e,n)];case 4:return r.sent(),[4,X(e)];case 5:r.sent(),r.label=6;case 6:return[2]}}))}))}(n)},onIdChange:function(t){return ct(n,t)}}}),\"PUBLIC\")),K.registerVersion(\"@firebase/installations\",_);var ht,ft=((W={})[\"missing-app-config-values\"]='Missing App configuration value: \"{$valueName}\"',W[\"only-available-in-window\"]=\"This method is available in a Window context.\",W[\"only-available-in-sw\"]=\"This method is available in a service worker context.\",W[\"permission-default\"]=\"The notification permission was not granted and dismissed instead.\",W[\"permission-blocked\"]=\"The notification permission was not granted and blocked instead.\",W[\"unsupported-browser\"]=\"This browser doesn't support the API's required to use the firebase SDK.\",W[\"failed-service-worker-registration\"]=\"We are unable to register the default service worker. {$browserErrorMessage}\",W[\"token-subscribe-failed\"]=\"A problem occurred while subscribing the user to FCM: {$errorInfo}\",W[\"token-subscribe-no-token\"]=\"FCM returned no token when subscribing the user to push.\",W[\"token-unsubscribe-failed\"]=\"A problem occurred while unsubscribing the user from FCM: {$errorInfo}\",W[\"token-update-failed\"]=\"A problem occurred while updating the user from FCM: {$errorInfo}\",W[\"token-update-no-token\"]=\"FCM returned no token when updating the user to push.\",W[\"use-sw-after-get-token\"]=\"The useServiceWorker() method may only be called once and must be called before calling getToken() to ensure your service worker is used.\",W[\"invalid-sw-registration\"]=\"The input to useServiceWorker() must be a ServiceWorkerRegistration.\",W[\"invalid-bg-handler\"]=\"The input to setBackgroundMessageHandler() must be a function.\",W[\"invalid-vapid-key\"]=\"The public VAPID key must be a string.\",W[\"use-vapid-key-after-get-token\"]=\"The usePublicVapidKey() method may only be called once and must be called before calling getToken() to ensure your VAPID key is used.\",W),pt=new a.b(\"messaging\",\"Messaging\",ft),dt=\"BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4\",vt=\"google.c.a.c_id\";function yt(t){var e=new Uint8Array(t);return btoa(String.fromCharCode.apply(String,Object(l.f)(e))).replace(/=/g,\"\").replace(/\\+/g,\"-\").replace(/\\//g,\"_\")}function gt(t){for(var e=(t+\"=\".repeat((4-t.length%4)%4)).replace(/\\-/g,\"+\").replace(/_/g,\"/\"),n=atob(e),r=new Uint8Array(n.length),i=0;i<n.length;++i)r[i]=n.charCodeAt(i);return r}!function(t){t.PUSH_RECEIVED=\"push-received\",t.NOTIFICATION_CLICKED=\"notification-clicked\"}(ht||(ht={}));var mt=\"fcm_token_details_db\",bt=\"fcm_token_object_Store\";function _t(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n,r=this;return Object(l.d)(this,(function(i){switch(i.label){case 0:return\"databases\"in indexedDB?[4,indexedDB.databases()]:[3,2];case 1:if(e=i.sent(),!e.map((function(t){return t.name})).includes(mt))return[2,null];i.label=2;case 2:return n=null,[4,Object(b.openDb)(mt,5,(function(e){return Object(l.b)(r,void 0,void 0,(function(){var r,i,o,a;return Object(l.d)(this,(function(s){switch(s.label){case 0:return e.oldVersion<2?[2]:e.objectStoreNames.contains(bt)?[4,(r=e.transaction.objectStore(bt)).index(\"fcmSenderId\").get(t)]:[2];case 1:return i=s.sent(),[4,r.clear()];case 2:if(s.sent(),!i)return[2];if(2===e.oldVersion){if(!(o=i).auth||!o.p256dh||!o.endpoint)return[2];n={token:o.fcmToken,createTime:null!==(a=o.createTime)&&void 0!==a?a:Date.now(),subscriptionOptions:{auth:o.auth,p256dh:o.p256dh,endpoint:o.endpoint,swScope:o.swScope,vapidKey:\"string\"===typeof o.vapidKey?o.vapidKey:yt(o.vapidKey)}}}else(3===e.oldVersion||4===e.oldVersion)&&(n={token:(o=i).fcmToken,createTime:o.createTime,subscriptionOptions:{auth:yt(o.auth),p256dh:yt(o.p256dh),endpoint:o.endpoint,swScope:o.swScope,vapidKey:yt(o.vapidKey)}});return[2]}}))}))}))];case 3:return i.sent().close(),[4,Object(b.deleteDb)(mt)];case 4:return i.sent(),[4,Object(b.deleteDb)(\"fcm_vapid_details_db\")];case 5:return i.sent(),[4,Object(b.deleteDb)(\"undefined\")];case 6:return i.sent(),[2,wt(n)?n:null]}}))}))}function wt(t){if(!t||!t.subscriptionOptions)return!1;var e=t.subscriptionOptions;return\"number\"===typeof t.createTime&&t.createTime>0&&\"string\"===typeof t.token&&t.token.length>0&&\"string\"===typeof e.auth&&e.auth.length>0&&\"string\"===typeof e.p256dh&&e.p256dh.length>0&&\"string\"===typeof e.endpoint&&e.endpoint.length>0&&\"string\"===typeof e.swScope&&e.swScope.length>0&&\"string\"===typeof e.vapidKey&&e.vapidKey.length>0}var Et=\"firebase-messaging-store\",Tt=null;function It(){return Tt||(Tt=Object(b.openDb)(\"firebase-messaging-database\",1,(function(t){switch(t.oldVersion){case 0:t.createObjectStore(Et)}}))),Tt}function St(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n,r;return Object(l.d)(this,(function(i){switch(i.label){case 0:return e=kt(t),[4,It()];case 1:return[4,i.sent().transaction(Et).objectStore(Et).get(e)];case 2:return(n=i.sent())?[2,n]:[3,3];case 3:return[4,_t(t.appConfig.senderId)];case 4:return(r=i.sent())?[4,Ot(t,r)]:[3,6];case 5:return i.sent(),[2,r];case 6:return[2]}}))}))}function Ot(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n,r,i;return Object(l.d)(this,(function(o){switch(o.label){case 0:return n=kt(t),[4,It()];case 1:return r=o.sent(),[4,(i=r.transaction(Et,\"readwrite\")).objectStore(Et).put(e,n)];case 2:return o.sent(),[4,i.complete];case 3:return o.sent(),[2,e]}}))}))}function Ct(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n,r;return Object(l.d)(this,(function(i){switch(i.label){case 0:return e=kt(t),[4,It()];case 1:return n=i.sent(),[4,(r=n.transaction(Et,\"readwrite\")).objectStore(Et).delete(e)];case 2:return i.sent(),[4,r.complete];case 3:return i.sent(),[2]}}))}))}function kt(t){return t.appConfig.appId}function Nt(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n,r,i,o,a,s;return Object(l.d)(this,(function(u){switch(u.label){case 0:return[4,jt(t)];case 1:n=u.sent(),r=xt(e),i={method:\"POST\",headers:n,body:JSON.stringify(r)},u.label=2;case 2:return u.trys.push([2,5,,6]),[4,fetch(Rt(t.appConfig),i)];case 3:return[4,u.sent().json()];case 4:return o=u.sent(),[3,6];case 5:throw a=u.sent(),pt.create(\"token-subscribe-failed\",{errorInfo:a});case 6:if(o.error)throw s=o.error.message,pt.create(\"token-subscribe-failed\",{errorInfo:s});if(!o.token)throw pt.create(\"token-subscribe-no-token\");return[2,o.token]}}))}))}function At(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n,r,i,o,a,s;return Object(l.d)(this,(function(u){switch(u.label){case 0:return[4,jt(t)];case 1:n=u.sent(),r=xt(e.subscriptionOptions),i={method:\"PATCH\",headers:n,body:JSON.stringify(r)},u.label=2;case 2:return u.trys.push([2,5,,6]),[4,fetch(Rt(t.appConfig)+\"/\"+e.token,i)];case 3:return[4,u.sent().json()];case 4:return o=u.sent(),[3,6];case 5:throw a=u.sent(),pt.create(\"token-update-failed\",{errorInfo:a});case 6:if(o.error)throw s=o.error.message,pt.create(\"token-update-failed\",{errorInfo:s});if(!o.token)throw pt.create(\"token-update-no-token\");return[2,o.token]}}))}))}function Pt(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n,r,i,o,a;return Object(l.d)(this,(function(s){switch(s.label){case 0:return[4,jt(t)];case 1:n=s.sent(),r={method:\"DELETE\",headers:n},s.label=2;case 2:return s.trys.push([2,5,,6]),[4,fetch(Rt(t.appConfig)+\"/\"+e,r)];case 3:return[4,s.sent().json()];case 4:if((i=s.sent()).error)throw o=i.error.message,pt.create(\"token-unsubscribe-failed\",{errorInfo:o});return[3,6];case 5:throw a=s.sent(),pt.create(\"token-unsubscribe-failed\",{errorInfo:a});case 6:return[2]}}))}))}function Rt(t){return\"https://fcmregistrations.googleapis.com/v1/projects/\"+t.projectId+\"/registrations\"}function jt(t){var e=t.appConfig,n=t.installations;return Object(l.b)(this,void 0,void 0,(function(){var t;return Object(l.d)(this,(function(r){switch(r.label){case 0:return[4,n.getToken()];case 1:return t=r.sent(),[2,new Headers({\"Content-Type\":\"application/json\",Accept:\"application/json\",\"x-goog-api-key\":e.apiKey,\"x-goog-firebase-installations-auth\":\"FIS \"+t})]}}))}))}function xt(t){var e=t.p256dh,n=t.auth,r=t.endpoint,i=t.vapidKey,o={web:{endpoint:r,auth:n,p256dh:e}};return i!==dt&&(o.web.applicationPubKey=i),o}function Dt(t,e,n){return Object(l.b)(this,void 0,void 0,(function(){var r,i,o,a;return Object(l.d)(this,(function(s){switch(s.label){case 0:if(\"granted\"!==Notification.permission)throw pt.create(\"permission-blocked\");return[4,Ut(e,n)];case 1:return r=s.sent(),[4,St(t)];case 2:return i=s.sent(),o={vapidKey:n,swScope:e.scope,endpoint:r.endpoint,auth:yt(r.getKey(\"auth\")),p256dh:yt(r.getKey(\"p256dh\"))},i?[3,3]:[2,Ft(t,o)];case 3:if(function(t,e){var n=e.vapidKey===t.vapidKey,r=e.endpoint===t.endpoint,i=e.auth===t.auth,o=e.p256dh===t.p256dh;return n&&r&&i&&o}(i.subscriptionOptions,o))return[3,8];s.label=4;case 4:return s.trys.push([4,6,,7]),[4,Pt(t,i.token)];case 5:return s.sent(),[3,7];case 6:return a=s.sent(),console.warn(a),[3,7];case 7:return[2,Ft(t,o)];case 8:return Date.now()>=i.createTime+6048e5?[2,Mt({token:i.token,createTime:Date.now(),subscriptionOptions:o},t,e)]:[2,i.token];case 9:return[2]}}))}))}function Lt(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n,r;return Object(l.d)(this,(function(i){switch(i.label){case 0:return[4,St(t)];case 1:return(n=i.sent())?[4,Pt(t,n.token)]:[3,4];case 2:return i.sent(),[4,Ct(t)];case 3:i.sent(),i.label=4;case 4:return[4,e.pushManager.getSubscription()];case 5:return(r=i.sent())?[2,r.unsubscribe()]:[2,!0]}}))}))}function Mt(t,e,n){return Object(l.b)(this,void 0,void 0,(function(){var r,i,o;return Object(l.d)(this,(function(a){switch(a.label){case 0:return a.trys.push([0,3,,5]),[4,At(e,t)];case 1:return r=a.sent(),i=Object(l.a)(Object(l.a)({},t),{token:r,createTime:Date.now()}),[4,Ot(e,i)];case 2:return a.sent(),[2,r];case 3:return o=a.sent(),[4,Lt(e,n)];case 4:throw a.sent(),o;case 5:return[2]}}))}))}function Ft(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n,r;return Object(l.d)(this,(function(i){switch(i.label){case 0:return[4,Nt(t,e)];case 1:return n=i.sent(),r={token:n,createTime:Date.now(),subscriptionOptions:e},[4,Ot(t,r)];case 2:return i.sent(),[2,r.token]}}))}))}function Ut(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n;return Object(l.d)(this,(function(r){switch(r.label){case 0:return[4,t.pushManager.getSubscription()];case 1:return(n=r.sent())?[2,n]:[2,t.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:gt(e)})]}}))}))}function Vt(t){return\"object\"===typeof t&&!!t&&vt in t}function qt(t){return new Promise((function(e){setTimeout(e,t)}))}var Bt=function(){function t(t){var e=this;this.firebaseDependencies=t,this.isOnBackgroundMessageUsed=null,this.vapidKey=null,this.bgMessageHandler=null,self.addEventListener(\"push\",(function(t){t.waitUntil(e.onPush(t))})),self.addEventListener(\"pushsubscriptionchange\",(function(t){t.waitUntil(e.onSubChange(t))})),self.addEventListener(\"notificationclick\",(function(t){t.waitUntil(e.onNotificationClick(t))}))}return Object.defineProperty(t.prototype,\"app\",{get:function(){return this.firebaseDependencies.app},enumerable:!1,configurable:!0}),t.prototype.setBackgroundMessageHandler=function(t){if(this.isOnBackgroundMessageUsed=!1,!t||\"function\"!==typeof t)throw pt.create(\"invalid-bg-handler\");this.bgMessageHandler=t},t.prototype.onBackgroundMessage=function(t){var e=this;return this.isOnBackgroundMessageUsed=!0,this.bgMessageHandler=t,function(){e.bgMessageHandler=null}},t.prototype.getToken=function(){var t,e;return Object(l.b)(this,void 0,void 0,(function(){var n;return Object(l.d)(this,(function(r){switch(r.label){case 0:return this.vapidKey?[3,2]:[4,St(this.firebaseDependencies)];case 1:n=r.sent(),this.vapidKey=null!==(e=null===(t=null===n||void 0===n?void 0:n.subscriptionOptions)||void 0===t?void 0:t.vapidKey)&&void 0!==e?e:dt,r.label=2;case 2:return[2,Dt(this.firebaseDependencies,self.registration,this.vapidKey)]}}))}))},t.prototype.deleteToken=function(){return Lt(this.firebaseDependencies,self.registration)},t.prototype.requestPermission=function(){throw pt.create(\"only-available-in-window\")},t.prototype.usePublicVapidKey=function(t){if(null!==this.vapidKey)throw pt.create(\"use-vapid-key-after-get-token\");if(\"string\"!==typeof t||0===t.length)throw pt.create(\"invalid-vapid-key\");this.vapidKey=t},t.prototype.useServiceWorker=function(){throw pt.create(\"only-available-in-window\")},t.prototype.onMessage=function(){throw pt.create(\"only-available-in-window\")},t.prototype.onTokenRefresh=function(){throw pt.create(\"only-available-in-window\")},t.prototype.onPush=function(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n,r,i;return Object(l.d)(this,(function(o){switch(o.label){case 0:return(e=function(t){var e=t.data;if(!e)return null;try{return e.json()}catch(n){return null}}(t))?[4,Wt()]:(console.debug(\"FirebaseMessaging: failed to get parsed MessagePayload from the PushEvent. Skip handling the push.\"),[2]);case 1:return function(t){return t.some((function(t){return\"visible\"===t.visibilityState&&!t.url.startsWith(\"chrome-extension://\")}))}(n=o.sent())?[2,Kt(n,e)]:(r=!1,e.notification?[4,Gt(zt(e))]:[3,3]);case 2:o.sent(),r=!0,o.label=3;case 3:return!0===r&&!1===this.isOnBackgroundMessageUsed?[2]:(this.bgMessageHandler&&(i=function(t){var e={from:t.from,collapseKey:t.collapse_key};return function(t,e){if(e.notification){t.notification={};var n=e.notification.title;n&&(t.notification.title=n);var r=e.notification.body;r&&(t.notification.body=r);var i=e.notification.image;i&&(t.notification.image=i)}}(e,t),function(t,e){e.data&&(t.data=e.data)}(e,t),function(t,e){if(e.fcmOptions){t.fcmOptions={};var n=e.fcmOptions.link;n&&(t.fcmOptions.link=n);var r=e.fcmOptions.analytics_label;r&&(t.fcmOptions.analyticsLabel=r)}}(e,t),e}(e),\"function\"===typeof this.bgMessageHandler?this.bgMessageHandler(i):this.bgMessageHandler.next(i)),[4,qt(1e3)]);case 4:return o.sent(),[2]}}))}))},t.prototype.onSubChange=function(t){var e,n;return Object(l.b)(this,void 0,void 0,(function(){var r;return Object(l.d)(this,(function(i){switch(i.label){case 0:return t.newSubscription?[3,2]:[4,Lt(this.firebaseDependencies,self.registration)];case 1:return i.sent(),[2];case 2:return[4,St(this.firebaseDependencies)];case 3:return r=i.sent(),[4,Lt(this.firebaseDependencies,self.registration)];case 4:return i.sent(),[4,Dt(this.firebaseDependencies,self.registration,null!==(n=null===(e=null===r||void 0===r?void 0:r.subscriptionOptions)||void 0===e?void 0:e.vapidKey)&&void 0!==n?n:dt)];case 5:return i.sent(),[2]}}))}))},t.prototype.onNotificationClick=function(t){var e,n;return Object(l.b)(this,void 0,void 0,(function(){var r,i,o,a,s;return Object(l.d)(this,(function(u){switch(u.label){case 0:return(r=null===(n=null===(e=t.notification)||void 0===e?void 0:e.data)||void 0===n?void 0:n.FCM_MSG)?t.action?[2]:(t.stopImmediatePropagation(),t.notification.close(),(i=function(t){var e,n,r,i=null!==(n=null===(e=t.fcmOptions)||void 0===e?void 0:e.link)&&void 0!==n?n:null===(r=t.notification)||void 0===r?void 0:r.click_action;if(i)return i;return Vt(t.data)?self.location.origin:null}(r))?(o=new URL(i,self.location.href),a=new URL(self.location.origin),o.host!==a.host?[2]:[4,Ht(o)]):[2]):[2];case 1:return(s=u.sent())?[3,4]:[4,self.clients.openWindow(i)];case 2:return s=u.sent(),[4,qt(3e3)];case 3:return u.sent(),[3,6];case 4:return[4,s.focus()];case 5:s=u.sent(),u.label=6;case 6:return s?(r.messageType=ht.NOTIFICATION_CLICKED,r.isFirebaseMessaging=!0,[2,s.postMessage(r)]):[2]}}))}))},t}();function zt(t){var e,n=Object(l.a)({},t.notification);return n.data=((e={}).FCM_MSG=t,e),n}function Ht(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n,r,i,o,a,s;return Object(l.d)(this,(function(u){switch(u.label){case 0:return[4,Wt()];case 1:e=u.sent();try{for(n=Object(l.h)(e),r=n.next();!r.done;r=n.next())if(i=r.value,o=new URL(i.url,self.location.href),t.host===o.host)return[2,i]}catch(c){a={error:c}}finally{try{r&&!r.done&&(s=n.return)&&s.call(n)}finally{if(a)throw a.error}}return[2,null]}}))}))}function Kt(t,e){var n,r;e.isFirebaseMessaging=!0,e.messageType=ht.PUSH_RECEIVED;try{for(var i=Object(l.h)(t),o=i.next();!o.done;o=i.next()){o.value.postMessage(e)}}catch(a){n={error:a}}finally{try{o&&!o.done&&(r=i.return)&&r.call(i)}finally{if(n)throw n.error}}}function Wt(){return self.clients.matchAll({type:\"window\",includeUncontrolled:!0})}function Gt(t){var e,n=t.actions,r=Notification.maxActions;return n&&r&&n.length>r&&console.warn(\"This browser only supports \"+r+\" actions. The remaining actions will not be displayed.\"),self.registration.showNotification(null!==(e=t.title)&&void 0!==e?e:\"\",t)}var Qt=function(){function t(t){var e=this;this.firebaseDependencies=t,this.vapidKey=null,this.onMessageCallback=null,navigator.serviceWorker.addEventListener(\"message\",(function(t){return e.messageEventListener(t)}))}return Object.defineProperty(t.prototype,\"app\",{get:function(){return this.firebaseDependencies.app},enumerable:!1,configurable:!0}),t.prototype.messageEventListener=function(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n;return Object(l.d)(this,(function(r){switch(r.label){case 0:return(e=t.data).isFirebaseMessaging?(this.onMessageCallback&&e.messageType===ht.PUSH_RECEIVED&&(\"function\"===typeof this.onMessageCallback?this.onMessageCallback(function(t){return delete t.messageType,delete t.isFirebaseMessaging,t}(Object.assign({},e))):this.onMessageCallback.next(Object.assign({},e))),Vt(n=e.data)&&\"1\"===n[\"google.c.a.e\"]?[4,this.logEvent(e.messageType,n)]:[3,2]):[2];case 1:r.sent(),r.label=2;case 2:return[2]}}))}))},t.prototype.getVapidKey=function(){return this.vapidKey},t.prototype.getSwReg=function(){return this.swRegistration},t.prototype.getToken=function(t){return Object(l.b)(this,void 0,void 0,(function(){return Object(l.d)(this,(function(e){switch(e.label){case 0:return\"default\"!==Notification.permission?[3,2]:[4,Notification.requestPermission()];case 1:e.sent(),e.label=2;case 2:if(\"granted\"!==Notification.permission)throw pt.create(\"permission-blocked\");return[4,this.updateVapidKey(null===t||void 0===t?void 0:t.vapidKey)];case 3:return e.sent(),[4,this.updateSwReg(null===t||void 0===t?void 0:t.serviceWorkerRegistration)];case 4:return e.sent(),[2,Dt(this.firebaseDependencies,this.swRegistration,this.vapidKey)]}}))}))},t.prototype.updateVapidKey=function(t){return Object(l.b)(this,void 0,void 0,(function(){return Object(l.d)(this,(function(e){return t?this.vapidKey=t:this.vapidKey||(this.vapidKey=dt),[2]}))}))},t.prototype.updateSwReg=function(t){return Object(l.b)(this,void 0,void 0,(function(){return Object(l.d)(this,(function(e){switch(e.label){case 0:return t||this.swRegistration?[3,2]:[4,this.registerDefaultSw()];case 1:e.sent(),e.label=2;case 2:if(!t&&this.swRegistration)return[2];if(!(t instanceof ServiceWorkerRegistration))throw pt.create(\"invalid-sw-registration\");return this.swRegistration=t,[2]}}))}))},t.prototype.registerDefaultSw=function(){return Object(l.b)(this,void 0,void 0,(function(){var t,e;return Object(l.d)(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),t=this,[4,navigator.serviceWorker.register(\"/firebase-messaging-sw.js\",{scope:\"/firebase-cloud-messaging-push-scope\"})];case 1:return t.swRegistration=n.sent(),this.swRegistration.update().catch((function(){})),[3,3];case 2:throw e=n.sent(),pt.create(\"failed-service-worker-registration\",{browserErrorMessage:e.message});case 3:return[2]}}))}))},t.prototype.deleteToken=function(){return Object(l.b)(this,void 0,void 0,(function(){return Object(l.d)(this,(function(t){switch(t.label){case 0:return this.swRegistration?[3,2]:[4,this.registerDefaultSw()];case 1:t.sent(),t.label=2;case 2:return[2,Lt(this.firebaseDependencies,this.swRegistration)]}}))}))},t.prototype.requestPermission=function(){return Object(l.b)(this,void 0,void 0,(function(){var t;return Object(l.d)(this,(function(e){switch(e.label){case 0:return\"granted\"===Notification.permission?[2]:[4,Notification.requestPermission()];case 1:if(\"granted\"===(t=e.sent()))return[2];throw\"denied\"===t?pt.create(\"permission-blocked\"):pt.create(\"permission-default\")}}))}))},t.prototype.usePublicVapidKey=function(t){if(null!==this.vapidKey)throw pt.create(\"use-vapid-key-after-get-token\");if(\"string\"!==typeof t||0===t.length)throw pt.create(\"invalid-vapid-key\");this.vapidKey=t},t.prototype.useServiceWorker=function(t){if(!(t instanceof ServiceWorkerRegistration))throw pt.create(\"invalid-sw-registration\");if(this.swRegistration)throw pt.create(\"use-sw-after-get-token\");this.swRegistration=t},t.prototype.onMessage=function(t){var e=this;return this.onMessageCallback=t,function(){e.onMessageCallback=null}},t.prototype.setBackgroundMessageHandler=function(){throw pt.create(\"only-available-in-sw\")},t.prototype.onBackgroundMessage=function(){throw pt.create(\"only-available-in-sw\")},t.prototype.onTokenRefresh=function(){return function(){}},t.prototype.logEvent=function(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n;return Object(l.d)(this,(function(r){switch(r.label){case 0:return n=function(t){switch(t){case ht.NOTIFICATION_CLICKED:return\"notification_open\";case ht.PUSH_RECEIVED:return\"notification_foreground\";default:throw new Error}}(t),[4,this.firebaseDependencies.analyticsProvider.get()];case 1:return r.sent().logEvent(n,{message_id:e[\"google.c.a.c_id\"],message_name:e[\"google.c.a.c_l\"],message_time:e[\"google.c.a.ts\"],message_device_time:Math.floor(Date.now()/1e3)}),[2]}}))}))},t}();function Yt(t){return pt.create(\"missing-app-config-values\",{valueName:t})}var Jt={isSupported:Xt};function Xt(){return self&&\"ServiceWorkerGlobalScope\"in self?\"indexedDB\"in self&&null!==indexedDB&&\"PushManager\"in self&&\"Notification\"in self&&ServiceWorkerRegistration.prototype.hasOwnProperty(\"showNotification\")&&PushSubscription.prototype.hasOwnProperty(\"getKey\"):\"indexedDB\"in window&&null!==indexedDB&&navigator.cookieEnabled&&\"serviceWorker\"in navigator&&\"PushManager\"in window&&\"Notification\"in window&&\"fetch\"in window&&ServiceWorkerRegistration.prototype.hasOwnProperty(\"showNotification\")&&PushSubscription.prototype.hasOwnProperty(\"getKey\")}i.a.INTERNAL.registerComponent(new u.a(\"messaging\",(function(t){var e=t.getProvider(\"app\").getImmediate(),n={app:e,appConfig:function(t){var e,n;if(!t||!t.options)throw Yt(\"App Configuration Object\");if(!t.name)throw Yt(\"App Name\");var r=t.options;try{for(var i=Object(l.h)([\"projectId\",\"apiKey\",\"appId\",\"messagingSenderId\"]),o=i.next();!o.done;o=i.next()){var a=o.value;if(!r[a])throw Yt(a)}}catch(s){e={error:s}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}return{appName:t.name,projectId:r.projectId,apiKey:r.apiKey,appId:r.appId,senderId:r.messagingSenderId}}(e),installations:t.getProvider(\"installations\").getImmediate(),analyticsProvider:t.getProvider(\"analytics-internal\")};if(!Xt())throw pt.create(\"unsupported-browser\");return self&&\"ServiceWorkerGlobalScope\"in self?new Bt(n):new Qt(n)}),\"PUBLIC\").setServiceProps(Jt));var $t=\"firebasestorage.googleapis.com\",Zt=function(t){function e(n,r){var i=t.call(this,be(n),\"Firebase Storage: \"+r+\" (\"+be(n)+\")\")||this;return i.customData={serverResponse:null},Object.setPrototypeOf(i,e.prototype),i}return Object(l.c)(e,t),e.prototype.codeEquals=function(t){return be(t)===this.code},Object.defineProperty(e.prototype,\"message\",{get:function(){return this.customData.serverResponse?this.message+\"\\n\"+this.customData.serverResponse:this.message},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"serverResponse\",{get:function(){return this.customData.serverResponse},set:function(t){this.customData.serverResponse=t},enumerable:!1,configurable:!0}),e}(a.c),te=\"unknown\",ee=\"object-not-found\",ne=\"quota-exceeded\",re=\"unauthenticated\",ie=\"unauthorized\",oe=\"retry-limit-exceeded\",ae=\"canceled\",se=\"invalid-url\",ue=\"invalid-default-bucket\",ce=\"no-default-bucket\",le=\"cannot-slice-blob\",he=\"server-file-wrong-size\",fe=\"no-download-url\",pe=\"invalid-argument\",de=\"app-deleted\",ve=\"invalid-root-operation\",ye=\"invalid-format\",ge=\"internal-error\",me=\"unsupported-environment\";function be(t){return\"storage/\"+t}function _e(){return new Zt(te,\"An unknown error occurred, please check the error payload for server response.\")}function we(){return new Zt(ae,\"User canceled the upload/download.\")}function Ee(){return new Zt(le,\"Cannot slice blob for upload. Please retry the upload.\")}function Te(t){return new Zt(pe,t)}function Ie(){return new Zt(de,\"The Firebase app was deleted.\")}function Se(t){return new Zt(ve,\"The operation '\"+t+\"' cannot be performed on a root reference, create a non-root reference using child, such as .child('file.png').\")}function Oe(t,e){return new Zt(ye,\"String does not match format '\"+t+\"': \"+e)}function Ce(t){throw new Zt(ge,\"Internal error: \"+t)}var ke={RAW:\"raw\",BASE64:\"base64\",BASE64URL:\"base64url\",DATA_URL:\"data_url\"},Ne=function(t,e){this.data=t,this.contentType=e||null};function Ae(t,e){switch(t){case ke.RAW:return new Ne(Pe(e));case ke.BASE64:case ke.BASE64URL:return new Ne(Re(t,e));case ke.DATA_URL:return new Ne(function(t){var e=new je(t);return e.base64?Re(ke.BASE64,e.rest):function(t){var e;try{e=decodeURIComponent(t)}catch(r){throw Oe(ke.DATA_URL,\"Malformed data URL.\")}return Pe(e)}(e.rest)}(e),new je(e).contentType)}throw _e()}function Pe(t){for(var e=[],n=0;n<t.length;n++){var r=t.charCodeAt(n);if(r<=127)e.push(r);else if(r<=2047)e.push(192|r>>6,128|63&r);else if(55296===(64512&r))if(n<t.length-1&&56320===(64512&t.charCodeAt(n+1)))r=65536|(1023&r)<<10|1023&t.charCodeAt(++n),e.push(240|r>>18,128|r>>12&63,128|r>>6&63,128|63&r);else e.push(239,191,189);else 56320===(64512&r)?e.push(239,191,189):e.push(224|r>>12,128|r>>6&63,128|63&r)}return new Uint8Array(e)}function Re(t,e){switch(t){case ke.BASE64:var n=-1!==e.indexOf(\"-\"),i=-1!==e.indexOf(\"_\");if(n||i)throw Oe(t,\"Invalid character '\"+(n?\"-\":\"_\")+\"' found: is it base64url encoded?\");break;case ke.BASE64URL:var o=-1!==e.indexOf(\"+\"),a=-1!==e.indexOf(\"/\");if(o||a)throw Oe(t,\"Invalid character '\"+(o?\"+\":\"/\")+\"' found: is it base64 encoded?\");e=e.replace(/-/g,\"+\").replace(/_/g,\"/\")}var s;try{s=atob(e)}catch(r){throw Oe(t,\"Invalid character found\")}for(var u=new Uint8Array(s.length),c=0;c<s.length;c++)u[c]=s.charCodeAt(c);return u}var je=function(t){this.base64=!1,this.contentType=null;var e=t.match(/^data:([^,]+)?,/);if(null===e)throw Oe(ke.DATA_URL,\"Must be formatted 'data:[<mediatype>][;base64],<data>\");var n=e[1]||null;null!=n&&(this.base64=(r=n,i=\";base64\",r.length>=i.length&&r.substring(r.length-i.length)===i),this.contentType=this.base64?n.substring(0,n.length-\";base64\".length):n),this.rest=t.substring(t.indexOf(\",\")+1);var r,i};var xe,De={STATE_CHANGED:\"state_changed\"},Le=\"running\",Me=\"pausing\",Fe=\"paused\",Ue=\"success\",Ve=\"canceling\",qe=\"canceled\",Be=\"error\",ze={RUNNING:\"running\",PAUSED:\"paused\",SUCCESS:\"success\",CANCELED:\"canceled\",ERROR:\"error\"};function He(t){switch(t){case Le:case Me:case Ve:return ze.RUNNING;case Fe:return ze.PAUSED;case Ue:return ze.SUCCESS;case qe:return ze.CANCELED;case Be:default:return ze.ERROR}}!function(t){t[t.NO_ERROR=0]=\"NO_ERROR\",t[t.NETWORK_ERROR=1]=\"NETWORK_ERROR\",t[t.ABORT=2]=\"ABORT\"}(xe||(xe={}));var Ke=function(){function t(){var t=this;this.sent_=!1,this.xhr_=new XMLHttpRequest,this.errorCode_=xe.NO_ERROR,this.sendPromise_=new Promise((function(e){t.xhr_.addEventListener(\"abort\",(function(){t.errorCode_=xe.ABORT,e(t)})),t.xhr_.addEventListener(\"error\",(function(){t.errorCode_=xe.NETWORK_ERROR,e(t)})),t.xhr_.addEventListener(\"load\",(function(){e(t)}))}))}return t.prototype.send=function(t,e,n,r){if(this.sent_)throw Ce(\"cannot .send() more than once\");if(this.sent_=!0,this.xhr_.open(e,t,!0),void 0!==r)for(var i in r)r.hasOwnProperty(i)&&this.xhr_.setRequestHeader(i,r[i].toString());return void 0!==n?this.xhr_.send(n):this.xhr_.send(),this.sendPromise_},t.prototype.getErrorCode=function(){if(!this.sent_)throw Ce(\"cannot .getErrorCode() before sending\");return this.errorCode_},t.prototype.getStatus=function(){if(!this.sent_)throw Ce(\"cannot .getStatus() before sending\");try{return this.xhr_.status}catch(r){return-1}},t.prototype.getResponseText=function(){if(!this.sent_)throw Ce(\"cannot .getResponseText() before sending\");return this.xhr_.responseText},t.prototype.abort=function(){this.xhr_.abort()},t.prototype.getResponseHeader=function(t){return this.xhr_.getResponseHeader(t)},t.prototype.addUploadProgressListener=function(t){null!=this.xhr_.upload&&this.xhr_.upload.addEventListener(\"progress\",t)},t.prototype.removeUploadProgressListener=function(t){null!=this.xhr_.upload&&this.xhr_.upload.removeEventListener(\"progress\",t)},t}(),We=function(){function t(){}return t.prototype.createXhrIo=function(){return new Ke},t}();function Ge(t){return\"string\"===typeof t||t instanceof String}function Qe(t){return Ye()&&t instanceof Blob}function Ye(){return\"undefined\"!==typeof Blob}function Je(t,e,n,r){if(r<e)throw new Zt(pe,\"Invalid value for '\"+t+\"'. Expected \"+e+\" or greater.\");if(r>n)throw new Zt(pe,\"Invalid value for '\"+t+\"'. Expected \"+n+\" or less.\")}function Xe(){return\"undefined\"!==typeof BlobBuilder?BlobBuilder:\"undefined\"!==typeof WebKitBlobBuilder?WebKitBlobBuilder:void 0}function $e(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=Xe();if(void 0!==n){for(var r=new n,i=0;i<t.length;i++)r.append(t[i]);return r.getBlob()}if(Ye())return new Blob(t);throw new Zt(me,\"This browser doesn't seem to support creating Blobs\")}var Ze=function(){function t(t,e){var n=0,r=\"\";Qe(t)?(this.data_=t,n=t.size,r=t.type):t instanceof ArrayBuffer?(e?this.data_=new Uint8Array(t):(this.data_=new Uint8Array(t.byteLength),this.data_.set(new Uint8Array(t))),n=this.data_.length):t instanceof Uint8Array&&(e?this.data_=t:(this.data_=new Uint8Array(t.length),this.data_.set(t)),n=t.length),this.size_=n,this.type_=r}return t.prototype.size=function(){return this.size_},t.prototype.type=function(){return this.type_},t.prototype.slice=function(e,n){if(Qe(this.data_)){var r=function(t,e,n){return t.webkitSlice?t.webkitSlice(e,n):t.mozSlice?t.mozSlice(e,n):t.slice?t.slice(e,n):null}(this.data_,e,n);return null===r?null:new t(r)}return new t(new Uint8Array(this.data_.buffer,e,n-e),!0)},t.getBlob=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];if(Ye()){var r=e.map((function(e){return e instanceof t?e.data_:e}));return new t($e.apply(null,r))}var i=e.map((function(t){return Ge(t)?Ae(ke.RAW,t).data:t.data_})),o=0;i.forEach((function(t){o+=t.byteLength}));var a=new Uint8Array(o),s=0;return i.forEach((function(t){for(var e=0;e<t.length;e++)a[s++]=t[e]})),new t(a,!0)},t.prototype.uploadData=function(){return this.data_},t}(),tn=function(){function t(t,e){this.bucket=t,this.path_=e}return Object.defineProperty(t.prototype,\"path\",{get:function(){return this.path_},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"isRoot\",{get:function(){return 0===this.path.length},enumerable:!1,configurable:!0}),t.prototype.fullServerUrl=function(){var t=encodeURIComponent;return\"/b/\"+t(this.bucket)+\"/o/\"+t(this.path)},t.prototype.bucketOnlyServerUrl=function(){return\"/b/\"+encodeURIComponent(this.bucket)+\"/o\"},t.makeFromBucketSpec=function(e){var n;try{n=t.makeFromUrl(e)}catch(r){return new t(e,\"\")}if(\"\"===n.path)return n;throw new Zt(ue,\"Invalid default bucket '\"+e+\"'.\")},t.makeFromUrl=function(e){var n=null,r=\"([A-Za-z0-9.\\\\-_]+)\";var i=new RegExp(\"^gs://\"+r+\"(/(.*))?$\",\"i\");function o(t){t.path_=decodeURIComponent(t.path)}for(var a=$t.replace(/[.]/g,\"\\\\.\"),s=[{regex:i,indices:{bucket:1,path:3},postModify:function(t){\"/\"===t.path.charAt(t.path.length-1)&&(t.path_=t.path_.slice(0,-1))}},{regex:new RegExp(\"^https?://\"+a+\"/v[A-Za-z0-9_]+/b/\"+r+\"/o(/([^?#]*).*)?$\",\"i\"),indices:{bucket:1,path:3},postModify:o},{regex:new RegExp(\"^https?://(?:storage.googleapis.com|storage.cloud.google.com)/\"+r+\"/([^?#]*)\",\"i\"),indices:{bucket:1,path:2},postModify:o}],u=0;u<s.length;u++){var c=s[u],l=c.regex.exec(e);if(l){var h=l[c.indices.bucket],f=l[c.indices.path];f||(f=\"\"),n=new t(h,f),c.postModify(n);break}}if(null==n)throw function(t){return new Zt(se,\"Invalid URL '\"+t+\"'.\")}(e);return n},t}();function en(t){var e,n;try{e=JSON.parse(t)}catch(r){return null}return\"object\"!==typeof(n=e)||Array.isArray(n)?null:e}function nn(t){var e=t.lastIndexOf(\"/\",t.length-2);return-1===e?t:t.slice(e+1)}function rn(t){return\"https://\"+$t+\"/v0\"+t}function on(t){var e=encodeURIComponent,n=\"?\";for(var r in t){if(t.hasOwnProperty(r))n=n+(e(r)+\"=\"+e(t[r]))+\"&\"}return n=n.slice(0,-1)}function an(t,e){return e}var sn=function(t,e,n,r){this.server=t,this.local=e||t,this.writable=!!n,this.xform=r||an},un=null;function cn(){if(un)return un;var t=[];t.push(new sn(\"bucket\")),t.push(new sn(\"generation\")),t.push(new sn(\"metageneration\")),t.push(new sn(\"name\",\"fullPath\",!0));var e=new sn(\"name\");e.xform=function(t,e){return function(t){return!Ge(t)||t.length<2?t:nn(t)}(e)},t.push(e);var n=new sn(\"size\");return n.xform=function(t,e){return void 0!==e?Number(e):e},t.push(n),t.push(new sn(\"timeCreated\")),t.push(new sn(\"updated\")),t.push(new sn(\"md5Hash\",null,!0)),t.push(new sn(\"cacheControl\",null,!0)),t.push(new sn(\"contentDisposition\",null,!0)),t.push(new sn(\"contentEncoding\",null,!0)),t.push(new sn(\"contentLanguage\",null,!0)),t.push(new sn(\"contentType\",null,!0)),t.push(new sn(\"metadata\",\"customMetadata\",!0)),un=t}function ln(t,e,n){for(var r={type:\"file\"},i=n.length,o=0;o<i;o++){var a=n[o];r[a.local]=a.xform(r,e[a.server])}return function(t,e){Object.defineProperty(t,\"ref\",{get:function(){var n=t.bucket,r=t.fullPath,i=new tn(n,r);return e.makeStorageReference(i)}})}(r,t),r}function hn(t,e,n){var r=en(e);return null===r?null:ln(t,r,n)}function fn(t,e){for(var n={},r=e.length,i=0;i<r;i++){var o=e[i];o.writable&&(n[o.server]=t[o.local])}return JSON.stringify(n)}function pn(t,e,n){var r=en(n);return null===r?null:function(t,e,n){var r={prefixes:[],items:[],nextPageToken:n.nextPageToken};if(n.prefixes)for(var i=0,o=n.prefixes;i<o.length;i++){var a=o[i].replace(/\\/$/,\"\"),s=t.makeStorageReference(new tn(e,a));r.prefixes.push(s)}if(n.items)for(var u=0,c=n.items;u<c.length;u++){var l=c[u];s=t.makeStorageReference(new tn(e,l.name)),r.items.push(s)}return r}(t,e,r)}var dn=function(t,e,n,r){this.url=t,this.method=e,this.handler=n,this.timeout=r,this.urlParams={},this.headers={},this.body=null,this.errorHandler=null,this.progressCallback=null,this.successCodes=[200],this.additionalRetryCodes=[]};function vn(t){if(!t)throw _e()}function yn(t,e){return function(n,r){var i=hn(t,r,e);return vn(null!==i),i}}function gn(t,e){return function(n,r){var i=hn(t,r,e);return vn(null!==i),function(t,e){var n=en(e);if(null===n)return null;if(!Ge(n.downloadTokens))return null;var r=n.downloadTokens;if(0===r.length)return null;var i=encodeURIComponent;return r.split(\",\").map((function(e){var n=t.bucket,r=t.fullPath;return rn(\"/b/\"+i(n)+\"/o/\"+i(r))+on({alt:\"media\",token:e})}))[0]}(i,r)}}function mn(t){return function(e,n){var r,i,o;return 401===e.getStatus()?r=new Zt(re,\"User is not authenticated, please authenticate using Firebase Authentication and try again.\"):402===e.getStatus()?(o=t.bucket,r=new Zt(ne,\"Quota for bucket '\"+o+\"' exceeded, please view quota on https://firebase.google.com/pricing/.\")):403===e.getStatus()?(i=t.path,r=new Zt(ie,\"User does not have permission to access '\"+i+\"'.\")):r=n,r.serverResponse=n.serverResponse,r}}function bn(t){var e=mn(t);return function(n,r){var i,o=e(n,r);return 404===n.getStatus()&&(i=t.path,o=new Zt(ee,\"Object '\"+i+\"' does not exist.\")),o.serverResponse=r.serverResponse,o}}function _n(t,e,n){var r=rn(e.fullServerUrl()),i=t.maxOperationRetryTime,o=new dn(r,\"GET\",yn(t,n),i);return o.errorHandler=bn(e),o}function wn(t,e,n,r,i){var o={};e.isRoot?o.prefix=\"\":o.prefix=e.path+\"/\",n&&n.length>0&&(o.delimiter=n),r&&(o.pageToken=r),i&&(o.maxResults=i);var a=rn(e.bucketOnlyServerUrl()),s=t.maxOperationRetryTime,u=new dn(a,\"GET\",function(t,e){return function(n,r){var i=pn(t,e,r);return vn(null!==i),i}}(t,e.bucket),s);return u.urlParams=o,u.errorHandler=mn(e),u}function En(t,e,n){var r=Object.assign({},n);return r.fullPath=t.path,r.size=e.size(),r.contentType||(r.contentType=function(t,e){return t&&t.contentType||e&&e.type()||\"application/octet-stream\"}(null,e)),r}var Tn=function(t,e,n,r){this.current=t,this.total=e,this.finalized=!!n,this.metadata=r||null};function In(t,e){var n=null;try{n=t.getResponseHeader(\"X-Goog-Upload-Status\")}catch(r){vn(!1)}return vn(!!n&&-1!==(e||[\"active\"]).indexOf(n)),n}var Sn=262144;function On(t,e,n,r,i,o,a,s){var u=new Tn(0,0);if(a?(u.current=a.current,u.total=a.total):(u.current=0,u.total=r.size()),r.size()!==u.total)throw new Zt(he,\"Server recorded incorrect upload file size, please retry the upload.\");var c=u.total-u.current,l=c;i>0&&(l=Math.min(l,i));var h=u.current,f=h+l,p={\"X-Goog-Upload-Command\":l===c?\"upload, finalize\":\"upload\",\"X-Goog-Upload-Offset\":u.current},d=r.slice(h,f);if(null===d)throw Ee();var v=e.maxUploadRetryTime,y=new dn(n,\"POST\",(function(t,n){var i,a=In(t,[\"active\",\"final\"]),s=u.current+l,c=r.size();return i=\"final\"===a?yn(e,o)(t,n):null,new Tn(s,c,\"final\"===a,i)}),v);return y.headers=p,y.body=d.uploadData(),y.progressCallback=s||null,y.errorHandler=mn(t),y}var Cn=function(t,e,n){if(\"function\"===typeof t||null!=e||null!=n)this.next=t,this.error=e,this.complete=n;else{var r=t;this.next=r.next,this.error=r.error,this.complete=r.complete}},kn=function(t,e,n,r,i,o){this.bytesTransferred=t,this.totalBytes=e,this.state=n,this.metadata=r,this.task=i,this.ref=o};function Nn(t){return function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];Promise.resolve().then((function(){return t.apply(void 0,e)}))}}var An=function(){function t(t,e,n){var r=this;void 0===n&&(n=null),this._transferred=0,this._needToFetchStatus=!1,this._needToFetchMetadata=!1,this._observers=[],this._error=void 0,this._uploadUrl=void 0,this._request=void 0,this._chunkMultiplier=1,this._resolve=void 0,this._reject=void 0,this._ref=t,this._blob=e,this._metadata=n,this._mappings=cn(),this._resumable=this._shouldDoResumable(this._blob),this._state=Le,this._errorHandler=function(t){r._request=void 0,r._chunkMultiplier=1,t.codeEquals(ae)?(r._needToFetchStatus=!0,r.completeTransitions_()):(r._error=t,r._transition(Be))},this._metadataErrorHandler=function(t){r._request=void 0,t.codeEquals(ae)?r.completeTransitions_():(r._error=t,r._transition(Be))},this._promise=new Promise((function(t,e){r._resolve=t,r._reject=e,r._start()})),this._promise.then(null,(function(){}))}return t.prototype._makeProgressCallback=function(){var t=this,e=this._transferred;return function(n){return t._updateProgress(e+n)}},t.prototype._shouldDoResumable=function(t){return t.size()>262144},t.prototype._start=function(){this._state===Le&&void 0===this._request&&(this._resumable?void 0===this._uploadUrl?this._createResumable():this._needToFetchStatus?this._fetchStatus():this._needToFetchMetadata?this._fetchMetadata():this._continueUpload():this._oneShotUpload())},t.prototype._resolveToken=function(t){var e=this;this._ref.storage.getAuthToken().then((function(n){switch(e._state){case Le:t(n);break;case Ve:e._transition(qe);break;case Me:e._transition(Fe)}}))},t.prototype._createResumable=function(){var t=this;this._resolveToken((function(e){var n=function(t,e,n,i,o){var a=e.bucketOnlyServerUrl(),s=En(e,i,o),u={name:s.fullPath},c=rn(a),l={\"X-Goog-Upload-Protocol\":\"resumable\",\"X-Goog-Upload-Command\":\"start\",\"X-Goog-Upload-Header-Content-Length\":i.size(),\"X-Goog-Upload-Header-Content-Type\":s.contentType,\"Content-Type\":\"application/json; charset=utf-8\"},h=fn(s,n),f=t.maxUploadRetryTime,p=new dn(c,\"POST\",(function(t){var e;In(t);try{e=t.getResponseHeader(\"X-Goog-Upload-URL\")}catch(r){vn(!1)}return vn(Ge(e)),e}),f);return p.urlParams=u,p.headers=l,p.body=h,p.errorHandler=mn(e),p}(t._ref.storage,t._ref._location,t._mappings,t._blob,t._metadata),i=t._ref.storage.makeRequest(n,e);t._request=i,i.getPromise().then((function(e){t._request=void 0,t._uploadUrl=e,t._needToFetchStatus=!1,t.completeTransitions_()}),t._errorHandler)}))},t.prototype._fetchStatus=function(){var t=this,e=this._uploadUrl;this._resolveToken((function(n){var i=function(t,e,n,i){var o=t.maxUploadRetryTime,a=new dn(n,\"POST\",(function(t){var e=In(t,[\"active\",\"final\"]),n=null;try{n=t.getResponseHeader(\"X-Goog-Upload-Size-Received\")}catch(r){vn(!1)}n||vn(!1);var o=Number(n);return vn(!isNaN(o)),new Tn(o,i.size(),\"final\"===e)}),o);return a.headers={\"X-Goog-Upload-Command\":\"query\"},a.errorHandler=mn(e),a}(t._ref.storage,t._ref._location,e,t._blob),o=t._ref.storage.makeRequest(i,n);t._request=o,o.getPromise().then((function(e){e=e,t._request=void 0,t._updateProgress(e.current),t._needToFetchStatus=!1,e.finalized&&(t._needToFetchMetadata=!0),t.completeTransitions_()}),t._errorHandler)}))},t.prototype._continueUpload=function(){var t=this,e=Sn*this._chunkMultiplier,n=new Tn(this._transferred,this._blob.size()),i=this._uploadUrl;this._resolveToken((function(o){var a;try{a=On(t._ref._location,t._ref.storage,i,t._blob,e,t._mappings,n,t._makeProgressCallback())}catch(r){return t._error=r,void t._transition(Be)}var s=t._ref.storage.makeRequest(a,o);t._request=s,s.getPromise().then((function(e){t._increaseMultiplier(),t._request=void 0,t._updateProgress(e.current),e.finalized?(t._metadata=e.metadata,t._transition(Ue)):t.completeTransitions_()}),t._errorHandler)}))},t.prototype._increaseMultiplier=function(){Sn*this._chunkMultiplier<33554432&&(this._chunkMultiplier*=2)},t.prototype._fetchMetadata=function(){var t=this;this._resolveToken((function(e){var n=_n(t._ref.storage,t._ref._location,t._mappings),r=t._ref.storage.makeRequest(n,e);t._request=r,r.getPromise().then((function(e){t._request=void 0,t._metadata=e,t._transition(Ue)}),t._metadataErrorHandler)}))},t.prototype._oneShotUpload=function(){var t=this;this._resolveToken((function(e){var n=function(t,e,n,r,i){var o=e.bucketOnlyServerUrl(),a={\"X-Goog-Upload-Protocol\":\"multipart\"},s=function(){for(var t=\"\",e=0;e<2;e++)t+=Math.random().toString().slice(2);return t}();a[\"Content-Type\"]=\"multipart/related; boundary=\"+s;var u=En(e,r,i),c=\"--\"+s+\"\\r\\nContent-Type: application/json; charset=utf-8\\r\\n\\r\\n\"+fn(u,n)+\"\\r\\n--\"+s+\"\\r\\nContent-Type: \"+u.contentType+\"\\r\\n\\r\\n\",l=\"\\r\\n--\"+s+\"--\",h=Ze.getBlob(c,r,l);if(null===h)throw Ee();var f={name:u.fullPath},p=rn(o),d=t.maxUploadRetryTime,v=new dn(p,\"POST\",yn(t,n),d);return v.urlParams=f,v.headers=a,v.body=h.uploadData(),v.errorHandler=mn(e),v}(t._ref.storage,t._ref._location,t._mappings,t._blob,t._metadata),r=t._ref.storage.makeRequest(n,e);t._request=r,r.getPromise().then((function(e){t._request=void 0,t._metadata=e,t._updateProgress(t._blob.size()),t._transition(Ue)}),t._errorHandler)}))},t.prototype._updateProgress=function(t){var e=this._transferred;this._transferred=t,this._transferred!==e&&this._notifyObservers()},t.prototype._transition=function(t){if(this._state!==t)switch(t){case Ve:case Me:this._state=t,void 0!==this._request&&this._request.cancel();break;case Le:var e=this._state===Fe;this._state=t,e&&(this._notifyObservers(),this._start());break;case Fe:this._state=t,this._notifyObservers();break;case qe:this._error=we(),this._state=t,this._notifyObservers();break;case Be:case Ue:this._state=t,this._notifyObservers()}},t.prototype.completeTransitions_=function(){switch(this._state){case Me:this._transition(Fe);break;case Ve:this._transition(qe);break;case Le:this._start()}},Object.defineProperty(t.prototype,\"snapshot\",{get:function(){var t=He(this._state);return new kn(this._transferred,this._blob.size(),t,this._metadata,this,this._ref)},enumerable:!1,configurable:!0}),t.prototype.on=function(t,e,n,r){var i=this,o=new Cn(e,n,r);return this._addObserver(o),function(){i._removeObserver(o)}},t.prototype.then=function(t,e){return this._promise.then(t,e)},t.prototype.catch=function(t){return this.then(null,t)},t.prototype._addObserver=function(t){this._observers.push(t),this._notifyObserver(t)},t.prototype._removeObserver=function(t){var e=this._observers.indexOf(t);-1!==e&&this._observers.splice(e,1)},t.prototype._notifyObservers=function(){var t=this;this._finishPromise(),this._observers.slice().forEach((function(e){t._notifyObserver(e)}))},t.prototype._finishPromise=function(){if(void 0!==this._resolve){var t=!0;switch(He(this._state)){case ze.SUCCESS:Nn(this._resolve.bind(null,this.snapshot))();break;case ze.CANCELED:case ze.ERROR:Nn(this._reject.bind(null,this._error))();break;default:t=!1}t&&(this._resolve=void 0,this._reject=void 0)}},t.prototype._notifyObserver=function(t){switch(He(this._state)){case ze.RUNNING:case ze.PAUSED:t.next&&Nn(t.next.bind(t,this.snapshot))();break;case ze.SUCCESS:t.complete&&Nn(t.complete.bind(t))();break;case ze.CANCELED:case ze.ERROR:t.error&&Nn(t.error.bind(t,this._error))();break;default:t.error&&Nn(t.error.bind(t,this._error))()}},t.prototype.resume=function(){var t=this._state===Fe||this._state===Me;return t&&this._transition(Le),t},t.prototype.pause=function(){var t=this._state===Le;return t&&this._transition(Me),t},t.prototype.cancel=function(){var t=this._state===Le||this._state===Me;return t&&this._transition(Ve),t},t}(),Pn=function(){function t(t,e){this._service=t,this._location=e instanceof tn?e:tn.makeFromUrl(e)}return t.prototype.toString=function(){return\"gs://\"+this._location.bucket+\"/\"+this._location.path},t.prototype.newRef=function(e,n){return new t(e,n)},Object.defineProperty(t.prototype,\"root\",{get:function(){var t=new tn(this._location.bucket,\"\");return this.newRef(this._service,t)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"bucket\",{get:function(){return this._location.bucket},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"fullPath\",{get:function(){return this._location.path},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"name\",{get:function(){return nn(this._location.path)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"storage\",{get:function(){return this._service},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"parent\",{get:function(){var e=function(t){if(0===t.length)return null;var e=t.lastIndexOf(\"/\");return-1===e?\"\":t.slice(0,e)}(this._location.path);if(null===e)return null;var n=new tn(this._location.bucket,e);return new t(this._service,n)},enumerable:!1,configurable:!0}),t.prototype._throwIfRoot=function(t){if(\"\"===this._location.path)throw Se(t)},t}();function Rn(t){var e={prefixes:[],items:[]};return jn(t,e).then((function(){return e}))}function jn(t,e,n){return Object(l.b)(this,void 0,void 0,(function(){var r,i,o;return Object(l.d)(this,(function(a){switch(a.label){case 0:return[4,xn(t,{pageToken:n})];case 1:return r=a.sent(),(i=e.prefixes).push.apply(i,r.prefixes),(o=e.items).push.apply(o,r.items),null==r.nextPageToken?[3,3]:[4,jn(t,e,r.nextPageToken)];case 2:a.sent(),a.label=3;case 3:return[2]}}))}))}function xn(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n,r,i;return Object(l.d)(this,(function(o){switch(o.label){case 0:return null!=e&&\"number\"===typeof e.maxResults&&Je(\"options.maxResults\",1,1e3,e.maxResults),[4,t.storage.getAuthToken()];case 1:return n=o.sent(),r=e||{},i=wn(t.storage,t._location,\"/\",r.pageToken,r.maxResults),[2,t.storage.makeRequest(i,n).getPromise()]}}))}))}function Dn(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n,r;return Object(l.d)(this,(function(i){switch(i.label){case 0:return t._throwIfRoot(\"updateMetadata\"),[4,t.storage.getAuthToken()];case 1:return n=i.sent(),r=function(t,e,n,r){var i=rn(e.fullServerUrl()),o=fn(n,r),a=t.maxOperationRetryTime,s=new dn(i,\"PATCH\",yn(t,r),a);return s.headers={\"Content-Type\":\"application/json; charset=utf-8\"},s.body=o,s.errorHandler=bn(e),s}(t.storage,t._location,e,cn()),[2,t.storage.makeRequest(r,n).getPromise()]}}))}))}function Ln(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n;return Object(l.d)(this,(function(r){switch(r.label){case 0:return t._throwIfRoot(\"getDownloadURL\"),[4,t.storage.getAuthToken()];case 1:return e=r.sent(),n=function(t,e,n){var r=rn(e.fullServerUrl()),i=t.maxOperationRetryTime,o=new dn(r,\"GET\",gn(t,n),i);return o.errorHandler=bn(e),o}(t.storage,t._location,cn()),[2,t.storage.makeRequest(n,e).getPromise().then((function(t){if(null===t)throw new Zt(fe,\"The given file does not have any download URLs.\");return t}))]}}))}))}function Mn(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n;return Object(l.d)(this,(function(r){switch(r.label){case 0:return t._throwIfRoot(\"deleteObject\"),[4,t.storage.getAuthToken()];case 1:return e=r.sent(),n=function(t,e){var n=rn(e.fullServerUrl()),r=t.maxOperationRetryTime,i=new dn(n,\"DELETE\",(function(t,e){}),r);return i.successCodes=[200,204],i.errorHandler=bn(e),i}(t.storage,t._location),[2,t.storage.makeRequest(n,e).getPromise()]}}))}))}function Fn(t,e){var n=function(t,e){var n=e.split(\"/\").filter((function(t){return t.length>0})).join(\"/\");return 0===t.length?n:t+\"/\"+n}(t._location.path,e),r=new tn(t._location.bucket,n);return new Pn(t.storage,r)}var Un=function(){function t(t,e,n){this._delegate=t,this.task=e,this.ref=n}return Object.defineProperty(t.prototype,\"bytesTransferred\",{get:function(){return this._delegate.bytesTransferred},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"metadata\",{get:function(){return this._delegate.metadata},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"state\",{get:function(){return this._delegate.state},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"totalBytes\",{get:function(){return this._delegate.totalBytes},enumerable:!1,configurable:!0}),t}(),Vn=function(){function t(t,e){this._delegate=t,this._ref=e,this.cancel=this._delegate.cancel.bind(this._delegate),this.catch=this._delegate.catch.bind(this._delegate),this.pause=this._delegate.pause.bind(this._delegate),this.resume=this._delegate.resume.bind(this._delegate),this._snapshot=new Un(this._delegate.snapshot,this,this._ref)}return Object.defineProperty(t.prototype,\"snapshot\",{get:function(){return this._snapshot},enumerable:!1,configurable:!0}),t.prototype.then=function(t,e){var n=this;return this._delegate.then((function(e){if(t)return t(new Un(e,n,n._ref))}),e)},t.prototype.on=function(t,e,n,r){var i=this,o=void 0;return e&&(o=\"function\"===typeof e?function(t){return e(new Un(t,i,i._ref))}:{next:e.next?function(t){return e.next(new Un(t,i,i._ref))}:void 0,complete:e.complete||void 0,error:e.error||void 0}),this._delegate.on(t,o,n||void 0,r||void 0)},t}(),qn=function(){function t(t,e){this._delegate=t,this._service=e}return Object.defineProperty(t.prototype,\"prefixes\",{get:function(){var t=this;return this._delegate.prefixes.map((function(e){return new Bn(e,t._service)}))},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"items\",{get:function(){var t=this;return this._delegate.items.map((function(e){return new Bn(e,t._service)}))},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"nextPageToken\",{get:function(){return this._delegate.nextPageToken||null},enumerable:!1,configurable:!0}),t}(),Bn=function(){function t(t,e){this._delegate=t,this.storage=e}return Object.defineProperty(t.prototype,\"name\",{get:function(){return this._delegate.name},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"bucket\",{get:function(){return this._delegate.bucket},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"fullPath\",{get:function(){return this._delegate.fullPath},enumerable:!1,configurable:!0}),t.prototype.toString=function(){return this._delegate.toString()},t.prototype.child=function(e){return new t(Fn(this._delegate,e),this.storage)},Object.defineProperty(t.prototype,\"root\",{get:function(){return new t(this._delegate.root,this.storage)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"parent\",{get:function(){var e=this._delegate.parent;return null==e?null:new t(e,this.storage)},enumerable:!1,configurable:!0}),t.prototype.put=function(t,e){return this._throwIfRoot(\"put\"),new Vn(function(t,e,n){return void 0===n&&(n=null),t._throwIfRoot(\"uploadBytesResumable\"),new An(t,new Ze(e),n)}(this._delegate,t,e),this)},t.prototype.putString=function(t,e,n){return void 0===e&&(e=ke.RAW),this._throwIfRoot(\"putString\"),new Vn(function(t,e,n,r){void 0===n&&(n=ke.RAW),t._throwIfRoot(\"putString\");var i=Ae(n,e),o=Object(l.a)({},r);return null==o.contentType&&null!=i.contentType&&(o.contentType=i.contentType),new An(t,new Ze(i.data,!0),o)}(this._delegate,t,e,n),this)},t.prototype.listAll=function(){var t=this;return Rn(this._delegate).then((function(e){return new qn(e,t.storage)}))},t.prototype.list=function(t){var e=this;return xn(this._delegate,t).then((function(t){return new qn(t,e.storage)}))},t.prototype.getMetadata=function(){return function(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n;return Object(l.d)(this,(function(r){switch(r.label){case 0:return t._throwIfRoot(\"getMetadata\"),[4,t.storage.getAuthToken()];case 1:return e=r.sent(),n=_n(t.storage,t._location,cn()),[2,t.storage.makeRequest(n,e).getPromise()]}}))}))}(this._delegate)},t.prototype.updateMetadata=function(t){return Dn(this._delegate,t)},t.prototype.getDownloadURL=function(){return Ln(this._delegate)},t.prototype.delete=function(){return this._throwIfRoot(\"delete\"),Mn(this._delegate)},t.prototype._throwIfRoot=function(t){if(\"\"===this._delegate._location.path)throw Se(t)},t}(),zn=function(){function t(t){this.promise_=Promise.reject(t)}return t.prototype.getPromise=function(){return this.promise_},t.prototype.cancel=function(t){},t}();var Hn=function(){function t(t,e,n,r,i,o,a,s,u,c,l){var h=this;this.pendingXhr_=null,this.backoffId_=null,this.canceled_=!1,this.appDelete_=!1,this.url_=t,this.method_=e,this.headers_=n,this.body_=r,this.successCodes_=i.slice(),this.additionalRetryCodes_=o.slice(),this.callback_=a,this.errorCallback_=s,this.progressCallback_=c,this.timeout_=u,this.pool_=l,this.promise_=new Promise((function(t,e){h.resolve_=t,h.reject_=e,h.start_()}))}return t.prototype.start_=function(){var t=this;function e(e,n){var i,o=t.resolve_,a=t.reject_,s=n.xhr;if(n.wasSuccessCode)try{var u=t.callback_(s,s.getResponseText());void 0!==u?o(u):o()}catch(r){a(r)}else null!==s?((i=_e()).serverResponse=s.getResponseText(),t.errorCallback_?a(t.errorCallback_(s,i)):a(i)):n.canceled?a(i=t.appDelete_?Ie():we()):a(i=new Zt(oe,\"Max retry time for operation exceeded, please try again.\"))}this.canceled_?e(0,new Kn(!1,null,!0)):this.backoffId_=function(t,e,n){var r=1,i=null,o=!1,a=0;function s(){return 2===a}var u=!1;function c(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];u||(u=!0,e.apply(null,t))}function h(e){i=setTimeout((function(){i=null,t(f,s())}),e)}function f(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(!u)if(t)c.call.apply(c,Object(l.g)([null,t],e));else{var i;s()||o?c.call.apply(c,Object(l.g)([null,t],e)):(r<64&&(r*=2),1===a?(a=2,i=0):i=1e3*(r+Math.random()),h(i))}}var p=!1;function d(t){p||(p=!0,u||(null!==i?(t||(a=2),clearTimeout(i),h(0)):t||(a=1)))}return h(0),setTimeout((function(){o=!0,d(!0)}),n),d}((function(e,n){if(n)e(!1,new Kn(!1,null,!0));else{var r=t.pool_.createXhrIo();t.pendingXhr_=r,null!==t.progressCallback_&&r.addUploadProgressListener(i),r.send(t.url_,t.method_,t.body_,t.headers_).then((function(n){null!==t.progressCallback_&&n.removeUploadProgressListener(i),t.pendingXhr_=null;var r=(n=n).getErrorCode()===xe.NO_ERROR,o=n.getStatus();if(r&&!t.isRetryStatusCode_(o)){var a=-1!==t.successCodes_.indexOf(o);e(!0,new Kn(a,n))}else{var s=n.getErrorCode()===xe.ABORT;e(!1,new Kn(!1,null,s))}}))}function i(e){var n=e.loaded,r=e.lengthComputable?e.total:-1;null!==t.progressCallback_&&t.progressCallback_(n,r)}}),e,this.timeout_)},t.prototype.getPromise=function(){return this.promise_},t.prototype.cancel=function(t){this.canceled_=!0,this.appDelete_=t||!1,null!==this.backoffId_&&(0,this.backoffId_)(!1),null!==this.pendingXhr_&&this.pendingXhr_.abort()},t.prototype.isRetryStatusCode_=function(t){var e=t>=500&&t<600,n=-1!==[408,429].indexOf(t),r=-1!==this.additionalRetryCodes_.indexOf(t);return e||n||r},t}(),Kn=function(t,e,n){this.wasSuccessCode=t,this.xhr=e,this.canceled=!!n};function Wn(t,e,n,r){var o=on(t.urlParams),a=t.url+o,s=Object.assign({},t.headers);return function(t,e){e&&(t[\"X-Firebase-GMPID\"]=e)}(s,e),function(t,e){null!==e&&e.length>0&&(t.Authorization=\"Firebase \"+e)}(s,n),function(t){var e=\"undefined\"!==typeof i.a?i.a.SDK_VERSION:\"AppManager\";t[\"X-Firebase-Storage-Version\"]=\"webjs/\"+e}(s),new Hn(a,t.method,s,t.body,t.successCodes,t.additionalRetryCodes,t.handler,t.errorHandler,t.timeout,t.progressCallback,r)}function Gn(t){return/^[A-Za-z]+:\\/\\//.test(t)}function Qn(t,e){if(t instanceof Jn){var n=t;if(null==n._bucket)throw new Zt(ce,\"No default bucket found. Did you set the 'storageBucket' property when initializing the app?\");var r=new Pn(n,n._bucket);return null!=e?Qn(r,e):r}if(void 0!==e){if(e.includes(\"..\"))throw Te('`path` param cannot contain \"..\"');return Fn(t,e)}return t}function Yn(t,e){if(e&&Gn(e)){if(t instanceof Jn)return new Pn(t,e);throw Te(\"To use ref(service, url), the first argument must be a Storage instance.\")}return Qn(t,e)}var Jn=function(){function t(t,e,n,r){this.app=t,this._authProvider=e,this._pool=n,this._url=r,this._bucket=null,this._appId=null,this._deleted=!1,this._maxOperationRetryTime=12e4,this._maxUploadRetryTime=6e5,this._requests=new Set,this._bucket=null!=r?tn.makeFromBucketSpec(r):function(t){var e=null===t||void 0===t?void 0:t.storageBucket;return null==e?null:tn.makeFromBucketSpec(e)}(this.app.options)}return Object.defineProperty(t.prototype,\"maxUploadRetryTime\",{get:function(){return this._maxUploadRetryTime},set:function(t){Je(\"time\",0,Number.POSITIVE_INFINITY,t),this._maxUploadRetryTime=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"maxOperationRetryTime\",{get:function(){return this._maxOperationRetryTime},set:function(t){Je(\"time\",0,Number.POSITIVE_INFINITY,t),this._maxOperationRetryTime=t},enumerable:!1,configurable:!0}),t.prototype.getAuthToken=function(){return Object(l.b)(this,void 0,void 0,(function(){var t,e;return Object(l.d)(this,(function(n){switch(n.label){case 0:return(t=this._authProvider.getImmediate({optional:!0}))?[4,t.getToken()]:[3,2];case 1:if(null!==(e=n.sent()))return[2,e.accessToken];n.label=2;case 2:return[2,null]}}))}))},t.prototype._delete=function(){return this._deleted=!0,this._requests.forEach((function(t){return t.cancel()})),this._requests.clear(),Promise.resolve()},t.prototype.makeStorageReference=function(t){return new Pn(this,t)},t.prototype.makeRequest=function(t,e){var n=this;if(this._deleted)return new zn(Ie());var r=Wn(t,this._appId,e,this._pool);return this._requests.add(r),r.getPromise().then((function(){return n._requests.delete(r)}),(function(){return n._requests.delete(r)})),r},t}(),Xn=function(){function t(t,e){var n=this;this.app=t,this._delegate=e,this.INTERNAL={delete:function(){return n._delegate._delete()}}}return Object.defineProperty(t.prototype,\"maxOperationRetryTime\",{get:function(){return this._delegate.maxOperationRetryTime},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"maxUploadRetryTime\",{get:function(){return this._delegate.maxUploadRetryTime},enumerable:!1,configurable:!0}),t.prototype.ref=function(t){if(Gn(t))throw Te(\"ref() expected a child path but got a URL, use refFromURL instead.\");return new Bn(Yn(this._delegate,t),this)},t.prototype.refFromURL=function(t){if(!Gn(t))throw Te(\"refFromURL() expected a full URL but got a child path, use ref() instead.\");try{tn.makeFromUrl(t)}catch(r){throw Te(\"refFromUrl() expected a valid full URL but got an invalid one.\")}return new Bn(Yn(this._delegate,t),this)},t.prototype.setMaxUploadRetryTime=function(t){this._delegate.maxUploadRetryTime=t},t.prototype.setMaxOperationRetryTime=function(t){this._delegate.maxOperationRetryTime=t},t}();function $n(t,e){var n=t.getProvider(\"app\").getImmediate(),r=t.getProvider(\"auth-internal\");return new Xn(n,new Jn(n,r,new We,e))}!function(t){var e={TaskState:ze,TaskEvent:De,StringFormat:ke,Storage:Jn,Reference:Bn};t.INTERNAL.registerComponent(new u.a(\"storage\",$n,\"PUBLIC\").setServiceProps(e).setMultipleInstances(!0)),t.registerVersion(\"@firebase/storage\",\"0.4.2\")}(i.a);var Zn,tr,er,nr=\"0.4.5\",rr=nr,ir=\"FB-PERF-TRACE-MEASURE\",or=\"_wt_\",ar=\"_fcp\",sr=\"_fid\",ur=\"@firebase/performance/config\",cr=\"@firebase/performance/configexpire\",lr=\"Performance\",hr=((Zn={})[\"trace started\"]=\"Trace {$traceName} was started before.\",Zn[\"trace stopped\"]=\"Trace {$traceName} is not running.\",Zn[\"nonpositive trace startTime\"]=\"Trace {$traceName} startTime should be positive.\",Zn[\"nonpositive trace duration\"]=\"Trace {$traceName} duration should be positive.\",Zn[\"no window\"]=\"Window is not available.\",Zn[\"no app id\"]=\"App id is not available.\",Zn[\"no project id\"]=\"Project id is not available.\",Zn[\"no api key\"]=\"Api key is not available.\",Zn[\"invalid cc log\"]=\"Attempted to queue invalid cc event\",Zn[\"FB not default\"]=\"Performance can only start when Firebase app instance is the default one.\",Zn[\"RC response not ok\"]=\"RC response is not ok\",Zn[\"invalid attribute name\"]=\"Attribute name {$attributeName} is invalid.\",Zn[\"invalid attribute value\"]=\"Attribute value {$attributeValue} is invalid.\",Zn[\"invalid custom metric name\"]=\"Custom metric name {$customMetricName} is invalid\",Zn[\"invalid String merger input\"]=\"Input for String merger is invalid, contact support team to resolve.\",Zn),fr=new a.b(\"performance\",lr,hr),pr=new o.b(lr);pr.logLevel=o.a.INFO;var dr,vr=function(){function t(t){if(this.window=t,!t)throw fr.create(\"no window\");this.performance=t.performance,this.PerformanceObserver=t.PerformanceObserver,this.windowLocation=t.location,this.navigator=t.navigator,this.document=t.document,this.navigator&&this.navigator.cookieEnabled&&(this.localStorage=t.localStorage),t.perfMetrics&&t.perfMetrics.onFirstInputDelay&&(this.onFirstInputDelay=t.perfMetrics.onFirstInputDelay)}return t.prototype.getUrl=function(){return this.windowLocation.href.split(\"?\")[0]},t.prototype.mark=function(t){this.performance&&this.performance.mark&&this.performance.mark(t)},t.prototype.measure=function(t,e,n){this.performance&&this.performance.measure&&this.performance.measure(t,e,n)},t.prototype.getEntriesByType=function(t){return this.performance&&this.performance.getEntriesByType?this.performance.getEntriesByType(t):[]},t.prototype.getEntriesByName=function(t){return this.performance&&this.performance.getEntriesByName?this.performance.getEntriesByName(t):[]},t.prototype.getTimeOrigin=function(){return this.performance&&(this.performance.timeOrigin||this.performance.timing.navigationStart)},t.prototype.requiredApisAvailable=function(){return fetch&&Promise&&this.navigator&&this.navigator.cookieEnabled?!!Object(a.w)()||(pr.info(\"IndexedDB is not supported by current browswer\"),!1):(pr.info(\"Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.\"),!1)},t.prototype.setupObserver=function(t,e){this.PerformanceObserver&&new this.PerformanceObserver((function(t){for(var n=0,r=t.getEntries();n<r.length;n++){var i=r[n];e(i)}})).observe({entryTypes:[t]})},t.getInstance=function(){return void 0===tr&&(tr=new t(er)),tr},t}();function yr(t,e){var n=t.length-e.length;if(n<0||n>1)throw fr.create(\"invalid String merger input\");for(var r=[],i=0;i<t.length;i++)r.push(t.charAt(i)),e.length>i&&r.push(e.charAt(i));return r.join(\"\")}var gr,mr,br=function(){function t(){this.instrumentationEnabled=!0,this.dataCollectionEnabled=!0,this.loggingEnabled=!1,this.tracesSamplingRate=1,this.networkRequestsSamplingRate=1,this.logEndPointUrl=\"https://firebaselogging.googleapis.com/v0cc/log?format=json_proto\",this.flTransportEndpointUrl=yr(\"hts/frbslgigp.ogepscmv/ieo/eaylg\",\"tp:/ieaeogn-agolai.o/1frlglgc/o\"),this.transportKey=yr(\"AzSC8r6ReiGqFMyfvgow\",\"Iayx0u-XT3vksVM-pIV\"),this.logSource=462,this.logTraceAfterSampling=!1,this.logNetworkAfterSampling=!1,this.configTimeToLive=12}return t.prototype.getAppId=function(){var t=this.firebaseAppInstance&&this.firebaseAppInstance.options&&this.firebaseAppInstance.options.appId;if(!t)throw fr.create(\"no app id\");return t},t.prototype.getProjectId=function(){var t=this.firebaseAppInstance&&this.firebaseAppInstance.options&&this.firebaseAppInstance.options.projectId;if(!t)throw fr.create(\"no project id\");return t},t.prototype.getApiKey=function(){var t=this.firebaseAppInstance&&this.firebaseAppInstance.options&&this.firebaseAppInstance.options.apiKey;if(!t)throw fr.create(\"no api key\");return t},t.prototype.getFlTransportFullUrl=function(){return this.flTransportEndpointUrl.concat(\"?key=\",this.transportKey)},t.getInstance=function(){return void 0===dr&&(dr=new t),dr},t}();function _r(){return gr}!function(t){t[t.UNKNOWN=0]=\"UNKNOWN\",t[t.VISIBLE=1]=\"VISIBLE\",t[t.HIDDEN=2]=\"HIDDEN\"}(mr||(mr={}));var wr=[\"firebase_\",\"google_\",\"ga_\"],Er=new RegExp(\"^[a-zA-Z]\\\\w*$\");function Tr(){var t=vr.getInstance().navigator;return\"serviceWorker\"in t?t.serviceWorker.controller?2:3:1}function Ir(){switch(vr.getInstance().document.visibilityState){case\"visible\":return mr.VISIBLE;case\"hidden\":return mr.HIDDEN;default:return mr.UNKNOWN}}function Sr(){var t=vr.getInstance().navigator.connection;switch(t&&t.effectiveType){case\"slow-2g\":return 1;case\"2g\":return 2;case\"3g\":return 3;case\"4g\":return 4;default:return 0}}var Or=\"0.0.1\",Cr=!0,kr=\"FIREBASE_INSTALLATIONS_AUTH\";function Nr(t){var e=function(){var t=vr.getInstance().localStorage;if(!t)return;var e=t.getItem(cr);if(!e||(n=e,!(Number(n)>Date.now())))return;var n;var r=t.getItem(ur);if(!r)return;try{return JSON.parse(r)}catch(i){return}}();return e?(Pr(e),Promise.resolve()):function(t){return function(){var t=br.getInstance().installationsService.getToken();return t.then((function(t){})),t}().then((function(e){var n=\"https://firebaseremoteconfig.googleapis.com/v1/projects/\"+br.getInstance().getProjectId()+\"/namespaces/fireperf:fetch?key=\"+br.getInstance().getApiKey(),r=new Request(n,{method:\"POST\",headers:{Authorization:kr+\" \"+e},body:JSON.stringify({app_instance_id:t,app_instance_id_token:e,app_id:br.getInstance().getAppId(),app_version:rr,sdk_version:Or})});return fetch(r).then((function(t){if(t.ok)return t.json();throw fr.create(\"RC response not ok\")}))})).catch((function(){pr.info(Ar)}))}(t).then(Pr).then((function(t){return function(t){var e=vr.getInstance().localStorage;if(!t||!e)return;e.setItem(ur,JSON.stringify(t)),e.setItem(cr,String(Date.now()+60*br.getInstance().configTimeToLive*60*1e3))}(t)}),(function(){}))}var Ar=\"Could not fetch config, will use default configs\";function Pr(t){if(!t)return t;var e=br.getInstance(),n=t.entries||{};return void 0!==n.fpr_enabled?e.loggingEnabled=\"true\"===String(n.fpr_enabled):e.loggingEnabled=Cr,n.fpr_log_source&&(e.logSource=Number(n.fpr_log_source)),n.fpr_log_endpoint_url&&(e.logEndPointUrl=n.fpr_log_endpoint_url),n.fpr_log_transport_key&&(e.transportKey=n.fpr_log_transport_key),void 0!==n.fpr_vc_network_request_sampling_rate&&(e.networkRequestsSamplingRate=Number(n.fpr_vc_network_request_sampling_rate)),void 0!==n.fpr_vc_trace_sampling_rate&&(e.tracesSamplingRate=Number(n.fpr_vc_trace_sampling_rate)),e.logTraceAfterSampling=Rr(e.tracesSamplingRate),e.logNetworkAfterSampling=Rr(e.networkRequestsSamplingRate),t}function Rr(t){return Math.random()<=t}var jr,xr=1;function Dr(){return xr=2,jr=jr||function(){var t=vr.getInstance().document;return new Promise((function(e){if(t&&\"complete\"!==t.readyState){var n=function n(){\"complete\"===t.readyState&&(t.removeEventListener(\"readystatechange\",n),e())};t.addEventListener(\"readystatechange\",n)}else e()}))}().then((function(){return function(){var t=br.getInstance().installationsService.getId();return t.then((function(t){gr=t})),t}()})).then((function(t){return Nr(t)})).then((function(){return Lr()}),(function(){return Lr()}))}function Lr(){xr=3}var Mr,Fr=1e4,Ur=3,Vr=[],qr=!1;function Br(t){setTimeout((function(){if(0!==Ur)return Vr.length?void function(){var t=Vr.splice(0,1e3),e=t.map((function(t){return{source_extension_json_proto3:t.message,event_time_ms:String(t.eventTime)}}));(function(t,e){return function(t){var e=br.getInstance().getFlTransportFullUrl();return fetch(e,{method:\"POST\",body:JSON.stringify(t)})}(t).then((function(t){return t.ok||pr.info(\"Call to Firebase backend failed.\"),t.json()})).then((function(t){var n=Number(t.nextRequestWaitMillis),r=Fr;isNaN(n)||(r=Math.max(n,r));var i=t.logResponseDetails;Array.isArray(i)&&i.length>0&&\"RETRY_REQUEST_LATER\"===i[0].responseAction&&(Vr=Object(l.g)(e,Vr),pr.info(\"Retry transport request later.\")),Ur=3,Br(r)}))})({request_time_ms:String(Date.now()),client_info:{client_type:1,js_client_info:{}},log_source:br.getInstance().logSource,log_event:e},t).catch((function(){Vr=Object(l.g)(t,Vr),Ur--,pr.info(\"Tries left: \"+Ur+\".\"),Br(Fr)}))}():Br(Fr)}),t)}function zr(t){if(!t.eventTime||!t.message)throw fr.create(\"invalid cc log\");Vr=Object(l.g)(Vr,[t])}function Hr(t,e){Mr||(Mr=function(t){return function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];zr({message:t.apply(void 0,e),eventTime:Date.now()})}}(Gr)),Mr(t,e)}function Kr(t){var e=br.getInstance();!e.instrumentationEnabled&&t.isAuto||(e.dataCollectionEnabled||t.isAuto)&&vr.getInstance().requiredApisAvailable()&&(t.isAuto&&Ir()!==mr.VISIBLE||(3===xr?Wr(t):Dr().then((function(){return Wr(t)}),(function(){return Wr(t)}))))}function Wr(t){if(_r()){var e=br.getInstance();e.loggingEnabled&&e.logTraceAfterSampling&&setTimeout((function(){return Hr(t,1)}),0)}}function Gr(t,e){return 0===e?function(t){var e={url:t.url,http_method:t.httpMethod||0,http_response_code:200,response_payload_bytes:t.responsePayloadBytes,client_start_time_us:t.startTimeUs,time_to_response_initiated_us:t.timeToResponseInitiatedUs,time_to_response_completed_us:t.timeToResponseCompletedUs},n={application_info:Qr(),network_request_metric:e};return JSON.stringify(n)}(t):function(t){var e={name:t.name,is_auto:t.isAuto,client_start_time_us:t.startTimeUs,duration_us:t.durationUs};0!==Object.keys(t.counters).length&&(e.counters=t.counters);var n=t.getAttributes();0!==Object.keys(n).length&&(e.custom_attributes=n);var r={application_info:Qr(),trace_metric:e};return JSON.stringify(r)}(t)}function Qr(){return{google_app_id:br.getInstance().getAppId(),app_instance_id:_r(),web_app_info:{sdk_version:rr,page_url:vr.getInstance().getUrl(),service_worker_status:Tr(),visibility_state:Ir(),effective_connection_type:Sr()},application_process_state:0}}var Yr=[\"_fp\",ar,sr];var Jr=function(){function t(t,e,n){void 0===e&&(e=!1),this.name=t,this.isAuto=e,this.state=1,this.customAttributes={},this.counters={},this.api=vr.getInstance(),this.randomId=Math.floor(1e6*Math.random()),this.isAuto||(this.traceStartMark=\"FB-PERF-TRACE-START-\"+this.randomId+\"-\"+this.name,this.traceStopMark=\"FB-PERF-TRACE-STOP-\"+this.randomId+\"-\"+this.name,this.traceMeasure=n||\"FB-PERF-TRACE-MEASURE-\"+this.randomId+\"-\"+this.name,n&&this.calculateTraceMetrics())}return t.prototype.start=function(){if(1!==this.state)throw fr.create(\"trace started\",{traceName:this.name});this.api.mark(this.traceStartMark),this.state=2},t.prototype.stop=function(){if(2!==this.state)throw fr.create(\"trace stopped\",{traceName:this.name});this.state=3,this.api.mark(this.traceStopMark),this.api.measure(this.traceMeasure,this.traceStartMark,this.traceStopMark),this.calculateTraceMetrics(),Kr(this)},t.prototype.record=function(t,e,n){if(t<=0)throw fr.create(\"nonpositive trace startTime\",{traceName:this.name});if(e<=0)throw fr.create(\"nonpositive trace duration\",{traceName:this.name});if(this.durationUs=Math.floor(1e3*e),this.startTimeUs=Math.floor(1e3*t),n&&n.attributes&&(this.customAttributes=Object(l.a)({},n.attributes)),n&&n.metrics)for(var r=0,i=Object.keys(n.metrics);r<i.length;r++){var o=i[r];isNaN(Number(n.metrics[o]))||(this.counters[o]=Number(Math.floor(n.metrics[o])))}Kr(this)},t.prototype.incrementMetric=function(t,e){void 0===e&&(e=1),void 0===this.counters[t]?this.putMetric(t,e):this.putMetric(t,this.counters[t]+e)},t.prototype.putMetric=function(t,e){if(!function(t,e){return!(0===t.length||t.length>100)&&(e&&e.startsWith(or)&&Yr.indexOf(t)>-1||!t.startsWith(\"_\"))}(t,this.name))throw fr.create(\"invalid custom metric name\",{customMetricName:t});this.counters[t]=function(t){var e=Math.floor(t);return e<t&&pr.info(\"Metric value should be an Integer, setting the value as : \"+e+\".\"),e}(e)},t.prototype.getMetric=function(t){return this.counters[t]||0},t.prototype.putAttribute=function(t,e){var n=function(t){return!(0===t.length||t.length>40)&&!wr.some((function(e){return t.startsWith(e)}))&&!!t.match(Er)}(t),r=function(t){return 0!==t.length&&t.length<=100}(e);if(n&&r)this.customAttributes[t]=e;else{if(!n)throw fr.create(\"invalid attribute name\",{attributeName:t});if(!r)throw fr.create(\"invalid attribute value\",{attributeValue:e})}},t.prototype.getAttribute=function(t){return this.customAttributes[t]},t.prototype.removeAttribute=function(t){void 0!==this.customAttributes[t]&&delete this.customAttributes[t]},t.prototype.getAttributes=function(){return Object(l.a)({},this.customAttributes)},t.prototype.setStartTime=function(t){this.startTimeUs=t},t.prototype.setDuration=function(t){this.durationUs=t},t.prototype.calculateTraceMetrics=function(){var t=this.api.getEntriesByName(this.traceMeasure),e=t&&t[0];e&&(this.durationUs=Math.floor(1e3*e.duration),this.startTimeUs=Math.floor(1e3*(e.startTime+this.api.getTimeOrigin())))},t.createOobTrace=function(e,n,r){var i=vr.getInstance().getUrl();if(i){var o=new t(or+i,!0),a=Math.floor(1e3*vr.getInstance().getTimeOrigin());o.setStartTime(a),e&&e[0]&&(o.setDuration(Math.floor(1e3*e[0].duration)),o.putMetric(\"domInteractive\",Math.floor(1e3*e[0].domInteractive)),o.putMetric(\"domContentLoadedEventEnd\",Math.floor(1e3*e[0].domContentLoadedEventEnd)),o.putMetric(\"loadEventEnd\",Math.floor(1e3*e[0].loadEventEnd)));if(n){var s=n.find((function(t){return\"first-paint\"===t.name}));s&&s.startTime&&o.putMetric(\"_fp\",Math.floor(1e3*s.startTime));var u=n.find((function(t){return\"first-contentful-paint\"===t.name}));u&&u.startTime&&o.putMetric(ar,Math.floor(1e3*u.startTime)),r&&o.putMetric(sr,Math.floor(1e3*r))}Kr(o)}},t.createUserTimingTrace=function(e){Kr(new t(e,!1,e))},t}();function Xr(t){var e=t;if(e&&void 0!==e.responseStart){var n=vr.getInstance().getTimeOrigin(),r=Math.floor(1e3*(e.startTime+n)),i=e.responseStart?Math.floor(1e3*(e.responseStart-e.startTime)):void 0,o=Math.floor(1e3*(e.responseEnd-e.startTime));!function(t){var e=br.getInstance();if(e.instrumentationEnabled){var n=t.url,r=e.logEndPointUrl.split(\"?\")[0],i=e.flTransportEndpointUrl.split(\"?\")[0];n!==r&&n!==i&&e.loggingEnabled&&e.logNetworkAfterSampling&&setTimeout((function(){return Hr(t,0)}),0)}}({url:e.name&&e.name.split(\"?\")[0],responsePayloadBytes:e.transferSize,startTimeUs:r,timeToResponseInitiatedUs:i,timeToResponseCompletedUs:o})}}function $r(){_r()&&(setTimeout((function(){return function(){var t=vr.getInstance(),e=t.getEntriesByType(\"navigation\"),n=t.getEntriesByType(\"paint\");if(t.onFirstInputDelay){var r=setTimeout((function(){Jr.createOobTrace(e,n),r=void 0}),5e3);t.onFirstInputDelay((function(t){r&&(clearTimeout(r),Jr.createOobTrace(e,n,t))}))}else Jr.createOobTrace(e,n)}()}),0),setTimeout((function(){return function(){for(var t=vr.getInstance(),e=t.getEntriesByType(\"resource\"),n=0,r=e;n<r.length;n++){Xr(r[n])}t.setupObserver(\"resource\",Xr)}()}),0),setTimeout((function(){return function(){for(var t=vr.getInstance(),e=t.getEntriesByType(\"measure\"),n=0,r=e;n<r.length;n++){Zr(r[n])}t.setupObserver(\"measure\",Zr)}()}),0))}function Zr(t){var e=t.name;e.substring(0,ir.length)!==ir&&Jr.createUserTimingTrace(e)}var ti=function(){function t(t){this.app=t,vr.getInstance().requiredApisAvailable()&&Object(a.N)().then((function(t){t&&(qr||(Br(5500),qr=!0),Dr().then($r,$r))})).catch((function(t){pr.info(\"Environment doesn't support IndexedDB: \"+t)}))}return t.prototype.trace=function(t){return new Jr(t)},Object.defineProperty(t.prototype,\"instrumentationEnabled\",{get:function(){return br.getInstance().instrumentationEnabled},set:function(t){br.getInstance().instrumentationEnabled=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"dataCollectionEnabled\",{get:function(){return br.getInstance().dataCollectionEnabled},set:function(t){br.getInstance().dataCollectionEnabled=t},enumerable:!1,configurable:!0}),t}();!function(t){var e=function(t,e){if(\"[DEFAULT]\"!==t.name)throw fr.create(\"FB not default\");if(\"undefined\"===typeof window)throw fr.create(\"no window\");return function(t){er=t}(window),br.getInstance().firebaseAppInstance=t,br.getInstance().installationsService=e,new ti(t)};t.INTERNAL.registerComponent(new u.a(\"performance\",(function(t){var n=t.getProvider(\"app\").getImmediate(),r=t.getProvider(\"installations\").getImmediate();return e(n,r)}),\"PUBLIC\")),t.registerVersion(\"@firebase/performance\",nr)}(i.a);var ei,ni,ri=\"https://www.googletagmanager.com/gtag/js\";!function(t){t.EVENT=\"event\",t.SET=\"set\",t.CONFIG=\"config\"}(ei||(ei={})),function(t){t.ADD_SHIPPING_INFO=\"add_shipping_info\",t.ADD_PAYMENT_INFO=\"add_payment_info\",t.ADD_TO_CART=\"add_to_cart\",t.ADD_TO_WISHLIST=\"add_to_wishlist\",t.BEGIN_CHECKOUT=\"begin_checkout\",t.CHECKOUT_PROGRESS=\"checkout_progress\",t.EXCEPTION=\"exception\",t.GENERATE_LEAD=\"generate_lead\",t.LOGIN=\"login\",t.PAGE_VIEW=\"page_view\",t.PURCHASE=\"purchase\",t.REFUND=\"refund\",t.REMOVE_FROM_CART=\"remove_from_cart\",t.SCREEN_VIEW=\"screen_view\",t.SEARCH=\"search\",t.SELECT_CONTENT=\"select_content\",t.SELECT_ITEM=\"select_item\",t.SELECT_PROMOTION=\"select_promotion\",t.SET_CHECKOUT_OPTION=\"set_checkout_option\",t.SHARE=\"share\",t.SIGN_UP=\"sign_up\",t.TIMING_COMPLETE=\"timing_complete\",t.VIEW_CART=\"view_cart\",t.VIEW_ITEM=\"view_item\",t.VIEW_ITEM_LIST=\"view_item_list\",t.VIEW_PROMOTION=\"view_promotion\",t.VIEW_SEARCH_RESULTS=\"view_search_results\"}(ni||(ni={}));var ii,oi=new o.b(\"@firebase/analytics\");function ai(t,e,n,r,i,o){return Object(l.b)(this,void 0,void 0,(function(){var a,s,u,c;return Object(l.d)(this,(function(l){switch(l.label){case 0:a=r[i],l.label=1;case 1:return l.trys.push([1,7,,8]),a?[4,e[a]]:[3,3];case 2:return l.sent(),[3,6];case 3:return[4,Promise.all(n)];case 4:return s=l.sent(),(u=s.find((function(t){return t.measurementId===i})))?[4,e[u.appId]]:[3,6];case 5:l.sent(),l.label=6;case 6:return[3,8];case 7:return c=l.sent(),oi.error(c),[3,8];case 8:return t(ei.CONFIG,i,o),[2]}}))}))}function si(t,e,n,r,i){return Object(l.b)(this,void 0,void 0,(function(){var o,a,s,u,c,h,f,p;return Object(l.d)(this,(function(l){switch(l.label){case 0:return l.trys.push([0,4,,5]),o=[],i&&i.send_to?(a=i.send_to,Array.isArray(a)||(a=[a]),[4,Promise.all(n)]):[3,2];case 1:for(s=l.sent(),u=function(t){var n=s.find((function(e){return e.measurementId===t})),r=n&&e[n.appId];if(!r)return o=[],\"break\";o.push(r)},c=0,h=a;c<h.length&&(f=h[c],\"break\"!==u(f));c++);l.label=2;case 2:return 0===o.length&&(o=Object.values(e)),[4,Promise.all(o)];case 3:return l.sent(),t(ei.EVENT,r,i||{}),[3,5];case 4:return p=l.sent(),oi.error(p),[3,5];case 5:return[2]}}))}))}function ui(t,e,n,r,i){var o=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];window[r].push(arguments)};return window[i]&&\"function\"===typeof window[i]&&(o=window[i]),window[i]=function(t,e,n,r){return function(i,o,a){return Object(l.b)(this,void 0,void 0,(function(){var s;return Object(l.d)(this,(function(u){switch(u.label){case 0:return u.trys.push([0,6,,7]),i!==ei.EVENT?[3,2]:[4,si(t,e,n,o,a)];case 1:return u.sent(),[3,5];case 2:return i!==ei.CONFIG?[3,4]:[4,ai(t,e,n,r,o,a)];case 3:return u.sent(),[3,5];case 4:t(ei.SET,o),u.label=5;case 5:return[3,7];case 6:return s=u.sent(),oi.error(s),[3,7];case 7:return[2]}}))}))}}(o,t,e,n),{gtagCore:o,wrappedGtag:window[i]}}var ci=((ii={})[\"already-exists\"]=\"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.\",ii[\"already-initialized\"]=\"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.\",ii[\"interop-component-reg-failed\"]=\"Firebase Analytics Interop Component failed to instantiate: {$reason}\",ii[\"invalid-analytics-context\"]=\"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}\",ii[\"indexeddb-unavailable\"]=\"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}\",ii[\"fetch-throttle\"]=\"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.\",ii[\"config-fetch-failed\"]=\"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}\",ii[\"no-api-key\"]='The \"apiKey\" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',ii[\"no-app-id\"]='The \"appId\" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',ii),li=new a.b(\"analytics\",\"Analytics\",ci),hi=new(function(){function t(t,e){void 0===t&&(t={}),void 0===e&&(e=1e3),this.throttleMetadata=t,this.intervalMillis=e}return t.prototype.getThrottleMetadata=function(t){return this.throttleMetadata[t]},t.prototype.setThrottleMetadata=function(t,e){this.throttleMetadata[t]=e},t.prototype.deleteThrottleMetadata=function(t){delete this.throttleMetadata[t]},t}());function fi(t){return new Headers({Accept:\"application/json\",\"x-goog-api-key\":t})}function pi(t){var e;return Object(l.b)(this,void 0,void 0,(function(){var n,r,i,o,a,s,u;return Object(l.d)(this,(function(c){switch(c.label){case 0:return n=t.appId,r=t.apiKey,i={method:\"GET\",headers:fi(r)},o=\"https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig\".replace(\"{app-id}\",n),[4,fetch(o,i)];case 1:if(200===(a=c.sent()).status||304===a.status)return[3,6];s=\"\",c.label=2;case 2:return c.trys.push([2,4,,5]),[4,a.json()];case 3:return u=c.sent(),(null===(e=u.error)||void 0===e?void 0:e.message)&&(s=u.error.message),[3,5];case 4:return c.sent(),[3,5];case 5:throw li.create(\"config-fetch-failed\",{httpStatus:a.status,responseMessage:s});case 6:return[2,a.json()]}}))}))}function di(t,e,n,r){var i=e.throttleEndTimeMillis,o=e.backoffCount;return void 0===r&&(r=hi),Object(l.b)(this,void 0,void 0,(function(){var e,s,u,c,h,f,p;return Object(l.d)(this,(function(l){switch(l.label){case 0:e=t.appId,s=t.measurementId,l.label=1;case 1:return l.trys.push([1,3,,4]),[4,vi(n,i)];case 2:return l.sent(),[3,4];case 3:if(u=l.sent(),s)return oi.warn(\"Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID \"+s+' provided in the \"measurementId\" field in the local Firebase config. ['+u.message+\"]\"),[2,{appId:e,measurementId:s}];throw u;case 4:return l.trys.push([4,6,,7]),[4,pi(t)];case 5:return c=l.sent(),r.deleteThrottleMetadata(e),[2,c];case 6:if(!function(t){if(!(t instanceof a.c)||!t.customData)return!1;var e=Number(t.customData.httpStatus);return 429===e||500===e||503===e||504===e}(h=l.sent())){if(r.deleteThrottleMetadata(e),s)return oi.warn(\"Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID \"+s+' provided in the \"measurementId\" field in the local Firebase config. ['+h.message+\"]\"),[2,{appId:e,measurementId:s}];throw h}return f=503===Number(h.customData.httpStatus)?Object(a.j)(o,r.intervalMillis,30):Object(a.j)(o,r.intervalMillis),p={throttleEndTimeMillis:Date.now()+f,backoffCount:o+1},r.setThrottleMetadata(e,p),oi.debug(\"Calling attemptFetch again in \"+f+\" millis\"),[2,di(t,p,n,r)];case 7:return[2]}}))}))}function vi(t,e){return new Promise((function(n,r){var i=Math.max(e-Date.now(),0),o=setTimeout(n,i);t.addEventListener((function(){clearTimeout(o),r(li.create(\"fetch-throttle\",{throttleEndTimeMillis:e}))}))}))}var yi=function(){function t(){this.listeners=[]}return t.prototype.addEventListener=function(t){this.listeners.push(t)},t.prototype.abort=function(){this.listeners.forEach((function(t){return t()}))},t}();function gi(t,e,n,r,i){return Object(l.b)(this,void 0,void 0,(function(){var o,s,u,c,h,f,p;return Object(l.d)(this,(function(d){switch(d.label){case 0:return(o=function(t,e,n){return void 0===e&&(e=hi),Object(l.b)(this,void 0,void 0,(function(){var r,i,o,a,s,u,c=this;return Object(l.d)(this,(function(h){if(r=t.options,i=r.appId,o=r.apiKey,a=r.measurementId,!i)throw li.create(\"no-app-id\");if(!o){if(a)return[2,{measurementId:a,appId:i}];throw li.create(\"no-api-key\")}return s=e.getThrottleMetadata(i)||{backoffCount:0,throttleEndTimeMillis:Date.now()},u=new yi,setTimeout((function(){return Object(l.b)(c,void 0,void 0,(function(){return Object(l.d)(this,(function(t){return u.abort(),[2]}))}))}),void 0!==n?n:6e4),[2,di({appId:i,apiKey:o,measurementId:a},s,u,e)]}))}))}(t)).then((function(e){n[e.measurementId]=e.appId,t.options.measurementId&&e.measurementId!==t.options.measurementId&&oi.warn(\"The measurement ID in the local Firebase config (\"+t.options.measurementId+\") does not match the measurement ID fetched from the server (\"+e.measurementId+\"). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.\")})).catch((function(t){return oi.error(t)})),e.push(o),s=function(){return Object(l.b)(this,void 0,void 0,(function(){var t;return Object(l.d)(this,(function(e){switch(e.label){case 0:return Object(a.w)()?[3,1]:(oi.warn(li.create(\"indexeddb-unavailable\",{errorInfo:\"IndexedDB is not available in this environment.\"}).message),[2,!1]);case 1:return e.trys.push([1,3,,4]),[4,Object(a.N)()];case 2:return e.sent(),[3,4];case 3:return t=e.sent(),oi.warn(li.create(\"indexeddb-unavailable\",{errorInfo:t}).message),[2,!1];case 4:return[2,!0]}}))}))}().then((function(t){return t?r.getId():void 0})),[4,Promise.all([o,s])];case 1:return u=d.sent(),c=u[0],h=u[1],i(\"js\",new Date),(p={}).origin=\"firebase\",p.update=!0,f=p,null!=h&&(f.firebase_id=h),i(ei.CONFIG,c.measurementId,f),[2,c.measurementId]}}))}))}var mi,bi,_i={},wi=[],Ei={},Ti=\"dataLayer\",Ii=\"gtag\",Si=!1;function Oi(t){if(Si)throw li.create(\"already-initialized\");t.dataLayerName&&(Ti=t.dataLayerName),t.gtagName&&(Ii=t.gtagName)}function Ci(t,e){!function(){var t=[];if(Object(a.s)()&&t.push(\"This is a browser extension environment.\"),Object(a.e)()||t.push(\"Cookies are not available.\"),t.length>0){var e=t.map((function(t,e){return\"(\"+(e+1)+\") \"+t})).join(\" \"),n=li.create(\"invalid-analytics-context\",{errorInfo:e});oi.warn(n.message)}}();var n=t.options.appId;if(!n)throw li.create(\"no-app-id\");if(!t.options.apiKey){if(!t.options.measurementId)throw li.create(\"no-api-key\");oi.warn('The \"apiKey\" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID '+t.options.measurementId+' provided in the \"measurementId\" field in the local Firebase config.')}if(null!=_i[n])throw li.create(\"already-exists\",{id:n});if(!Si){(function(){for(var t=window.document.getElementsByTagName(\"script\"),e=0,n=Object.values(t);e<n.length;e++){var r=n[e];if(r.src&&r.src.includes(ri))return r}return null})()||function(t){var e=document.createElement(\"script\");e.src=ri+\"?l=\"+t,e.async=!0,document.head.appendChild(e)}(Ti),function(t){var e=[];Array.isArray(window[t])?e=window[t]:window[t]=e}(Ti);var r=ui(_i,wi,Ei,Ti,Ii),i=r.wrappedGtag,o=r.gtagCore;bi=i,mi=o,Si=!0}return _i[n]=gi(t,wi,Ei,e,mi),{app:t,logEvent:function(t,e,r){(function(t,e,n,r,i){return Object(l.b)(this,void 0,void 0,(function(){var o,a;return Object(l.d)(this,(function(s){switch(s.label){case 0:return i&&i.global?(t(ei.EVENT,n,r),[2]):[3,1];case 1:return[4,e];case 2:o=s.sent(),a=Object(l.a)(Object(l.a)({},r),{send_to:o}),t(ei.EVENT,n,a),s.label=3;case 3:return[2]}}))}))})(bi,_i[n],t,e,r).catch((function(t){return oi.error(t)}))},setCurrentScreen:function(t,e){(function(t,e,n,r){return Object(l.b)(this,void 0,void 0,(function(){var i;return Object(l.d)(this,(function(o){switch(o.label){case 0:return r&&r.global?(t(ei.SET,{screen_name:n}),[2,Promise.resolve()]):[3,1];case 1:return[4,e];case 2:i=o.sent(),t(ei.CONFIG,i,{update:!0,screen_name:n}),o.label=3;case 3:return[2]}}))}))})(bi,_i[n],t,e).catch((function(t){return oi.error(t)}))},setUserId:function(t,e){(function(t,e,n,r){return Object(l.b)(this,void 0,void 0,(function(){var i;return Object(l.d)(this,(function(o){switch(o.label){case 0:return r&&r.global?(t(ei.SET,{user_id:n}),[2,Promise.resolve()]):[3,1];case 1:return[4,e];case 2:i=o.sent(),t(ei.CONFIG,i,{update:!0,user_id:n}),o.label=3;case 3:return[2]}}))}))})(bi,_i[n],t,e).catch((function(t){return oi.error(t)}))},setUserProperties:function(t,e){(function(t,e,n,r){return Object(l.b)(this,void 0,void 0,(function(){var i,o,a,s,u;return Object(l.d)(this,(function(c){switch(c.label){case 0:if(!r||!r.global)return[3,1];for(i={},o=0,a=Object.keys(n);o<a.length;o++)s=a[o],i[\"user_properties.\"+s]=n[s];return t(ei.SET,i),[2,Promise.resolve()];case 1:return[4,e];case 2:u=c.sent(),t(ei.CONFIG,u,{update:!0,user_properties:n}),c.label=3;case 3:return[2]}}))}))})(bi,_i[n],t,e).catch((function(t){return oi.error(t)}))},setAnalyticsCollectionEnabled:function(t){(function(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n;return Object(l.d)(this,(function(r){switch(r.label){case 0:return[4,t];case 1:return n=r.sent(),window[\"ga-disable-\"+n]=!e,[2]}}))}))})(_i[n],t).catch((function(t){return oi.error(t)}))},INTERNAL:{delete:function(){return delete _i[n],Promise.resolve()}}}}var ki=\"analytics\";function Ni(){return Object(l.b)(this,void 0,void 0,(function(){return Object(l.d)(this,(function(t){switch(t.label){case 0:if(Object(a.s)())return[2,!1];if(!Object(a.e)())return[2,!1];if(!Object(a.w)())return[2,!1];t.label=1;case 1:return t.trys.push([1,3,,4]),[4,Object(a.N)()];case 2:return[2,t.sent()];case 3:return t.sent(),[2,!1];case 4:return[2]}}))}))}!function(t){t.INTERNAL.registerComponent(new u.a(ki,(function(t){return Ci(t.getProvider(\"app\").getImmediate(),t.getProvider(\"installations\").getImmediate())}),\"PUBLIC\").setServiceProps({settings:Oi,EventName:ni,isSupported:Ni})),t.INTERNAL.registerComponent(new u.a(\"analytics-internal\",(function(t){try{return{logEvent:t.getProvider(ki).getImmediate().logEvent}}catch(r){throw li.create(\"interop-component-reg-failed\",{reason:r})}}),\"PRIVATE\")),t.registerVersion(\"@firebase/analytics\",\"0.6.2\")}(i.a);var Ai,Pi=function(){function t(t,e,n,r){this.client=t,this.storage=e,this.storageCache=n,this.logger=r}return t.prototype.isCachedDataFresh=function(t,e){if(!e)return this.logger.debug(\"Config fetch cache check. Cache unpopulated.\"),!1;var n=Date.now()-e,r=n<=t;return this.logger.debug(\"Config fetch cache check. Cache age millis: \"+n+\". Cache max age millis (minimumFetchIntervalMillis setting): \"+t+\". Is cache hit: \"+r+\".\"),r},t.prototype.fetch=function(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n,r,i,o;return Object(l.d)(this,(function(a){switch(a.label){case 0:return[4,Promise.all([this.storage.getLastSuccessfulFetchTimestampMillis(),this.storage.getLastSuccessfulFetchResponse()])];case 1:return e=a.sent(),n=e[0],(r=e[1])&&this.isCachedDataFresh(t.cacheMaxAgeMillis,n)?[2,r]:(t.eTag=r&&r.eTag,[4,this.client.fetch(t)]);case 2:return i=a.sent(),o=[this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())],200===i.status&&o.push(this.storage.setLastSuccessfulFetchResponse(i)),[4,Promise.all(o)];case 3:return a.sent(),[2,i]}}))}))},t}(),Ri=((Ai={})[\"registration-window\"]=\"Undefined window object. This SDK only supports usage in a browser environment.\",Ai[\"registration-project-id\"]=\"Undefined project identifier. Check Firebase app initialization.\",Ai[\"registration-api-key\"]=\"Undefined API key. Check Firebase app initialization.\",Ai[\"registration-app-id\"]=\"Undefined app identifier. Check Firebase app initialization.\",Ai[\"storage-open\"]=\"Error thrown when opening storage. Original error: {$originalErrorMessage}.\",Ai[\"storage-get\"]=\"Error thrown when reading from storage. Original error: {$originalErrorMessage}.\",Ai[\"storage-set\"]=\"Error thrown when writing to storage. Original error: {$originalErrorMessage}.\",Ai[\"storage-delete\"]=\"Error thrown when deleting from storage. Original error: {$originalErrorMessage}.\",Ai[\"fetch-client-network\"]=\"Fetch client failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.\",Ai[\"fetch-timeout\"]='The config fetch request timed out.  Configure timeout using \"fetchTimeoutMillis\" SDK setting.',Ai[\"fetch-throttle\"]='The config fetch request timed out while in an exponential backoff state. Configure timeout using \"fetchTimeoutMillis\" SDK setting. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',Ai[\"fetch-client-parse\"]=\"Fetch client could not parse response. Original error: {$originalErrorMessage}.\",Ai[\"fetch-status\"]=\"Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.\",Ai),ji=new a.b(\"remoteconfig\",\"Remote Config\",Ri);var xi=function(){function t(t,e,n,r,i,o){this.firebaseInstallations=t,this.sdkVersion=e,this.namespace=n,this.projectId=r,this.apiKey=i,this.appId=o}return t.prototype.fetch=function(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n,r,i,o,a,s,u,c,h,f,p,d,v,y,g,m,b,_;return Object(l.d)(this,(function(l){switch(l.label){case 0:return[4,Promise.all([this.firebaseInstallations.getId(),this.firebaseInstallations.getToken()])];case 1:e=l.sent(),n=e[0],r=e[1],i=window.FIREBASE_REMOTE_CONFIG_URL_BASE||\"https://firebaseremoteconfig.googleapis.com\",o=i+\"/v1/projects/\"+this.projectId+\"/namespaces/\"+this.namespace+\":fetch?key=\"+this.apiKey,a={\"Content-Type\":\"application/json\",\"Content-Encoding\":\"gzip\",\"If-None-Match\":t.eTag||\"*\"},s={sdk_version:this.sdkVersion,app_instance_id:n,app_instance_id_token:r,app_id:this.appId,language_code:(void 0===w&&(w=navigator),w.languages&&w.languages[0]||w.language)},u={method:\"POST\",headers:a,body:JSON.stringify(s)},c=fetch(o,u),h=new Promise((function(e,n){t.signal.addEventListener((function(){var t=new Error(\"The operation was aborted.\");t.name=\"AbortError\",n(t)}))})),l.label=2;case 2:return l.trys.push([2,5,,6]),[4,Promise.race([c,h])];case 3:return l.sent(),[4,c];case 4:return f=l.sent(),[3,6];case 5:throw p=l.sent(),d=\"fetch-client-network\",\"AbortError\"===p.name&&(d=\"fetch-timeout\"),ji.create(d,{originalErrorMessage:p.message});case 6:if(v=f.status,y=f.headers.get(\"ETag\")||void 0,200!==f.status)return[3,11];b=void 0,l.label=7;case 7:return l.trys.push([7,9,,10]),[4,f.json()];case 8:return b=l.sent(),[3,10];case 9:throw _=l.sent(),ji.create(\"fetch-client-parse\",{originalErrorMessage:_.message});case 10:g=b.entries,m=b.state,l.label=11;case 11:if(\"INSTANCE_STATE_UNSPECIFIED\"===m?v=500:\"NO_CHANGE\"===m?v=304:\"NO_TEMPLATE\"!==m&&\"EMPTY_CONFIG\"!==m||(g={}),304!==v&&200!==v)throw ji.create(\"fetch-status\",{httpStatus:v});return[2,{status:v,eTag:y,config:g}]}var w}))}))},t}(),Di=function(){function t(){this.listeners=[]}return t.prototype.addEventListener=function(t){this.listeners.push(t)},t.prototype.abort=function(){this.listeners.forEach((function(t){return t()}))},t}(),Li=[\"1\",\"true\",\"t\",\"yes\",\"y\",\"on\"],Mi=function(){function t(t,e){void 0===e&&(e=\"\"),this._source=t,this._value=e}return t.prototype.asString=function(){return this._value},t.prototype.asBoolean=function(){return\"static\"!==this._source&&Li.indexOf(this._value.toLowerCase())>=0},t.prototype.asNumber=function(){if(\"static\"===this._source)return 0;var t=Number(this._value);return isNaN(t)&&(t=0),t},t.prototype.getSource=function(){return this._source},t}(),Fi=function(){function t(t,e,n,r,i){this.app=t,this._client=e,this._storageCache=n,this._storage=r,this._logger=i,this._isInitializationComplete=!1,this.settings={fetchTimeoutMillis:6e4,minimumFetchIntervalMillis:432e5},this.defaultConfig={}}return t.prototype.setLogLevel=function(t){switch(t){case\"debug\":this._logger.logLevel=o.a.DEBUG;break;case\"silent\":this._logger.logLevel=o.a.SILENT;break;default:this._logger.logLevel=o.a.ERROR}},Object.defineProperty(t.prototype,\"fetchTimeMillis\",{get:function(){return this._storageCache.getLastSuccessfulFetchTimestampMillis()||-1},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"lastFetchStatus\",{get:function(){return this._storageCache.getLastFetchStatus()||\"no-fetch-yet\"},enumerable:!1,configurable:!0}),t.prototype.activate=function(){return Object(l.b)(this,void 0,void 0,(function(){var t,e,n;return Object(l.d)(this,(function(r){switch(r.label){case 0:return[4,Promise.all([this._storage.getLastSuccessfulFetchResponse(),this._storage.getActiveConfigEtag()])];case 1:return t=r.sent(),e=t[0],n=t[1],e&&e.config&&e.eTag&&e.eTag!==n?[4,Promise.all([this._storageCache.setActiveConfig(e.config),this._storage.setActiveConfigEtag(e.eTag)])]:[2,!1];case 2:return r.sent(),[2,!0]}}))}))},t.prototype.ensureInitialized=function(){var t=this;return this._initializePromise||(this._initializePromise=this._storageCache.loadFromStorage().then((function(){t._isInitializationComplete=!0}))),this._initializePromise},t.prototype.fetch=function(){return Object(l.b)(this,void 0,void 0,(function(){var t,e,n,r=this;return Object(l.d)(this,(function(i){switch(i.label){case 0:t=new Di,setTimeout((function(){return Object(l.b)(r,void 0,void 0,(function(){return Object(l.d)(this,(function(e){return t.abort(),[2]}))}))}),this.settings.fetchTimeoutMillis),i.label=1;case 1:return i.trys.push([1,4,,6]),[4,this._client.fetch({cacheMaxAgeMillis:this.settings.minimumFetchIntervalMillis,signal:t})];case 2:return i.sent(),[4,this._storageCache.setLastFetchStatus(\"success\")];case 3:return i.sent(),[3,6];case 4:return e=i.sent(),n=function(t,e){return t instanceof a.c&&-1!==t.code.indexOf(e)}(e,\"fetch-throttle\")?\"throttle\":\"failure\",[4,this._storageCache.setLastFetchStatus(n)];case 5:throw i.sent(),e;case 6:return[2]}}))}))},t.prototype.fetchAndActivate=function(){return Object(l.b)(this,void 0,void 0,(function(){return Object(l.d)(this,(function(t){switch(t.label){case 0:return[4,this.fetch()];case 1:return t.sent(),[2,this.activate()]}}))}))},t.prototype.getAll=function(){var t=this;return function(t,e){void 0===t&&(t={});void 0===e&&(e={});return Object.keys(Object(l.a)(Object(l.a)({},t),e))}(this._storageCache.getActiveConfig(),this.defaultConfig).reduce((function(e,n){return e[n]=t.getValue(n),e}),{})},t.prototype.getBoolean=function(t){return this.getValue(t).asBoolean()},t.prototype.getNumber=function(t){return this.getValue(t).asNumber()},t.prototype.getString=function(t){return this.getValue(t).asString()},t.prototype.getValue=function(t){this._isInitializationComplete||this._logger.debug('A value was requested for key \"'+t+'\" before SDK initialization completed. Await on ensureInitialized if the intent was to get a previously activated value.');var e=this._storageCache.getActiveConfig();return e&&void 0!==e[t]?new Mi(\"remote\",e[t]):this.defaultConfig&&void 0!==this.defaultConfig[t]?new Mi(\"default\",String(this.defaultConfig[t])):(this._logger.debug('Returning static value for key \"'+t+'\". Define a default or remote value if this is unintentional.'),new Mi(\"static\"))},t}();function Ui(t,e){var n=t.target.error||void 0;return ji.create(e,{originalErrorMessage:n&&n.message})}var Vi=\"app_namespace_store\";var qi=function(){function t(t,e,n,r){void 0===r&&(r=new Promise((function(t,e){var n=indexedDB.open(\"firebase_remote_config\",1);n.onerror=function(t){e(Ui(t,\"storage-open\"))},n.onsuccess=function(e){t(e.target.result)},n.onupgradeneeded=function(t){var e=t.target.result;switch(t.oldVersion){case 0:e.createObjectStore(Vi,{keyPath:\"compositeKey\"})}}}))),this.appId=t,this.appName=e,this.namespace=n,this.openDbPromise=r}return t.prototype.getLastFetchStatus=function(){return this.get(\"last_fetch_status\")},t.prototype.setLastFetchStatus=function(t){return this.set(\"last_fetch_status\",t)},t.prototype.getLastSuccessfulFetchTimestampMillis=function(){return this.get(\"last_successful_fetch_timestamp_millis\")},t.prototype.setLastSuccessfulFetchTimestampMillis=function(t){return this.set(\"last_successful_fetch_timestamp_millis\",t)},t.prototype.getLastSuccessfulFetchResponse=function(){return this.get(\"last_successful_fetch_response\")},t.prototype.setLastSuccessfulFetchResponse=function(t){return this.set(\"last_successful_fetch_response\",t)},t.prototype.getActiveConfig=function(){return this.get(\"active_config\")},t.prototype.setActiveConfig=function(t){return this.set(\"active_config\",t)},t.prototype.getActiveConfigEtag=function(){return this.get(\"active_config_etag\")},t.prototype.setActiveConfigEtag=function(t){return this.set(\"active_config_etag\",t)},t.prototype.getThrottleMetadata=function(){return this.get(\"throttle_metadata\")},t.prototype.setThrottleMetadata=function(t){return this.set(\"throttle_metadata\",t)},t.prototype.deleteThrottleMetadata=function(){return this.delete(\"throttle_metadata\")},t.prototype.get=function(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n=this;return Object(l.d)(this,(function(i){switch(i.label){case 0:return[4,this.openDbPromise];case 1:return e=i.sent(),[2,new Promise((function(i,o){var a=e.transaction([Vi],\"readonly\").objectStore(Vi),s=n.createCompositeKey(t);try{var u=a.get(s);u.onerror=function(t){o(Ui(t,\"storage-get\"))},u.onsuccess=function(t){var e=t.target.result;i(e?e.value:void 0)}}catch(r){o(ji.create(\"storage-get\",{originalErrorMessage:r&&r.message}))}}))]}}))}))},t.prototype.set=function(t,e){return Object(l.b)(this,void 0,void 0,(function(){var n,i=this;return Object(l.d)(this,(function(o){switch(o.label){case 0:return[4,this.openDbPromise];case 1:return n=o.sent(),[2,new Promise((function(o,a){var s=n.transaction([Vi],\"readwrite\").objectStore(Vi),u=i.createCompositeKey(t);try{var c=s.put({compositeKey:u,value:e});c.onerror=function(t){a(Ui(t,\"storage-set\"))},c.onsuccess=function(){o()}}catch(r){a(ji.create(\"storage-set\",{originalErrorMessage:r&&r.message}))}}))]}}))}))},t.prototype.delete=function(t){return Object(l.b)(this,void 0,void 0,(function(){var e,n=this;return Object(l.d)(this,(function(i){switch(i.label){case 0:return[4,this.openDbPromise];case 1:return e=i.sent(),[2,new Promise((function(i,o){var a=e.transaction([Vi],\"readwrite\").objectStore(Vi),s=n.createCompositeKey(t);try{var u=a.delete(s);u.onerror=function(t){o(Ui(t,\"storage-delete\"))},u.onsuccess=function(){i()}}catch(r){o(ji.create(\"storage-delete\",{originalErrorMessage:r&&r.message}))}}))]}}))}))},t.prototype.createCompositeKey=function(t){return[this.appId,this.appName,this.namespace,t].join()},t}(),Bi=function(){function t(t){this.storage=t}return t.prototype.getLastFetchStatus=function(){return this.lastFetchStatus},t.prototype.getLastSuccessfulFetchTimestampMillis=function(){return this.lastSuccessfulFetchTimestampMillis},t.prototype.getActiveConfig=function(){return this.activeConfig},t.prototype.loadFromStorage=function(){return Object(l.b)(this,void 0,void 0,(function(){var t,e,n,r,i,o;return Object(l.d)(this,(function(a){switch(a.label){case 0:return t=this.storage.getLastFetchStatus(),e=this.storage.getLastSuccessfulFetchTimestampMillis(),n=this.storage.getActiveConfig(),[4,t];case 1:return(r=a.sent())&&(this.lastFetchStatus=r),[4,e];case 2:return(i=a.sent())&&(this.lastSuccessfulFetchTimestampMillis=i),[4,n];case 3:return(o=a.sent())&&(this.activeConfig=o),[2]}}))}))},t.prototype.setLastFetchStatus=function(t){return this.lastFetchStatus=t,this.storage.setLastFetchStatus(t)},t.prototype.setLastSuccessfulFetchTimestampMillis=function(t){return this.lastSuccessfulFetchTimestampMillis=t,this.storage.setLastSuccessfulFetchTimestampMillis(t)},t.prototype.setActiveConfig=function(t){return this.activeConfig=t,this.storage.setActiveConfig(t)},t}();function zi(t,e){return new Promise((function(n,r){var i=Math.max(e-Date.now(),0),o=setTimeout(n,i);t.addEventListener((function(){clearTimeout(o),r(ji.create(\"fetch-throttle\",{throttleEndTimeMillis:e}))}))}))}var Hi,Ki=function(){function t(t,e){this.client=t,this.storage=e}return t.prototype.fetch=function(t){return Object(l.b)(this,void 0,void 0,(function(){var e;return Object(l.d)(this,(function(n){switch(n.label){case 0:return[4,this.storage.getThrottleMetadata()];case 1:return e=n.sent()||{backoffCount:0,throttleEndTimeMillis:Date.now()},[2,this.attemptFetch(t,e)]}}))}))},t.prototype.attemptFetch=function(t,e){var n=e.throttleEndTimeMillis,r=e.backoffCount;return Object(l.b)(this,void 0,void 0,(function(){var e,i,o;return Object(l.d)(this,(function(s){switch(s.label){case 0:return[4,zi(t.signal,n)];case 1:s.sent(),s.label=2;case 2:return s.trys.push([2,5,,7]),[4,this.client.fetch(t)];case 3:return e=s.sent(),[4,this.storage.deleteThrottleMetadata()];case 4:return s.sent(),[2,e];case 5:if(!function(t){if(!(t instanceof a.c)||!t.customData)return!1;var e=Number(t.customData.httpStatus);return 429===e||500===e||503===e||504===e}(i=s.sent()))throw i;return o={throttleEndTimeMillis:Date.now()+Object(a.j)(r),backoffCount:r+1},[4,this.storage.setThrottleMetadata(o)];case 6:return s.sent(),[2,this.attemptFetch(t,o)];case 7:return[2]}}))}))},t}(),Wi=\"@firebase/remote-config\";(Hi=i.a).INTERNAL.registerComponent(new u.a(\"remoteConfig\",(function(t,e){var n=t.getProvider(\"app\").getImmediate(),r=t.getProvider(\"installations\").getImmediate();if(\"undefined\"===typeof window)throw ji.create(\"registration-window\");var i=n.options,a=i.projectId,s=i.apiKey,u=i.appId;if(!a)throw ji.create(\"registration-project-id\");if(!s)throw ji.create(\"registration-api-key\");if(!u)throw ji.create(\"registration-app-id\");e=e||\"firebase\";var c=new qi(u,n.name,e),l=new Bi(c),h=new o.b(Wi);h.logLevel=o.a.ERROR;var f=new xi(r,Hi.SDK_VERSION,e,a,s,u),p=new Ki(f,c),d=new Pi(p,c,l,h),v=new Fi(n,d,l,c,h);return v.ensureInitialized(),v}),\"PUBLIC\").setMultipleInstances(!0)),Hi.registerVersion(Wi,\"0.1.30\");i.a.registerVersion(\"firebase\",\"8.2.3\",\"app\");console.warn(\"\\nIt looks like you're using the development build of the Firebase JS SDK.\\nWhen deploying Firebase apps to production, it is advisable to only import\\nthe individual SDK components you intend to use.\\n\\nFor the module builds, these are available in the following manner\\n(replace <PACKAGE> with the name of a component - i.e. auth, database, etc):\\n\\nCommonJS Modules:\\nconst firebase = require('firebase/app');\\nrequire('firebase/<PACKAGE>');\\n\\nES Modules:\\nimport firebase from 'firebase/app';\\nimport 'firebase/<PACKAGE>';\\n\\nTypescript:\\nimport firebase from 'firebase/app';\\nimport 'firebase/<PACKAGE>';\\n\"),i.a.registerVersion(\"firebase\",\"8.2.3\")},function(t,e,n){\"use strict\";n(11);var r=n(8),i=60103;if(e.Fragment=60107,\"function\"===typeof Symbol&&Symbol.for){var o=Symbol.for;i=o(\"react.element\"),e.Fragment=o(\"react.fragment\")}var a=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,s=Object.prototype.hasOwnProperty,u={key:!0,ref:!0,__self:!0,__source:!0};function c(t,e,n){var r,o={},c=null,l=null;for(r in void 0!==n&&(c=\"\"+n),void 0!==e.key&&(c=\"\"+e.key),void 0!==e.ref&&(l=e.ref),e)s.call(e,r)&&!u.hasOwnProperty(r)&&(o[r]=e[r]);if(t&&t.defaultProps)for(r in e=t.defaultProps)void 0===o[r]&&(o[r]=e[r]);return{$$typeof:i,type:t,key:c,ref:l,props:o,_owner:a.current}}e.jsx=c,e.jsxs=c},function(t,e,n){\"use strict\";var r=n(11),i=60103,o=60106;e.Fragment=60107,e.StrictMode=60108,e.Profiler=60114;var a=60109,s=60110,u=60112;e.Suspense=60113;var c=60115,l=60116;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;i=h(\"react.element\"),o=h(\"react.portal\"),e.Fragment=h(\"react.fragment\"),e.StrictMode=h(\"react.strict_mode\"),e.Profiler=h(\"react.profiler\"),a=h(\"react.provider\"),s=h(\"react.context\"),u=h(\"react.forward_ref\"),e.Suspense=h(\"react.suspense\"),c=h(\"react.memo\"),l=h(\"react.lazy\")}var f=\"function\"===typeof Symbol&&Symbol.iterator;function p(t){for(var e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+t,n=1;n<arguments.length;n++)e+=\"&args[]=\"+encodeURIComponent(arguments[n]);return\"Minified React error #\"+t+\"; visit \"+e+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var d={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},v={};function y(t,e,n){this.props=t,this.context=e,this.refs=v,this.updater=n||d}function g(){}function m(t,e,n){this.props=t,this.context=e,this.refs=v,this.updater=n||d}y.prototype.isReactComponent={},y.prototype.setState=function(t,e){if(\"object\"!==typeof t&&\"function\"!==typeof t&&null!=t)throw Error(p(85));this.updater.enqueueSetState(this,t,e,\"setState\")},y.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,\"forceUpdate\")},g.prototype=y.prototype;var b=m.prototype=new g;b.constructor=m,r(b,y.prototype),b.isPureReactComponent=!0;var _={current:null},w=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function T(t,e,n){var r,o={},a=null,s=null;if(null!=e)for(r in void 0!==e.ref&&(s=e.ref),void 0!==e.key&&(a=\"\"+e.key),e)w.call(e,r)&&!E.hasOwnProperty(r)&&(o[r]=e[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),l=0;l<u;l++)c[l]=arguments[l+2];o.children=c}if(t&&t.defaultProps)for(r in u=t.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:t,key:a,ref:s,props:o,_owner:_.current}}function I(t){return\"object\"===typeof t&&null!==t&&t.$$typeof===i}var S=/\\/+/g;function O(t,e){return\"object\"===typeof t&&null!==t&&null!=t.key?function(t){var e={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+t.replace(/[=:]/g,(function(t){return e[t]}))}(\"\"+t.key):e.toString(36)}function C(t,e,n,r,a){var s=typeof t;\"undefined\"!==s&&\"boolean\"!==s||(t=null);var u=!1;if(null===t)u=!0;else switch(s){case\"string\":case\"number\":u=!0;break;case\"object\":switch(t.$$typeof){case i:case o:u=!0}}if(u)return a=a(u=t),t=\"\"===r?\".\"+O(u,0):r,Array.isArray(a)?(n=\"\",null!=t&&(n=t.replace(S,\"$&/\")+\"/\"),C(a,e,n,\"\",(function(t){return t}))):null!=a&&(I(a)&&(a=function(t,e){return{$$typeof:i,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}(a,n+(!a.key||u&&u.key===a.key?\"\":(\"\"+a.key).replace(S,\"$&/\")+\"/\")+t)),e.push(a)),1;if(u=0,r=\"\"===r?\".\":r+\":\",Array.isArray(t))for(var c=0;c<t.length;c++){var l=r+O(s=t[c],c);u+=C(s,e,n,l,a)}else if(\"function\"===typeof(l=function(t){return null===t||\"object\"!==typeof t?null:\"function\"===typeof(t=f&&t[f]||t[\"@@iterator\"])?t:null}(t)))for(t=l.call(t),c=0;!(s=t.next()).done;)u+=C(s=s.value,e,n,l=r+O(s,c++),a);else if(\"object\"===s)throw e=\"\"+t,Error(p(31,\"[object Object]\"===e?\"object with keys {\"+Object.keys(t).join(\", \")+\"}\":e));return u}function k(t,e,n){if(null==t)return t;var r=[],i=0;return C(t,r,\"\",\"\",(function(t){return e.call(n,t,i++)})),r}function N(t){if(-1===t._status){var e=t._result;e=e(),t._status=0,t._result=e,e.then((function(e){0===t._status&&(e=e.default,t._status=1,t._result=e)}),(function(e){0===t._status&&(t._status=2,t._result=e)}))}if(1===t._status)return t._result;throw t._result}var A={current:null};function P(){var t=A.current;if(null===t)throw Error(p(321));return t}var R={ReactCurrentDispatcher:A,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:_,IsSomeRendererActing:{current:!1},assign:r};e.Children={map:k,forEach:function(t,e,n){k(t,(function(){e.apply(this,arguments)}),n)},count:function(t){var e=0;return k(t,(function(){e++})),e},toArray:function(t){return k(t,(function(t){return t}))||[]},only:function(t){if(!I(t))throw Error(p(143));return t}},e.Component=y,e.PureComponent=m,e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,e.cloneElement=function(t,e,n){if(null===t||void 0===t)throw Error(p(267,t));var o=r({},t.props),a=t.key,s=t.ref,u=t._owner;if(null!=e){if(void 0!==e.ref&&(s=e.ref,u=_.current),void 0!==e.key&&(a=\"\"+e.key),t.type&&t.type.defaultProps)var c=t.type.defaultProps;for(l in e)w.call(e,l)&&!E.hasOwnProperty(l)&&(o[l]=void 0===e[l]&&void 0!==c?c[l]:e[l])}var l=arguments.length-2;if(1===l)o.children=n;else if(1<l){c=Array(l);for(var h=0;h<l;h++)c[h]=arguments[h+2];o.children=c}return{$$typeof:i,type:t.type,key:a,ref:s,props:o,_owner:u}},e.createContext=function(t,e){return void 0===e&&(e=null),(t={$$typeof:s,_calculateChangedBits:e,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:a,_context:t},t.Consumer=t},e.createElement=T,e.createFactory=function(t){var e=T.bind(null,t);return e.type=t,e},e.createRef=function(){return{current:null}},e.forwardRef=function(t){return{$$typeof:u,render:t}},e.isValidElement=I,e.lazy=function(t){return{$$typeof:l,_payload:{_status:-1,_result:t},_init:N}},e.memo=function(t,e){return{$$typeof:c,type:t,compare:void 0===e?null:e}},e.useCallback=function(t,e){return P().useCallback(t,e)},e.useContext=function(t,e){return P().useContext(t,e)},e.useDebugValue=function(){},e.useEffect=function(t,e){return P().useEffect(t,e)},e.useImperativeHandle=function(t,e,n){return P().useImperativeHandle(t,e,n)},e.useLayoutEffect=function(t,e){return P().useLayoutEffect(t,e)},e.useMemo=function(t,e){return P().useMemo(t,e)},e.useReducer=function(t,e,n){return P().useReducer(t,e,n)},e.useRef=function(t){return P().useRef(t)},e.useState=function(t){return P().useState(t)},e.version=\"17.0.1\"},function(t,e,n){\"use strict\";var r=n(8),i=n(11),o=n(19);function a(t){for(var e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+t,n=1;n<arguments.length;n++)e+=\"&args[]=\"+encodeURIComponent(arguments[n]);return\"Minified React error #\"+t+\"; visit \"+e+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!r)throw Error(a(227));var s=new Set,u={};function c(t,e){l(t,e),l(t+\"Capture\",e)}function l(t,e){for(u[t]=e,t=0;t<e.length;t++)s.add(e[t])}var h=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),f=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,p=Object.prototype.hasOwnProperty,d={},v={};function y(t,e,n,r,i,o,a){this.acceptsBooleans=2===e||3===e||4===e,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=t,this.type=e,this.sanitizeURL=o,this.removeEmptyString=a}var g={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach((function(t){g[t]=new y(t,0,!1,t,null,!1,!1)})),[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach((function(t){var e=t[0];g[e]=new y(e,1,!1,t[1],null,!1,!1)})),[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach((function(t){g[t]=new y(t,2,!1,t.toLowerCase(),null,!1,!1)})),[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach((function(t){g[t]=new y(t,2,!1,t,null,!1,!1)})),\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach((function(t){g[t]=new y(t,3,!1,t.toLowerCase(),null,!1,!1)})),[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach((function(t){g[t]=new y(t,3,!0,t,null,!1,!1)})),[\"capture\",\"download\"].forEach((function(t){g[t]=new y(t,4,!1,t,null,!1,!1)})),[\"cols\",\"rows\",\"size\",\"span\"].forEach((function(t){g[t]=new y(t,6,!1,t,null,!1,!1)})),[\"rowSpan\",\"start\"].forEach((function(t){g[t]=new y(t,5,!1,t.toLowerCase(),null,!1,!1)}));var m=/[\\-:]([a-z])/g;function b(t){return t[1].toUpperCase()}function _(t,e,n,r){var i=g.hasOwnProperty(e)?g[e]:null;(null!==i?0===i.type:!r&&(2<e.length&&(\"o\"===e[0]||\"O\"===e[0])&&(\"n\"===e[1]||\"N\"===e[1])))||(function(t,e,n,r){if(null===e||\"undefined\"===typeof e||function(t,e,n,r){if(null!==n&&0===n.type)return!1;switch(typeof e){case\"function\":case\"symbol\":return!0;case\"boolean\":return!r&&(null!==n?!n.acceptsBooleans:\"data-\"!==(t=t.toLowerCase().slice(0,5))&&\"aria-\"!==t);default:return!1}}(t,e,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!e;case 4:return!1===e;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}(e,n,i,r)&&(n=null),r||null===i?function(t){return!!p.call(v,t)||!p.call(d,t)&&(f.test(t)?v[t]=!0:(d[t]=!0,!1))}(e)&&(null===n?t.removeAttribute(e):t.setAttribute(e,\"\"+n)):i.mustUseProperty?t[i.propertyName]=null===n?3!==i.type&&\"\":n:(e=i.attributeName,r=i.attributeNamespace,null===n?t.removeAttribute(e):(n=3===(i=i.type)||4===i&&!0===n?\"\":\"\"+n,r?t.setAttributeNS(r,e,n):t.setAttribute(e,n))))}\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach((function(t){var e=t.replace(m,b);g[e]=new y(e,1,!1,t,null,!1,!1)})),\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach((function(t){var e=t.replace(m,b);g[e]=new y(e,1,!1,t,\"http://www.w3.org/1999/xlink\",!1,!1)})),[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach((function(t){var e=t.replace(m,b);g[e]=new y(e,1,!1,t,\"http://www.w3.org/XML/1998/namespace\",!1,!1)})),[\"tabIndex\",\"crossOrigin\"].forEach((function(t){g[t]=new y(t,1,!1,t.toLowerCase(),null,!1,!1)})),g.xlinkHref=new y(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1),[\"src\",\"href\",\"action\",\"formAction\"].forEach((function(t){g[t]=new y(t,1,!1,t.toLowerCase(),null,!0,!0)}));var w=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=60103,T=60106,I=60107,S=60108,O=60114,C=60109,k=60110,N=60112,A=60113,P=60120,R=60115,j=60116,x=60121,D=60128,L=60129,M=60130,F=60131;if(\"function\"===typeof Symbol&&Symbol.for){var U=Symbol.for;E=U(\"react.element\"),T=U(\"react.portal\"),I=U(\"react.fragment\"),S=U(\"react.strict_mode\"),O=U(\"react.profiler\"),C=U(\"react.provider\"),k=U(\"react.context\"),N=U(\"react.forward_ref\"),A=U(\"react.suspense\"),P=U(\"react.suspense_list\"),R=U(\"react.memo\"),j=U(\"react.lazy\"),x=U(\"react.block\"),U(\"react.scope\"),D=U(\"react.opaque.id\"),L=U(\"react.debug_trace_mode\"),M=U(\"react.offscreen\"),F=U(\"react.legacy_hidden\")}var V,q=\"function\"===typeof Symbol&&Symbol.iterator;function B(t){return null===t||\"object\"!==typeof t?null:\"function\"===typeof(t=q&&t[q]||t[\"@@iterator\"])?t:null}function z(t){if(void 0===V)try{throw Error()}catch(n){var e=n.stack.trim().match(/\\n( *(at )?)/);V=e&&e[1]||\"\"}return\"\\n\"+V+t}var H=!1;function K(t,e){if(!t||H)return\"\";H=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,\"props\",{set:function(){throw Error()}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(e,[])}catch(u){var r=u}Reflect.construct(t,[],e)}else{try{e.call()}catch(u){r=u}t.call(e.prototype)}else{try{throw Error()}catch(u){r=u}t()}}catch(u){if(u&&r&&\"string\"===typeof u.stack){for(var i=u.stack.split(\"\\n\"),o=r.stack.split(\"\\n\"),a=i.length-1,s=o.length-1;1<=a&&0<=s&&i[a]!==o[s];)s--;for(;1<=a&&0<=s;a--,s--)if(i[a]!==o[s]){if(1!==a||1!==s)do{if(a--,0>--s||i[a]!==o[s])return\"\\n\"+i[a].replace(\" at new \",\" at \")}while(1<=a&&0<=s);break}}}finally{H=!1,Error.prepareStackTrace=n}return(t=t?t.displayName||t.name:\"\")?z(t):\"\"}function W(t){switch(t.tag){case 5:return z(t.type);case 16:return z(\"Lazy\");case 13:return z(\"Suspense\");case 19:return z(\"SuspenseList\");case 0:case 2:case 15:return t=K(t.type,!1);case 11:return t=K(t.type.render,!1);case 22:return t=K(t.type._render,!1);case 1:return t=K(t.type,!0);default:return\"\"}}function G(t){if(null==t)return null;if(\"function\"===typeof t)return t.displayName||t.name||null;if(\"string\"===typeof t)return t;switch(t){case I:return\"Fragment\";case T:return\"Portal\";case O:return\"Profiler\";case S:return\"StrictMode\";case A:return\"Suspense\";case P:return\"SuspenseList\"}if(\"object\"===typeof t)switch(t.$$typeof){case k:return(t.displayName||\"Context\")+\".Consumer\";case C:return(t._context.displayName||\"Context\")+\".Provider\";case N:var e=t.render;return e=e.displayName||e.name||\"\",t.displayName||(\"\"!==e?\"ForwardRef(\"+e+\")\":\"ForwardRef\");case R:return G(t.type);case x:return G(t._render);case j:e=t._payload,t=t._init;try{return G(t(e))}catch(n){}}return null}function Q(t){switch(typeof t){case\"boolean\":case\"number\":case\"object\":case\"string\":case\"undefined\":return t;default:return\"\"}}function Y(t){var e=t.type;return(t=t.nodeName)&&\"input\"===t.toLowerCase()&&(\"checkbox\"===e||\"radio\"===e)}function J(t){t._valueTracker||(t._valueTracker=function(t){var e=Y(t)?\"checked\":\"value\",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),r=\"\"+t[e];if(!t.hasOwnProperty(e)&&\"undefined\"!==typeof n&&\"function\"===typeof n.get&&\"function\"===typeof n.set){var i=n.get,o=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return i.call(this)},set:function(t){r=\"\"+t,o.call(this,t)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(t){r=\"\"+t},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}(t))}function X(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),r=\"\";return t&&(r=Y(t)?t.checked?\"true\":\"false\":t.value),(t=r)!==n&&(e.setValue(t),!0)}function $(t){if(\"undefined\"===typeof(t=t||(\"undefined\"!==typeof document?document:void 0)))return null;try{return t.activeElement||t.body}catch(e){return t.body}}function Z(t,e){var n=e.checked;return i({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:t._wrapperState.initialChecked})}function tt(t,e){var n=null==e.defaultValue?\"\":e.defaultValue,r=null!=e.checked?e.checked:e.defaultChecked;n=Q(null!=e.value?e.value:n),t._wrapperState={initialChecked:r,initialValue:n,controlled:\"checkbox\"===e.type||\"radio\"===e.type?null!=e.checked:null!=e.value}}function et(t,e){null!=(e=e.checked)&&_(t,\"checked\",e,!1)}function nt(t,e){et(t,e);var n=Q(e.value),r=e.type;if(null!=n)\"number\"===r?(0===n&&\"\"===t.value||t.value!=n)&&(t.value=\"\"+n):t.value!==\"\"+n&&(t.value=\"\"+n);else if(\"submit\"===r||\"reset\"===r)return void t.removeAttribute(\"value\");e.hasOwnProperty(\"value\")?it(t,e.type,n):e.hasOwnProperty(\"defaultValue\")&&it(t,e.type,Q(e.defaultValue)),null==e.checked&&null!=e.defaultChecked&&(t.defaultChecked=!!e.defaultChecked)}function rt(t,e,n){if(e.hasOwnProperty(\"value\")||e.hasOwnProperty(\"defaultValue\")){var r=e.type;if(!(\"submit\"!==r&&\"reset\"!==r||void 0!==e.value&&null!==e.value))return;e=\"\"+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}\"\"!==(n=t.name)&&(t.name=\"\"),t.defaultChecked=!!t._wrapperState.initialChecked,\"\"!==n&&(t.name=n)}function it(t,e,n){\"number\"===e&&$(t.ownerDocument)===t||(null==n?t.defaultValue=\"\"+t._wrapperState.initialValue:t.defaultValue!==\"\"+n&&(t.defaultValue=\"\"+n))}function ot(t,e){return t=i({children:void 0},e),(e=function(t){var e=\"\";return r.Children.forEach(t,(function(t){null!=t&&(e+=t)})),e}(e.children))&&(t.children=e),t}function at(t,e,n,r){if(t=t.options,e){e={};for(var i=0;i<n.length;i++)e[\"$\"+n[i]]=!0;for(n=0;n<t.length;n++)i=e.hasOwnProperty(\"$\"+t[n].value),t[n].selected!==i&&(t[n].selected=i),i&&r&&(t[n].defaultSelected=!0)}else{for(n=\"\"+Q(n),e=null,i=0;i<t.length;i++){if(t[i].value===n)return t[i].selected=!0,void(r&&(t[i].defaultSelected=!0));null!==e||t[i].disabled||(e=t[i])}null!==e&&(e.selected=!0)}}function st(t,e){if(null!=e.dangerouslySetInnerHTML)throw Error(a(91));return i({},e,{value:void 0,defaultValue:void 0,children:\"\"+t._wrapperState.initialValue})}function ut(t,e){var n=e.value;if(null==n){if(n=e.children,e=e.defaultValue,null!=n){if(null!=e)throw Error(a(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(a(93));n=n[0]}e=n}null==e&&(e=\"\"),n=e}t._wrapperState={initialValue:Q(n)}}function ct(t,e){var n=Q(e.value),r=Q(e.defaultValue);null!=n&&((n=\"\"+n)!==t.value&&(t.value=n),null==e.defaultValue&&t.defaultValue!==n&&(t.defaultValue=n)),null!=r&&(t.defaultValue=\"\"+r)}function lt(t){var e=t.textContent;e===t._wrapperState.initialValue&&\"\"!==e&&null!==e&&(t.value=e)}var ht=\"http://www.w3.org/1999/xhtml\",ft=\"http://www.w3.org/2000/svg\";function pt(t){switch(t){case\"svg\":return\"http://www.w3.org/2000/svg\";case\"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function dt(t,e){return null==t||\"http://www.w3.org/1999/xhtml\"===t?pt(e):\"http://www.w3.org/2000/svg\"===t&&\"foreignObject\"===e?\"http://www.w3.org/1999/xhtml\":t}var vt,yt,gt=(yt=function(t,e){if(t.namespaceURI!==ft||\"innerHTML\"in t)t.innerHTML=e;else{for((vt=vt||document.createElement(\"div\")).innerHTML=\"<svg>\"+e.valueOf().toString()+\"</svg>\",e=vt.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}},\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,e,n,r){MSApp.execUnsafeLocalFunction((function(){return yt(t,e)}))}:yt);function mt(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&3===n.nodeType)return void(n.nodeValue=e)}t.textContent=e}var bt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},_t=[\"Webkit\",\"ms\",\"Moz\",\"O\"];function wt(t,e,n){return null==e||\"boolean\"===typeof e||\"\"===e?\"\":n||\"number\"!==typeof e||0===e||bt.hasOwnProperty(t)&&bt[t]?(\"\"+e).trim():e+\"px\"}function Et(t,e){for(var n in t=t.style,e)if(e.hasOwnProperty(n)){var r=0===n.indexOf(\"--\"),i=wt(n,e[n],r);\"float\"===n&&(n=\"cssFloat\"),r?t.setProperty(n,i):t[n]=i}}Object.keys(bt).forEach((function(t){_t.forEach((function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),bt[e]=bt[t]}))}));var Tt=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function It(t,e){if(e){if(Tt[t]&&(null!=e.children||null!=e.dangerouslySetInnerHTML))throw Error(a(137,t));if(null!=e.dangerouslySetInnerHTML){if(null!=e.children)throw Error(a(60));if(\"object\"!==typeof e.dangerouslySetInnerHTML||!(\"__html\"in e.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=e.style&&\"object\"!==typeof e.style)throw Error(a(62))}}function St(t,e){if(-1===t.indexOf(\"-\"))return\"string\"===typeof e.is;switch(t){case\"annotation-xml\":case\"color-profile\":case\"font-face\":case\"font-face-src\":case\"font-face-uri\":case\"font-face-format\":case\"font-face-name\":case\"missing-glyph\":return!1;default:return!0}}function Ot(t){return(t=t.target||t.srcElement||window).correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}var Ct=null,kt=null,Nt=null;function At(t){if(t=ti(t)){if(\"function\"!==typeof Ct)throw Error(a(280));var e=t.stateNode;e&&(e=ni(e),Ct(t.stateNode,t.type,e))}}function Pt(t){kt?Nt?Nt.push(t):Nt=[t]:kt=t}function Rt(){if(kt){var t=kt,e=Nt;if(Nt=kt=null,At(t),e)for(t=0;t<e.length;t++)At(e[t])}}function jt(t,e){return t(e)}function xt(t,e,n,r,i){return t(e,n,r,i)}function Dt(){}var Lt=jt,Mt=!1,Ft=!1;function Ut(){null===kt&&null===Nt||(Dt(),Rt())}function Vt(t,e){var n=t.stateNode;if(null===n)return null;var r=ni(n);if(null===r)return null;n=r[e];t:switch(e){case\"onClick\":case\"onClickCapture\":case\"onDoubleClick\":case\"onDoubleClickCapture\":case\"onMouseDown\":case\"onMouseDownCapture\":case\"onMouseMove\":case\"onMouseMoveCapture\":case\"onMouseUp\":case\"onMouseUpCapture\":case\"onMouseEnter\":(r=!r.disabled)||(r=!(\"button\"===(t=t.type)||\"input\"===t||\"select\"===t||\"textarea\"===t)),t=!r;break t;default:t=!1}if(t)return null;if(n&&\"function\"!==typeof n)throw Error(a(231,e,typeof n));return n}var qt=!1;if(h)try{var Bt={};Object.defineProperty(Bt,\"passive\",{get:function(){qt=!0}}),window.addEventListener(\"test\",Bt,Bt),window.removeEventListener(\"test\",Bt,Bt)}catch(yt){qt=!1}function zt(t,e,n,r,i,o,a,s,u){var c=Array.prototype.slice.call(arguments,3);try{e.apply(n,c)}catch(l){this.onError(l)}}var Ht=!1,Kt=null,Wt=!1,Gt=null,Qt={onError:function(t){Ht=!0,Kt=t}};function Yt(t,e,n,r,i,o,a,s,u){Ht=!1,Kt=null,zt.apply(Qt,arguments)}function Jt(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do{0!==(1026&(e=t).flags)&&(n=e.return),t=e.return}while(t)}return 3===e.tag?n:null}function Xt(t){if(13===t.tag){var e=t.memoizedState;if(null===e&&(null!==(t=t.alternate)&&(e=t.memoizedState)),null!==e)return e.dehydrated}return null}function $t(t){if(Jt(t)!==t)throw Error(a(188))}function Zt(t){if(!(t=function(t){var e=t.alternate;if(!e){if(null===(e=Jt(t)))throw Error(a(188));return e!==t?null:t}for(var n=t,r=e;;){var i=n.return;if(null===i)break;var o=i.alternate;if(null===o){if(null!==(r=i.return)){n=r;continue}break}if(i.child===o.child){for(o=i.child;o;){if(o===n)return $t(i),t;if(o===r)return $t(i),e;o=o.sibling}throw Error(a(188))}if(n.return!==r.return)n=i,r=o;else{for(var s=!1,u=i.child;u;){if(u===n){s=!0,n=i,r=o;break}if(u===r){s=!0,r=i,n=o;break}u=u.sibling}if(!s){for(u=o.child;u;){if(u===n){s=!0,n=o,r=i;break}if(u===r){s=!0,r=o,n=i;break}u=u.sibling}if(!s)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?t:e}(t)))return null;for(var e=t;;){if(5===e.tag||6===e.tag)return e;if(e.child)e.child.return=e,e=e.child;else{if(e===t)break;for(;!e.sibling;){if(!e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}}return null}function te(t,e){for(var n=t.alternate;null!==e;){if(e===t||e===n)return!0;e=e.return}return!1}var ee,ne,re,ie,oe=!1,ae=[],se=null,ue=null,ce=null,le=new Map,he=new Map,fe=[],pe=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");function de(t,e,n,r,i){return{blockedOn:t,domEventName:e,eventSystemFlags:16|n,nativeEvent:i,targetContainers:[r]}}function ve(t,e){switch(t){case\"focusin\":case\"focusout\":se=null;break;case\"dragenter\":case\"dragleave\":ue=null;break;case\"mouseover\":case\"mouseout\":ce=null;break;case\"pointerover\":case\"pointerout\":le.delete(e.pointerId);break;case\"gotpointercapture\":case\"lostpointercapture\":he.delete(e.pointerId)}}function ye(t,e,n,r,i,o){return null===t||t.nativeEvent!==o?(t=de(e,n,r,i,o),null!==e&&(null!==(e=ti(e))&&ne(e)),t):(t.eventSystemFlags|=r,e=t.targetContainers,null!==i&&-1===e.indexOf(i)&&e.push(i),t)}function ge(t){var e=Zr(t.target);if(null!==e){var n=Jt(e);if(null!==n)if(13===(e=n.tag)){if(null!==(e=Xt(n)))return t.blockedOn=e,void ie(t.lanePriority,(function(){o.unstable_runWithPriority(t.priority,(function(){re(n)}))}))}else if(3===e&&n.stateNode.hydrate)return void(t.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}t.blockedOn=null}function me(t){if(null!==t.blockedOn)return!1;for(var e=t.targetContainers;0<e.length;){var n=Ze(t.domEventName,t.eventSystemFlags,e[0],t.nativeEvent);if(null!==n)return null!==(e=ti(n))&&ne(e),t.blockedOn=n,!1;e.shift()}return!0}function be(t,e,n){me(t)&&n.delete(e)}function _e(){for(oe=!1;0<ae.length;){var t=ae[0];if(null!==t.blockedOn){null!==(t=ti(t.blockedOn))&&ee(t);break}for(var e=t.targetContainers;0<e.length;){var n=Ze(t.domEventName,t.eventSystemFlags,e[0],t.nativeEvent);if(null!==n){t.blockedOn=n;break}e.shift()}null===t.blockedOn&&ae.shift()}null!==se&&me(se)&&(se=null),null!==ue&&me(ue)&&(ue=null),null!==ce&&me(ce)&&(ce=null),le.forEach(be),he.forEach(be)}function we(t,e){t.blockedOn===e&&(t.blockedOn=null,oe||(oe=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,_e)))}function Ee(t){function e(e){return we(e,t)}if(0<ae.length){we(ae[0],t);for(var n=1;n<ae.length;n++){var r=ae[n];r.blockedOn===t&&(r.blockedOn=null)}}for(null!==se&&we(se,t),null!==ue&&we(ue,t),null!==ce&&we(ce,t),le.forEach(e),he.forEach(e),n=0;n<fe.length;n++)(r=fe[n]).blockedOn===t&&(r.blockedOn=null);for(;0<fe.length&&null===(n=fe[0]).blockedOn;)ge(n),null===n.blockedOn&&fe.shift()}function Te(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n[\"Webkit\"+t]=\"webkit\"+e,n[\"Moz\"+t]=\"moz\"+e,n}var Ie={animationend:Te(\"Animation\",\"AnimationEnd\"),animationiteration:Te(\"Animation\",\"AnimationIteration\"),animationstart:Te(\"Animation\",\"AnimationStart\"),transitionend:Te(\"Transition\",\"TransitionEnd\")},Se={},Oe={};function Ce(t){if(Se[t])return Se[t];if(!Ie[t])return t;var e,n=Ie[t];for(e in n)if(n.hasOwnProperty(e)&&e in Oe)return Se[t]=n[e];return t}h&&(Oe=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ie.animationend.animation,delete Ie.animationiteration.animation,delete Ie.animationstart.animation),\"TransitionEvent\"in window||delete Ie.transitionend.transition);var ke=Ce(\"animationend\"),Ne=Ce(\"animationiteration\"),Ae=Ce(\"animationstart\"),Pe=Ce(\"transitionend\"),Re=new Map,je=new Map,xe=[\"abort\",\"abort\",ke,\"animationEnd\",Ne,\"animationIteration\",Ae,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Pe,\"transitionEnd\",\"waiting\",\"waiting\"];function De(t,e){for(var n=0;n<t.length;n+=2){var r=t[n],i=t[n+1];i=\"on\"+(i[0].toUpperCase()+i.slice(1)),je.set(r,e),Re.set(r,i),c(i,[r])}}(0,o.unstable_now)();var Le=8;function Me(t){if(0!==(1&t))return Le=15,1;if(0!==(2&t))return Le=14,2;if(0!==(4&t))return Le=13,4;var e=24&t;return 0!==e?(Le=12,e):0!==(32&t)?(Le=11,32):0!==(e=192&t)?(Le=10,e):0!==(256&t)?(Le=9,256):0!==(e=3584&t)?(Le=8,e):0!==(4096&t)?(Le=7,4096):0!==(e=4186112&t)?(Le=6,e):0!==(e=62914560&t)?(Le=5,e):67108864&t?(Le=4,67108864):0!==(134217728&t)?(Le=3,134217728):0!==(e=805306368&t)?(Le=2,e):0!==(1073741824&t)?(Le=1,1073741824):(Le=8,t)}function Fe(t,e){var n=t.pendingLanes;if(0===n)return Le=0;var r=0,i=0,o=t.expiredLanes,a=t.suspendedLanes,s=t.pingedLanes;if(0!==o)r=o,i=Le=15;else if(0!==(o=134217727&n)){var u=o&~a;0!==u?(r=Me(u),i=Le):0!==(s&=o)&&(r=Me(s),i=Le)}else 0!==(o=n&~a)?(r=Me(o),i=Le):0!==s&&(r=Me(s),i=Le);if(0===r)return 0;if(r=n&((0>(r=31-He(r))?0:1<<r)<<1)-1,0!==e&&e!==r&&0===(e&a)){if(Me(e),i<=Le)return e;Le=i}if(0!==(e=t.entangledLanes))for(t=t.entanglements,e&=r;0<e;)i=1<<(n=31-He(e)),r|=t[n],e&=~i;return r}function Ue(t){return 0!==(t=-1073741825&t.pendingLanes)?t:1073741824&t?1073741824:0}function Ve(t,e){switch(t){case 15:return 1;case 14:return 2;case 12:return 0===(t=qe(24&~e))?Ve(10,e):t;case 10:return 0===(t=qe(192&~e))?Ve(8,e):t;case 8:return 0===(t=qe(3584&~e))&&(0===(t=qe(4186112&~e))&&(t=512)),t;case 2:return 0===(e=qe(805306368&~e))&&(e=268435456),e}throw Error(a(358,t))}function qe(t){return t&-t}function Be(t){for(var e=[],n=0;31>n;n++)e.push(t);return e}function ze(t,e,n){t.pendingLanes|=e;var r=e-1;t.suspendedLanes&=r,t.pingedLanes&=r,(t=t.eventTimes)[e=31-He(e)]=n}var He=Math.clz32?Math.clz32:function(t){return 0===t?32:31-(Ke(t)/We|0)|0},Ke=Math.log,We=Math.LN2;var Ge=o.unstable_UserBlockingPriority,Qe=o.unstable_runWithPriority,Ye=!0;function Je(t,e,n,r){Mt||Dt();var i=$e,o=Mt;Mt=!0;try{xt(i,t,e,n,r)}finally{(Mt=o)||Ut()}}function Xe(t,e,n,r){Qe(Ge,$e.bind(null,t,e,n,r))}function $e(t,e,n,r){var i;if(Ye)if((i=0===(4&e))&&0<ae.length&&-1<pe.indexOf(t))t=de(null,t,e,n,r),ae.push(t);else{var o=Ze(t,e,n,r);if(null===o)i&&ve(t,r);else{if(i){if(-1<pe.indexOf(t))return t=de(o,t,e,n,r),void ae.push(t);if(function(t,e,n,r,i){switch(e){case\"focusin\":return se=ye(se,t,e,n,r,i),!0;case\"dragenter\":return ue=ye(ue,t,e,n,r,i),!0;case\"mouseover\":return ce=ye(ce,t,e,n,r,i),!0;case\"pointerover\":var o=i.pointerId;return le.set(o,ye(le.get(o)||null,t,e,n,r,i)),!0;case\"gotpointercapture\":return o=i.pointerId,he.set(o,ye(he.get(o)||null,t,e,n,r,i)),!0}return!1}(o,t,e,n,r))return;ve(t,r)}Rr(t,e,r,null,n)}}}function Ze(t,e,n,r){var i=Ot(r);if(null!==(i=Zr(i))){var o=Jt(i);if(null===o)i=null;else{var a=o.tag;if(13===a){if(null!==(i=Xt(o)))return i;i=null}else if(3===a){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;i=null}else o!==i&&(i=null)}}return Rr(t,e,r,i,n),null}var tn=null,en=null,nn=null;function rn(){if(nn)return nn;var t,e,n=en,r=n.length,i=\"value\"in tn?tn.value:tn.textContent,o=i.length;for(t=0;t<r&&n[t]===i[t];t++);var a=r-t;for(e=1;e<=a&&n[r-e]===i[o-e];e++);return nn=i.slice(t,1<e?1-e:void 0)}function on(t){var e=t.keyCode;return\"charCode\"in t?0===(t=t.charCode)&&13===e&&(t=13):t=e,10===t&&(t=13),32<=t||13===t?t:0}function an(){return!0}function sn(){return!1}function un(t){function e(e,n,r,i,o){for(var a in this._reactName=e,this._targetInst=r,this.type=n,this.nativeEvent=i,this.target=o,this.currentTarget=null,t)t.hasOwnProperty(a)&&(e=t[a],this[a]=e?e(i):i[a]);return this.isDefaultPrevented=(null!=i.defaultPrevented?i.defaultPrevented:!1===i.returnValue)?an:sn,this.isPropagationStopped=sn,this}return i(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var t=this.nativeEvent;t&&(t.preventDefault?t.preventDefault():\"unknown\"!==typeof t.returnValue&&(t.returnValue=!1),this.isDefaultPrevented=an)},stopPropagation:function(){var t=this.nativeEvent;t&&(t.stopPropagation?t.stopPropagation():\"unknown\"!==typeof t.cancelBubble&&(t.cancelBubble=!0),this.isPropagationStopped=an)},persist:function(){},isPersistent:an}),e}var cn,ln,hn,fn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},pn=un(fn),dn=i({},fn,{view:0,detail:0}),vn=un(dn),yn=i({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(t){return void 0===t.relatedTarget?t.fromElement===t.srcElement?t.toElement:t.fromElement:t.relatedTarget},movementX:function(t){return\"movementX\"in t?t.movementX:(t!==hn&&(hn&&\"mousemove\"===t.type?(cn=t.screenX-hn.screenX,ln=t.screenY-hn.screenY):ln=cn=0,hn=t),cn)},movementY:function(t){return\"movementY\"in t?t.movementY:ln}}),gn=un(yn),mn=un(i({},yn,{dataTransfer:0})),bn=un(i({},dn,{relatedTarget:0})),_n=un(i({},fn,{animationName:0,elapsedTime:0,pseudoElement:0})),wn=un(i({},fn,{clipboardData:function(t){return\"clipboardData\"in t?t.clipboardData:window.clipboardData}})),En=un(i({},fn,{data:0})),Tn={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},In={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Sn={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function On(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):!!(t=Sn[t])&&!!e[t]}function Cn(){return On}var kn=un(i({},dn,{key:function(t){if(t.key){var e=Tn[t.key]||t.key;if(\"Unidentified\"!==e)return e}return\"keypress\"===t.type?13===(t=on(t))?\"Enter\":String.fromCharCode(t):\"keydown\"===t.type||\"keyup\"===t.type?In[t.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(t){return\"keypress\"===t.type?on(t):0},keyCode:function(t){return\"keydown\"===t.type||\"keyup\"===t.type?t.keyCode:0},which:function(t){return\"keypress\"===t.type?on(t):\"keydown\"===t.type||\"keyup\"===t.type?t.keyCode:0}})),Nn=un(i({},yn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),An=un(i({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),Pn=un(i({},fn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Rn=un(i({},yn,{deltaX:function(t){return\"deltaX\"in t?t.deltaX:\"wheelDeltaX\"in t?-t.wheelDeltaX:0},deltaY:function(t){return\"deltaY\"in t?t.deltaY:\"wheelDeltaY\"in t?-t.wheelDeltaY:\"wheelDelta\"in t?-t.wheelDelta:0},deltaZ:0,deltaMode:0})),jn=[9,13,27,32],xn=h&&\"CompositionEvent\"in window,Dn=null;h&&\"documentMode\"in document&&(Dn=document.documentMode);var Ln=h&&\"TextEvent\"in window&&!Dn,Mn=h&&(!xn||Dn&&8<Dn&&11>=Dn),Fn=String.fromCharCode(32),Un=!1;function Vn(t,e){switch(t){case\"keyup\":return-1!==jn.indexOf(e.keyCode);case\"keydown\":return 229!==e.keyCode;case\"keypress\":case\"mousedown\":case\"focusout\":return!0;default:return!1}}function qn(t){return\"object\"===typeof(t=t.detail)&&\"data\"in t?t.data:null}var Bn=!1;var zn={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hn(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return\"input\"===e?!!zn[t.type]:\"textarea\"===e}function Kn(t,e,n,r){Pt(r),0<(e=xr(e,\"onChange\")).length&&(n=new pn(\"onChange\",\"change\",null,n,r),t.push({event:n,listeners:e}))}var Wn=null,Gn=null;function Qn(t){Or(t,0)}function Yn(t){if(X(ei(t)))return t}function Jn(t,e){if(\"change\"===t)return e}var Xn=!1;if(h){var $n;if(h){var Zn=\"oninput\"in document;if(!Zn){var tr=document.createElement(\"div\");tr.setAttribute(\"oninput\",\"return;\"),Zn=\"function\"===typeof tr.oninput}$n=Zn}else $n=!1;Xn=$n&&(!document.documentMode||9<document.documentMode)}function er(){Wn&&(Wn.detachEvent(\"onpropertychange\",nr),Gn=Wn=null)}function nr(t){if(\"value\"===t.propertyName&&Yn(Gn)){var e=[];if(Kn(e,Gn,t,Ot(t)),t=Qn,Mt)t(e);else{Mt=!0;try{jt(t,e)}finally{Mt=!1,Ut()}}}}function rr(t,e,n){\"focusin\"===t?(er(),Gn=n,(Wn=e).attachEvent(\"onpropertychange\",nr)):\"focusout\"===t&&er()}function ir(t){if(\"selectionchange\"===t||\"keyup\"===t||\"keydown\"===t)return Yn(Gn)}function or(t,e){if(\"click\"===t)return Yn(e)}function ar(t,e){if(\"input\"===t||\"change\"===t)return Yn(e)}var sr=\"function\"===typeof Object.is?Object.is:function(t,e){return t===e&&(0!==t||1/t===1/e)||t!==t&&e!==e},ur=Object.prototype.hasOwnProperty;function cr(t,e){if(sr(t,e))return!0;if(\"object\"!==typeof t||null===t||\"object\"!==typeof e||null===e)return!1;var n=Object.keys(t),r=Object.keys(e);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!ur.call(e,n[r])||!sr(t[n[r]],e[n[r]]))return!1;return!0}function lr(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function hr(t,e){var n,r=lr(t);for(t=0;r;){if(3===r.nodeType){if(n=t+r.textContent.length,t<=e&&n>=e)return{node:r,offset:e-t};t=n}t:{for(;r;){if(r.nextSibling){r=r.nextSibling;break t}r=r.parentNode}r=void 0}r=lr(r)}}function fr(t,e){return!(!t||!e)&&(t===e||(!t||3!==t.nodeType)&&(e&&3===e.nodeType?fr(t,e.parentNode):\"contains\"in t?t.contains(e):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(e))))}function pr(){for(var t=window,e=$();e instanceof t.HTMLIFrameElement;){try{var n=\"string\"===typeof e.contentWindow.location.href}catch(r){n=!1}if(!n)break;e=$((t=e.contentWindow).document)}return e}function dr(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&(\"input\"===e&&(\"text\"===t.type||\"search\"===t.type||\"tel\"===t.type||\"url\"===t.type||\"password\"===t.type)||\"textarea\"===e||\"true\"===t.contentEditable)}var vr=h&&\"documentMode\"in document&&11>=document.documentMode,yr=null,gr=null,mr=null,br=!1;function _r(t,e,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==yr||yr!==$(r)||(\"selectionStart\"in(r=yr)&&dr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},mr&&cr(mr,r)||(mr=r,0<(r=xr(gr,\"onSelect\")).length&&(e=new pn(\"onSelect\",\"select\",null,e,n),t.push({event:e,listeners:r}),e.target=yr)))}De(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),0),De(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1),De(xe,2);for(var wr=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),Er=0;Er<wr.length;Er++)je.set(wr[Er],0);l(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]),l(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]),l(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]),l(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]),c(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \")),c(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \")),c(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]),c(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \")),c(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \")),c(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Tr=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ir=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Tr));function Sr(t,e,n){var r=t.type||\"unknown-event\";t.currentTarget=n,function(t,e,n,r,i,o,s,u,c){if(Yt.apply(this,arguments),Ht){if(!Ht)throw Error(a(198));var l=Kt;Ht=!1,Kt=null,Wt||(Wt=!0,Gt=l)}}(r,e,void 0,t),t.currentTarget=null}function Or(t,e){e=0!==(4&e);for(var n=0;n<t.length;n++){var r=t[n],i=r.event;r=r.listeners;t:{var o=void 0;if(e)for(var a=r.length-1;0<=a;a--){var s=r[a],u=s.instance,c=s.currentTarget;if(s=s.listener,u!==o&&i.isPropagationStopped())break t;Sr(i,s,c),o=u}else for(a=0;a<r.length;a++){if(u=(s=r[a]).instance,c=s.currentTarget,s=s.listener,u!==o&&i.isPropagationStopped())break t;Sr(i,s,c),o=u}}}if(Wt)throw t=Gt,Wt=!1,Gt=null,t}function Cr(t,e){var n=ri(e),r=t+\"__bubble\";n.has(r)||(Pr(e,t,2,!1),n.add(r))}var kr=\"_reactListening\"+Math.random().toString(36).slice(2);function Nr(t){t[kr]||(t[kr]=!0,s.forEach((function(e){Ir.has(e)||Ar(e,!1,t,null),Ar(e,!0,t,null)})))}function Ar(t,e,n,r){var i=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,o=n;if(\"selectionchange\"===t&&9!==n.nodeType&&(o=n.ownerDocument),null!==r&&!e&&Ir.has(t)){if(\"scroll\"!==t)return;i|=2,o=r}var a=ri(o),s=t+\"__\"+(e?\"capture\":\"bubble\");a.has(s)||(e&&(i|=4),Pr(o,t,i,e),a.add(s))}function Pr(t,e,n,r){var i=je.get(e);switch(void 0===i?2:i){case 0:i=Je;break;case 1:i=Xe;break;default:i=$e}n=i.bind(null,e,n,t),i=void 0,!qt||\"touchstart\"!==e&&\"touchmove\"!==e&&\"wheel\"!==e||(i=!0),r?void 0!==i?t.addEventListener(e,n,{capture:!0,passive:i}):t.addEventListener(e,n,!0):void 0!==i?t.addEventListener(e,n,{passive:i}):t.addEventListener(e,n,!1)}function Rr(t,e,n,r,i){var o=r;if(0===(1&e)&&0===(2&e)&&null!==r)t:for(;;){if(null===r)return;var a=r.tag;if(3===a||4===a){var s=r.stateNode.containerInfo;if(s===i||8===s.nodeType&&s.parentNode===i)break;if(4===a)for(a=r.return;null!==a;){var u=a.tag;if((3===u||4===u)&&((u=a.stateNode.containerInfo)===i||8===u.nodeType&&u.parentNode===i))return;a=a.return}for(;null!==s;){if(null===(a=Zr(s)))return;if(5===(u=a.tag)||6===u){r=o=a;continue t}s=s.parentNode}}r=r.return}!function(t,e,n){if(Ft)return t(e,n);Ft=!0;try{Lt(t,e,n)}finally{Ft=!1,Ut()}}((function(){var r=o,i=Ot(n),a=[];t:{var s=Re.get(t);if(void 0!==s){var u=pn,c=t;switch(t){case\"keypress\":if(0===on(n))break t;case\"keydown\":case\"keyup\":u=kn;break;case\"focusin\":c=\"focus\",u=bn;break;case\"focusout\":c=\"blur\",u=bn;break;case\"beforeblur\":case\"afterblur\":u=bn;break;case\"click\":if(2===n.button)break t;case\"auxclick\":case\"dblclick\":case\"mousedown\":case\"mousemove\":case\"mouseup\":case\"mouseout\":case\"mouseover\":case\"contextmenu\":u=gn;break;case\"drag\":case\"dragend\":case\"dragenter\":case\"dragexit\":case\"dragleave\":case\"dragover\":case\"dragstart\":case\"drop\":u=mn;break;case\"touchcancel\":case\"touchend\":case\"touchmove\":case\"touchstart\":u=An;break;case ke:case Ne:case Ae:u=_n;break;case Pe:u=Pn;break;case\"scroll\":u=vn;break;case\"wheel\":u=Rn;break;case\"copy\":case\"cut\":case\"paste\":u=wn;break;case\"gotpointercapture\":case\"lostpointercapture\":case\"pointercancel\":case\"pointerdown\":case\"pointermove\":case\"pointerout\":case\"pointerover\":case\"pointerup\":u=Nn}var l=0!==(4&e),h=!l&&\"scroll\"===t,f=l?null!==s?s+\"Capture\":null:s;l=[];for(var p,d=r;null!==d;){var v=(p=d).stateNode;if(5===p.tag&&null!==v&&(p=v,null!==f&&(null!=(v=Vt(d,f))&&l.push(jr(d,v,p)))),h)break;d=d.return}0<l.length&&(s=new u(s,c,null,n,i),a.push({event:s,listeners:l}))}}if(0===(7&e)){if(u=\"mouseout\"===t||\"pointerout\"===t,(!(s=\"mouseover\"===t||\"pointerover\"===t)||0!==(16&e)||!(c=n.relatedTarget||n.fromElement)||!Zr(c)&&!c[Xr])&&(u||s)&&(s=i.window===i?i:(s=i.ownerDocument)?s.defaultView||s.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?Zr(c):null)&&(c!==(h=Jt(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(l=gn,v=\"onMouseLeave\",f=\"onMouseEnter\",d=\"mouse\",\"pointerout\"!==t&&\"pointerover\"!==t||(l=Nn,v=\"onPointerLeave\",f=\"onPointerEnter\",d=\"pointer\"),h=null==u?s:ei(u),p=null==c?s:ei(c),(s=new l(v,d+\"leave\",u,n,i)).target=h,s.relatedTarget=p,v=null,Zr(i)===r&&((l=new l(f,d+\"enter\",c,n,i)).target=p,l.relatedTarget=h,v=l),h=v,u&&c)t:{for(f=c,d=0,p=l=u;p;p=Dr(p))d++;for(p=0,v=f;v;v=Dr(v))p++;for(;0<d-p;)l=Dr(l),d--;for(;0<p-d;)f=Dr(f),p--;for(;d--;){if(l===f||null!==f&&l===f.alternate)break t;l=Dr(l),f=Dr(f)}l=null}else l=null;null!==u&&Lr(a,s,u,l,!1),null!==c&&null!==h&&Lr(a,h,c,l,!0)}if(\"select\"===(u=(s=r?ei(r):window).nodeName&&s.nodeName.toLowerCase())||\"input\"===u&&\"file\"===s.type)var y=Jn;else if(Hn(s))if(Xn)y=ar;else{y=ir;var g=rr}else(u=s.nodeName)&&\"input\"===u.toLowerCase()&&(\"checkbox\"===s.type||\"radio\"===s.type)&&(y=or);switch(y&&(y=y(t,r))?Kn(a,y,n,i):(g&&g(t,s,r),\"focusout\"===t&&(g=s._wrapperState)&&g.controlled&&\"number\"===s.type&&it(s,\"number\",s.value)),g=r?ei(r):window,t){case\"focusin\":(Hn(g)||\"true\"===g.contentEditable)&&(yr=g,gr=r,mr=null);break;case\"focusout\":mr=gr=yr=null;break;case\"mousedown\":br=!0;break;case\"contextmenu\":case\"mouseup\":case\"dragend\":br=!1,_r(a,n,i);break;case\"selectionchange\":if(vr)break;case\"keydown\":case\"keyup\":_r(a,n,i)}var m;if(xn)t:{switch(t){case\"compositionstart\":var b=\"onCompositionStart\";break t;case\"compositionend\":b=\"onCompositionEnd\";break t;case\"compositionupdate\":b=\"onCompositionUpdate\";break t}b=void 0}else Bn?Vn(t,n)&&(b=\"onCompositionEnd\"):\"keydown\"===t&&229===n.keyCode&&(b=\"onCompositionStart\");b&&(Mn&&\"ko\"!==n.locale&&(Bn||\"onCompositionStart\"!==b?\"onCompositionEnd\"===b&&Bn&&(m=rn()):(en=\"value\"in(tn=i)?tn.value:tn.textContent,Bn=!0)),0<(g=xr(r,b)).length&&(b=new En(b,t,null,n,i),a.push({event:b,listeners:g}),m?b.data=m:null!==(m=qn(n))&&(b.data=m))),(m=Ln?function(t,e){switch(t){case\"compositionend\":return qn(e);case\"keypress\":return 32!==e.which?null:(Un=!0,Fn);case\"textInput\":return(t=e.data)===Fn&&Un?null:t;default:return null}}(t,n):function(t,e){if(Bn)return\"compositionend\"===t||!xn&&Vn(t,e)?(t=rn(),nn=en=tn=null,Bn=!1,t):null;switch(t){case\"paste\":return null;case\"keypress\":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case\"compositionend\":return Mn&&\"ko\"!==e.locale?null:e.data;default:return null}}(t,n))&&(0<(r=xr(r,\"onBeforeInput\")).length&&(i=new En(\"onBeforeInput\",\"beforeinput\",null,n,i),a.push({event:i,listeners:r}),i.data=m))}Or(a,e)}))}function jr(t,e,n){return{instance:t,listener:e,currentTarget:n}}function xr(t,e){for(var n=e+\"Capture\",r=[];null!==t;){var i=t,o=i.stateNode;5===i.tag&&null!==o&&(i=o,null!=(o=Vt(t,n))&&r.unshift(jr(t,o,i)),null!=(o=Vt(t,e))&&r.push(jr(t,o,i))),t=t.return}return r}function Dr(t){if(null===t)return null;do{t=t.return}while(t&&5!==t.tag);return t||null}function Lr(t,e,n,r,i){for(var o=e._reactName,a=[];null!==n&&n!==r;){var s=n,u=s.alternate,c=s.stateNode;if(null!==u&&u===r)break;5===s.tag&&null!==c&&(s=c,i?null!=(u=Vt(n,o))&&a.unshift(jr(n,u,s)):i||null!=(u=Vt(n,o))&&a.push(jr(n,u,s))),n=n.return}0!==a.length&&t.push({event:e,listeners:a})}function Mr(){}var Fr=null,Ur=null;function Vr(t,e){switch(t){case\"button\":case\"input\":case\"select\":case\"textarea\":return!!e.autoFocus}return!1}function qr(t,e){return\"textarea\"===t||\"option\"===t||\"noscript\"===t||\"string\"===typeof e.children||\"number\"===typeof e.children||\"object\"===typeof e.dangerouslySetInnerHTML&&null!==e.dangerouslySetInnerHTML&&null!=e.dangerouslySetInnerHTML.__html}var Br=\"function\"===typeof setTimeout?setTimeout:void 0,zr=\"function\"===typeof clearTimeout?clearTimeout:void 0;function Hr(t){1===t.nodeType?t.textContent=\"\":9===t.nodeType&&(null!=(t=t.body)&&(t.textContent=\"\"))}function Kr(t){for(;null!=t;t=t.nextSibling){var e=t.nodeType;if(1===e||3===e)break}return t}function Wr(t){t=t.previousSibling;for(var e=0;t;){if(8===t.nodeType){var n=t.data;if(\"$\"===n||\"$!\"===n||\"$?\"===n){if(0===e)return t;e--}else\"/$\"===n&&e++}t=t.previousSibling}return null}var Gr=0;var Qr=Math.random().toString(36).slice(2),Yr=\"__reactFiber$\"+Qr,Jr=\"__reactProps$\"+Qr,Xr=\"__reactContainer$\"+Qr,$r=\"__reactEvents$\"+Qr;function Zr(t){var e=t[Yr];if(e)return e;for(var n=t.parentNode;n;){if(e=n[Xr]||n[Yr]){if(n=e.alternate,null!==e.child||null!==n&&null!==n.child)for(t=Wr(t);null!==t;){if(n=t[Yr])return n;t=Wr(t)}return e}n=(t=n).parentNode}return null}function ti(t){return!(t=t[Yr]||t[Xr])||5!==t.tag&&6!==t.tag&&13!==t.tag&&3!==t.tag?null:t}function ei(t){if(5===t.tag||6===t.tag)return t.stateNode;throw Error(a(33))}function ni(t){return t[Jr]||null}function ri(t){var e=t[$r];return void 0===e&&(e=t[$r]=new Set),e}var ii=[],oi=-1;function ai(t){return{current:t}}function si(t){0>oi||(t.current=ii[oi],ii[oi]=null,oi--)}function ui(t,e){oi++,ii[oi]=t.current,t.current=e}var ci={},li=ai(ci),hi=ai(!1),fi=ci;function pi(t,e){var n=t.type.contextTypes;if(!n)return ci;var r=t.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===e)return r.__reactInternalMemoizedMaskedChildContext;var i,o={};for(i in n)o[i]=e[i];return r&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=o),o}function di(t){return null!==(t=t.childContextTypes)&&void 0!==t}function vi(){si(hi),si(li)}function yi(t,e,n){if(li.current!==ci)throw Error(a(168));ui(li,e),ui(hi,n)}function gi(t,e,n){var r=t.stateNode;if(t=e.childContextTypes,\"function\"!==typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in t))throw Error(a(108,G(e)||\"Unknown\",o));return i({},n,r)}function mi(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||ci,fi=li.current,ui(li,t),ui(hi,hi.current),!0}function bi(t,e,n){var r=t.stateNode;if(!r)throw Error(a(169));n?(t=gi(t,e,fi),r.__reactInternalMemoizedMergedChildContext=t,si(hi),si(li),ui(li,t)):si(hi),ui(hi,n)}var _i=null,wi=null,Ei=o.unstable_runWithPriority,Ti=o.unstable_scheduleCallback,Ii=o.unstable_cancelCallback,Si=o.unstable_shouldYield,Oi=o.unstable_requestPaint,Ci=o.unstable_now,ki=o.unstable_getCurrentPriorityLevel,Ni=o.unstable_ImmediatePriority,Ai=o.unstable_UserBlockingPriority,Pi=o.unstable_NormalPriority,Ri=o.unstable_LowPriority,ji=o.unstable_IdlePriority,xi={},Di=void 0!==Oi?Oi:function(){},Li=null,Mi=null,Fi=!1,Ui=Ci(),Vi=1e4>Ui?Ci:function(){return Ci()-Ui};function qi(){switch(ki()){case Ni:return 99;case Ai:return 98;case Pi:return 97;case Ri:return 96;case ji:return 95;default:throw Error(a(332))}}function Bi(t){switch(t){case 99:return Ni;case 98:return Ai;case 97:return Pi;case 96:return Ri;case 95:return ji;default:throw Error(a(332))}}function zi(t,e){return t=Bi(t),Ei(t,e)}function Hi(t,e,n){return t=Bi(t),Ti(t,e,n)}function Ki(){if(null!==Mi){var t=Mi;Mi=null,Ii(t)}Wi()}function Wi(){if(!Fi&&null!==Li){Fi=!0;var t=0;try{var e=Li;zi(99,(function(){for(;t<e.length;t++){var n=e[t];do{n=n(!0)}while(null!==n)}})),Li=null}catch(n){throw null!==Li&&(Li=Li.slice(t+1)),Ti(Ni,Ki),n}finally{Fi=!1}}}var Gi=w.ReactCurrentBatchConfig;function Qi(t,e){if(t&&t.defaultProps){for(var n in e=i({},e),t=t.defaultProps)void 0===e[n]&&(e[n]=t[n]);return e}return e}var Yi=ai(null),Ji=null,Xi=null,$i=null;function Zi(){$i=Xi=Ji=null}function to(t){var e=Yi.current;si(Yi),t.type._context._currentValue=e}function eo(t,e){for(;null!==t;){var n=t.alternate;if((t.childLanes&e)===e){if(null===n||(n.childLanes&e)===e)break;n.childLanes|=e}else t.childLanes|=e,null!==n&&(n.childLanes|=e);t=t.return}}function no(t,e){Ji=t,$i=Xi=null,null!==(t=t.dependencies)&&null!==t.firstContext&&(0!==(t.lanes&e)&&(xa=!0),t.firstContext=null)}function ro(t,e){if($i!==t&&!1!==e&&0!==e)if(\"number\"===typeof e&&1073741823!==e||($i=t,e=1073741823),e={context:t,observedBits:e,next:null},null===Xi){if(null===Ji)throw Error(a(308));Xi=e,Ji.dependencies={lanes:0,firstContext:e,responders:null}}else Xi=Xi.next=e;return t._currentValue}var io=!1;function oo(t){t.updateQueue={baseState:t.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ao(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,firstBaseUpdate:t.firstBaseUpdate,lastBaseUpdate:t.lastBaseUpdate,shared:t.shared,effects:t.effects})}function so(t,e){return{eventTime:t,lane:e,tag:0,payload:null,callback:null,next:null}}function uo(t,e){if(null!==(t=t.updateQueue)){var n=(t=t.shared).pending;null===n?e.next=e:(e.next=n.next,n.next=e),t.pending=e}}function co(t,e){var n=t.updateQueue,r=t.alternate;if(null!==r&&n===(r=r.updateQueue)){var i=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var a={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?i=o=a:o=o.next=a,n=n.next}while(null!==n);null===o?i=o=e:o=o.next=e}else i=o=e;return n={baseState:r.baseState,firstBaseUpdate:i,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(t.updateQueue=n)}null===(t=n.lastBaseUpdate)?n.firstBaseUpdate=e:t.next=e,n.lastBaseUpdate=e}function lo(t,e,n,r){var o=t.updateQueue;io=!1;var a=o.firstBaseUpdate,s=o.lastBaseUpdate,u=o.shared.pending;if(null!==u){o.shared.pending=null;var c=u,l=c.next;c.next=null,null===s?a=l:s.next=l,s=c;var h=t.alternate;if(null!==h){var f=(h=h.updateQueue).lastBaseUpdate;f!==s&&(null===f?h.firstBaseUpdate=l:f.next=l,h.lastBaseUpdate=c)}}if(null!==a){for(f=o.baseState,s=0,h=l=c=null;;){u=a.lane;var p=a.eventTime;if((r&u)===u){null!==h&&(h=h.next={eventTime:p,lane:0,tag:a.tag,payload:a.payload,callback:a.callback,next:null});t:{var d=t,v=a;switch(u=e,p=n,v.tag){case 1:if(\"function\"===typeof(d=v.payload)){f=d.call(p,f,u);break t}f=d;break t;case 3:d.flags=-4097&d.flags|64;case 0:if(null===(u=\"function\"===typeof(d=v.payload)?d.call(p,f,u):d)||void 0===u)break t;f=i({},f,u);break t;case 2:io=!0}}null!==a.callback&&(t.flags|=32,null===(u=o.effects)?o.effects=[a]:u.push(a))}else p={eventTime:p,lane:u,tag:a.tag,payload:a.payload,callback:a.callback,next:null},null===h?(l=h=p,c=f):h=h.next=p,s|=u;if(null===(a=a.next)){if(null===(u=o.shared.pending))break;a=u.next,u.next=null,o.lastBaseUpdate=u,o.shared.pending=null}}null===h&&(c=f),o.baseState=c,o.firstBaseUpdate=l,o.lastBaseUpdate=h,Fs|=s,t.lanes=s,t.memoizedState=f}}function ho(t,e,n){if(t=e.effects,e.effects=null,null!==t)for(e=0;e<t.length;e++){var r=t[e],i=r.callback;if(null!==i){if(r.callback=null,r=n,\"function\"!==typeof i)throw Error(a(191,i));i.call(r)}}}var fo=(new r.Component).refs;function po(t,e,n,r){n=null===(n=n(r,e=t.memoizedState))||void 0===n?e:i({},e,n),t.memoizedState=n,0===t.lanes&&(t.updateQueue.baseState=n)}var vo={isMounted:function(t){return!!(t=t._reactInternals)&&Jt(t)===t},enqueueSetState:function(t,e,n){t=t._reactInternals;var r=cu(),i=lu(t),o=so(r,i);o.payload=e,void 0!==n&&null!==n&&(o.callback=n),uo(t,o),hu(t,i,r)},enqueueReplaceState:function(t,e,n){t=t._reactInternals;var r=cu(),i=lu(t),o=so(r,i);o.tag=1,o.payload=e,void 0!==n&&null!==n&&(o.callback=n),uo(t,o),hu(t,i,r)},enqueueForceUpdate:function(t,e){t=t._reactInternals;var n=cu(),r=lu(t),i=so(n,r);i.tag=2,void 0!==e&&null!==e&&(i.callback=e),uo(t,i),hu(t,r,n)}};function yo(t,e,n,r,i,o,a){return\"function\"===typeof(t=t.stateNode).shouldComponentUpdate?t.shouldComponentUpdate(r,o,a):!e.prototype||!e.prototype.isPureReactComponent||(!cr(n,r)||!cr(i,o))}function go(t,e,n){var r=!1,i=ci,o=e.contextType;return\"object\"===typeof o&&null!==o?o=ro(o):(i=di(e)?fi:li.current,o=(r=null!==(r=e.contextTypes)&&void 0!==r)?pi(t,i):ci),e=new e(n,o),t.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,e.updater=vo,t.stateNode=e,e._reactInternals=t,r&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,t.__reactInternalMemoizedMaskedChildContext=o),e}function mo(t,e,n,r){t=e.state,\"function\"===typeof e.componentWillReceiveProps&&e.componentWillReceiveProps(n,r),\"function\"===typeof e.UNSAFE_componentWillReceiveProps&&e.UNSAFE_componentWillReceiveProps(n,r),e.state!==t&&vo.enqueueReplaceState(e,e.state,null)}function bo(t,e,n,r){var i=t.stateNode;i.props=n,i.state=t.memoizedState,i.refs=fo,oo(t);var o=e.contextType;\"object\"===typeof o&&null!==o?i.context=ro(o):(o=di(e)?fi:li.current,i.context=pi(t,o)),lo(t,n,i,r),i.state=t.memoizedState,\"function\"===typeof(o=e.getDerivedStateFromProps)&&(po(t,e,o,n),i.state=t.memoizedState),\"function\"===typeof e.getDerivedStateFromProps||\"function\"===typeof i.getSnapshotBeforeUpdate||\"function\"!==typeof i.UNSAFE_componentWillMount&&\"function\"!==typeof i.componentWillMount||(e=i.state,\"function\"===typeof i.componentWillMount&&i.componentWillMount(),\"function\"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),e!==i.state&&vo.enqueueReplaceState(i,i.state,null),lo(t,n,i,r),i.state=t.memoizedState),\"function\"===typeof i.componentDidMount&&(t.flags|=4)}var _o=Array.isArray;function wo(t,e,n){if(null!==(t=n.ref)&&\"function\"!==typeof t&&\"object\"!==typeof t){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,t));var i=\"\"+t;return null!==e&&null!==e.ref&&\"function\"===typeof e.ref&&e.ref._stringRef===i?e.ref:((e=function(t){var e=r.refs;e===fo&&(e=r.refs={}),null===t?delete e[i]:e[i]=t})._stringRef=i,e)}if(\"string\"!==typeof t)throw Error(a(284));if(!n._owner)throw Error(a(290,t))}return t}function Eo(t,e){if(\"textarea\"!==t.type)throw Error(a(31,\"[object Object]\"===Object.prototype.toString.call(e)?\"object with keys {\"+Object.keys(e).join(\", \")+\"}\":e))}function To(t){function e(e,n){if(t){var r=e.lastEffect;null!==r?(r.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!t)return null;for(;null!==r;)e(n,r),r=r.sibling;return null}function r(t,e){for(t=new Map;null!==e;)null!==e.key?t.set(e.key,e):t.set(e.index,e),e=e.sibling;return t}function i(t,e){return(t=zu(t,e)).index=0,t.sibling=null,t}function o(e,n,r){return e.index=r,t?null!==(r=e.alternate)?(r=r.index)<n?(e.flags=2,n):r:(e.flags=2,n):n}function s(e){return t&&null===e.alternate&&(e.flags=2),e}function u(t,e,n,r){return null===e||6!==e.tag?((e=Gu(n,t.mode,r)).return=t,e):((e=i(e,n)).return=t,e)}function c(t,e,n,r){return null!==e&&e.elementType===n.type?((r=i(e,n.props)).ref=wo(t,e,n),r.return=t,r):((r=Hu(n.type,n.key,n.props,null,t.mode,r)).ref=wo(t,e,n),r.return=t,r)}function l(t,e,n,r){return null===e||4!==e.tag||e.stateNode.containerInfo!==n.containerInfo||e.stateNode.implementation!==n.implementation?((e=Qu(n,t.mode,r)).return=t,e):((e=i(e,n.children||[])).return=t,e)}function h(t,e,n,r,o){return null===e||7!==e.tag?((e=Ku(n,t.mode,r,o)).return=t,e):((e=i(e,n)).return=t,e)}function f(t,e,n){if(\"string\"===typeof e||\"number\"===typeof e)return(e=Gu(\"\"+e,t.mode,n)).return=t,e;if(\"object\"===typeof e&&null!==e){switch(e.$$typeof){case E:return(n=Hu(e.type,e.key,e.props,null,t.mode,n)).ref=wo(t,null,e),n.return=t,n;case T:return(e=Qu(e,t.mode,n)).return=t,e}if(_o(e)||B(e))return(e=Ku(e,t.mode,n,null)).return=t,e;Eo(t,e)}return null}function p(t,e,n,r){var i=null!==e?e.key:null;if(\"string\"===typeof n||\"number\"===typeof n)return null!==i?null:u(t,e,\"\"+n,r);if(\"object\"===typeof n&&null!==n){switch(n.$$typeof){case E:return n.key===i?n.type===I?h(t,e,n.props.children,r,i):c(t,e,n,r):null;case T:return n.key===i?l(t,e,n,r):null}if(_o(n)||B(n))return null!==i?null:h(t,e,n,r,null);Eo(t,n)}return null}function d(t,e,n,r,i){if(\"string\"===typeof r||\"number\"===typeof r)return u(e,t=t.get(n)||null,\"\"+r,i);if(\"object\"===typeof r&&null!==r){switch(r.$$typeof){case E:return t=t.get(null===r.key?n:r.key)||null,r.type===I?h(e,t,r.props.children,i,r.key):c(e,t,r,i);case T:return l(e,t=t.get(null===r.key?n:r.key)||null,r,i)}if(_o(r)||B(r))return h(e,t=t.get(n)||null,r,i,null);Eo(e,r)}return null}function v(i,a,s,u){for(var c=null,l=null,h=a,v=a=0,y=null;null!==h&&v<s.length;v++){h.index>v?(y=h,h=null):y=h.sibling;var g=p(i,h,s[v],u);if(null===g){null===h&&(h=y);break}t&&h&&null===g.alternate&&e(i,h),a=o(g,a,v),null===l?c=g:l.sibling=g,l=g,h=y}if(v===s.length)return n(i,h),c;if(null===h){for(;v<s.length;v++)null!==(h=f(i,s[v],u))&&(a=o(h,a,v),null===l?c=h:l.sibling=h,l=h);return c}for(h=r(i,h);v<s.length;v++)null!==(y=d(h,i,v,s[v],u))&&(t&&null!==y.alternate&&h.delete(null===y.key?v:y.key),a=o(y,a,v),null===l?c=y:l.sibling=y,l=y);return t&&h.forEach((function(t){return e(i,t)})),c}function y(i,s,u,c){var l=B(u);if(\"function\"!==typeof l)throw Error(a(150));if(null==(u=l.call(u)))throw Error(a(151));for(var h=l=null,v=s,y=s=0,g=null,m=u.next();null!==v&&!m.done;y++,m=u.next()){v.index>y?(g=v,v=null):g=v.sibling;var b=p(i,v,m.value,c);if(null===b){null===v&&(v=g);break}t&&v&&null===b.alternate&&e(i,v),s=o(b,s,y),null===h?l=b:h.sibling=b,h=b,v=g}if(m.done)return n(i,v),l;if(null===v){for(;!m.done;y++,m=u.next())null!==(m=f(i,m.value,c))&&(s=o(m,s,y),null===h?l=m:h.sibling=m,h=m);return l}for(v=r(i,v);!m.done;y++,m=u.next())null!==(m=d(v,i,y,m.value,c))&&(t&&null!==m.alternate&&v.delete(null===m.key?y:m.key),s=o(m,s,y),null===h?l=m:h.sibling=m,h=m);return t&&v.forEach((function(t){return e(i,t)})),l}return function(t,r,o,u){var c=\"object\"===typeof o&&null!==o&&o.type===I&&null===o.key;c&&(o=o.props.children);var l=\"object\"===typeof o&&null!==o;if(l)switch(o.$$typeof){case E:t:{for(l=o.key,c=r;null!==c;){if(c.key===l){switch(c.tag){case 7:if(o.type===I){n(t,c.sibling),(r=i(c,o.props.children)).return=t,t=r;break t}break;default:if(c.elementType===o.type){n(t,c.sibling),(r=i(c,o.props)).ref=wo(t,c,o),r.return=t,t=r;break t}}n(t,c);break}e(t,c),c=c.sibling}o.type===I?((r=Ku(o.props.children,t.mode,u,o.key)).return=t,t=r):((u=Hu(o.type,o.key,o.props,null,t.mode,u)).ref=wo(t,r,o),u.return=t,t=u)}return s(t);case T:t:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(t,r.sibling),(r=i(r,o.children||[])).return=t,t=r;break t}n(t,r);break}e(t,r),r=r.sibling}(r=Qu(o,t.mode,u)).return=t,t=r}return s(t)}if(\"string\"===typeof o||\"number\"===typeof o)return o=\"\"+o,null!==r&&6===r.tag?(n(t,r.sibling),(r=i(r,o)).return=t,t=r):(n(t,r),(r=Gu(o,t.mode,u)).return=t,t=r),s(t);if(_o(o))return v(t,r,o,u);if(B(o))return y(t,r,o,u);if(l&&Eo(t,o),\"undefined\"===typeof o&&!c)switch(t.tag){case 1:case 22:case 0:case 11:case 15:throw Error(a(152,G(t.type)||\"Component\"))}return n(t,r)}}var Io=To(!0),So=To(!1),Oo={},Co=ai(Oo),ko=ai(Oo),No=ai(Oo);function Ao(t){if(t===Oo)throw Error(a(174));return t}function Po(t,e){switch(ui(No,e),ui(ko,t),ui(Co,Oo),t=e.nodeType){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:dt(null,\"\");break;default:e=dt(e=(t=8===t?e.parentNode:e).namespaceURI||null,t=t.tagName)}si(Co),ui(Co,e)}function Ro(){si(Co),si(ko),si(No)}function jo(t){Ao(No.current);var e=Ao(Co.current),n=dt(e,t.type);e!==n&&(ui(ko,t),ui(Co,n))}function xo(t){ko.current===t&&(si(Co),si(ko))}var Do=ai(0);function Lo(t){for(var e=t;null!==e;){if(13===e.tag){var n=e.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||\"$?\"===n.data||\"$!\"===n.data))return e}else if(19===e.tag&&void 0!==e.memoizedProps.revealOrder){if(0!==(64&e.flags))return e}else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var Mo=null,Fo=null,Uo=!1;function Vo(t,e){var n=qu(5,null,null,0);n.elementType=\"DELETED\",n.type=\"DELETED\",n.stateNode=e,n.return=t,n.flags=8,null!==t.lastEffect?(t.lastEffect.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n}function qo(t,e){switch(t.tag){case 5:var n=t.type;return null!==(e=1!==e.nodeType||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e)&&(t.stateNode=e,!0);case 6:return null!==(e=\"\"===t.pendingProps||3!==e.nodeType?null:e)&&(t.stateNode=e,!0);case 13:default:return!1}}function Bo(t){if(Uo){var e=Fo;if(e){var n=e;if(!qo(t,e)){if(!(e=Kr(n.nextSibling))||!qo(t,e))return t.flags=-1025&t.flags|2,Uo=!1,void(Mo=t);Vo(Mo,n)}Mo=t,Fo=Kr(e.firstChild)}else t.flags=-1025&t.flags|2,Uo=!1,Mo=t}}function zo(t){for(t=t.return;null!==t&&5!==t.tag&&3!==t.tag&&13!==t.tag;)t=t.return;Mo=t}function Ho(t){if(t!==Mo)return!1;if(!Uo)return zo(t),Uo=!0,!1;var e=t.type;if(5!==t.tag||\"head\"!==e&&\"body\"!==e&&!qr(e,t.memoizedProps))for(e=Fo;e;)Vo(t,e),e=Kr(e.nextSibling);if(zo(t),13===t.tag){if(!(t=null!==(t=t.memoizedState)?t.dehydrated:null))throw Error(a(317));t:{for(t=t.nextSibling,e=0;t;){if(8===t.nodeType){var n=t.data;if(\"/$\"===n){if(0===e){Fo=Kr(t.nextSibling);break t}e--}else\"$\"!==n&&\"$!\"!==n&&\"$?\"!==n||e++}t=t.nextSibling}Fo=null}}else Fo=Mo?Kr(t.stateNode.nextSibling):null;return!0}function Ko(){Fo=Mo=null,Uo=!1}var Wo=[];function Go(){for(var t=0;t<Wo.length;t++)Wo[t]._workInProgressVersionPrimary=null;Wo.length=0}var Qo=w.ReactCurrentDispatcher,Yo=w.ReactCurrentBatchConfig,Jo=0,Xo=null,$o=null,Zo=null,ta=!1,ea=!1;function na(){throw Error(a(321))}function ra(t,e){if(null===e)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!sr(t[n],e[n]))return!1;return!0}function ia(t,e,n,r,i,o){if(Jo=o,Xo=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,Qo.current=null===t||null===t.memoizedState?Aa:Pa,t=n(r,i),ea){o=0;do{if(ea=!1,!(25>o))throw Error(a(301));o+=1,Zo=$o=null,e.updateQueue=null,Qo.current=Ra,t=n(r,i)}while(ea)}if(Qo.current=Na,e=null!==$o&&null!==$o.next,Jo=0,Zo=$o=Xo=null,ta=!1,e)throw Error(a(300));return t}function oa(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Zo?Xo.memoizedState=Zo=t:Zo=Zo.next=t,Zo}function aa(){if(null===$o){var t=Xo.alternate;t=null!==t?t.memoizedState:null}else t=$o.next;var e=null===Zo?Xo.memoizedState:Zo.next;if(null!==e)Zo=e,$o=t;else{if(null===t)throw Error(a(310));t={memoizedState:($o=t).memoizedState,baseState:$o.baseState,baseQueue:$o.baseQueue,queue:$o.queue,next:null},null===Zo?Xo.memoizedState=Zo=t:Zo=Zo.next=t}return Zo}function sa(t,e){return\"function\"===typeof e?e(t):e}function ua(t){var e=aa(),n=e.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=t;var r=$o,i=r.baseQueue,o=n.pending;if(null!==o){if(null!==i){var s=i.next;i.next=o.next,o.next=s}r.baseQueue=i=o,n.pending=null}if(null!==i){i=i.next,r=r.baseState;var u=s=o=null,c=i;do{var l=c.lane;if((Jo&l)===l)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),r=c.eagerReducer===t?c.eagerState:t(r,c.action);else{var h={lane:l,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(s=u=h,o=r):u=u.next=h,Xo.lanes|=l,Fs|=l}c=c.next}while(null!==c&&c!==i);null===u?o=r:u.next=s,sr(r,e.memoizedState)||(xa=!0),e.memoizedState=r,e.baseState=o,e.baseQueue=u,n.lastRenderedState=r}return[e.memoizedState,n.dispatch]}function ca(t){var e=aa(),n=e.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=t;var r=n.dispatch,i=n.pending,o=e.memoizedState;if(null!==i){n.pending=null;var s=i=i.next;do{o=t(o,s.action),s=s.next}while(s!==i);sr(o,e.memoizedState)||(xa=!0),e.memoizedState=o,null===e.baseQueue&&(e.baseState=o),n.lastRenderedState=o}return[o,r]}function la(t,e,n){var r=e._getVersion;r=r(e._source);var i=e._workInProgressVersionPrimary;if(null!==i?t=i===r:(t=t.mutableReadLanes,(t=(Jo&t)===t)&&(e._workInProgressVersionPrimary=r,Wo.push(e))),t)return n(e._source);throw Wo.push(e),Error(a(350))}function ha(t,e,n,r){var i=As;if(null===i)throw Error(a(349));var o=e._getVersion,s=o(e._source),u=Qo.current,c=u.useState((function(){return la(i,e,n)})),l=c[1],h=c[0];c=Zo;var f=t.memoizedState,p=f.refs,d=p.getSnapshot,v=f.source;f=f.subscribe;var y=Xo;return t.memoizedState={refs:p,source:e,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=l;var t=o(e._source);if(!sr(s,t)){t=n(e._source),sr(h,t)||(l(t),t=lu(y),i.mutableReadLanes|=t&i.pendingLanes),t=i.mutableReadLanes,i.entangledLanes|=t;for(var r=i.entanglements,a=t;0<a;){var u=31-He(a),c=1<<u;r[u]|=t,a&=~c}}}),[n,e,r]),u.useEffect((function(){return r(e._source,(function(){var t=p.getSnapshot,n=p.setSnapshot;try{n(t(e._source));var r=lu(y);i.mutableReadLanes|=r&i.pendingLanes}catch(o){n((function(){throw o}))}}))}),[e,r]),sr(d,n)&&sr(v,e)&&sr(f,r)||((t={pending:null,dispatch:null,lastRenderedReducer:sa,lastRenderedState:h}).dispatch=l=ka.bind(null,Xo,t),c.queue=t,c.baseQueue=null,h=la(i,e,n),c.memoizedState=c.baseState=h),h}function fa(t,e,n){return ha(aa(),t,e,n)}function pa(t){var e=oa();return\"function\"===typeof t&&(t=t()),e.memoizedState=e.baseState=t,t=(t=e.queue={pending:null,dispatch:null,lastRenderedReducer:sa,lastRenderedState:t}).dispatch=ka.bind(null,Xo,t),[e.memoizedState,t]}function da(t,e,n,r){return t={tag:t,create:e,destroy:n,deps:r,next:null},null===(e=Xo.updateQueue)?(e={lastEffect:null},Xo.updateQueue=e,e.lastEffect=t.next=t):null===(n=e.lastEffect)?e.lastEffect=t.next=t:(r=n.next,n.next=t,t.next=r,e.lastEffect=t),t}function va(t){return t={current:t},oa().memoizedState=t}function ya(){return aa().memoizedState}function ga(t,e,n,r){var i=oa();Xo.flags|=t,i.memoizedState=da(1|e,n,void 0,void 0===r?null:r)}function ma(t,e,n,r){var i=aa();r=void 0===r?null:r;var o=void 0;if(null!==$o){var a=$o.memoizedState;if(o=a.destroy,null!==r&&ra(r,a.deps))return void da(e,n,o,r)}Xo.flags|=t,i.memoizedState=da(1|e,n,o,r)}function ba(t,e){return ga(516,4,t,e)}function _a(t,e){return ma(516,4,t,e)}function wa(t,e){return ma(4,2,t,e)}function Ea(t,e){return\"function\"===typeof e?(t=t(),e(t),function(){e(null)}):null!==e&&void 0!==e?(t=t(),e.current=t,function(){e.current=null}):void 0}function Ta(t,e,n){return n=null!==n&&void 0!==n?n.concat([t]):null,ma(4,2,Ea.bind(null,e,t),n)}function Ia(){}function Sa(t,e){var n=aa();e=void 0===e?null:e;var r=n.memoizedState;return null!==r&&null!==e&&ra(e,r[1])?r[0]:(n.memoizedState=[t,e],t)}function Oa(t,e){var n=aa();e=void 0===e?null:e;var r=n.memoizedState;return null!==r&&null!==e&&ra(e,r[1])?r[0]:(t=t(),n.memoizedState=[t,e],t)}function Ca(t,e){var n=qi();zi(98>n?98:n,(function(){t(!0)})),zi(97<n?97:n,(function(){var n=Yo.transition;Yo.transition=1;try{t(!1),e()}finally{Yo.transition=n}}))}function ka(t,e,n){var r=cu(),i=lu(t),o={lane:i,action:n,eagerReducer:null,eagerState:null,next:null},a=e.pending;if(null===a?o.next=o:(o.next=a.next,a.next=o),e.pending=o,a=t.alternate,t===Xo||null!==a&&a===Xo)ea=ta=!0;else{if(0===t.lanes&&(null===a||0===a.lanes)&&null!==(a=e.lastRenderedReducer))try{var s=e.lastRenderedState,u=a(s,n);if(o.eagerReducer=a,o.eagerState=u,sr(u,s))return}catch(c){}hu(t,i,r)}}var Na={readContext:ro,useCallback:na,useContext:na,useEffect:na,useImperativeHandle:na,useLayoutEffect:na,useMemo:na,useReducer:na,useRef:na,useState:na,useDebugValue:na,useDeferredValue:na,useTransition:na,useMutableSource:na,useOpaqueIdentifier:na,unstable_isNewReconciler:!1},Aa={readContext:ro,useCallback:function(t,e){return oa().memoizedState=[t,void 0===e?null:e],t},useContext:ro,useEffect:ba,useImperativeHandle:function(t,e,n){return n=null!==n&&void 0!==n?n.concat([t]):null,ga(4,2,Ea.bind(null,e,t),n)},useLayoutEffect:function(t,e){return ga(4,2,t,e)},useMemo:function(t,e){var n=oa();return e=void 0===e?null:e,t=t(),n.memoizedState=[t,e],t},useReducer:function(t,e,n){var r=oa();return e=void 0!==n?n(e):e,r.memoizedState=r.baseState=e,t=(t=r.queue={pending:null,dispatch:null,lastRenderedReducer:t,lastRenderedState:e}).dispatch=ka.bind(null,Xo,t),[r.memoizedState,t]},useRef:va,useState:pa,useDebugValue:Ia,useDeferredValue:function(t){var e=pa(t),n=e[0],r=e[1];return ba((function(){var e=Yo.transition;Yo.transition=1;try{r(t)}finally{Yo.transition=e}}),[t]),n},useTransition:function(){var t=pa(!1),e=t[0];return va(t=Ca.bind(null,t[1])),[t,e]},useMutableSource:function(t,e,n){var r=oa();return r.memoizedState={refs:{getSnapshot:e,setSnapshot:null},source:t,subscribe:n},ha(r,t,e,n)},useOpaqueIdentifier:function(){if(Uo){var t=!1,e=function(t){return{$$typeof:D,toString:t,valueOf:t}}((function(){throw t||(t=!0,n(\"r:\"+(Gr++).toString(36))),Error(a(355))})),n=pa(e)[1];return 0===(2&Xo.mode)&&(Xo.flags|=516,da(5,(function(){n(\"r:\"+(Gr++).toString(36))}),void 0,null)),e}return pa(e=\"r:\"+(Gr++).toString(36)),e},unstable_isNewReconciler:!1},Pa={readContext:ro,useCallback:Sa,useContext:ro,useEffect:_a,useImperativeHandle:Ta,useLayoutEffect:wa,useMemo:Oa,useReducer:ua,useRef:ya,useState:function(){return ua(sa)},useDebugValue:Ia,useDeferredValue:function(t){var e=ua(sa),n=e[0],r=e[1];return _a((function(){var e=Yo.transition;Yo.transition=1;try{r(t)}finally{Yo.transition=e}}),[t]),n},useTransition:function(){var t=ua(sa)[0];return[ya().current,t]},useMutableSource:fa,useOpaqueIdentifier:function(){return ua(sa)[0]},unstable_isNewReconciler:!1},Ra={readContext:ro,useCallback:Sa,useContext:ro,useEffect:_a,useImperativeHandle:Ta,useLayoutEffect:wa,useMemo:Oa,useReducer:ca,useRef:ya,useState:function(){return ca(sa)},useDebugValue:Ia,useDeferredValue:function(t){var e=ca(sa),n=e[0],r=e[1];return _a((function(){var e=Yo.transition;Yo.transition=1;try{r(t)}finally{Yo.transition=e}}),[t]),n},useTransition:function(){var t=ca(sa)[0];return[ya().current,t]},useMutableSource:fa,useOpaqueIdentifier:function(){return ca(sa)[0]},unstable_isNewReconciler:!1},ja=w.ReactCurrentOwner,xa=!1;function Da(t,e,n,r){e.child=null===t?So(e,null,n,r):Io(e,t.child,n,r)}function La(t,e,n,r,i){n=n.render;var o=e.ref;return no(e,i),r=ia(t,e,n,r,o,i),null===t||xa?(e.flags|=1,Da(t,e,r,i),e.child):(e.updateQueue=t.updateQueue,e.flags&=-517,t.lanes&=~i,ns(t,e,i))}function Ma(t,e,n,r,i,o){if(null===t){var a=n.type;return\"function\"!==typeof a||Bu(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((t=Hu(n.type,null,r,e,e.mode,o)).ref=e.ref,t.return=e,e.child=t):(e.tag=15,e.type=a,Fa(t,e,a,r,i,o))}return a=t.child,0===(i&o)&&(i=a.memoizedProps,(n=null!==(n=n.compare)?n:cr)(i,r)&&t.ref===e.ref)?ns(t,e,o):(e.flags|=1,(t=zu(a,r)).ref=e.ref,t.return=e,e.child=t)}function Fa(t,e,n,r,i,o){if(null!==t&&cr(t.memoizedProps,r)&&t.ref===e.ref){if(xa=!1,0===(o&i))return e.lanes=t.lanes,ns(t,e,o);0!==(16384&t.flags)&&(xa=!0)}return qa(t,e,n,r,o)}function Ua(t,e,n){var r=e.pendingProps,i=r.children,o=null!==t?t.memoizedState:null;if(\"hidden\"===r.mode||\"unstable-defer-without-hiding\"===r.mode)if(0===(4&e.mode))e.memoizedState={baseLanes:0},bu(e,n);else{if(0===(1073741824&n))return t=null!==o?o.baseLanes|n:n,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:t},bu(e,t),null;e.memoizedState={baseLanes:0},bu(e,null!==o?o.baseLanes:n)}else null!==o?(r=o.baseLanes|n,e.memoizedState=null):r=n,bu(e,r);return Da(t,e,i,n),e.child}function Va(t,e){var n=e.ref;(null===t&&null!==n||null!==t&&t.ref!==n)&&(e.flags|=128)}function qa(t,e,n,r,i){var o=di(n)?fi:li.current;return o=pi(e,o),no(e,i),n=ia(t,e,n,r,o,i),null===t||xa?(e.flags|=1,Da(t,e,n,i),e.child):(e.updateQueue=t.updateQueue,e.flags&=-517,t.lanes&=~i,ns(t,e,i))}function Ba(t,e,n,r,i){if(di(n)){var o=!0;mi(e)}else o=!1;if(no(e,i),null===e.stateNode)null!==t&&(t.alternate=null,e.alternate=null,e.flags|=2),go(e,n,r),bo(e,n,r,i),r=!0;else if(null===t){var a=e.stateNode,s=e.memoizedProps;a.props=s;var u=a.context,c=n.contextType;\"object\"===typeof c&&null!==c?c=ro(c):c=pi(e,c=di(n)?fi:li.current);var l=n.getDerivedStateFromProps,h=\"function\"===typeof l||\"function\"===typeof a.getSnapshotBeforeUpdate;h||\"function\"!==typeof a.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof a.componentWillReceiveProps||(s!==r||u!==c)&&mo(e,a,r,c),io=!1;var f=e.memoizedState;a.state=f,lo(e,r,a,i),u=e.memoizedState,s!==r||f!==u||hi.current||io?(\"function\"===typeof l&&(po(e,n,l,r),u=e.memoizedState),(s=io||yo(e,n,s,r,f,u,c))?(h||\"function\"!==typeof a.UNSAFE_componentWillMount&&\"function\"!==typeof a.componentWillMount||(\"function\"===typeof a.componentWillMount&&a.componentWillMount(),\"function\"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),\"function\"===typeof a.componentDidMount&&(e.flags|=4)):(\"function\"===typeof a.componentDidMount&&(e.flags|=4),e.memoizedProps=r,e.memoizedState=u),a.props=r,a.state=u,a.context=c,r=s):(\"function\"===typeof a.componentDidMount&&(e.flags|=4),r=!1)}else{a=e.stateNode,ao(t,e),s=e.memoizedProps,c=e.type===e.elementType?s:Qi(e.type,s),a.props=c,h=e.pendingProps,f=a.context,\"object\"===typeof(u=n.contextType)&&null!==u?u=ro(u):u=pi(e,u=di(n)?fi:li.current);var p=n.getDerivedStateFromProps;(l=\"function\"===typeof p||\"function\"===typeof a.getSnapshotBeforeUpdate)||\"function\"!==typeof a.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof a.componentWillReceiveProps||(s!==h||f!==u)&&mo(e,a,r,u),io=!1,f=e.memoizedState,a.state=f,lo(e,r,a,i);var d=e.memoizedState;s!==h||f!==d||hi.current||io?(\"function\"===typeof p&&(po(e,n,p,r),d=e.memoizedState),(c=io||yo(e,n,c,r,f,d,u))?(l||\"function\"!==typeof a.UNSAFE_componentWillUpdate&&\"function\"!==typeof a.componentWillUpdate||(\"function\"===typeof a.componentWillUpdate&&a.componentWillUpdate(r,d,u),\"function\"===typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,d,u)),\"function\"===typeof a.componentDidUpdate&&(e.flags|=4),\"function\"===typeof a.getSnapshotBeforeUpdate&&(e.flags|=256)):(\"function\"!==typeof a.componentDidUpdate||s===t.memoizedProps&&f===t.memoizedState||(e.flags|=4),\"function\"!==typeof a.getSnapshotBeforeUpdate||s===t.memoizedProps&&f===t.memoizedState||(e.flags|=256),e.memoizedProps=r,e.memoizedState=d),a.props=r,a.state=d,a.context=u,r=c):(\"function\"!==typeof a.componentDidUpdate||s===t.memoizedProps&&f===t.memoizedState||(e.flags|=4),\"function\"!==typeof a.getSnapshotBeforeUpdate||s===t.memoizedProps&&f===t.memoizedState||(e.flags|=256),r=!1)}return za(t,e,n,r,o,i)}function za(t,e,n,r,i,o){Va(t,e);var a=0!==(64&e.flags);if(!r&&!a)return i&&bi(e,n,!1),ns(t,e,o);r=e.stateNode,ja.current=e;var s=a&&\"function\"!==typeof n.getDerivedStateFromError?null:r.render();return e.flags|=1,null!==t&&a?(e.child=Io(e,t.child,null,o),e.child=Io(e,null,s,o)):Da(t,e,s,o),e.memoizedState=r.state,i&&bi(e,n,!0),e.child}function Ha(t){var e=t.stateNode;e.pendingContext?yi(0,e.pendingContext,e.pendingContext!==e.context):e.context&&yi(0,e.context,!1),Po(t,e.containerInfo)}var Ka,Wa,Ga,Qa={dehydrated:null,retryLane:0};function Ya(t,e,n){var r,i=e.pendingProps,o=Do.current,a=!1;return(r=0!==(64&e.flags))||(r=(null===t||null!==t.memoizedState)&&0!==(2&o)),r?(a=!0,e.flags&=-65):null!==t&&null===t.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(o|=1),ui(Do,1&o),null===t?(void 0!==i.fallback&&Bo(e),t=i.children,o=i.fallback,a?(t=Ja(e,t,o,n),e.child.memoizedState={baseLanes:n},e.memoizedState=Qa,t):\"number\"===typeof i.unstable_expectedLoadTime?(t=Ja(e,t,o,n),e.child.memoizedState={baseLanes:n},e.memoizedState=Qa,e.lanes=33554432,t):((n=Wu({mode:\"visible\",children:t},e.mode,n,null)).return=e,e.child=n)):(t.memoizedState,a?(i=$a(t,e,i.children,i.fallback,n),a=e.child,o=t.child.memoizedState,a.memoizedState=null===o?{baseLanes:n}:{baseLanes:o.baseLanes|n},a.childLanes=t.childLanes&~n,e.memoizedState=Qa,i):(n=Xa(t,e,i.children,n),e.memoizedState=null,n))}function Ja(t,e,n,r){var i=t.mode,o=t.child;return e={mode:\"hidden\",children:e},0===(2&i)&&null!==o?(o.childLanes=0,o.pendingProps=e):o=Wu(e,i,0,null),n=Ku(n,i,r,null),o.return=t,n.return=t,o.sibling=n,t.child=o,n}function Xa(t,e,n,r){var i=t.child;return t=i.sibling,n=zu(i,{mode:\"visible\",children:n}),0===(2&e.mode)&&(n.lanes=r),n.return=e,n.sibling=null,null!==t&&(t.nextEffect=null,t.flags=8,e.firstEffect=e.lastEffect=t),e.child=n}function $a(t,e,n,r,i){var o=e.mode,a=t.child;t=a.sibling;var s={mode:\"hidden\",children:n};return 0===(2&o)&&e.child!==a?((n=e.child).childLanes=0,n.pendingProps=s,null!==(a=n.lastEffect)?(e.firstEffect=n.firstEffect,e.lastEffect=a,a.nextEffect=null):e.firstEffect=e.lastEffect=null):n=zu(a,s),null!==t?r=zu(t,r):(r=Ku(r,o,i,null)).flags|=2,r.return=e,n.return=e,n.sibling=r,e.child=n,r}function Za(t,e){t.lanes|=e;var n=t.alternate;null!==n&&(n.lanes|=e),eo(t.return,e)}function ts(t,e,n,r,i,o){var a=t.memoizedState;null===a?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:i,lastEffect:o}:(a.isBackwards=e,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailMode=i,a.lastEffect=o)}function es(t,e,n){var r=e.pendingProps,i=r.revealOrder,o=r.tail;if(Da(t,e,r.children,n),0!==(2&(r=Do.current)))r=1&r|2,e.flags|=64;else{if(null!==t&&0!==(64&t.flags))t:for(t=e.child;null!==t;){if(13===t.tag)null!==t.memoizedState&&Za(t,n);else if(19===t.tag)Za(t,n);else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break t;for(;null===t.sibling;){if(null===t.return||t.return===e)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}r&=1}if(ui(Do,r),0===(2&e.mode))e.memoizedState=null;else switch(i){case\"forwards\":for(n=e.child,i=null;null!==n;)null!==(t=n.alternate)&&null===Lo(t)&&(i=n),n=n.sibling;null===(n=i)?(i=e.child,e.child=null):(i=n.sibling,n.sibling=null),ts(e,!1,i,n,o,e.lastEffect);break;case\"backwards\":for(n=null,i=e.child,e.child=null;null!==i;){if(null!==(t=i.alternate)&&null===Lo(t)){e.child=i;break}t=i.sibling,i.sibling=n,n=i,i=t}ts(e,!0,n,null,o,e.lastEffect);break;case\"together\":ts(e,!1,null,null,void 0,e.lastEffect);break;default:e.memoizedState=null}return e.child}function ns(t,e,n){if(null!==t&&(e.dependencies=t.dependencies),Fs|=e.lanes,0!==(n&e.childLanes)){if(null!==t&&e.child!==t.child)throw Error(a(153));if(null!==e.child){for(n=zu(t=e.child,t.pendingProps),e.child=n,n.return=e;null!==t.sibling;)t=t.sibling,(n=n.sibling=zu(t,t.pendingProps)).return=e;n.sibling=null}return e.child}return null}function rs(t,e){if(!Uo)switch(t.tailMode){case\"hidden\":e=t.tail;for(var n=null;null!==e;)null!==e.alternate&&(n=e),e=e.sibling;null===n?t.tail=null:n.sibling=null;break;case\"collapsed\":n=t.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?e||null===t.tail?t.tail=null:t.tail.sibling=null:r.sibling=null}}function is(t,e,n){var r=e.pendingProps;switch(e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return di(e.type)&&vi(),null;case 3:return Ro(),si(hi),si(li),Go(),(r=e.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==t&&null!==t.child||(Ho(e)?e.flags|=4:r.hydrate||(e.flags|=256)),null;case 5:xo(e);var o=Ao(No.current);if(n=e.type,null!==t&&null!=e.stateNode)Wa(t,e,n,r),t.ref!==e.ref&&(e.flags|=128);else{if(!r){if(null===e.stateNode)throw Error(a(166));return null}if(t=Ao(Co.current),Ho(e)){r=e.stateNode,n=e.type;var s=e.memoizedProps;switch(r[Yr]=e,r[Jr]=s,n){case\"dialog\":Cr(\"cancel\",r),Cr(\"close\",r);break;case\"iframe\":case\"object\":case\"embed\":Cr(\"load\",r);break;case\"video\":case\"audio\":for(t=0;t<Tr.length;t++)Cr(Tr[t],r);break;case\"source\":Cr(\"error\",r);break;case\"img\":case\"image\":case\"link\":Cr(\"error\",r),Cr(\"load\",r);break;case\"details\":Cr(\"toggle\",r);break;case\"input\":tt(r,s),Cr(\"invalid\",r);break;case\"select\":r._wrapperState={wasMultiple:!!s.multiple},Cr(\"invalid\",r);break;case\"textarea\":ut(r,s),Cr(\"invalid\",r)}for(var c in It(n,s),t=null,s)s.hasOwnProperty(c)&&(o=s[c],\"children\"===c?\"string\"===typeof o?r.textContent!==o&&(t=[\"children\",o]):\"number\"===typeof o&&r.textContent!==\"\"+o&&(t=[\"children\",\"\"+o]):u.hasOwnProperty(c)&&null!=o&&\"onScroll\"===c&&Cr(\"scroll\",r));switch(n){case\"input\":J(r),rt(r,s,!0);break;case\"textarea\":J(r),lt(r);break;case\"select\":case\"option\":break;default:\"function\"===typeof s.onClick&&(r.onclick=Mr)}r=t,e.updateQueue=r,null!==r&&(e.flags|=4)}else{switch(c=9===o.nodeType?o:o.ownerDocument,t===ht&&(t=pt(n)),t===ht?\"script\"===n?((t=c.createElement(\"div\")).innerHTML=\"<script><\\/script>\",t=t.removeChild(t.firstChild)):\"string\"===typeof r.is?t=c.createElement(n,{is:r.is}):(t=c.createElement(n),\"select\"===n&&(c=t,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):t=c.createElementNS(t,n),t[Yr]=e,t[Jr]=r,Ka(t,e),e.stateNode=t,c=St(n,r),n){case\"dialog\":Cr(\"cancel\",t),Cr(\"close\",t),o=r;break;case\"iframe\":case\"object\":case\"embed\":Cr(\"load\",t),o=r;break;case\"video\":case\"audio\":for(o=0;o<Tr.length;o++)Cr(Tr[o],t);o=r;break;case\"source\":Cr(\"error\",t),o=r;break;case\"img\":case\"image\":case\"link\":Cr(\"error\",t),Cr(\"load\",t),o=r;break;case\"details\":Cr(\"toggle\",t),o=r;break;case\"input\":tt(t,r),o=Z(t,r),Cr(\"invalid\",t);break;case\"option\":o=ot(t,r);break;case\"select\":t._wrapperState={wasMultiple:!!r.multiple},o=i({},r,{value:void 0}),Cr(\"invalid\",t);break;case\"textarea\":ut(t,r),o=st(t,r),Cr(\"invalid\",t);break;default:o=r}It(n,o);var l=o;for(s in l)if(l.hasOwnProperty(s)){var h=l[s];\"style\"===s?Et(t,h):\"dangerouslySetInnerHTML\"===s?null!=(h=h?h.__html:void 0)&&gt(t,h):\"children\"===s?\"string\"===typeof h?(\"textarea\"!==n||\"\"!==h)&&mt(t,h):\"number\"===typeof h&&mt(t,\"\"+h):\"suppressContentEditableWarning\"!==s&&\"suppressHydrationWarning\"!==s&&\"autoFocus\"!==s&&(u.hasOwnProperty(s)?null!=h&&\"onScroll\"===s&&Cr(\"scroll\",t):null!=h&&_(t,s,h,c))}switch(n){case\"input\":J(t),rt(t,r,!1);break;case\"textarea\":J(t),lt(t);break;case\"option\":null!=r.value&&t.setAttribute(\"value\",\"\"+Q(r.value));break;case\"select\":t.multiple=!!r.multiple,null!=(s=r.value)?at(t,!!r.multiple,s,!1):null!=r.defaultValue&&at(t,!!r.multiple,r.defaultValue,!0);break;default:\"function\"===typeof o.onClick&&(t.onclick=Mr)}Vr(n,r)&&(e.flags|=4)}null!==e.ref&&(e.flags|=128)}return null;case 6:if(t&&null!=e.stateNode)Ga(0,e,t.memoizedProps,r);else{if(\"string\"!==typeof r&&null===e.stateNode)throw Error(a(166));n=Ao(No.current),Ao(Co.current),Ho(e)?(r=e.stateNode,n=e.memoizedProps,r[Yr]=e,r.nodeValue!==n&&(e.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Yr]=e,e.stateNode=r)}return null;case 13:return si(Do),r=e.memoizedState,0!==(64&e.flags)?(e.lanes=n,e):(r=null!==r,n=!1,null===t?void 0!==e.memoizedProps.fallback&&Ho(e):n=null!==t.memoizedState,r&&!n&&0!==(2&e.mode)&&(null===t&&!0!==e.memoizedProps.unstable_avoidThisFallback||0!==(1&Do.current)?0===Ds&&(Ds=3):(0!==Ds&&3!==Ds||(Ds=4),null===As||0===(134217727&Fs)&&0===(134217727&Us)||vu(As,Rs))),(r||n)&&(e.flags|=4),null);case 4:return Ro(),null===t&&Nr(e.stateNode.containerInfo),null;case 10:return to(e),null;case 17:return di(e.type)&&vi(),null;case 19:if(si(Do),null===(r=e.memoizedState))return null;if(s=0!==(64&e.flags),null===(c=r.rendering))if(s)rs(r,!1);else{if(0!==Ds||null!==t&&0!==(64&t.flags))for(t=e.child;null!==t;){if(null!==(c=Lo(t))){for(e.flags|=64,rs(r,!1),null!==(s=c.updateQueue)&&(e.updateQueue=s,e.flags|=4),null===r.lastEffect&&(e.firstEffect=null),e.lastEffect=r.lastEffect,r=n,n=e.child;null!==n;)t=r,(s=n).flags&=2,s.nextEffect=null,s.firstEffect=null,s.lastEffect=null,null===(c=s.alternate)?(s.childLanes=0,s.lanes=t,s.child=null,s.memoizedProps=null,s.memoizedState=null,s.updateQueue=null,s.dependencies=null,s.stateNode=null):(s.childLanes=c.childLanes,s.lanes=c.lanes,s.child=c.child,s.memoizedProps=c.memoizedProps,s.memoizedState=c.memoizedState,s.updateQueue=c.updateQueue,s.type=c.type,t=c.dependencies,s.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext}),n=n.sibling;return ui(Do,1&Do.current|2),e.child}t=t.sibling}null!==r.tail&&Vi()>zs&&(e.flags|=64,s=!0,rs(r,!1),e.lanes=33554432)}else{if(!s)if(null!==(t=Lo(c))){if(e.flags|=64,s=!0,null!==(n=t.updateQueue)&&(e.updateQueue=n,e.flags|=4),rs(r,!0),null===r.tail&&\"hidden\"===r.tailMode&&!c.alternate&&!Uo)return null!==(e=e.lastEffect=r.lastEffect)&&(e.nextEffect=null),null}else 2*Vi()-r.renderingStartTime>zs&&1073741824!==n&&(e.flags|=64,s=!0,rs(r,!1),e.lanes=33554432);r.isBackwards?(c.sibling=e.child,e.child=c):(null!==(n=r.last)?n.sibling=c:e.child=c,r.last=c)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=e.lastEffect,r.renderingStartTime=Vi(),n.sibling=null,e=Do.current,ui(Do,s?1&e|2:1&e),n):null;case 23:case 24:return _u(),null!==t&&null!==t.memoizedState!==(null!==e.memoizedState)&&\"unstable-defer-without-hiding\"!==r.mode&&(e.flags|=4),null}throw Error(a(156,e.tag))}function os(t){switch(t.tag){case 1:di(t.type)&&vi();var e=t.flags;return 4096&e?(t.flags=-4097&e|64,t):null;case 3:if(Ro(),si(hi),si(li),Go(),0!==(64&(e=t.flags)))throw Error(a(285));return t.flags=-4097&e|64,t;case 5:return xo(t),null;case 13:return si(Do),4096&(e=t.flags)?(t.flags=-4097&e|64,t):null;case 19:return si(Do),null;case 4:return Ro(),null;case 10:return to(t),null;case 23:case 24:return _u(),null;default:return null}}function as(t,e){try{var n=\"\",r=e;do{n+=W(r),r=r.return}while(r);var i=n}catch(o){i=\"\\nError generating stack: \"+o.message+\"\\n\"+o.stack}return{value:t,source:e,stack:i}}function ss(t,e){try{console.error(e.value)}catch(n){setTimeout((function(){throw n}))}}Ka=function(t,e){for(var n=e.child;null!==n;){if(5===n.tag||6===n.tag)t.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Wa=function(t,e,n,r){var o=t.memoizedProps;if(o!==r){t=e.stateNode,Ao(Co.current);var a,s=null;switch(n){case\"input\":o=Z(t,o),r=Z(t,r),s=[];break;case\"option\":o=ot(t,o),r=ot(t,r),s=[];break;case\"select\":o=i({},o,{value:void 0}),r=i({},r,{value:void 0}),s=[];break;case\"textarea\":o=st(t,o),r=st(t,r),s=[];break;default:\"function\"!==typeof o.onClick&&\"function\"===typeof r.onClick&&(t.onclick=Mr)}for(h in It(n,r),n=null,o)if(!r.hasOwnProperty(h)&&o.hasOwnProperty(h)&&null!=o[h])if(\"style\"===h){var c=o[h];for(a in c)c.hasOwnProperty(a)&&(n||(n={}),n[a]=\"\")}else\"dangerouslySetInnerHTML\"!==h&&\"children\"!==h&&\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(u.hasOwnProperty(h)?s||(s=[]):(s=s||[]).push(h,null));for(h in r){var l=r[h];if(c=null!=o?o[h]:void 0,r.hasOwnProperty(h)&&l!==c&&(null!=l||null!=c))if(\"style\"===h)if(c){for(a in c)!c.hasOwnProperty(a)||l&&l.hasOwnProperty(a)||(n||(n={}),n[a]=\"\");for(a in l)l.hasOwnProperty(a)&&c[a]!==l[a]&&(n||(n={}),n[a]=l[a])}else n||(s||(s=[]),s.push(h,n)),n=l;else\"dangerouslySetInnerHTML\"===h?(l=l?l.__html:void 0,c=c?c.__html:void 0,null!=l&&c!==l&&(s=s||[]).push(h,l)):\"children\"===h?\"string\"!==typeof l&&\"number\"!==typeof l||(s=s||[]).push(h,\"\"+l):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&(u.hasOwnProperty(h)?(null!=l&&\"onScroll\"===h&&Cr(\"scroll\",t),s||c===l||(s=[])):\"object\"===typeof l&&null!==l&&l.$$typeof===D?l.toString():(s=s||[]).push(h,l))}n&&(s=s||[]).push(\"style\",n);var h=s;(e.updateQueue=h)&&(e.flags|=4)}},Ga=function(t,e,n,r){n!==r&&(e.flags|=4)};var us=\"function\"===typeof WeakMap?WeakMap:Map;function cs(t,e,n){(n=so(-1,n)).tag=3,n.payload={element:null};var r=e.value;return n.callback=function(){Gs||(Gs=!0,Qs=r),ss(0,e)},n}function ls(t,e,n){(n=so(-1,n)).tag=3;var r=t.type.getDerivedStateFromError;if(\"function\"===typeof r){var i=e.value;n.payload=function(){return ss(0,e),r(i)}}var o=t.stateNode;return null!==o&&\"function\"===typeof o.componentDidCatch&&(n.callback=function(){\"function\"!==typeof r&&(null===Ys?Ys=new Set([this]):Ys.add(this),ss(0,e));var t=e.stack;this.componentDidCatch(e.value,{componentStack:null!==t?t:\"\"})}),n}var hs=\"function\"===typeof WeakSet?WeakSet:Set;function fs(t){var e=t.ref;if(null!==e)if(\"function\"===typeof e)try{e(null)}catch(n){Mu(t,n)}else e.current=null}function ps(t,e){switch(e.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&e.flags&&null!==t){var n=t.memoizedProps,r=t.memoizedState;e=(t=e.stateNode).getSnapshotBeforeUpdate(e.elementType===e.type?n:Qi(e.type,n),r),t.__reactInternalSnapshotBeforeUpdate=e}return;case 3:return void(256&e.flags&&Hr(e.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(a(163))}function ds(t,e,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(e=null!==(e=n.updateQueue)?e.lastEffect:null)){t=e=e.next;do{if(3===(3&t.tag)){var r=t.create;t.destroy=r()}t=t.next}while(t!==e)}if(null!==(e=null!==(e=n.updateQueue)?e.lastEffect:null)){t=e=e.next;do{var i=t;r=i.next,0!==(4&(i=i.tag))&&0!==(1&i)&&(xu(n,t),ju(n,t)),t=r}while(t!==e)}return;case 1:return t=n.stateNode,4&n.flags&&(null===e?t.componentDidMount():(r=n.elementType===n.type?e.memoizedProps:Qi(n.type,e.memoizedProps),t.componentDidUpdate(r,e.memoizedState,t.__reactInternalSnapshotBeforeUpdate))),void(null!==(e=n.updateQueue)&&ho(n,e,t));case 3:if(null!==(e=n.updateQueue)){if(t=null,null!==n.child)switch(n.child.tag){case 5:t=n.child.stateNode;break;case 1:t=n.child.stateNode}ho(n,e,t)}return;case 5:return t=n.stateNode,void(null===e&&4&n.flags&&Vr(n.type,n.memoizedProps)&&t.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Ee(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(a(163))}function vs(t,e){for(var n=t;;){if(5===n.tag){var r=n.stateNode;if(e)\"function\"===typeof(r=r.style).setProperty?r.setProperty(\"display\",\"none\",\"important\"):r.display=\"none\";else{r=n.stateNode;var i=n.memoizedProps.style;i=void 0!==i&&null!==i&&i.hasOwnProperty(\"display\")?i.display:null,r.style.display=wt(\"display\",i)}}else if(6===n.tag)n.stateNode.nodeValue=e?\"\":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===t)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function ys(t,e){if(wi&&\"function\"===typeof wi.onCommitFiberUnmount)try{wi.onCommitFiberUnmount(_i,e)}catch(o){}switch(e.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(t=e.updateQueue)&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n,i=r.destroy;if(r=r.tag,void 0!==i)if(0!==(4&r))xu(e,n);else{r=e;try{i()}catch(o){Mu(r,o)}}n=n.next}while(n!==t)}break;case 1:if(fs(e),\"function\"===typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(o){Mu(e,o)}break;case 5:fs(e);break;case 4:Es(t,e)}}function gs(t){t.alternate=null,t.child=null,t.dependencies=null,t.firstEffect=null,t.lastEffect=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.return=null,t.updateQueue=null}function ms(t){return 5===t.tag||3===t.tag||4===t.tag}function bs(t){t:{for(var e=t.return;null!==e;){if(ms(e))break t;e=e.return}throw Error(a(160))}var n=e;switch(e=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:e=e.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.flags&&(mt(e,\"\"),n.flags&=-17);t:e:for(n=t;;){for(;null===n.sibling;){if(null===n.return||ms(n.return)){n=null;break t}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue e;if(null===n.child||4===n.tag)continue e;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break t}}r?_s(t,n,e):ws(t,n,e)}function _s(t,e,n){var r=t.tag,i=5===r||6===r;if(i)t=i?t.stateNode:t.stateNode.instance,e?8===n.nodeType?n.parentNode.insertBefore(t,e):n.insertBefore(t,e):(8===n.nodeType?(e=n.parentNode).insertBefore(t,n):(e=n).appendChild(t),null!==(n=n._reactRootContainer)&&void 0!==n||null!==e.onclick||(e.onclick=Mr));else if(4!==r&&null!==(t=t.child))for(_s(t,e,n),t=t.sibling;null!==t;)_s(t,e,n),t=t.sibling}function ws(t,e,n){var r=t.tag,i=5===r||6===r;if(i)t=i?t.stateNode:t.stateNode.instance,e?n.insertBefore(t,e):n.appendChild(t);else if(4!==r&&null!==(t=t.child))for(ws(t,e,n),t=t.sibling;null!==t;)ws(t,e,n),t=t.sibling}function Es(t,e){for(var n,r,i=e,o=!1;;){if(!o){o=i.return;t:for(;;){if(null===o)throw Error(a(160));switch(n=o.stateNode,o.tag){case 5:r=!1;break t;case 3:case 4:n=n.containerInfo,r=!0;break t}o=o.return}o=!0}if(5===i.tag||6===i.tag){t:for(var s=t,u=i,c=u;;)if(ys(s,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break t;for(;null===c.sibling;){if(null===c.return||c.return===u)break t;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(s=n,u=i.stateNode,8===s.nodeType?s.parentNode.removeChild(u):s.removeChild(u)):n.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){n=i.stateNode.containerInfo,r=!0,i.child.return=i,i=i.child;continue}}else if(ys(t,i),null!==i.child){i.child.return=i,i=i.child;continue}if(i===e)break;for(;null===i.sibling;){if(null===i.return||i.return===e)return;4===(i=i.return).tag&&(o=!1)}i.sibling.return=i.return,i=i.sibling}}function Ts(t,e){switch(e.tag){case 0:case 11:case 14:case 15:case 22:var n=e.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3===(3&r.tag)&&(t=r.destroy,r.destroy=void 0,void 0!==t&&t()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=e.stateNode)){r=e.memoizedProps;var i=null!==t?t.memoizedProps:r;t=e.type;var o=e.updateQueue;if(e.updateQueue=null,null!==o){for(n[Jr]=r,\"input\"===t&&\"radio\"===r.type&&null!=r.name&&et(n,r),St(t,i),e=St(t,r),i=0;i<o.length;i+=2){var s=o[i],u=o[i+1];\"style\"===s?Et(n,u):\"dangerouslySetInnerHTML\"===s?gt(n,u):\"children\"===s?mt(n,u):_(n,s,u,e)}switch(t){case\"input\":nt(n,r);break;case\"textarea\":ct(n,r);break;case\"select\":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(o=r.value)?at(n,!!r.multiple,o,!1):t!==!!r.multiple&&(null!=r.defaultValue?at(n,!!r.multiple,r.defaultValue,!0):at(n,!!r.multiple,r.multiple?[]:\"\",!1))}}}return;case 6:if(null===e.stateNode)throw Error(a(162));return void(e.stateNode.nodeValue=e.memoizedProps);case 3:return void((n=e.stateNode).hydrate&&(n.hydrate=!1,Ee(n.containerInfo)));case 12:return;case 13:return null!==e.memoizedState&&(Bs=Vi(),vs(e.child,!0)),void Is(e);case 19:return void Is(e);case 17:return;case 23:case 24:return void vs(e,null!==e.memoizedState)}throw Error(a(163))}function Is(t){var e=t.updateQueue;if(null!==e){t.updateQueue=null;var n=t.stateNode;null===n&&(n=t.stateNode=new hs),e.forEach((function(e){var r=Uu.bind(null,t,e);n.has(e)||(n.add(e),e.then(r,r))}))}}function Ss(t,e){return null!==t&&(null===(t=t.memoizedState)||null!==t.dehydrated)&&(null!==(e=e.memoizedState)&&null===e.dehydrated)}var Os=Math.ceil,Cs=w.ReactCurrentDispatcher,ks=w.ReactCurrentOwner,Ns=0,As=null,Ps=null,Rs=0,js=0,xs=ai(0),Ds=0,Ls=null,Ms=0,Fs=0,Us=0,Vs=0,qs=null,Bs=0,zs=1/0;function Hs(){zs=Vi()+500}var Ks,Ws=null,Gs=!1,Qs=null,Ys=null,Js=!1,Xs=null,$s=90,Zs=[],tu=[],eu=null,nu=0,ru=null,iu=-1,ou=0,au=0,su=null,uu=!1;function cu(){return 0!==(48&Ns)?Vi():-1!==iu?iu:iu=Vi()}function lu(t){if(0===(2&(t=t.mode)))return 1;if(0===(4&t))return 99===qi()?1:2;if(0===ou&&(ou=Ms),0!==Gi.transition){0!==au&&(au=null!==qs?qs.pendingLanes:0),t=ou;var e=4186112&~au;return 0===(e&=-e)&&(0===(e=(t=4186112&~t)&-t)&&(e=8192)),e}return t=qi(),0!==(4&Ns)&&98===t?t=Ve(12,ou):t=Ve(t=function(t){switch(t){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(t),ou),t}function hu(t,e,n){if(50<nu)throw nu=0,ru=null,Error(a(185));if(null===(t=fu(t,e)))return null;ze(t,e,n),t===As&&(Us|=e,4===Ds&&vu(t,Rs));var r=qi();1===e?0!==(8&Ns)&&0===(48&Ns)?yu(t):(pu(t,n),0===Ns&&(Hs(),Ki())):(0===(4&Ns)||98!==r&&99!==r||(null===eu?eu=new Set([t]):eu.add(t)),pu(t,n)),qs=t}function fu(t,e){t.lanes|=e;var n=t.alternate;for(null!==n&&(n.lanes|=e),n=t,t=t.return;null!==t;)t.childLanes|=e,null!==(n=t.alternate)&&(n.childLanes|=e),n=t,t=t.return;return 3===n.tag?n.stateNode:null}function pu(t,e){for(var n=t.callbackNode,r=t.suspendedLanes,i=t.pingedLanes,o=t.expirationTimes,s=t.pendingLanes;0<s;){var u=31-He(s),c=1<<u,l=o[u];if(-1===l){if(0===(c&r)||0!==(c&i)){l=e,Me(c);var h=Le;o[u]=10<=h?l+250:6<=h?l+5e3:-1}}else l<=e&&(t.expiredLanes|=c);s&=~c}if(r=Fe(t,t===As?Rs:0),e=Le,0===r)null!==n&&(n!==xi&&Ii(n),t.callbackNode=null,t.callbackPriority=0);else{if(null!==n){if(t.callbackPriority===e)return;n!==xi&&Ii(n)}15===e?(n=yu.bind(null,t),null===Li?(Li=[n],Mi=Ti(Ni,Wi)):Li.push(n),n=xi):14===e?n=Hi(99,yu.bind(null,t)):n=Hi(n=function(t){switch(t){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(a(358,t))}}(e),du.bind(null,t)),t.callbackPriority=e,t.callbackNode=n}}function du(t){if(iu=-1,au=ou=0,0!==(48&Ns))throw Error(a(327));var e=t.callbackNode;if(Ru()&&t.callbackNode!==e)return null;var n=Fe(t,t===As?Rs:0);if(0===n)return null;var r=n,i=Ns;Ns|=16;var o=Tu();for(As===t&&Rs===r||(Hs(),wu(t,r));;)try{Ou();break}catch(u){Eu(t,u)}if(Zi(),Cs.current=o,Ns=i,null!==Ps?r=0:(As=null,Rs=0,r=Ds),0!==(Ms&Us))wu(t,0);else if(0!==r){if(2===r&&(Ns|=64,t.hydrate&&(t.hydrate=!1,Hr(t.containerInfo)),0!==(n=Ue(t))&&(r=Iu(t,n))),1===r)throw e=Ls,wu(t,0),vu(t,n),pu(t,Vi()),e;switch(t.finishedWork=t.current.alternate,t.finishedLanes=n,r){case 0:case 1:throw Error(a(345));case 2:Nu(t);break;case 3:if(vu(t,n),(62914560&n)===n&&10<(r=Bs+500-Vi())){if(0!==Fe(t,0))break;if(((i=t.suspendedLanes)&n)!==n){cu(),t.pingedLanes|=t.suspendedLanes&i;break}t.timeoutHandle=Br(Nu.bind(null,t),r);break}Nu(t);break;case 4:if(vu(t,n),(4186112&n)===n)break;for(r=t.eventTimes,i=-1;0<n;){var s=31-He(n);o=1<<s,(s=r[s])>i&&(i=s),n&=~o}if(n=i,10<(n=(120>(n=Vi()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Os(n/1960))-n)){t.timeoutHandle=Br(Nu.bind(null,t),n);break}Nu(t);break;case 5:Nu(t);break;default:throw Error(a(329))}}return pu(t,Vi()),t.callbackNode===e?du.bind(null,t):null}function vu(t,e){for(e&=~Vs,e&=~Us,t.suspendedLanes|=e,t.pingedLanes&=~e,t=t.expirationTimes;0<e;){var n=31-He(e),r=1<<n;t[n]=-1,e&=~r}}function yu(t){if(0!==(48&Ns))throw Error(a(327));if(Ru(),t===As&&0!==(t.expiredLanes&Rs)){var e=Rs,n=Iu(t,e);0!==(Ms&Us)&&(n=Iu(t,e=Fe(t,e)))}else n=Iu(t,e=Fe(t,0));if(0!==t.tag&&2===n&&(Ns|=64,t.hydrate&&(t.hydrate=!1,Hr(t.containerInfo)),0!==(e=Ue(t))&&(n=Iu(t,e))),1===n)throw n=Ls,wu(t,0),vu(t,e),pu(t,Vi()),n;return t.finishedWork=t.current.alternate,t.finishedLanes=e,Nu(t),pu(t,Vi()),null}function gu(t,e){var n=Ns;Ns|=1;try{return t(e)}finally{0===(Ns=n)&&(Hs(),Ki())}}function mu(t,e){var n=Ns;Ns&=-2,Ns|=8;try{return t(e)}finally{0===(Ns=n)&&(Hs(),Ki())}}function bu(t,e){ui(xs,js),js|=e,Ms|=e}function _u(){js=xs.current,si(xs)}function wu(t,e){t.finishedWork=null,t.finishedLanes=0;var n=t.timeoutHandle;if(-1!==n&&(t.timeoutHandle=-1,zr(n)),null!==Ps)for(n=Ps.return;null!==n;){var r=n;switch(r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&vi();break;case 3:Ro(),si(hi),si(li),Go();break;case 5:xo(r);break;case 4:Ro();break;case 13:case 19:si(Do);break;case 10:to(r);break;case 23:case 24:_u()}n=n.return}As=t,Ps=zu(t.current,null),Rs=js=Ms=e,Ds=0,Ls=null,Vs=Us=Fs=0}function Eu(t,e){for(;;){var n=Ps;try{if(Zi(),Qo.current=Na,ta){for(var r=Xo.memoizedState;null!==r;){var i=r.queue;null!==i&&(i.pending=null),r=r.next}ta=!1}if(Jo=0,Zo=$o=Xo=null,ea=!1,ks.current=null,null===n||null===n.return){Ds=1,Ls=e,Ps=null;break}t:{var o=t,a=n.return,s=n,u=e;if(e=Rs,s.flags|=2048,s.firstEffect=s.lastEffect=null,null!==u&&\"object\"===typeof u&&\"function\"===typeof u.then){var c=u;if(0===(2&s.mode)){var l=s.alternate;l?(s.updateQueue=l.updateQueue,s.memoizedState=l.memoizedState,s.lanes=l.lanes):(s.updateQueue=null,s.memoizedState=null)}var h=0!==(1&Do.current),f=a;do{var p;if(p=13===f.tag){var d=f.memoizedState;if(null!==d)p=null!==d.dehydrated;else{var v=f.memoizedProps;p=void 0!==v.fallback&&(!0!==v.unstable_avoidThisFallback||!h)}}if(p){var y=f.updateQueue;if(null===y){var g=new Set;g.add(c),f.updateQueue=g}else y.add(c);if(0===(2&f.mode)){if(f.flags|=64,s.flags|=16384,s.flags&=-2981,1===s.tag)if(null===s.alternate)s.tag=17;else{var m=so(-1,1);m.tag=2,uo(s,m)}s.lanes|=1;break t}u=void 0,s=e;var b=o.pingCache;if(null===b?(b=o.pingCache=new us,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(s)){u.add(s);var _=Fu.bind(null,o,c,s);c.then(_,_)}f.flags|=4096,f.lanes=e;break t}f=f.return}while(null!==f);u=Error((G(s.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==Ds&&(Ds=2),u=as(u,s),f=a;do{switch(f.tag){case 3:o=u,f.flags|=4096,e&=-e,f.lanes|=e,co(f,cs(0,o,e));break t;case 1:o=u;var w=f.type,E=f.stateNode;if(0===(64&f.flags)&&(\"function\"===typeof w.getDerivedStateFromError||null!==E&&\"function\"===typeof E.componentDidCatch&&(null===Ys||!Ys.has(E)))){f.flags|=4096,e&=-e,f.lanes|=e,co(f,ls(f,o,e));break t}}f=f.return}while(null!==f)}ku(n)}catch(T){e=T,Ps===n&&null!==n&&(Ps=n=n.return);continue}break}}function Tu(){var t=Cs.current;return Cs.current=Na,null===t?Na:t}function Iu(t,e){var n=Ns;Ns|=16;var r=Tu();for(As===t&&Rs===e||wu(t,e);;)try{Su();break}catch(i){Eu(t,i)}if(Zi(),Ns=n,Cs.current=r,null!==Ps)throw Error(a(261));return As=null,Rs=0,Ds}function Su(){for(;null!==Ps;)Cu(Ps)}function Ou(){for(;null!==Ps&&!Si();)Cu(Ps)}function Cu(t){var e=Ks(t.alternate,t,js);t.memoizedProps=t.pendingProps,null===e?ku(t):Ps=e,ks.current=null}function ku(t){var e=t;do{var n=e.alternate;if(t=e.return,0===(2048&e.flags)){if(null!==(n=is(n,e,js)))return void(Ps=n);if(24!==(n=e).tag&&23!==n.tag||null===n.memoizedState||0!==(1073741824&js)||0===(4&n.mode)){for(var r=0,i=n.child;null!==i;)r|=i.lanes|i.childLanes,i=i.sibling;n.childLanes=r}null!==t&&0===(2048&t.flags)&&(null===t.firstEffect&&(t.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==t.lastEffect&&(t.lastEffect.nextEffect=e.firstEffect),t.lastEffect=e.lastEffect),1<e.flags&&(null!==t.lastEffect?t.lastEffect.nextEffect=e:t.firstEffect=e,t.lastEffect=e))}else{if(null!==(n=os(e)))return n.flags&=2047,void(Ps=n);null!==t&&(t.firstEffect=t.lastEffect=null,t.flags|=2048)}if(null!==(e=e.sibling))return void(Ps=e);Ps=e=t}while(null!==e);0===Ds&&(Ds=5)}function Nu(t){var e=qi();return zi(99,Au.bind(null,t,e)),null}function Au(t,e){do{Ru()}while(null!==Xs);if(0!==(48&Ns))throw Error(a(327));var n=t.finishedWork;if(null===n)return null;if(t.finishedWork=null,t.finishedLanes=0,n===t.current)throw Error(a(177));t.callbackNode=null;var r=n.lanes|n.childLanes,i=r,o=t.pendingLanes&~i;t.pendingLanes=i,t.suspendedLanes=0,t.pingedLanes=0,t.expiredLanes&=i,t.mutableReadLanes&=i,t.entangledLanes&=i,i=t.entanglements;for(var s=t.eventTimes,u=t.expirationTimes;0<o;){var c=31-He(o),l=1<<c;i[c]=0,s[c]=-1,u[c]=-1,o&=~l}if(null!==eu&&0===(24&r)&&eu.has(t)&&eu.delete(t),t===As&&(Ps=As=null,Rs=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(i=Ns,Ns|=32,ks.current=null,Fr=Ye,dr(s=pr())){if(\"selectionStart\"in s)u={start:s.selectionStart,end:s.selectionEnd};else t:if(u=(u=s.ownerDocument)&&u.defaultView||window,(l=u.getSelection&&u.getSelection())&&0!==l.rangeCount){u=l.anchorNode,o=l.anchorOffset,c=l.focusNode,l=l.focusOffset;try{u.nodeType,c.nodeType}catch(O){u=null;break t}var h=0,f=-1,p=-1,d=0,v=0,y=s,g=null;e:for(;;){for(var m;y!==u||0!==o&&3!==y.nodeType||(f=h+o),y!==c||0!==l&&3!==y.nodeType||(p=h+l),3===y.nodeType&&(h+=y.nodeValue.length),null!==(m=y.firstChild);)g=y,y=m;for(;;){if(y===s)break e;if(g===u&&++d===o&&(f=h),g===c&&++v===l&&(p=h),null!==(m=y.nextSibling))break;g=(y=g).parentNode}y=m}u=-1===f||-1===p?null:{start:f,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Ur={focusedElem:s,selectionRange:u},Ye=!1,su=null,uu=!1,Ws=r;do{try{Pu()}catch(O){if(null===Ws)throw Error(a(330));Mu(Ws,O),Ws=Ws.nextEffect}}while(null!==Ws);su=null,Ws=r;do{try{for(s=t;null!==Ws;){var b=Ws.flags;if(16&b&&mt(Ws.stateNode,\"\"),128&b){var _=Ws.alternate;if(null!==_){var w=_.ref;null!==w&&(\"function\"===typeof w?w(null):w.current=null)}}switch(1038&b){case 2:bs(Ws),Ws.flags&=-3;break;case 6:bs(Ws),Ws.flags&=-3,Ts(Ws.alternate,Ws);break;case 1024:Ws.flags&=-1025;break;case 1028:Ws.flags&=-1025,Ts(Ws.alternate,Ws);break;case 4:Ts(Ws.alternate,Ws);break;case 8:Es(s,u=Ws);var E=u.alternate;gs(u),null!==E&&gs(E)}Ws=Ws.nextEffect}}catch(O){if(null===Ws)throw Error(a(330));Mu(Ws,O),Ws=Ws.nextEffect}}while(null!==Ws);if(w=Ur,_=pr(),b=w.focusedElem,s=w.selectionRange,_!==b&&b&&b.ownerDocument&&fr(b.ownerDocument.documentElement,b)){null!==s&&dr(b)&&(_=s.start,void 0===(w=s.end)&&(w=_),\"selectionStart\"in b?(b.selectionStart=_,b.selectionEnd=Math.min(w,b.value.length)):(w=(_=b.ownerDocument||document)&&_.defaultView||window).getSelection&&(w=w.getSelection(),u=b.textContent.length,E=Math.min(s.start,u),s=void 0===s.end?E:Math.min(s.end,u),!w.extend&&E>s&&(u=s,s=E,E=u),u=hr(b,E),o=hr(b,s),u&&o&&(1!==w.rangeCount||w.anchorNode!==u.node||w.anchorOffset!==u.offset||w.focusNode!==o.node||w.focusOffset!==o.offset)&&((_=_.createRange()).setStart(u.node,u.offset),w.removeAllRanges(),E>s?(w.addRange(_),w.extend(o.node,o.offset)):(_.setEnd(o.node,o.offset),w.addRange(_))))),_=[];for(w=b;w=w.parentNode;)1===w.nodeType&&_.push({element:w,left:w.scrollLeft,top:w.scrollTop});for(\"function\"===typeof b.focus&&b.focus(),b=0;b<_.length;b++)(w=_[b]).element.scrollLeft=w.left,w.element.scrollTop=w.top}Ye=!!Fr,Ur=Fr=null,t.current=n,Ws=r;do{try{for(b=t;null!==Ws;){var T=Ws.flags;if(36&T&&ds(b,Ws.alternate,Ws),128&T){_=void 0;var I=Ws.ref;if(null!==I){var S=Ws.stateNode;switch(Ws.tag){case 5:_=S;break;default:_=S}\"function\"===typeof I?I(_):I.current=_}}Ws=Ws.nextEffect}}catch(O){if(null===Ws)throw Error(a(330));Mu(Ws,O),Ws=Ws.nextEffect}}while(null!==Ws);Ws=null,Di(),Ns=i}else t.current=n;if(Js)Js=!1,Xs=t,$s=e;else for(Ws=r;null!==Ws;)e=Ws.nextEffect,Ws.nextEffect=null,8&Ws.flags&&((T=Ws).sibling=null,T.stateNode=null),Ws=e;if(0===(r=t.pendingLanes)&&(Ys=null),1===r?t===ru?nu++:(nu=0,ru=t):nu=0,n=n.stateNode,wi&&\"function\"===typeof wi.onCommitFiberRoot)try{wi.onCommitFiberRoot(_i,n,void 0,64===(64&n.current.flags))}catch(O){}if(pu(t,Vi()),Gs)throw Gs=!1,t=Qs,Qs=null,t;return 0!==(8&Ns)||Ki(),null}function Pu(){for(;null!==Ws;){var t=Ws.alternate;uu||null===su||(0!==(8&Ws.flags)?te(Ws,su)&&(uu=!0):13===Ws.tag&&Ss(t,Ws)&&te(Ws,su)&&(uu=!0));var e=Ws.flags;0!==(256&e)&&ps(t,Ws),0===(512&e)||Js||(Js=!0,Hi(97,(function(){return Ru(),null}))),Ws=Ws.nextEffect}}function Ru(){if(90!==$s){var t=97<$s?97:$s;return $s=90,zi(t,Du)}return!1}function ju(t,e){Zs.push(e,t),Js||(Js=!0,Hi(97,(function(){return Ru(),null})))}function xu(t,e){tu.push(e,t),Js||(Js=!0,Hi(97,(function(){return Ru(),null})))}function Du(){if(null===Xs)return!1;var t=Xs;if(Xs=null,0!==(48&Ns))throw Error(a(331));var e=Ns;Ns|=32;var n=tu;tu=[];for(var r=0;r<n.length;r+=2){var i=n[r],o=n[r+1],s=i.destroy;if(i.destroy=void 0,\"function\"===typeof s)try{s()}catch(c){if(null===o)throw Error(a(330));Mu(o,c)}}for(n=Zs,Zs=[],r=0;r<n.length;r+=2){i=n[r],o=n[r+1];try{var u=i.create;i.destroy=u()}catch(c){if(null===o)throw Error(a(330));Mu(o,c)}}for(u=t.current.firstEffect;null!==u;)t=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=t;return Ns=e,Ki(),!0}function Lu(t,e,n){uo(t,e=cs(0,e=as(n,e),1)),e=cu(),null!==(t=fu(t,1))&&(ze(t,1,e),pu(t,e))}function Mu(t,e){if(3===t.tag)Lu(t,t,e);else for(var n=t.return;null!==n;){if(3===n.tag){Lu(n,t,e);break}if(1===n.tag){var r=n.stateNode;if(\"function\"===typeof n.type.getDerivedStateFromError||\"function\"===typeof r.componentDidCatch&&(null===Ys||!Ys.has(r))){var i=ls(n,t=as(e,t),1);if(uo(n,i),i=cu(),null!==(n=fu(n,1)))ze(n,1,i),pu(n,i);else if(\"function\"===typeof r.componentDidCatch&&(null===Ys||!Ys.has(r)))try{r.componentDidCatch(e,t)}catch(o){}break}}n=n.return}}function Fu(t,e,n){var r=t.pingCache;null!==r&&r.delete(e),e=cu(),t.pingedLanes|=t.suspendedLanes&n,As===t&&(Rs&n)===n&&(4===Ds||3===Ds&&(62914560&Rs)===Rs&&500>Vi()-Bs?wu(t,0):Vs|=n),pu(t,e)}function Uu(t,e){var n=t.stateNode;null!==n&&n.delete(e),0===(e=0)&&(0===(2&(e=t.mode))?e=1:0===(4&e)?e=99===qi()?1:2:(0===ou&&(ou=Ms),0===(e=qe(62914560&~ou))&&(e=4194304))),n=cu(),null!==(t=fu(t,e))&&(ze(t,e,n),pu(t,n))}function Vu(t,e,n,r){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function qu(t,e,n,r){return new Vu(t,e,n,r)}function Bu(t){return!(!(t=t.prototype)||!t.isReactComponent)}function zu(t,e){var n=t.alternate;return null===n?((n=qu(t.tag,e,t.key,t.mode)).elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.type=t.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=t.childLanes,n.lanes=t.lanes,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function Hu(t,e,n,r,i,o){var s=2;if(r=t,\"function\"===typeof t)Bu(t)&&(s=1);else if(\"string\"===typeof t)s=5;else t:switch(t){case I:return Ku(n.children,i,o,e);case L:s=8,i|=16;break;case S:s=8,i|=1;break;case O:return(t=qu(12,n,e,8|i)).elementType=O,t.type=O,t.lanes=o,t;case A:return(t=qu(13,n,e,i)).type=A,t.elementType=A,t.lanes=o,t;case P:return(t=qu(19,n,e,i)).elementType=P,t.lanes=o,t;case M:return Wu(n,i,o,e);case F:return(t=qu(24,n,e,i)).elementType=F,t.lanes=o,t;default:if(\"object\"===typeof t&&null!==t)switch(t.$$typeof){case C:s=10;break t;case k:s=9;break t;case N:s=11;break t;case R:s=14;break t;case j:s=16,r=null;break t;case x:s=22;break t}throw Error(a(130,null==t?t:typeof t,\"\"))}return(e=qu(s,n,e,i)).elementType=t,e.type=r,e.lanes=o,e}function Ku(t,e,n,r){return(t=qu(7,t,r,e)).lanes=n,t}function Wu(t,e,n,r){return(t=qu(23,t,r,e)).elementType=M,t.lanes=n,t}function Gu(t,e,n){return(t=qu(6,t,null,e)).lanes=n,t}function Qu(t,e,n){return(e=qu(4,null!==t.children?t.children:[],t.key,e)).lanes=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function Yu(t,e,n){this.tag=e,this.containerInfo=t,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Be(0),this.expirationTimes=Be(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Be(0),this.mutableSourceEagerHydrationData=null}function Ju(t,e,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:T,key:null==r?null:\"\"+r,children:t,containerInfo:e,implementation:n}}function Xu(t,e,n,r){var i=e.current,o=cu(),s=lu(i);t:if(n){e:{if(Jt(n=n._reactInternals)!==n||1!==n.tag)throw Error(a(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break e;case 1:if(di(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break e}}u=u.return}while(null!==u);throw Error(a(171))}if(1===n.tag){var c=n.type;if(di(c)){n=gi(n,c,u);break t}}n=u}else n=ci;return null===e.context?e.context=n:e.pendingContext=n,(e=so(o,s)).payload={element:t},null!==(r=void 0===r?null:r)&&(e.callback=r),uo(i,e),hu(i,s,o),s}function $u(t){if(!(t=t.current).child)return null;switch(t.child.tag){case 5:default:return t.child.stateNode}}function Zu(t,e){if(null!==(t=t.memoizedState)&&null!==t.dehydrated){var n=t.retryLane;t.retryLane=0!==n&&n<e?n:e}}function tc(t,e){Zu(t,e),(t=t.alternate)&&Zu(t,e)}function ec(t,e,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Yu(t,e,null!=n&&!0===n.hydrate),e=qu(3,null,null,2===e?7:1===e?3:0),n.current=e,e.stateNode=n,oo(e),t[Xr]=n.current,Nr(8===t.nodeType?t.parentNode:t),r)for(t=0;t<r.length;t++){var i=(e=r[t])._getVersion;i=i(e._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[e,i]:n.mutableSourceEagerHydrationData.push(e,i)}this._internalRoot=n}function nc(t){return!(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType&&(8!==t.nodeType||\" react-mount-point-unstable \"!==t.nodeValue))}function rc(t,e,n,r,i){var o=n._reactRootContainer;if(o){var a=o._internalRoot;if(\"function\"===typeof i){var s=i;i=function(){var t=$u(a);s.call(t)}}Xu(e,a,t,i)}else{if(o=n._reactRootContainer=function(t,e){if(e||(e=!(!(e=t?9===t.nodeType?t.documentElement:t.firstChild:null)||1!==e.nodeType||!e.hasAttribute(\"data-reactroot\"))),!e)for(var n;n=t.lastChild;)t.removeChild(n);return new ec(t,0,e?{hydrate:!0}:void 0)}(n,r),a=o._internalRoot,\"function\"===typeof i){var u=i;i=function(){var t=$u(a);u.call(t)}}mu((function(){Xu(e,a,t,i)}))}return $u(a)}function ic(t,e){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nc(e))throw Error(a(200));return Ju(t,e,null,n)}Ks=function(t,e,n){var r=e.lanes;if(null!==t)if(t.memoizedProps!==e.pendingProps||hi.current)xa=!0;else{if(0===(n&r)){switch(xa=!1,e.tag){case 3:Ha(e),Ko();break;case 5:jo(e);break;case 1:di(e.type)&&mi(e);break;case 4:Po(e,e.stateNode.containerInfo);break;case 10:r=e.memoizedProps.value;var i=e.type._context;ui(Yi,i._currentValue),i._currentValue=r;break;case 13:if(null!==e.memoizedState)return 0!==(n&e.child.childLanes)?Ya(t,e,n):(ui(Do,1&Do.current),null!==(e=ns(t,e,n))?e.sibling:null);ui(Do,1&Do.current);break;case 19:if(r=0!==(n&e.childLanes),0!==(64&t.flags)){if(r)return es(t,e,n);e.flags|=64}if(null!==(i=e.memoizedState)&&(i.rendering=null,i.tail=null,i.lastEffect=null),ui(Do,Do.current),r)break;return null;case 23:case 24:return e.lanes=0,Ua(t,e,n)}return ns(t,e,n)}xa=0!==(16384&t.flags)}else xa=!1;switch(e.lanes=0,e.tag){case 2:if(r=e.type,null!==t&&(t.alternate=null,e.alternate=null,e.flags|=2),t=e.pendingProps,i=pi(e,li.current),no(e,n),i=ia(null,e,r,t,i,n),e.flags|=1,\"object\"===typeof i&&null!==i&&\"function\"===typeof i.render&&void 0===i.$$typeof){if(e.tag=1,e.memoizedState=null,e.updateQueue=null,di(r)){var o=!0;mi(e)}else o=!1;e.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,oo(e);var s=r.getDerivedStateFromProps;\"function\"===typeof s&&po(e,r,s,t),i.updater=vo,e.stateNode=i,i._reactInternals=e,bo(e,r,t,n),e=za(null,e,r,!0,o,n)}else e.tag=0,Da(null,e,i,n),e=e.child;return e;case 16:i=e.elementType;t:{switch(null!==t&&(t.alternate=null,e.alternate=null,e.flags|=2),t=e.pendingProps,i=(o=i._init)(i._payload),e.type=i,o=e.tag=function(t){if(\"function\"===typeof t)return Bu(t)?1:0;if(void 0!==t&&null!==t){if((t=t.$$typeof)===N)return 11;if(t===R)return 14}return 2}(i),t=Qi(i,t),o){case 0:e=qa(null,e,i,t,n);break t;case 1:e=Ba(null,e,i,t,n);break t;case 11:e=La(null,e,i,t,n);break t;case 14:e=Ma(null,e,i,Qi(i.type,t),r,n);break t}throw Error(a(306,i,\"\"))}return e;case 0:return r=e.type,i=e.pendingProps,qa(t,e,r,i=e.elementType===r?i:Qi(r,i),n);case 1:return r=e.type,i=e.pendingProps,Ba(t,e,r,i=e.elementType===r?i:Qi(r,i),n);case 3:if(Ha(e),r=e.updateQueue,null===t||null===r)throw Error(a(282));if(r=e.pendingProps,i=null!==(i=e.memoizedState)?i.element:null,ao(t,e),lo(e,r,null,n),(r=e.memoizedState.element)===i)Ko(),e=ns(t,e,n);else{if((o=(i=e.stateNode).hydrate)&&(Fo=Kr(e.stateNode.containerInfo.firstChild),Mo=e,o=Uo=!0),o){if(null!=(t=i.mutableSourceEagerHydrationData))for(i=0;i<t.length;i+=2)(o=t[i])._workInProgressVersionPrimary=t[i+1],Wo.push(o);for(n=So(e,null,r,n),e.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Da(t,e,r,n),Ko();e=e.child}return e;case 5:return jo(e),null===t&&Bo(e),r=e.type,i=e.pendingProps,o=null!==t?t.memoizedProps:null,s=i.children,qr(r,i)?s=null:null!==o&&qr(r,o)&&(e.flags|=16),Va(t,e),Da(t,e,s,n),e.child;case 6:return null===t&&Bo(e),null;case 13:return Ya(t,e,n);case 4:return Po(e,e.stateNode.containerInfo),r=e.pendingProps,null===t?e.child=Io(e,null,r,n):Da(t,e,r,n),e.child;case 11:return r=e.type,i=e.pendingProps,La(t,e,r,i=e.elementType===r?i:Qi(r,i),n);case 7:return Da(t,e,e.pendingProps,n),e.child;case 8:case 12:return Da(t,e,e.pendingProps.children,n),e.child;case 10:t:{r=e.type._context,i=e.pendingProps,s=e.memoizedProps,o=i.value;var u=e.type._context;if(ui(Yi,u._currentValue),u._currentValue=o,null!==s)if(u=s.value,0===(o=sr(u,o)?0:0|(\"function\"===typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(s.children===i.children&&!hi.current){e=ns(t,e,n);break t}}else for(null!==(u=e.child)&&(u.return=e);null!==u;){var c=u.dependencies;if(null!==c){s=u.child;for(var l=c.firstContext;null!==l;){if(l.context===r&&0!==(l.observedBits&o)){1===u.tag&&((l=so(-1,n&-n)).tag=2,uo(u,l)),u.lanes|=n,null!==(l=u.alternate)&&(l.lanes|=n),eo(u.return,n),c.lanes|=n;break}l=l.next}}else s=10===u.tag&&u.type===e.type?null:u.child;if(null!==s)s.return=u;else for(s=u;null!==s;){if(s===e){s=null;break}if(null!==(u=s.sibling)){u.return=s.return,s=u;break}s=s.return}u=s}Da(t,e,i.children,n),e=e.child}return e;case 9:return i=e.type,r=(o=e.pendingProps).children,no(e,n),r=r(i=ro(i,o.unstable_observedBits)),e.flags|=1,Da(t,e,r,n),e.child;case 14:return o=Qi(i=e.type,e.pendingProps),Ma(t,e,i,o=Qi(i.type,o),r,n);case 15:return Fa(t,e,e.type,e.pendingProps,r,n);case 17:return r=e.type,i=e.pendingProps,i=e.elementType===r?i:Qi(r,i),null!==t&&(t.alternate=null,e.alternate=null,e.flags|=2),e.tag=1,di(r)?(t=!0,mi(e)):t=!1,no(e,n),go(e,r,i),bo(e,r,i,n),za(null,e,r,!0,t,n);case 19:return es(t,e,n);case 23:case 24:return Ua(t,e,n)}throw Error(a(156,e.tag))},ec.prototype.render=function(t){Xu(t,this._internalRoot,null,null)},ec.prototype.unmount=function(){var t=this._internalRoot,e=t.containerInfo;Xu(null,t,null,(function(){e[Xr]=null}))},ee=function(t){13===t.tag&&(hu(t,4,cu()),tc(t,4))},ne=function(t){13===t.tag&&(hu(t,67108864,cu()),tc(t,67108864))},re=function(t){if(13===t.tag){var e=cu(),n=lu(t);hu(t,n,e),tc(t,n)}},ie=function(t,e){return e()},Ct=function(t,e,n){switch(e){case\"input\":if(nt(t,n),e=n.name,\"radio\"===n.type&&null!=e){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+e)+'][type=\"radio\"]'),e=0;e<n.length;e++){var r=n[e];if(r!==t&&r.form===t.form){var i=ni(r);if(!i)throw Error(a(90));X(r),nt(r,i)}}}break;case\"textarea\":ct(t,n);break;case\"select\":null!=(e=n.value)&&at(t,!!n.multiple,e,!1)}},jt=gu,xt=function(t,e,n,r,i){var o=Ns;Ns|=4;try{return zi(98,t.bind(null,e,n,r,i))}finally{0===(Ns=o)&&(Hs(),Ki())}},Dt=function(){0===(49&Ns)&&(function(){if(null!==eu){var t=eu;eu=null,t.forEach((function(t){t.expiredLanes|=24&t.pendingLanes,pu(t,Vi())}))}Ki()}(),Ru())},Lt=function(t,e){var n=Ns;Ns|=2;try{return t(e)}finally{0===(Ns=n)&&(Hs(),Ki())}};var oc={Events:[ti,ei,ni,Pt,Rt,Ru,{current:!1}]},ac={findFiberByHostInstance:Zr,bundleType:0,version:\"17.0.1\",rendererPackageName:\"react-dom\"},sc={bundleType:ac.bundleType,version:ac.version,rendererPackageName:ac.rendererPackageName,rendererConfig:ac.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return null===(t=Zt(t))?null:t.stateNode},findFiberByHostInstance:ac.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var uc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!uc.isDisabled&&uc.supportsFiber)try{_i=uc.inject(sc),wi=uc}catch(yt){}}e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=oc,e.createPortal=ic,e.findDOMNode=function(t){if(null==t)return null;if(1===t.nodeType)return t;var e=t._reactInternals;if(void 0===e){if(\"function\"===typeof t.render)throw Error(a(188));throw Error(a(268,Object.keys(t)))}return t=null===(t=Zt(e))?null:t.stateNode},e.flushSync=function(t,e){var n=Ns;if(0!==(48&n))return t(e);Ns|=1;try{if(t)return zi(99,t.bind(null,e))}finally{Ns=n,Ki()}},e.hydrate=function(t,e,n){if(!nc(e))throw Error(a(200));return rc(null,t,e,!0,n)},e.render=function(t,e,n){if(!nc(e))throw Error(a(200));return rc(null,t,e,!1,n)},e.unmountComponentAtNode=function(t){if(!nc(t))throw Error(a(40));return!!t._reactRootContainer&&(mu((function(){rc(null,null,t,!1,(function(){t._reactRootContainer=null,t[Xr]=null}))})),!0)},e.unstable_batchedUpdates=gu,e.unstable_createPortal=function(t,e){return ic(t,e,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},e.unstable_renderSubtreeIntoContainer=function(t,e,n,r){if(!nc(n))throw Error(a(200));if(null==t||void 0===t._reactInternals)throw Error(a(38));return rc(t,e,n,!1,r)},e.version=\"17.0.1\"},function(t,e,n){\"use strict\";t.exports=n(20)},function(t,e,n){\"use strict\";var r,i,o,a;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var s=performance;e.unstable_now=function(){return s.now()}}else{var u=Date,c=u.now();e.unstable_now=function(){return u.now()-c}}if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var l=null,h=null,f=function t(){if(null!==l)try{var n=e.unstable_now();l(!0,n),l=null}catch(r){throw setTimeout(t,0),r}};r=function(t){null!==l?setTimeout(r,0,t):(l=t,setTimeout(f,0))},i=function(t,e){h=setTimeout(t,e)},o=function(){clearTimeout(h)},e.unstable_shouldYield=function(){return!1},a=e.unstable_forceFrameRate=function(){}}else{var p=window.setTimeout,d=window.clearTimeout;if(\"undefined\"!==typeof console){var v=window.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\"),\"function\"!==typeof v&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var y=!1,g=null,m=-1,b=5,_=0;e.unstable_shouldYield=function(){return e.unstable_now()>=_},a=function(){},e.unstable_forceFrameRate=function(t){0>t||125<t?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):b=0<t?Math.floor(1e3/t):5};var w=new MessageChannel,E=w.port2;w.port1.onmessage=function(){if(null!==g){var t=e.unstable_now();_=t+b;try{g(!0,t)?E.postMessage(null):(y=!1,g=null)}catch(n){throw E.postMessage(null),n}}else y=!1},r=function(t){g=t,y||(y=!0,E.postMessage(null))},i=function(t,n){m=p((function(){t(e.unstable_now())}),n)},o=function(){d(m),m=-1}}function T(t,e){var n=t.length;t.push(e);t:for(;;){var r=n-1>>>1,i=t[r];if(!(void 0!==i&&0<O(i,e)))break t;t[r]=e,t[n]=i,n=r}}function I(t){return void 0===(t=t[0])?null:t}function S(t){var e=t[0];if(void 0!==e){var n=t.pop();if(n!==e){t[0]=n;t:for(var r=0,i=t.length;r<i;){var o=2*(r+1)-1,a=t[o],s=o+1,u=t[s];if(void 0!==a&&0>O(a,n))void 0!==u&&0>O(u,a)?(t[r]=u,t[s]=n,r=s):(t[r]=a,t[o]=n,r=o);else{if(!(void 0!==u&&0>O(u,n)))break t;t[r]=u,t[s]=n,r=s}}}return e}return null}function O(t,e){var n=t.sortIndex-e.sortIndex;return 0!==n?n:t.id-e.id}var C=[],k=[],N=1,A=null,P=3,R=!1,j=!1,x=!1;function D(t){for(var e=I(k);null!==e;){if(null===e.callback)S(k);else{if(!(e.startTime<=t))break;S(k),e.sortIndex=e.expirationTime,T(C,e)}e=I(k)}}function L(t){if(x=!1,D(t),!j)if(null!==I(C))j=!0,r(M);else{var e=I(k);null!==e&&i(L,e.startTime-t)}}function M(t,n){j=!1,x&&(x=!1,o()),R=!0;var r=P;try{for(D(n),A=I(C);null!==A&&(!(A.expirationTime>n)||t&&!e.unstable_shouldYield());){var a=A.callback;if(\"function\"===typeof a){A.callback=null,P=A.priorityLevel;var s=a(A.expirationTime<=n);n=e.unstable_now(),\"function\"===typeof s?A.callback=s:A===I(C)&&S(C),D(n)}else S(C);A=I(C)}if(null!==A)var u=!0;else{var c=I(k);null!==c&&i(L,c.startTime-n),u=!1}return u}finally{A=null,P=r,R=!1}}var F=a;e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(t){t.callback=null},e.unstable_continueExecution=function(){j||R||(j=!0,r(M))},e.unstable_getCurrentPriorityLevel=function(){return P},e.unstable_getFirstCallbackNode=function(){return I(C)},e.unstable_next=function(t){switch(P){case 1:case 2:case 3:var e=3;break;default:e=P}var n=P;P=e;try{return t()}finally{P=n}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=F,e.unstable_runWithPriority=function(t,e){switch(t){case 1:case 2:case 3:case 4:case 5:break;default:t=3}var n=P;P=t;try{return e()}finally{P=n}},e.unstable_scheduleCallback=function(t,n,a){var s=e.unstable_now();switch(\"object\"===typeof a&&null!==a?a=\"number\"===typeof(a=a.delay)&&0<a?s+a:s:a=s,t){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return t={id:N++,callback:n,priorityLevel:t,startTime:a,expirationTime:u=a+u,sortIndex:-1},a>s?(t.sortIndex=a,T(k,t),null===I(C)&&t===I(k)&&(x?o():x=!0,i(L,a-s))):(t.sortIndex=u,T(C,t),j||R||(j=!0,r(M))),t},e.unstable_wrapCallback=function(t){var e=P;return function(){var n=P;P=e;try{return t.apply(this,arguments)}finally{P=n}}}},,function(t,e,n){\"use strict\";(function(t){var e=n(2);(function(){var n,r=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(t,e,n){t!=Array.prototype&&t!=Object.prototype&&(t[e]=n.value)};var i=function(e){e=[\"object\"==typeof window&&window,\"object\"==typeof self&&self,\"object\"==typeof t&&t,e];for(var n=0;n<e.length;++n){var r=e[n];if(r&&r.Math==Math)return r}return globalThis}(this);function o(t){var e=0;return function(){return e<t.length?{done:!1,value:t[e++]}:{done:!0}}}function a(t){var e=\"undefined\"!=typeof Symbol&&Symbol.iterator&&t[Symbol.iterator];return e?e.call(t):{next:o(t)}}!function(t,e){if(e){var n=i;t=t.split(\".\");for(var o=0;o<t.length-1;o++){var a=t[o];a in n||(n[a]={}),n=n[a]}(e=e(o=n[t=t[t.length-1]]))!=o&&null!=e&&r(n,t,{configurable:!0,writable:!0,value:e})}}(\"Promise\",(function(t){function e(t){this.b=0,this.c=void 0,this.a=[];var e=this.f();try{t(e.resolve,e.reject)}catch(n){e.reject(n)}}function n(){this.a=null}function r(t){return t instanceof e?t:new e((function(e){e(t)}))}if(t)return t;n.prototype.b=function(t){if(null==this.a){this.a=[];var e=this;this.c((function(){e.g()}))}this.a.push(t)};var o=i.setTimeout;n.prototype.c=function(t){o(t,0)},n.prototype.g=function(){for(;this.a&&this.a.length;){var t=this.a;this.a=[];for(var e=0;e<t.length;++e){var n=t[e];t[e]=null;try{n()}catch(r){this.f(r)}}}this.a=null},n.prototype.f=function(t){this.c((function(){throw t}))},e.prototype.f=function(){function t(t){return function(r){n||(n=!0,t.call(e,r))}}var e=this,n=!1;return{resolve:t(this.v),reject:t(this.g)}},e.prototype.v=function(t){if(t===this)this.g(new TypeError(\"A Promise cannot resolve to itself\"));else if(t instanceof e)this.s(t);else{t:switch(typeof t){case\"object\":var n=null!=t;break t;case\"function\":n=!0;break t;default:n=!1}n?this.m(t):this.i(t)}},e.prototype.m=function(t){var e=void 0;try{e=t.then}catch(n){return void this.g(n)}\"function\"==typeof e?this.u(e,t):this.i(t)},e.prototype.g=function(t){this.h(2,t)},e.prototype.i=function(t){this.h(1,t)},e.prototype.h=function(t,e){if(0!=this.b)throw Error(\"Cannot settle(\"+t+\", \"+e+\"): Promise already settled in state\"+this.b);this.b=t,this.c=e,this.l()},e.prototype.l=function(){if(null!=this.a){for(var t=0;t<this.a.length;++t)s.b(this.a[t]);this.a=null}};var s=new n;return e.prototype.s=function(t){var e=this.f();t.Pa(e.resolve,e.reject)},e.prototype.u=function(t,e){var n=this.f();try{t.call(e,n.resolve,n.reject)}catch(r){n.reject(r)}},e.prototype.then=function(t,n){function r(t,e){return\"function\"==typeof t?function(e){try{i(t(e))}catch(n){o(n)}}:e}var i,o,a=new e((function(t,e){i=t,o=e}));return this.Pa(r(t,i),r(n,o)),a},e.prototype.catch=function(t){return this.then(void 0,t)},e.prototype.Pa=function(t,e){function n(){switch(r.b){case 1:t(r.c);break;case 2:e(r.c);break;default:throw Error(\"Unexpected state: \"+r.b)}}var r=this;null==this.a?s.b(n):this.a.push(n)},e.resolve=r,e.reject=function(t){return new e((function(e,n){n(t)}))},e.race=function(t){return new e((function(e,n){for(var i=a(t),o=i.next();!o.done;o=i.next())r(o.value).Pa(e,n)}))},e.all=function(t){var n=a(t),i=n.next();return i.done?r([]):new e((function(t,e){function o(e){return function(n){a[e]=n,0==--s&&t(a)}}var a=[],s=0;do{a.push(void 0),s++,r(i.value).Pa(o(a.length-1),e),i=n.next()}while(!i.done)}))},e}));var s=s||{},u=this||self,c=/^[\\w+/_-]+[=]{0,2}$/,l=null;function h(t){return(t=t.querySelector&&t.querySelector(\"script[nonce]\"))&&(t=t.nonce||t.getAttribute(\"nonce\"))&&c.test(t)?t:\"\"}function f(){}function p(t){var e=typeof t;return\"object\"!=e?e:t?Array.isArray(t)?\"array\":e:\"null\"}function d(t){var e=p(t);return\"array\"==e||\"object\"==e&&\"number\"==typeof t.length}function v(t){return\"function\"==p(t)}function y(t){var e=typeof t;return\"object\"==e&&null!=t||\"function\"==e}function g(t){return Object.prototype.hasOwnProperty.call(t,m)&&t[m]||(t[m]=++b)}var m=\"closure_uid_\"+(1e9*Math.random()>>>0),b=0;function _(t,e,n){return t.call.apply(t.bind,arguments)}function w(t,e,n){if(!t)throw Error();if(2<arguments.length){var r=Array.prototype.slice.call(arguments,2);return function(){var n=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(n,r),t.apply(e,n)}}return function(){return t.apply(e,arguments)}}function E(t,e,n){return(E=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?_:w).apply(null,arguments)}function T(t,e){var n=Array.prototype.slice.call(arguments,1);return function(){var e=n.slice();return e.push.apply(e,arguments),t.apply(this,e)}}var I=Date.now;function S(t,e){function n(){}n.prototype=e.prototype,t.$a=e.prototype,t.prototype=new n,t.prototype.constructor=t}function O(t){return t}function C(t,e,n){this.code=A+t,this.message=e||P[t]||\"\",this.a=n||null}function k(t){var e=t&&t.code;return e?new C(e.substring(A.length),t.message,t.serverResponse):null}S(C,Error),C.prototype.w=function(){var t={code:this.code,message:this.message};return this.a&&(t.serverResponse=this.a),t},C.prototype.toJSON=function(){return this.w()};var N,A=\"auth/\",P={\"admin-restricted-operation\":\"This operation is restricted to administrators only.\",\"argument-error\":\"\",\"app-not-authorized\":\"This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.\",\"app-not-installed\":\"The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.\",\"captcha-check-failed\":\"The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.\",\"code-expired\":\"The SMS code has expired. Please re-send the verification code to try again.\",\"cordova-not-ready\":\"Cordova framework is not ready.\",\"cors-unsupported\":\"This browser is not supported.\",\"credential-already-in-use\":\"This credential is already associated with a different user account.\",\"custom-token-mismatch\":\"The custom token corresponds to a different audience.\",\"requires-recent-login\":\"This operation is sensitive and requires recent authentication. Log in again before retrying this request.\",\"dynamic-link-not-activated\":\"Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.\",\"email-change-needs-verification\":\"Multi-factor users must always have a verified email.\",\"email-already-in-use\":\"The email address is already in use by another account.\",\"expired-action-code\":\"The action code has expired. \",\"cancelled-popup-request\":\"This operation has been cancelled due to another conflicting popup being opened.\",\"internal-error\":\"An internal error has occurred.\",\"invalid-app-credential\":\"The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.\",\"invalid-app-id\":\"The mobile app identifier is not registed for the current project.\",\"invalid-user-token\":\"This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.\",\"invalid-auth-event\":\"An internal error has occurred.\",\"invalid-verification-code\":\"The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.\",\"invalid-continue-uri\":\"The continue URL provided in the request is invalid.\",\"invalid-cordova-configuration\":\"The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.\",\"invalid-custom-token\":\"The custom token format is incorrect. Please check the documentation.\",\"invalid-dynamic-link-domain\":\"The provided dynamic link domain is not configured or authorized for the current project.\",\"invalid-email\":\"The email address is badly formatted.\",\"invalid-api-key\":\"Your API key is invalid, please check you have copied it correctly.\",\"invalid-cert-hash\":\"The SHA-1 certificate hash provided is invalid.\",\"invalid-credential\":\"The supplied auth credential is malformed or has expired.\",\"invalid-message-payload\":\"The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.\",\"invalid-multi-factor-session\":\"The request does not contain a valid proof of first factor successful sign-in.\",\"invalid-oauth-provider\":\"EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.\",\"invalid-oauth-client-id\":\"The OAuth client ID provided is either invalid or does not match the specified API key.\",\"unauthorized-domain\":\"This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.\",\"invalid-action-code\":\"The action code is invalid. This can happen if the code is malformed, expired, or has already been used.\",\"wrong-password\":\"The password is invalid or the user does not have a password.\",\"invalid-persistence-type\":\"The specified persistence type is invalid. It can only be local, session or none.\",\"invalid-phone-number\":\"The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].\",\"invalid-provider-id\":\"The specified provider ID is invalid.\",\"invalid-recipient-email\":\"The email corresponding to this action failed to send as the provided recipient email address is invalid.\",\"invalid-sender\":\"The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.\",\"invalid-verification-id\":\"The verification ID used to create the phone auth credential is invalid.\",\"invalid-tenant-id\":\"The Auth instance's tenant ID is invalid.\",\"multi-factor-info-not-found\":\"The user does not have a second factor matching the identifier provided.\",\"multi-factor-auth-required\":\"Proof of ownership of a second factor is required to complete sign-in.\",\"missing-android-pkg-name\":\"An Android Package Name must be provided if the Android App is required to be installed.\",\"auth-domain-config-required\":\"Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.\",\"missing-app-credential\":\"The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.\",\"missing-verification-code\":\"The phone auth credential was created with an empty SMS verification code.\",\"missing-continue-uri\":\"A continue URL must be provided in the request.\",\"missing-iframe-start\":\"An internal error has occurred.\",\"missing-ios-bundle-id\":\"An iOS Bundle ID must be provided if an App Store ID is provided.\",\"missing-multi-factor-info\":\"No second factor identifier is provided.\",\"missing-multi-factor-session\":\"The request is missing proof of first factor successful sign-in.\",\"missing-or-invalid-nonce\":\"The request does not contain a valid nonce. This can occur if the SHA-256 hash of the provided raw nonce does not match the hashed nonce in the ID token payload.\",\"missing-phone-number\":\"To send verification codes, provide a phone number for the recipient.\",\"missing-verification-id\":\"The phone auth credential was created with an empty verification ID.\",\"app-deleted\":\"This instance of FirebaseApp has been deleted.\",\"account-exists-with-different-credential\":\"An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.\",\"network-request-failed\":\"A network error (such as timeout, interrupted connection or unreachable host) has occurred.\",\"no-auth-event\":\"An internal error has occurred.\",\"no-such-provider\":\"User was not linked to an account with the given provider.\",\"null-user\":\"A null user object was provided as the argument for an operation which requires a non-null user object.\",\"operation-not-allowed\":\"The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.\",\"operation-not-supported-in-this-environment\":'This operation is not supported in the environment this application is running on. \"location.protocol\" must be http, https or chrome-extension and web storage must be enabled.',\"popup-blocked\":\"Unable to establish a connection with the popup. It may have been blocked by the browser.\",\"popup-closed-by-user\":\"The popup has been closed by the user before finalizing the operation.\",\"provider-already-linked\":\"User can only be linked to one identity for the given provider.\",\"quota-exceeded\":\"The project's quota for this operation has been exceeded.\",\"redirect-cancelled-by-user\":\"The redirect operation has been cancelled by the user before finalizing.\",\"redirect-operation-pending\":\"A redirect sign-in operation is already pending.\",\"rejected-credential\":\"The request contains malformed or mismatching credentials.\",\"second-factor-already-in-use\":\"The second factor is already enrolled on this account.\",\"maximum-second-factor-count-exceeded\":\"The maximum allowed number of second factors on a user has been exceeded.\",\"tenant-id-mismatch\":\"The provided tenant ID does not match the Auth instance's tenant ID\",timeout:\"The operation has timed out.\",\"user-token-expired\":\"The user's credential is no longer valid. The user must sign in again.\",\"too-many-requests\":\"We have blocked all requests from this device due to unusual activity. Try again later.\",\"unauthorized-continue-uri\":\"The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.\",\"unsupported-first-factor\":\"Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.\",\"unsupported-persistence-type\":\"The current environment does not support the specified persistence type.\",\"unsupported-tenant-operation\":\"This operation is not supported in a multi-tenant context.\",\"unverified-email\":\"The operation requires a verified email.\",\"user-cancelled\":\"The user did not grant your application the permissions it requested.\",\"user-not-found\":\"There is no user record corresponding to this identifier. The user may have been deleted.\",\"user-disabled\":\"The user account has been disabled by an administrator.\",\"user-mismatch\":\"The supplied credentials do not correspond to the previously signed in user.\",\"user-signed-out\":\"\",\"weak-password\":\"The password must be 6 characters long or more.\",\"web-storage-unsupported\":\"This browser is not supported or 3rd party cookies and data may be disabled.\"},R={kd:{Sa:\"https://staging-identitytoolkit.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/\",Ya:\"https://staging-securetoken.sandbox.googleapis.com/v1/token\",Va:\"https://staging-identitytoolkit.sandbox.googleapis.com/v2/\",id:\"b\"},rd:{Sa:\"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\",Ya:\"https://securetoken.googleapis.com/v1/token\",Va:\"https://identitytoolkit.googleapis.com/v2/\",id:\"p\"},td:{Sa:\"https://staging-www.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/\",Ya:\"https://staging-securetoken.sandbox.googleapis.com/v1/token\",Va:\"https://staging-identitytoolkit.sandbox.googleapis.com/v2/\",id:\"s\"},ud:{Sa:\"https://www-googleapis-test.sandbox.google.com/identitytoolkit/v3/relyingparty/\",Ya:\"https://test-securetoken.sandbox.googleapis.com/v1/token\",Va:\"https://test-identitytoolkit.sandbox.googleapis.com/v2/\",id:\"t\"}};function j(t){for(var e in R)if(R[e].id===t)return{firebaseEndpoint:(t=R[e]).Sa,secureTokenEndpoint:t.Ya,identityPlatformEndpoint:t.Va};return null}function x(t){if(!t)return!1;try{return!!t.$goog_Thenable}catch(e){return!1}}function D(t){if(Error.captureStackTrace)Error.captureStackTrace(this,D);else{var e=Error().stack;e&&(this.stack=e)}t&&(this.message=String(t))}function L(t,e){for(var n=\"\",r=(t=t.split(\"%s\")).length-1,i=0;i<r;i++)n+=t[i]+(i<e.length?e[i]:\"%s\");D.call(this,n+t[r])}function M(t,e){throw new L(\"Failure\"+(t?\": \"+t:\"\"),Array.prototype.slice.call(arguments,1))}function F(t,e){this.c=t,this.f=e,this.b=0,this.a=null}function U(t,e){t.f(e),100>t.b&&(t.b++,e.next=t.a,t.a=e)}function V(){this.b=this.a=null}N=j(\"__EID__\")?\"__EID__\":void 0,S(D,Error),D.prototype.name=\"CustomError\",S(L,D),L.prototype.name=\"AssertionError\",F.prototype.get=function(){if(0<this.b){this.b--;var t=this.a;this.a=t.next,t.next=null}else t=this.c();return t};var q=new F((function(){return new z}),(function(t){t.reset()}));function B(){var t=_e,e=null;return t.a&&(e=t.a,t.a=t.a.next,t.a||(t.b=null),e.next=null),e}function z(){this.next=this.b=this.a=null}V.prototype.add=function(t,e){var n=q.get();n.set(t,e),this.b?this.b.next=n:this.a=n,this.b=n},z.prototype.set=function(t,e){this.a=t,this.b=e,this.next=null},z.prototype.reset=function(){this.next=this.b=this.a=null};var H=Array.prototype.indexOf?function(t,e){return Array.prototype.indexOf.call(t,e,void 0)}:function(t,e){if(\"string\"===typeof t)return\"string\"!==typeof e||1!=e.length?-1:t.indexOf(e,0);for(var n=0;n<t.length;n++)if(n in t&&t[n]===e)return n;return-1},K=Array.prototype.forEach?function(t,e,n){Array.prototype.forEach.call(t,e,n)}:function(t,e,n){for(var r=t.length,i=\"string\"===typeof t?t.split(\"\"):t,o=0;o<r;o++)o in i&&e.call(n,i[o],o,t)};var W=Array.prototype.filter?function(t,e){return Array.prototype.filter.call(t,e,void 0)}:function(t,e){for(var n=t.length,r=[],i=0,o=\"string\"===typeof t?t.split(\"\"):t,a=0;a<n;a++)if(a in o){var s=o[a];e.call(void 0,s,a,t)&&(r[i++]=s)}return r},G=Array.prototype.map?function(t,e){return Array.prototype.map.call(t,e,void 0)}:function(t,e){for(var n=t.length,r=Array(n),i=\"string\"===typeof t?t.split(\"\"):t,o=0;o<n;o++)o in i&&(r[o]=e.call(void 0,i[o],o,t));return r},Q=Array.prototype.some?function(t,e){return Array.prototype.some.call(t,e,void 0)}:function(t,e){for(var n=t.length,r=\"string\"===typeof t?t.split(\"\"):t,i=0;i<n;i++)if(i in r&&e.call(void 0,r[i],i,t))return!0;return!1};function Y(t,e){return 0<=H(t,e)}function J(t,e){var n;return(n=0<=(e=H(t,e)))&&Array.prototype.splice.call(t,e,1),n}function X(t,e){!function(t,e){for(var n=\"string\"===typeof t?t.split(\"\"):t,r=t.length-1;0<=r;--r)r in n&&e.call(void 0,n[r],r,t)}(t,(function(n,r){e.call(void 0,n,r,t)&&1==Array.prototype.splice.call(t,r,1).length&&0}))}function $(t){return Array.prototype.concat.apply([],arguments)}function Z(t){var e=t.length;if(0<e){for(var n=Array(e),r=0;r<e;r++)n[r]=t[r];return n}return[]}var tt,et=String.prototype.trim?function(t){return t.trim()}:function(t){return/^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(t)[1]},nt=/&/g,rt=/</g,it=/>/g,ot=/\"/g,at=/'/g,st=/\\x00/g,ut=/[\\x00&<>\"']/;function ct(t,e){return-1!=t.indexOf(e)}function lt(t,e){return t<e?-1:t>e?1:0}t:{var ht=u.navigator;if(ht){var ft=ht.userAgent;if(ft){tt=ft;break t}}tt=\"\"}function pt(t){return ct(tt,t)}function dt(t,e){for(var n in t)e.call(void 0,t[n],n,t)}function vt(t){for(var e in t)return!1;return!0}function yt(t){var e,n={};for(e in t)n[e]=t[e];return n}var gt=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");function mt(t,e){for(var n,r,i=1;i<arguments.length;i++){for(n in r=arguments[i])t[n]=r[n];for(var o=0;o<gt.length;o++)n=gt[o],Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}}function bt(t,e){t:{try{var n=t&&t.ownerDocument,r=n&&(n.defaultView||n.parentWindow);if((r=r||u).Element&&r.Location){var i=r;break t}}catch(a){}i=null}if(i&&\"undefined\"!=typeof i[e]&&(!t||!(t instanceof i[e])&&(t instanceof i.Location||t instanceof i.Element))){if(y(t))try{var o=t.constructor.displayName||t.constructor.name||Object.prototype.toString.call(t)}catch(a){o=\"<object could not be stringified>\"}else o=void 0===t?\"undefined\":null===t?\"null\":typeof t;M(\"Argument is not a %s (or a non-Element, non-Location mock); got: %s\",e,o)}}function _t(t,e){this.a=t===It&&e||\"\",this.b=Tt}function wt(t){return t instanceof _t&&t.constructor===_t&&t.b===Tt?t.a:(M(\"expected object of type Const, got '\"+t+\"'\"),\"type_error:Const\")}_t.prototype.sa=!0,_t.prototype.ra=function(){return this.a},_t.prototype.toString=function(){return\"Const{\"+this.a+\"}\"};var Et,Tt={},It={};function St(){if(void 0===Et){var t=null,e=u.trustedTypes;if(e&&e.createPolicy){try{t=e.createPolicy(\"goog#html\",{createHTML:O,createScript:O,createScriptURL:O})}catch(n){u.console&&u.console.error(n.message)}Et=t}else Et=t}return Et}function Ot(t,e){this.a=e===Pt?t:\"\"}function Ct(t){return t instanceof Ot&&t.constructor===Ot?t.a:(M(\"expected object of type TrustedResourceUrl, got '\"+t+\"' of type \"+p(t)),\"type_error:TrustedResourceUrl\")}function kt(t,e){var n=wt(t);if(!At.test(n))throw Error(\"Invalid TrustedResourceUrl format: \"+n);return function(t){var e=St();return new Ot(t=e?e.createScriptURL(t):t,Pt)}(t=n.replace(Nt,(function(t,r){if(!Object.prototype.hasOwnProperty.call(e,r))throw Error('Found marker, \"'+r+'\", in format string, \"'+n+'\", but no valid label mapping found in args: '+JSON.stringify(e));return(t=e[r])instanceof _t?wt(t):encodeURIComponent(String(t))})))}Ot.prototype.sa=!0,Ot.prototype.ra=function(){return this.a.toString()},Ot.prototype.toString=function(){return\"TrustedResourceUrl{\"+this.a+\"}\"};var Nt=/%{(\\w+)}/g,At=/^((https:)?\\/\\/[0-9a-z.:[\\]-]+\\/|\\/[^/\\\\]|[^:/\\\\%]+\\/|[^:/\\\\%]*[?#]|about:blank#)/i,Pt={};function Rt(t,e){this.a=e===Ut?t:\"\"}function jt(t){return t instanceof Rt&&t.constructor===Rt?t.a:(M(\"expected object of type SafeUrl, got '\"+t+\"' of type \"+p(t)),\"type_error:SafeUrl\")}Rt.prototype.sa=!0,Rt.prototype.ra=function(){return this.a.toString()},Rt.prototype.toString=function(){return\"SafeUrl{\"+this.a+\"}\"};var xt=/^(?:audio\\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|font\\/\\w+|image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|text\\/csv|video\\/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\\w+=(?:\\w+|\"[\\w;,= ]+\"))*$/i,Dt=/^data:(.*);base64,[a-z0-9+\\/]+=*$/i,Lt=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;function Mt(t){if(t instanceof Rt)return t;if(t=\"object\"==typeof t&&t.sa?t.ra():String(t),Lt.test(t))t=new Rt(t,Ut);else{var e=(t=(t=String(t)).replace(/(%0A|%0D)/g,\"\")).match(Dt);t=e&&xt.test(e[1])?new Rt(t,Ut):null}return t}function Ft(t){return t instanceof Rt?t:(t=\"object\"==typeof t&&t.sa?t.ra():String(t),Lt.test(t)||(t=\"about:invalid#zClosurez\"),new Rt(t,Ut))}var Ut={},Vt=new Rt(\"about:invalid#zClosurez\",Ut);function qt(t,e,n){this.a=n===Bt?t:\"\"}qt.prototype.sa=!0,qt.prototype.ra=function(){return this.a.toString()},qt.prototype.toString=function(){return\"SafeHtml{\"+this.a+\"}\"};var Bt={};function zt(t,e,n,r){return t=t instanceof Rt?t:Ft(t),e=e||u,n=n instanceof _t?wt(n):n||\"\",e.open(jt(t),n,r,void 0)}function Ht(t,e){for(var n=t.split(\"%s\"),r=\"\",i=Array.prototype.slice.call(arguments,1);i.length&&1<n.length;)r+=n.shift()+i.shift();return r+n.join(\"%s\")}function Kt(t){return ut.test(t)&&(-1!=t.indexOf(\"&\")&&(t=t.replace(nt,\"&amp;\")),-1!=t.indexOf(\"<\")&&(t=t.replace(rt,\"&lt;\")),-1!=t.indexOf(\">\")&&(t=t.replace(it,\"&gt;\")),-1!=t.indexOf('\"')&&(t=t.replace(ot,\"&quot;\")),-1!=t.indexOf(\"'\")&&(t=t.replace(at,\"&#39;\")),-1!=t.indexOf(\"\\0\")&&(t=t.replace(st,\"&#0;\"))),t}function Wt(t){return Wt[\" \"](t),t}Wt[\" \"]=f;var Gt,Qt=pt(\"Opera\"),Yt=pt(\"Trident\")||pt(\"MSIE\"),Jt=pt(\"Edge\"),Xt=Jt||Yt,$t=pt(\"Gecko\")&&!(ct(tt.toLowerCase(),\"webkit\")&&!pt(\"Edge\"))&&!(pt(\"Trident\")||pt(\"MSIE\"))&&!pt(\"Edge\"),Zt=ct(tt.toLowerCase(),\"webkit\")&&!pt(\"Edge\");function te(){var t=u.document;return t?t.documentMode:void 0}t:{var ee=\"\",ne=function(){var t=tt;return $t?/rv:([^\\);]+)(\\)|;)/.exec(t):Jt?/Edge\\/([\\d\\.]+)/.exec(t):Yt?/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(t):Zt?/WebKit\\/(\\S+)/.exec(t):Qt?/(?:Version)[ \\/]?(\\S+)/.exec(t):void 0}();if(ne&&(ee=ne?ne[1]:\"\"),Yt){var re=te();if(null!=re&&re>parseFloat(ee)){Gt=String(re);break t}}Gt=ee}var ie,oe={};function ae(t){return function(t,e){var n=oe;return Object.prototype.hasOwnProperty.call(n,t)?n[t]:n[t]=e(t)}(t,(function(){for(var e=0,n=et(String(Gt)).split(\".\"),r=et(String(t)).split(\".\"),i=Math.max(n.length,r.length),o=0;0==e&&o<i;o++){var a=n[o]||\"\",s=r[o]||\"\";do{if(a=/(\\d*)(\\D*)(.*)/.exec(a)||[\"\",\"\",\"\",\"\"],s=/(\\d*)(\\D*)(.*)/.exec(s)||[\"\",\"\",\"\",\"\"],0==a[0].length&&0==s[0].length)break;e=lt(0==a[1].length?0:parseInt(a[1],10),0==s[1].length?0:parseInt(s[1],10))||lt(0==a[2].length,0==s[2].length)||lt(a[2],s[2]),a=a[3],s=s[3]}while(0==e)}return 0<=e}))}if(u.document&&Yt){var se=te();ie=se||(parseInt(Gt,10)||void 0)}else ie=void 0;var ue=ie;try{new self.OffscreenCanvas(0,0).getContext(\"2d\")}catch(fa){}var ce=!Yt||9<=Number(ue);function le(t){var e=document;return\"string\"===typeof t?e.getElementById(t):t}function he(t,e){dt(e,(function(e,n){e&&\"object\"==typeof e&&e.sa&&(e=e.ra()),\"style\"==n?t.style.cssText=e:\"class\"==n?t.className=e:\"for\"==n?t.htmlFor=e:de.hasOwnProperty(n)?t.setAttribute(de[n],e):0==n.lastIndexOf(\"aria-\",0)||0==n.lastIndexOf(\"data-\",0)?t.setAttribute(n,e):t[n]=e}))}var fe,pe,de={cellpadding:\"cellPadding\",cellspacing:\"cellSpacing\",colspan:\"colSpan\",frameborder:\"frameBorder\",height:\"height\",maxlength:\"maxLength\",nonce:\"nonce\",role:\"role\",rowspan:\"rowSpan\",type:\"type\",usemap:\"useMap\",valign:\"vAlign\",width:\"width\"};function ve(t,e,n){function r(n){n&&e.appendChild(\"string\"===typeof n?t.createTextNode(n):n)}for(var i=2;i<n.length;i++){var o=n[i];if(!d(o)||y(o)&&0<o.nodeType)r(o);else{t:{if(o&&\"number\"==typeof o.length){if(y(o)){var a=\"function\"==typeof o.item||\"string\"==typeof o.item;break t}if(v(o)){a=\"function\"==typeof o.item;break t}}a=!1}K(a?Z(o):o,r)}}}function ye(t,e){return e=String(e),\"application/xhtml+xml\"===t.contentType&&(e=e.toLowerCase()),t.createElement(e)}function ge(t){u.setTimeout((function(){throw t}),0)}function me(t,e){pe||function(){if(u.Promise&&u.Promise.resolve){var t=u.Promise.resolve(void 0);pe=function(){t.then(we)}}else pe=function(){var t=we;!v(u.setImmediate)||u.Window&&u.Window.prototype&&!pt(\"Edge\")&&u.Window.prototype.setImmediate==u.setImmediate?(fe||(fe=function(){var t=u.MessageChannel;if(\"undefined\"===typeof t&&\"undefined\"!==typeof window&&window.postMessage&&window.addEventListener&&!pt(\"Presto\")&&(t=function(){var t=ye(document,\"IFRAME\");t.style.display=\"none\",document.documentElement.appendChild(t);var e=t.contentWindow;(t=e.document).open(),t.close();var n=\"callImmediate\"+Math.random(),r=\"file:\"==e.location.protocol?\"*\":e.location.protocol+\"//\"+e.location.host;t=E((function(t){\"*\"!=r&&t.origin!=r||t.data!=n||this.port1.onmessage()}),this),e.addEventListener(\"message\",t,!1),this.port1={},this.port2={postMessage:function(){e.postMessage(n,r)}}}),\"undefined\"!==typeof t&&!pt(\"Trident\")&&!pt(\"MSIE\")){var e=new t,n={},r=n;return e.port1.onmessage=function(){if(void 0!==n.next){var t=(n=n.next).Fb;n.Fb=null,t()}},function(t){r.next={Fb:t},r=r.next,e.port2.postMessage(0)}}return function(t){u.setTimeout(t,0)}}()),fe(t)):u.setImmediate(t)}}(),be||(pe(),be=!0),_e.add(t,e)}var be=!1,_e=new V;function we(){for(var t;t=B();){try{t.a.call(t.b)}catch(e){ge(e)}U(q,t)}be=!1}function Ee(t,e){if(this.a=Te,this.h=void 0,this.f=this.b=this.c=null,this.g=this.i=!1,t!=f)try{var n=this;t.call(e,(function(t){Le(n,Ie,t)}),(function(t){if(!(t instanceof ze))try{if(t instanceof Error)throw t;throw Error(\"Promise rejected.\")}catch(e){}Le(n,Se,t)}))}catch(r){Le(this,Se,r)}}var Te=0,Ie=2,Se=3;function Oe(){this.next=this.f=this.b=this.g=this.a=null,this.c=!1}Oe.prototype.reset=function(){this.f=this.b=this.g=this.a=null,this.c=!1};var Ce=new F((function(){return new Oe}),(function(t){t.reset()}));function ke(t,e,n){var r=Ce.get();return r.g=t,r.b=e,r.f=n,r}function Ne(t){if(t instanceof Ee)return t;var e=new Ee(f);return Le(e,Ie,t),e}function Ae(t){return new Ee((function(e,n){n(t)}))}function Pe(t,e,n){Me(t,e,n,null)||me(T(e,t))}function Re(t){return new Ee((function(e){var n=t.length,r=[];if(n)for(var i=function(t,i,o){n--,r[t]=i?{Ob:!0,value:o}:{Ob:!1,reason:o},0==n&&e(r)},o=0;o<t.length;o++)Pe(t[o],T(i,o,!0),T(i,o,!1));else e(r)}))}function je(t,e){if(t.a==Te)if(t.c){var n=t.c;if(n.b){for(var r=0,i=null,o=null,a=n.b;a&&(a.c||(r++,a.a==t&&(i=a),!(i&&1<r)));a=a.next)i||(o=a);i&&(n.a==Te&&1==r?je(n,e):(o?((r=o).next==n.f&&(n.f=r),r.next=r.next.next):Ue(n),Ve(n,i,Se,e)))}t.c=null}else Le(t,Se,e)}function xe(t,e){t.b||t.a!=Ie&&t.a!=Se||Fe(t),t.f?t.f.next=e:t.b=e,t.f=e}function De(t,e,n,r){var i=ke(null,null,null);return i.a=new Ee((function(t,o){i.g=e?function(n){try{var i=e.call(r,n);t(i)}catch(a){o(a)}}:t,i.b=n?function(e){try{var i=n.call(r,e);void 0===i&&e instanceof ze?o(e):t(i)}catch(a){o(a)}}:o})),i.a.c=t,xe(t,i),i.a}function Le(t,e,n){t.a==Te&&(t===n&&(e=Se,n=new TypeError(\"Promise cannot resolve to itself\")),t.a=1,Me(n,t.Zc,t.$c,t)||(t.h=n,t.a=e,t.c=null,Fe(t),e!=Se||n instanceof ze||function(t,e){t.g=!0,me((function(){t.g&&Be.call(null,e)}))}(t,n)))}function Me(t,e,n,r){if(t instanceof Ee)return xe(t,ke(e||f,n||null,r)),!0;if(x(t))return t.then(e,n,r),!0;if(y(t))try{var i=t.then;if(v(i))return function(t,e,n,r,i){function o(t){s||(s=!0,r.call(i,t))}function a(t){s||(s=!0,n.call(i,t))}var s=!1;try{e.call(t,a,o)}catch(u){o(u)}}(t,i,e,n,r),!0}catch(o){return n.call(r,o),!0}return!1}function Fe(t){t.i||(t.i=!0,me(t.fc,t))}function Ue(t){var e=null;return t.b&&(e=t.b,t.b=e.next,e.next=null),t.b||(t.f=null),e}function Ve(t,e,n,r){if(n==Se&&e.b&&!e.c)for(;t&&t.g;t=t.c)t.g=!1;if(e.a)e.a.c=null,qe(e,n,r);else try{e.c?e.g.call(e.f):qe(e,n,r)}catch(i){Be.call(null,i)}U(Ce,e)}function qe(t,e,n){e==Ie?t.g.call(t.f,n):t.b&&t.b.call(t.f,n)}Ee.prototype.then=function(t,e,n){return De(this,v(t)?t:null,v(e)?e:null,n)},Ee.prototype.$goog_Thenable=!0,(n=Ee.prototype).na=function(t,e){return(t=ke(t,t,e)).c=!0,xe(this,t),this},n.o=function(t,e){return De(this,null,t,e)},n.cancel=function(t){if(this.a==Te){var e=new ze(t);me((function(){je(this,e)}),this)}},n.Zc=function(t){this.a=Te,Le(this,Ie,t)},n.$c=function(t){this.a=Te,Le(this,Se,t)},n.fc=function(){for(var t;t=Ue(this);)Ve(this,t,this.a,this.h);this.i=!1};var Be=ge;function ze(t){D.call(this,t)}function He(){0!=Ke&&(We[g(this)]=this),this.xa=this.xa,this.oa=this.oa}S(ze,D),ze.prototype.name=\"cancel\";var Ke=0,We={};function Ge(t){if(!t.xa&&(t.xa=!0,t.Da(),0!=Ke)){var e=g(t);if(0!=Ke&&t.oa&&0<t.oa.length)throw Error(t+\" did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.\");delete We[e]}}He.prototype.xa=!1,He.prototype.Da=function(){if(this.oa)for(;this.oa.length;)this.oa.shift()()};var Qe=Object.freeze||function(t){return t},Ye=!Yt||9<=Number(ue),Je=Yt&&!ae(\"9\"),Xe=function(){if(!u.addEventListener||!Object.defineProperty)return!1;var t=!1,e=Object.defineProperty({},\"passive\",{get:function(){t=!0}});try{u.addEventListener(\"test\",f,e),u.removeEventListener(\"test\",f,e)}catch(n){}return t}();function $e(t,e){this.type=t,this.b=this.target=e,this.defaultPrevented=!1}function Ze(t,e){if($e.call(this,t?t.type:\"\"),this.relatedTarget=this.b=this.target=null,this.button=this.screenY=this.screenX=this.clientY=this.clientX=0,this.key=\"\",this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1,this.pointerId=0,this.pointerType=\"\",this.a=null,t){var n=this.type=t.type,r=t.changedTouches&&t.changedTouches.length?t.changedTouches[0]:null;if(this.target=t.target||t.srcElement,this.b=e,e=t.relatedTarget){if($t){t:{try{Wt(e.nodeName);var i=!0;break t}catch(o){}i=!1}i||(e=null)}}else\"mouseover\"==n?e=t.fromElement:\"mouseout\"==n&&(e=t.toElement);this.relatedTarget=e,r?(this.clientX=void 0!==r.clientX?r.clientX:r.pageX,this.clientY=void 0!==r.clientY?r.clientY:r.pageY,this.screenX=r.screenX||0,this.screenY=r.screenY||0):(this.clientX=void 0!==t.clientX?t.clientX:t.pageX,this.clientY=void 0!==t.clientY?t.clientY:t.pageY,this.screenX=t.screenX||0,this.screenY=t.screenY||0),this.button=t.button,this.key=t.key||\"\",this.ctrlKey=t.ctrlKey,this.altKey=t.altKey,this.shiftKey=t.shiftKey,this.metaKey=t.metaKey,this.pointerId=t.pointerId||0,this.pointerType=\"string\"===typeof t.pointerType?t.pointerType:tn[t.pointerType]||\"\",this.a=t,t.defaultPrevented&&this.preventDefault()}}$e.prototype.preventDefault=function(){this.defaultPrevented=!0},S(Ze,$e);var tn=Qe({2:\"touch\",3:\"pen\",4:\"mouse\"});Ze.prototype.preventDefault=function(){Ze.$a.preventDefault.call(this);var t=this.a;if(t.preventDefault)t.preventDefault();else if(t.returnValue=!1,Je)try{(t.ctrlKey||112<=t.keyCode&&123>=t.keyCode)&&(t.keyCode=-1)}catch(e){}},Ze.prototype.g=function(){return this.a};var en=\"closure_listenable_\"+(1e6*Math.random()|0),nn=0;function rn(t,e,n,r,i){this.listener=t,this.proxy=null,this.src=e,this.type=n,this.capture=!!r,this.Ua=i,this.key=++nn,this.va=this.Oa=!1}function on(t){t.va=!0,t.listener=null,t.proxy=null,t.src=null,t.Ua=null}function an(t){this.src=t,this.a={},this.b=0}function sn(t,e){var n=e.type;n in t.a&&J(t.a[n],e)&&(on(e),0==t.a[n].length&&(delete t.a[n],t.b--))}function un(t,e,n,r){for(var i=0;i<t.length;++i){var o=t[i];if(!o.va&&o.listener==e&&o.capture==!!n&&o.Ua==r)return i}return-1}an.prototype.add=function(t,e,n,r,i){var o=t.toString();(t=this.a[o])||(t=this.a[o]=[],this.b++);var a=un(t,e,r,i);return-1<a?(e=t[a],n||(e.Oa=!1)):((e=new rn(e,this.src,o,!!r,i)).Oa=n,t.push(e)),e};var cn=\"closure_lm_\"+(1e6*Math.random()|0),ln={};function hn(t,e,n,r,i){if(r&&r.once)pn(t,e,n,r,i);else if(Array.isArray(e))for(var o=0;o<e.length;o++)hn(t,e[o],n,r,i);else n=En(n),t&&t[en]?In(t,e,n,y(r)?!!r.capture:!!r,i):fn(t,e,n,!1,r,i)}function fn(t,e,n,r,i,o){if(!e)throw Error(\"Invalid event type\");var a=y(i)?!!i.capture:!!i,s=_n(t);if(s||(t[cn]=s=new an(t)),!(n=s.add(e,n,r,a,o)).proxy){if(r=function(){var t=bn,e=Ye?function(n){return t.call(e.src,e.listener,n)}:function(n){if(!(n=t.call(e.src,e.listener,n)))return n};return e}(),n.proxy=r,r.src=t,r.listener=n,t.addEventListener)Xe||(i=a),void 0===i&&(i=!1),t.addEventListener(e.toString(),r,i);else if(t.attachEvent)t.attachEvent(yn(e.toString()),r);else{if(!t.addListener||!t.removeListener)throw Error(\"addEventListener and attachEvent are unavailable.\");t.addListener(r)}0}}function pn(t,e,n,r,i){if(Array.isArray(e))for(var o=0;o<e.length;o++)pn(t,e[o],n,r,i);else n=En(n),t&&t[en]?Sn(t,e,n,y(r)?!!r.capture:!!r,i):fn(t,e,n,!0,r,i)}function dn(t,e,n,r,i){if(Array.isArray(e))for(var o=0;o<e.length;o++)dn(t,e[o],n,r,i);else r=y(r)?!!r.capture:!!r,n=En(n),t&&t[en]?(t=t.v,(e=String(e).toString())in t.a&&(-1<(n=un(o=t.a[e],n,r,i))&&(on(o[n]),Array.prototype.splice.call(o,n,1),0==o.length&&(delete t.a[e],t.b--)))):t&&(t=_n(t))&&(e=t.a[e.toString()],t=-1,e&&(t=un(e,n,r,i)),(n=-1<t?e[t]:null)&&vn(n))}function vn(t){if(\"number\"!==typeof t&&t&&!t.va){var e=t.src;if(e&&e[en])sn(e.v,t);else{var n=t.type,r=t.proxy;e.removeEventListener?e.removeEventListener(n,r,t.capture):e.detachEvent?e.detachEvent(yn(n),r):e.addListener&&e.removeListener&&e.removeListener(r),(n=_n(e))?(sn(n,t),0==n.b&&(n.src=null,e[cn]=null)):on(t)}}}function yn(t){return t in ln?ln[t]:ln[t]=\"on\"+t}function gn(t,e,n,r){var i=!0;if((t=_n(t))&&(e=t.a[e.toString()]))for(e=e.concat(),t=0;t<e.length;t++){var o=e[t];o&&o.capture==n&&!o.va&&(o=mn(o,r),i=i&&!1!==o)}return i}function mn(t,e){var n=t.listener,r=t.Ua||t.src;return t.Oa&&vn(t),n.call(r,e)}function bn(t,e){if(t.va)return!0;if(!Ye){if(!e)t:{e=[\"window\",\"event\"];for(var n=u,r=0;r<e.length;r++)if(null==(n=n[e[r]])){e=null;break t}e=n}if(e=new Ze(r=e,this),n=!0,!(0>r.keyCode||void 0!=r.returnValue)){t:{var i=!1;if(0==r.keyCode)try{r.keyCode=-1;break t}catch(a){i=!0}(i||void 0==r.returnValue)&&(r.returnValue=!0)}for(r=[],i=e.b;i;i=i.parentNode)r.push(i);for(t=t.type,i=r.length-1;0<=i;i--){e.b=r[i];var o=gn(r[i],t,!0,e);n=n&&o}for(i=0;i<r.length;i++)e.b=r[i],o=gn(r[i],t,!1,e),n=n&&o}return n}return mn(t,new Ze(e,this))}function _n(t){return(t=t[cn])instanceof an?t:null}var wn=\"__closure_events_fn_\"+(1e9*Math.random()>>>0);function En(t){return v(t)?t:(t[wn]||(t[wn]=function(e){return t.handleEvent(e)}),t[wn])}function Tn(){He.call(this),this.v=new an(this),this.$b=this,this.fb=null}function In(t,e,n,r,i){t.v.add(String(e),n,!1,r,i)}function Sn(t,e,n,r,i){t.v.add(String(e),n,!0,r,i)}function On(t,e,n,r){if(!(e=t.v.a[String(e)]))return!0;e=e.concat();for(var i=!0,o=0;o<e.length;++o){var a=e[o];if(a&&!a.va&&a.capture==n){var s=a.listener,u=a.Ua||a.src;a.Oa&&sn(t.v,a),i=!1!==s.call(u,r)&&i}}return i&&!r.defaultPrevented}function Cn(t,e,n){if(v(t))n&&(t=E(t,n));else{if(!t||\"function\"!=typeof t.handleEvent)throw Error(\"Invalid listener argument\");t=E(t.handleEvent,t)}return 2147483647<Number(e)?-1:u.setTimeout(t,e||0)}function kn(t){var e=null;return new Ee((function(n,r){-1==(e=Cn((function(){n(void 0)}),t))&&r(Error(\"Failed to schedule timer.\"))})).o((function(t){throw u.clearTimeout(e),t}))}function Nn(t){if(t.V&&\"function\"==typeof t.V)return t.V();if(\"string\"===typeof t)return t.split(\"\");if(d(t)){for(var e=[],n=t.length,r=0;r<n;r++)e.push(t[r]);return e}for(r in e=[],n=0,t)e[n++]=t[r];return e}function An(t){if(t.Y&&\"function\"==typeof t.Y)return t.Y();if(!t.V||\"function\"!=typeof t.V){if(d(t)||\"string\"===typeof t){var e=[];t=t.length;for(var n=0;n<t;n++)e.push(n);return e}for(var r in e=[],n=0,t)e[n++]=r;return e}}function Pn(t,e){this.b={},this.a=[],this.c=0;var n=arguments.length;if(1<n){if(n%2)throw Error(\"Uneven number of arguments\");for(var r=0;r<n;r+=2)this.set(arguments[r],arguments[r+1])}else if(t)if(t instanceof Pn)for(n=t.Y(),r=0;r<n.length;r++)this.set(n[r],t.get(n[r]));else for(r in t)this.set(r,t[r])}function Rn(t){if(t.c!=t.a.length){for(var e=0,n=0;e<t.a.length;){var r=t.a[e];jn(t.b,r)&&(t.a[n++]=r),e++}t.a.length=n}if(t.c!=t.a.length){var i={};for(n=e=0;e<t.a.length;)jn(i,r=t.a[e])||(t.a[n++]=r,i[r]=1),e++;t.a.length=n}}function jn(t,e){return Object.prototype.hasOwnProperty.call(t,e)}S(Tn,He),Tn.prototype[en]=!0,Tn.prototype.addEventListener=function(t,e,n,r){hn(this,t,e,n,r)},Tn.prototype.removeEventListener=function(t,e,n,r){dn(this,t,e,n,r)},Tn.prototype.dispatchEvent=function(t){var e,n=this.fb;if(n)for(e=[];n;n=n.fb)e.push(n);n=this.$b;var r=t.type||t;if(\"string\"===typeof t)t=new $e(t,n);else if(t instanceof $e)t.target=t.target||n;else{var i=t;mt(t=new $e(r,n),i)}if(i=!0,e)for(var o=e.length-1;0<=o;o--){var a=t.b=e[o];i=On(a,r,!0,t)&&i}if(i=On(a=t.b=n,r,!0,t)&&i,i=On(a,r,!1,t)&&i,e)for(o=0;o<e.length;o++)i=On(a=t.b=e[o],r,!1,t)&&i;return i},Tn.prototype.Da=function(){if(Tn.$a.Da.call(this),this.v){var t,e=this.v;for(t in e.a){for(var n=e.a[t],r=0;r<n.length;r++)on(n[r]);delete e.a[t],e.b--}}this.fb=null},(n=Pn.prototype).V=function(){Rn(this);for(var t=[],e=0;e<this.a.length;e++)t.push(this.b[this.a[e]]);return t},n.Y=function(){return Rn(this),this.a.concat()},n.clear=function(){this.b={},this.c=this.a.length=0},n.get=function(t,e){return jn(this.b,t)?this.b[t]:e},n.set=function(t,e){jn(this.b,t)||(this.c++,this.a.push(t)),this.b[t]=e},n.forEach=function(t,e){for(var n=this.Y(),r=0;r<n.length;r++){var i=n[r],o=this.get(i);t.call(e,o,i,this)}};var xn=/^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^\\\\/?#]*)@)?([^\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\/?#]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/;function Dn(t,e){var n;this.a=this.l=this.f=\"\",this.g=null,this.i=this.c=\"\",this.h=!1,t instanceof Dn?(this.h=void 0!==e?e:t.h,Ln(this,t.f),this.l=t.l,this.a=t.a,Mn(this,t.g),this.c=t.c,Fn(this,rr(t.b)),this.i=t.i):t&&(n=String(t).match(xn))?(this.h=!!e,Ln(this,n[1]||\"\",!0),this.l=zn(n[2]||\"\"),this.a=zn(n[3]||\"\",!0),Mn(this,n[4]),this.c=zn(n[5]||\"\",!0),Fn(this,n[6]||\"\",!0),this.i=zn(n[7]||\"\")):(this.h=!!e,this.b=new Xn(null,this.h))}function Ln(t,e,n){t.f=n?zn(e,!0):e,t.f&&(t.f=t.f.replace(/:$/,\"\"))}function Mn(t,e){if(e){if(e=Number(e),isNaN(e)||0>e)throw Error(\"Bad port number \"+e);t.g=e}else t.g=null}function Fn(t,e,n){e instanceof Xn?(t.b=e,function(t,e){e&&!t.f&&($n(t),t.c=null,t.a.forEach((function(t,e){var n=e.toLowerCase();e!=n&&(tr(this,e),nr(this,n,t))}),t)),t.f=e}(t.b,t.h)):(n||(e=Hn(e,Yn)),t.b=new Xn(e,t.h))}function Un(t,e,n){t.b.set(e,n)}function Vn(t,e){return t.b.get(e)}function qn(t){return t instanceof Dn?new Dn(t):new Dn(t,void 0)}function Bn(t,e,n,r){var i=new Dn(null,void 0);return t&&Ln(i,t),e&&(i.a=e),n&&Mn(i,n),r&&(i.c=r),i}function zn(t,e){return t?e?decodeURI(t.replace(/%25/g,\"%2525\")):decodeURIComponent(t):\"\"}function Hn(t,e,n){return\"string\"===typeof t?(t=encodeURI(t).replace(e,Kn),n&&(t=t.replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),t):null}function Kn(t){return\"%\"+((t=t.charCodeAt(0))>>4&15).toString(16)+(15&t).toString(16)}Dn.prototype.toString=function(){var t=[],e=this.f;e&&t.push(Hn(e,Wn,!0),\":\");var n=this.a;return(n||\"file\"==e)&&(t.push(\"//\"),(e=this.l)&&t.push(Hn(e,Wn,!0),\"@\"),t.push(encodeURIComponent(String(n)).replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),null!=(n=this.g)&&t.push(\":\",String(n))),(n=this.c)&&(this.a&&\"/\"!=n.charAt(0)&&t.push(\"/\"),t.push(Hn(n,\"/\"==n.charAt(0)?Qn:Gn,!0))),(n=this.b.toString())&&t.push(\"?\",n),(n=this.i)&&t.push(\"#\",Hn(n,Jn)),t.join(\"\")},Dn.prototype.resolve=function(t){var e=new Dn(this),n=!!t.f;n?Ln(e,t.f):n=!!t.l,n?e.l=t.l:n=!!t.a,n?e.a=t.a:n=null!=t.g;var r=t.c;if(n)Mn(e,t.g);else if(n=!!t.c){if(\"/\"!=r.charAt(0))if(this.a&&!this.c)r=\"/\"+r;else{var i=e.c.lastIndexOf(\"/\");-1!=i&&(r=e.c.substr(0,i+1)+r)}if(\"..\"==(i=r)||\".\"==i)r=\"\";else if(ct(i,\"./\")||ct(i,\"/.\")){r=0==i.lastIndexOf(\"/\",0),i=i.split(\"/\");for(var o=[],a=0;a<i.length;){var s=i[a++];\".\"==s?r&&a==i.length&&o.push(\"\"):\"..\"==s?((1<o.length||1==o.length&&\"\"!=o[0])&&o.pop(),r&&a==i.length&&o.push(\"\")):(o.push(s),r=!0)}r=o.join(\"/\")}else r=i}return n?e.c=r:n=\"\"!==t.b.toString(),n?Fn(e,rr(t.b)):n=!!t.i,n&&(e.i=t.i),e};var Wn=/[#\\/\\?@]/g,Gn=/[#\\?:]/g,Qn=/[#\\?]/g,Yn=/[#\\?@]/g,Jn=/#/g;function Xn(t,e){this.b=this.a=null,this.c=t||null,this.f=!!e}function $n(t){t.a||(t.a=new Pn,t.b=0,t.c&&function(t,e){if(t){t=t.split(\"&\");for(var n=0;n<t.length;n++){var r=t[n].indexOf(\"=\"),i=null;if(0<=r){var o=t[n].substring(0,r);i=t[n].substring(r+1)}else o=t[n];e(o,i?decodeURIComponent(i.replace(/\\+/g,\" \")):\"\")}}}(t.c,(function(e,n){t.add(decodeURIComponent(e.replace(/\\+/g,\" \")),n)})))}function Zn(t){var e=An(t);if(\"undefined\"==typeof e)throw Error(\"Keys are undefined\");var n=new Xn(null,void 0);t=Nn(t);for(var r=0;r<e.length;r++){var i=e[r],o=t[r];Array.isArray(o)?nr(n,i,o):n.add(i,o)}return n}function tr(t,e){$n(t),e=ir(t,e),jn(t.a.b,e)&&(t.c=null,t.b-=t.a.get(e).length,jn((t=t.a).b,e)&&(delete t.b[e],t.c--,t.a.length>2*t.c&&Rn(t)))}function er(t,e){return $n(t),e=ir(t,e),jn(t.a.b,e)}function nr(t,e,n){tr(t,e),0<n.length&&(t.c=null,t.a.set(ir(t,e),Z(n)),t.b+=n.length)}function rr(t){var e=new Xn;return e.c=t.c,t.a&&(e.a=new Pn(t.a),e.b=t.b),e}function ir(t,e){return e=String(e),t.f&&(e=e.toLowerCase()),e}function or(t){var e=[];return sr(new ar,t,e),e.join(\"\")}function ar(){}function sr(t,e,n){if(null==e)n.push(\"null\");else{if(\"object\"==typeof e){if(Array.isArray(e)){var r=e;e=r.length,n.push(\"[\");for(var i=\"\",o=0;o<e;o++)n.push(i),sr(t,r[o],n),i=\",\";return void n.push(\"]\")}if(!(e instanceof String||e instanceof Number||e instanceof Boolean)){for(r in n.push(\"{\"),i=\"\",e)Object.prototype.hasOwnProperty.call(e,r)&&(\"function\"!=typeof(o=e[r])&&(n.push(i),lr(r,n),n.push(\":\"),sr(t,o,n),i=\",\"));return void n.push(\"}\")}e=e.valueOf()}switch(typeof e){case\"string\":lr(e,n);break;case\"number\":n.push(isFinite(e)&&!isNaN(e)?String(e):\"null\");break;case\"boolean\":n.push(String(e));break;case\"function\":n.push(\"null\");break;default:throw Error(\"Unknown type: \"+typeof e)}}}(n=Xn.prototype).add=function(t,e){$n(this),this.c=null,t=ir(this,t);var n=this.a.get(t);return n||this.a.set(t,n=[]),n.push(e),this.b+=1,this},n.clear=function(){this.a=this.c=null,this.b=0},n.forEach=function(t,e){$n(this),this.a.forEach((function(n,r){K(n,(function(n){t.call(e,n,r,this)}),this)}),this)},n.Y=function(){$n(this);for(var t=this.a.V(),e=this.a.Y(),n=[],r=0;r<e.length;r++)for(var i=t[r],o=0;o<i.length;o++)n.push(e[r]);return n},n.V=function(t){$n(this);var e=[];if(\"string\"===typeof t)er(this,t)&&(e=$(e,this.a.get(ir(this,t))));else{t=this.a.V();for(var n=0;n<t.length;n++)e=$(e,t[n])}return e},n.set=function(t,e){return $n(this),this.c=null,er(this,t=ir(this,t))&&(this.b-=this.a.get(t).length),this.a.set(t,[e]),this.b+=1,this},n.get=function(t,e){return t&&0<(t=this.V(t)).length?String(t[0]):e},n.toString=function(){if(this.c)return this.c;if(!this.a)return\"\";for(var t=[],e=this.a.Y(),n=0;n<e.length;n++){var r=e[n],i=encodeURIComponent(String(r));r=this.V(r);for(var o=0;o<r.length;o++){var a=i;\"\"!==r[o]&&(a+=\"=\"+encodeURIComponent(String(r[o]))),t.push(a)}}return this.c=t.join(\"&\")};var ur={'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"/\":\"\\\\/\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\v\":\"\\\\u000b\"},cr=/\\uffff/.test(\"\\uffff\")?/[\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g:/[\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;function lr(t,e){e.push('\"',t.replace(cr,(function(t){var e=ur[t];return e||(e=\"\\\\u\"+(65536|t.charCodeAt(0)).toString(16).substr(1),ur[t]=e),e})),'\"')}function hr(){var t=Pr();return Yt&&!!ue&&11==ue||/Edge\\/\\d+/.test(t)}function fr(){return u.window&&u.window.location.href||self&&self.location&&self.location.href||\"\"}function pr(t,e){e=e||u.window;var n=\"about:blank\";t&&(n=jt(Mt(t)||Vt)),e.location.href=n}function dr(t,e){var n,r=[];for(n in t)n in e?typeof t[n]!=typeof e[n]?r.push(n):\"object\"==typeof t[n]&&null!=t[n]&&null!=e[n]?0<dr(t[n],e[n]).length&&r.push(n):t[n]!==e[n]&&r.push(n):r.push(n);for(n in e)n in t||r.push(n);return r}function vr(t){return!!((t=(t||Pr()).toLowerCase()).match(/android/)||t.match(/webos/)||t.match(/iphone|ipad|ipod/)||t.match(/blackberry/)||t.match(/windows phone/)||t.match(/iemobile/))}function yr(t){t=t||u.window;try{t.close()}catch(e){}}function gr(t,e,n){var r=Math.floor(1e9*Math.random()).toString();e=e||500,n=n||600;var i=(window.screen.availHeight-n)/2,o=(window.screen.availWidth-e)/2;for(a in e={width:e,height:n,top:0<i?i:0,left:0<o?o:0,location:!0,resizable:!0,statusbar:!0,toolbar:!1},n=Pr().toLowerCase(),r&&(e.target=r,ct(n,\"crios/\")&&(e.target=\"_blank\")),kr(Pr())==Or&&(t=t||\"http://localhost\",e.scrollbars=!0),n=t||\"\",(t=e)||(t={}),r=window,e=n instanceof Rt?n:Mt(\"undefined\"!=typeof n.href?n.href:String(n))||Vt,n=t.target||n.target,i=[],t)switch(a){case\"width\":case\"height\":case\"top\":case\"left\":i.push(a+\"=\"+t[a]);break;case\"target\":case\"noopener\":case\"noreferrer\":break;default:i.push(a+\"=\"+(t[a]?1:0))}var a=i.join(\",\");if((pt(\"iPhone\")&&!pt(\"iPod\")&&!pt(\"iPad\")||pt(\"iPad\")||pt(\"iPod\"))&&r.navigator&&r.navigator.standalone&&n&&\"_self\"!=n?(bt(a=ye(document,\"A\"),\"HTMLAnchorElement\"),e=e instanceof Rt?e:Ft(e),a.href=jt(e),a.setAttribute(\"target\",n),t.noreferrer&&a.setAttribute(\"rel\",\"noreferrer\"),(t=document.createEvent(\"MouseEvent\")).initMouseEvent(\"click\",!0,!0,r,1),a.dispatchEvent(t),a={}):t.noreferrer?(a=zt(\"\",r,n,a),t=jt(e),a&&(Xt&&ct(t,\";\")&&(t=\"'\"+t.replace(/'/g,\"%27\")+\"'\"),a.opener=null,t='<meta name=\"referrer\" content=\"no-referrer\"><meta http-equiv=\"refresh\" content=\"0; url='+Kt(t)+'\">',t=new qt(t=(r=St())?r.createHTML(t):t,null,Bt),r=a.document)&&(r.write(function(t){return t instanceof qt&&t.constructor===qt?t.a:(M(\"expected object of type SafeHtml, got '\"+t+\"' of type \"+p(t)),\"type_error:SafeHtml\")}(t)),r.close())):(a=zt(e,r,n,a))&&t.noopener&&(a.opener=null),a)try{a.focus()}catch(s){}return a}var mr=/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/,br=/^[^@]+@[^@]+$/;function _r(){var t=null;return new Ee((function(e){\"complete\"==u.document.readyState?e():(t=function(){e()},pn(window,\"load\",t))})).o((function(e){throw dn(window,\"load\",t),e}))}function wr(t){return t=t||Pr(),!(\"file:\"!==Lr()&&\"ionic:\"!==Lr()||!t.toLowerCase().match(/iphone|ipad|ipod|android/))}function Er(){var t=u.window;try{return!(!t||t==t.top)}catch(e){return!1}}function Tr(){return\"undefined\"!==typeof u.WorkerGlobalScope&&\"function\"===typeof u.importScripts}function Ir(){return e.a.INTERNAL.hasOwnProperty(\"reactNative\")?\"ReactNative\":e.a.INTERNAL.hasOwnProperty(\"node\")?\"Node\":Tr()?\"Worker\":\"Browser\"}function Sr(){var t=Ir();return\"ReactNative\"===t||\"Node\"===t}var Or=\"Firefox\",Cr=\"Chrome\";function kr(t){var e=t.toLowerCase();return ct(e,\"opera/\")||ct(e,\"opr/\")||ct(e,\"opios/\")?\"Opera\":ct(e,\"iemobile\")?\"IEMobile\":ct(e,\"msie\")||ct(e,\"trident/\")?\"IE\":ct(e,\"edge/\")?\"Edge\":ct(e,\"firefox/\")?Or:ct(e,\"silk/\")?\"Silk\":ct(e,\"blackberry\")?\"Blackberry\":ct(e,\"webos\")?\"Webos\":!ct(e,\"safari/\")||ct(e,\"chrome/\")||ct(e,\"crios/\")||ct(e,\"android\")?!ct(e,\"chrome/\")&&!ct(e,\"crios/\")||ct(e,\"edge/\")?ct(e,\"android\")?\"Android\":(t=t.match(/([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/))&&2==t.length?t[1]:\"Other\":Cr:\"Safari\"}var Nr={ld:\"FirebaseCore-web\",nd:\"FirebaseUI-web\"};function Ar(t,e){e=e||[];var n,r=[],i={};for(n in Nr)i[Nr[n]]=!0;for(n=0;n<e.length;n++)\"undefined\"!==typeof i[e[n]]&&(delete i[e[n]],r.push(e[n]));return r.sort(),(e=r).length||(e=[\"FirebaseCore-web\"]),\"Browser\"===(r=Ir())?r=kr(i=Pr()):\"Worker\"===r&&(r=kr(i=Pr())+\"-\"+r),r+\"/JsCore/\"+t+\"/\"+e.join(\",\")}function Pr(){return u.navigator&&u.navigator.userAgent||\"\"}function Rr(t,e){t=t.split(\".\"),e=e||u;for(var n=0;n<t.length&&\"object\"==typeof e&&null!=e;n++)e=e[t[n]];return n!=t.length&&(e=void 0),e}function jr(){try{var t=u.localStorage,e=qr();if(t)return t.setItem(e,\"1\"),t.removeItem(e),!hr()||!!u.indexedDB}catch(n){return Tr()&&!!u.indexedDB}return!1}function xr(){return(Dr()||\"chrome-extension:\"===Lr()||wr())&&!Sr()&&jr()&&!Tr()}function Dr(){return\"http:\"===Lr()||\"https:\"===Lr()}function Lr(){return u.location&&u.location.protocol||null}function Mr(t){return!vr(t=t||Pr())&&kr(t)!=Or}function Fr(t){return\"undefined\"===typeof t?null:or(t)}function Ur(t){var e,n={};for(e in t)t.hasOwnProperty(e)&&null!==t[e]&&void 0!==t[e]&&(n[e]=t[e]);return n}function Vr(t){if(null!==t)return JSON.parse(t)}function qr(t){return t||Math.floor(1e9*Math.random()).toString()}function Br(t){return\"Safari\"!=kr(t=t||Pr())&&!t.toLowerCase().match(/iphone|ipad|ipod/)}function zr(){var t=u.___jsl;if(t&&t.H)for(var e in t.H)if(t.H[e].r=t.H[e].r||[],t.H[e].L=t.H[e].L||[],t.H[e].r=t.H[e].L.concat(),t.CP)for(var n=0;n<t.CP.length;n++)t.CP[n]=null}function Hr(t,e){if(t>e)throw Error(\"Short delay should be less than long delay!\");this.a=t,this.c=e,t=Pr(),e=Ir(),this.b=vr(t)||\"ReactNative\"===e}function Kr(){var t=u.document;return!t||\"undefined\"===typeof t.visibilityState||\"visible\"==t.visibilityState}function Wr(t){try{var e=new Date(parseInt(t,10));if(!isNaN(e.getTime())&&!/[^0-9]/.test(t))return e.toUTCString()}catch(n){}return null}function Gr(){return!(!Rr(\"fireauth.oauthhelper\",u)&&!Rr(\"fireauth.iframe\",u))}Hr.prototype.get=function(){var t=u.navigator;return!t||\"boolean\"!==typeof t.onLine||!Dr()&&\"chrome-extension:\"!==Lr()&&\"undefined\"===typeof t.connection||t.onLine?this.b?this.c:this.a:Math.min(5e3,this.a)};var Qr,Yr={};function Jr(t){Yr[t]||(Yr[t]=!0,\"undefined\"!==typeof console&&\"function\"===typeof console.warn&&console.warn(t))}try{var Xr={};Object.defineProperty(Xr,\"abcd\",{configurable:!0,enumerable:!0,value:1}),Object.defineProperty(Xr,\"abcd\",{configurable:!0,enumerable:!0,value:2}),Qr=2==Xr.abcd}catch(fa){Qr=!1}function $r(t,e,n){Qr?Object.defineProperty(t,e,{configurable:!0,enumerable:!0,value:n}):t[e]=n}function Zr(t,e){if(e)for(var n in e)e.hasOwnProperty(n)&&$r(t,n,e[n])}function ti(t){var e={};return Zr(e,t),e}function ei(t){var e=t;if(\"object\"==typeof t&&null!=t)for(var n in e=\"length\"in t?[]:{},t)$r(e,n,ei(t[n]));return e}function ni(t){var e=t&&(t[si]?\"phone\":null);if(!(e&&t&&t[ai]))throw new C(\"internal-error\",\"Internal assert: invalid MultiFactorInfo object\");$r(this,\"uid\",t[ai]),$r(this,\"displayName\",t[ii]||null);var n=null;t[oi]&&(n=new Date(t[oi]).toUTCString()),$r(this,\"enrollmentTime\",n),$r(this,\"factorId\",e)}function ri(t){try{var e=new ui(t)}catch(n){e=null}return e}ni.prototype.w=function(){return{uid:this.uid,displayName:this.displayName,factorId:this.factorId,enrollmentTime:this.enrollmentTime}};var ii=\"displayName\",oi=\"enrolledAt\",ai=\"mfaEnrollmentId\",si=\"phoneInfo\";function ui(t){ni.call(this,t),$r(this,\"phoneNumber\",t[si])}function ci(t){var e={},n=t[pi],r=t[vi],i=t[yi];if(t=ri(t[di]),!i||i!=hi&&i!=fi&&!n||i==fi&&!r||i==li&&!t)throw Error(\"Invalid checkActionCode response!\");i==fi?(e[mi]=n||null,e[_i]=n||null,e[gi]=r):(e[mi]=r||null,e[_i]=r||null,e[gi]=n||null),e[bi]=t||null,$r(this,Ei,i),$r(this,wi,ei(e))}S(ui,ni),ui.prototype.w=function(){var t=ui.$a.w.call(this);return t.phoneNumber=this.phoneNumber,t};var li=\"REVERT_SECOND_FACTOR_ADDITION\",hi=\"EMAIL_SIGNIN\",fi=\"VERIFY_AND_CHANGE_EMAIL\",pi=\"email\",di=\"mfaInfo\",vi=\"newEmail\",yi=\"requestType\",gi=\"email\",mi=\"fromEmail\",bi=\"multiFactorInfo\",_i=\"previousEmail\",wi=\"data\",Ei=\"operation\";function Ti(t){var e=Vn(t=qn(t),Ii)||null,n=Vn(t,Si)||null,r=Vn(t,ki)||null;if(r=r&&Ai[r]||null,!e||!n||!r)throw new C(\"argument-error\",Ii+\", \"+Si+\"and \"+ki+\" are required in a valid action code URL.\");Zr(this,{apiKey:e,operation:r,code:n,continueUrl:Vn(t,Oi)||null,languageCode:Vn(t,Ci)||null,tenantId:Vn(t,Ni)||null})}var Ii=\"apiKey\",Si=\"oobCode\",Oi=\"continueUrl\",Ci=\"languageCode\",ki=\"mode\",Ni=\"tenantId\",Ai={recoverEmail:\"RECOVER_EMAIL\",resetPassword:\"PASSWORD_RESET\",revertSecondFactorAddition:li,signIn:hi,verifyAndChangeEmail:fi,verifyEmail:\"VERIFY_EMAIL\"};function Pi(t){try{return new Ti(t)}catch(e){return null}}function Ri(t){var e=t[Mi];if(\"undefined\"===typeof e)throw new C(\"missing-continue-uri\");if(\"string\"!==typeof e||\"string\"===typeof e&&!e.length)throw new C(\"invalid-continue-uri\");this.i=e,this.b=this.a=null,this.g=!1;var n=t[ji];if(n&&\"object\"===typeof n){e=n[Vi];var r=n[Fi];if(n=n[Ui],\"string\"===typeof e&&e.length){if(this.a=e,\"undefined\"!==typeof r&&\"boolean\"!==typeof r)throw new C(\"argument-error\",Fi+\" property must be a boolean when specified.\");if(this.g=!!r,\"undefined\"!==typeof n&&(\"string\"!==typeof n||\"string\"===typeof n&&!n.length))throw new C(\"argument-error\",Ui+\" property must be a non empty string when specified.\");this.b=n||null}else{if(\"undefined\"!==typeof e)throw new C(\"argument-error\",Vi+\" property must be a non empty string when specified.\");if(\"undefined\"!==typeof r||\"undefined\"!==typeof n)throw new C(\"missing-android-pkg-name\")}}else if(\"undefined\"!==typeof n)throw new C(\"argument-error\",ji+\" property must be a non null object when specified.\");if(this.f=null,(e=t[Li])&&\"object\"===typeof e){if(\"string\"===typeof(e=e[qi])&&e.length)this.f=e;else if(\"undefined\"!==typeof e)throw new C(\"argument-error\",qi+\" property must be a non empty string when specified.\")}else if(\"undefined\"!==typeof e)throw new C(\"argument-error\",Li+\" property must be a non null object when specified.\");if(\"undefined\"!==typeof(e=t[Di])&&\"boolean\"!==typeof e)throw new C(\"argument-error\",Di+\" property must be a boolean when specified.\");if(this.c=!!e,\"undefined\"!==typeof(t=t[xi])&&(\"string\"!==typeof t||\"string\"===typeof t&&!t.length))throw new C(\"argument-error\",xi+\" property must be a non empty string when specified.\");this.h=t||null}var ji=\"android\",xi=\"dynamicLinkDomain\",Di=\"handleCodeInApp\",Li=\"iOS\",Mi=\"url\",Fi=\"installApp\",Ui=\"minimumVersion\",Vi=\"packageName\",qi=\"bundleId\";function Bi(t){var e={};for(var n in e.continueUrl=t.i,e.canHandleCodeInApp=t.c,(e.androidPackageName=t.a)&&(e.androidMinimumVersion=t.b,e.androidInstallApp=t.g),e.iOSBundleId=t.f,e.dynamicLinkDomain=t.h,e)null===e[n]&&delete e[n];return e}var zi=null;function Hi(t){var e=\"\";return function(t,e){function n(e){for(;r<t.length;){var n=t.charAt(r++),i=zi[n];if(null!=i)return i;if(!/^[\\s\\xa0]*$/.test(n))throw Error(\"Unknown base64 encoding at char: \"+n)}return e}!function(){if(!zi){zi={};for(var t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split(\"\"),e=[\"+/=\",\"+/\",\"-_=\",\"-_.\",\"-_\"],n=0;5>n;n++)for(var r=t.concat(e[n].split(\"\")),i=0;i<r.length;i++){var o=r[i];void 0===zi[o]&&(zi[o]=i)}}}();for(var r=0;;){var i=n(-1),o=n(0),a=n(64),s=n(64);if(64===s&&-1===i)break;e(i<<2|o>>4),64!=a&&(e(o<<4&240|a>>2),64!=s&&e(a<<6&192|s))}}(t,(function(t){e+=String.fromCharCode(t)})),e}function Ki(t){var e=Gi(t);if(!(e&&e.sub&&e.iss&&e.aud&&e.exp))throw Error(\"Invalid JWT\");this.i=t,this.a=e.exp,this.h=e.sub,t=Date.now()/1e3,this.g=e.iat||(t>this.a?this.a:t),this.b=e.provider_id||e.firebase&&e.firebase.sign_in_provider||null,this.f=e.firebase&&e.firebase.tenant||null,this.c=!!e.is_anonymous||\"anonymous\"==this.b}function Wi(t){try{return new Ki(t)}catch(e){return null}}function Gi(t){if(!t)return null;if(3!=(t=t.split(\".\")).length)return null;for(var e=(4-(t=t[1]).length%4)%4,n=0;n<e;n++)t+=\".\";try{return JSON.parse(Hi(t))}catch(r){}return null}Ki.prototype.S=function(){return this.f},Ki.prototype.l=function(){return this.c},Ki.prototype.toString=function(){return this.i};var Qi=\"oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version\".split(\" \"),Yi=[\"client_id\",\"response_type\",\"scope\",\"redirect_uri\",\"state\"],Ji={md:{Ja:\"locale\",ua:700,ta:600,fa:\"facebook.com\",Wa:Yi},od:{Ja:null,ua:500,ta:750,fa:\"github.com\",Wa:Yi},pd:{Ja:\"hl\",ua:515,ta:680,fa:\"google.com\",Wa:Yi},vd:{Ja:\"lang\",ua:485,ta:705,fa:\"twitter.com\",Wa:Qi},jd:{Ja:\"locale\",ua:640,ta:600,fa:\"apple.com\",Wa:[]}};function Xi(t){for(var e in Ji)if(Ji[e].fa==t)return Ji[e];return null}function $i(t){var e={};e[\"facebook.com\"]=ro,e[\"google.com\"]=oo,e[\"github.com\"]=io,e[\"twitter.com\"]=ao;var n=t&&t[to];try{if(n)return e[n]?new e[n](t):new no(t);if(\"undefined\"!==typeof t[Zi])return new eo(t)}catch(r){}return null}var Zi=\"idToken\",to=\"providerId\";function eo(t){var e=t[to];if(!e&&t[Zi]){var n=Wi(t[Zi]);n&&n.b&&(e=n.b)}if(!e)throw Error(\"Invalid additional user info!\");\"anonymous\"!=e&&\"custom\"!=e||(e=null),n=!1,\"undefined\"!==typeof t.isNewUser?n=!!t.isNewUser:\"identitytoolkit#SignupNewUserResponse\"===t.kind&&(n=!0),$r(this,\"providerId\",e),$r(this,\"isNewUser\",n)}function no(t){eo.call(this,t),$r(this,\"profile\",ei((t=Vr(t.rawUserInfo||\"{}\"))||{}))}function ro(t){if(no.call(this,t),\"facebook.com\"!=this.providerId)throw Error(\"Invalid provider ID!\")}function io(t){if(no.call(this,t),\"github.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");$r(this,\"username\",this.profile&&this.profile.login||null)}function oo(t){if(no.call(this,t),\"google.com\"!=this.providerId)throw Error(\"Invalid provider ID!\")}function ao(t){if(no.call(this,t),\"twitter.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");$r(this,\"username\",t.screenName||null)}function so(t){var e=qn(t),n=Vn(e,\"link\"),r=Vn(qn(n),\"link\");return e=Vn(e,\"deep_link_id\"),Vn(qn(e),\"link\")||e||r||n||t}function uo(t,e){if(!t&&!e)throw new C(\"internal-error\",\"Internal assert: no raw session string available\");if(t&&e)throw new C(\"internal-error\",\"Internal assert: unable to determine the session type\");this.a=t||null,this.b=e||null,this.type=this.a?co:lo}S(no,eo),S(ro,no),S(io,no),S(oo,no),S(ao,no);var co=\"enroll\",lo=\"signin\";function ho(){}function fo(t,e){return t.then((function(t){if(t[ns]){var n=Wi(t[ns]);if(!n||e!=n.h)throw new C(\"user-mismatch\");return t}throw new C(\"user-mismatch\")})).o((function(t){throw t&&t.code&&t.code==A+\"user-not-found\"?new C(\"user-mismatch\"):t}))}function po(t,e){if(!e)throw new C(\"internal-error\",\"failed to construct a credential\");this.a=e,$r(this,\"providerId\",t),$r(this,\"signInMethod\",t)}function vo(t){return{pendingToken:t.a,requestUri:\"http://localhost\"}}function yo(t){if(t&&t.providerId&&t.signInMethod&&0==t.providerId.indexOf(\"saml.\")&&t.pendingToken)try{return new po(t.providerId,t.pendingToken)}catch(e){}return null}function go(t,e,n){if(this.a=null,e.idToken||e.accessToken)e.idToken&&$r(this,\"idToken\",e.idToken),e.accessToken&&$r(this,\"accessToken\",e.accessToken),e.nonce&&!e.pendingToken&&$r(this,\"nonce\",e.nonce),e.pendingToken&&(this.a=e.pendingToken);else{if(!e.oauthToken||!e.oauthTokenSecret)throw new C(\"internal-error\",\"failed to construct a credential\");$r(this,\"accessToken\",e.oauthToken),$r(this,\"secret\",e.oauthTokenSecret)}$r(this,\"providerId\",t),$r(this,\"signInMethod\",n)}function mo(t){var e={};return t.idToken&&(e.id_token=t.idToken),t.accessToken&&(e.access_token=t.accessToken),t.secret&&(e.oauth_token_secret=t.secret),e.providerId=t.providerId,t.nonce&&!t.a&&(e.nonce=t.nonce),e={postBody:Zn(e).toString(),requestUri:\"http://localhost\"},t.a&&(delete e.postBody,e.pendingToken=t.a),e}function bo(t){if(t&&t.providerId&&t.signInMethod){var e={idToken:t.oauthIdToken,accessToken:t.oauthTokenSecret?null:t.oauthAccessToken,oauthTokenSecret:t.oauthTokenSecret,oauthToken:t.oauthTokenSecret&&t.oauthAccessToken,nonce:t.nonce,pendingToken:t.pendingToken};try{return new go(t.providerId,e,t.signInMethod)}catch(n){}}return null}function _o(t,e){this.Pc=e||[],Zr(this,{providerId:t,isOAuthProvider:!0}),this.Hb={},this.ob=(Xi(t)||{}).Ja||null,this.nb=null}function wo(t){if(\"string\"!==typeof t||0!=t.indexOf(\"saml.\"))throw new C(\"argument-error\",'SAML provider IDs must be prefixed with \"saml.\"');_o.call(this,t,[])}function Eo(t){_o.call(this,t,Yi),this.a=[]}function To(){Eo.call(this,\"facebook.com\")}function Io(t){if(!t)throw new C(\"argument-error\",\"credential failed: expected 1 argument (the OAuth access token).\");var e=t;return y(t)&&(e=t.accessToken),(new To).credential({accessToken:e})}function So(){Eo.call(this,\"github.com\")}function Oo(t){if(!t)throw new C(\"argument-error\",\"credential failed: expected 1 argument (the OAuth access token).\");var e=t;return y(t)&&(e=t.accessToken),(new So).credential({accessToken:e})}function Co(){Eo.call(this,\"google.com\"),this.Ca(\"profile\")}function ko(t,e){var n=t;return y(t)&&(n=t.idToken,e=t.accessToken),(new Co).credential({idToken:n,accessToken:e})}function No(){_o.call(this,\"twitter.com\",Qi)}function Ao(t,e){var n=t;if(y(n)||(n={oauthToken:t,oauthTokenSecret:e}),!n.oauthToken||!n.oauthTokenSecret)throw new C(\"argument-error\",\"credential failed: expected 2 arguments (the OAuth access token and secret).\");return new go(\"twitter.com\",n,\"twitter.com\")}function Po(t,e,n){this.a=t,this.f=e,$r(this,\"providerId\",\"password\"),$r(this,\"signInMethod\",n===jo.EMAIL_LINK_SIGN_IN_METHOD?jo.EMAIL_LINK_SIGN_IN_METHOD:jo.EMAIL_PASSWORD_SIGN_IN_METHOD)}function Ro(t){return t&&t.email&&t.password?new Po(t.email,t.password,t.signInMethod):null}function jo(){Zr(this,{providerId:\"password\",isOAuthProvider:!1})}function xo(t,e){if(!(e=Do(e)))throw new C(\"argument-error\",\"Invalid email link!\");return new Po(t,e.code,jo.EMAIL_LINK_SIGN_IN_METHOD)}function Do(t){return(t=Pi(t=so(t)))&&t.operation===hi?t:null}function Lo(t){if(!(t.cb&&t.bb||t.La&&t.ea))throw new C(\"internal-error\");this.a=t,$r(this,\"providerId\",\"phone\"),this.fa=\"phone\",$r(this,\"signInMethod\",\"phone\")}function Mo(t){if(t&&\"phone\"===t.providerId&&(t.verificationId&&t.verificationCode||t.temporaryProof&&t.phoneNumber)){var e={};return K([\"verificationId\",\"verificationCode\",\"temporaryProof\",\"phoneNumber\"],(function(n){t[n]&&(e[n]=t[n])})),new Lo(e)}return null}function Fo(t){return t.a.La&&t.a.ea?{temporaryProof:t.a.La,phoneNumber:t.a.ea}:{sessionInfo:t.a.cb,code:t.a.bb}}function Uo(t){try{this.a=t||e.a.auth()}catch(n){throw new C(\"argument-error\",\"Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().\")}Zr(this,{providerId:\"phone\",isOAuthProvider:!1})}function Vo(t,e){if(!t)throw new C(\"missing-verification-id\");if(!e)throw new C(\"missing-verification-code\");return new Lo({cb:t,bb:e})}function qo(t){if(t.temporaryProof&&t.phoneNumber)return new Lo({La:t.temporaryProof,ea:t.phoneNumber});var e=t&&t.providerId;if(!e||\"password\"===e)return null;var n=t&&t.oauthAccessToken,r=t&&t.oauthTokenSecret,i=t&&t.nonce,o=t&&t.oauthIdToken,a=t&&t.pendingToken;try{switch(e){case\"google.com\":return ko(o,n);case\"facebook.com\":return Io(n);case\"github.com\":return Oo(n);case\"twitter.com\":return Ao(n,r);default:return n||r||o||a?a?0==e.indexOf(\"saml.\")?new po(e,a):new go(e,{pendingToken:a,idToken:t.oauthIdToken,accessToken:t.oauthAccessToken},e):new Eo(e).credential({idToken:o,accessToken:n,rawNonce:i}):null}}catch(s){return null}}function Bo(t){if(!t.isOAuthProvider)throw new C(\"invalid-oauth-provider\")}function zo(t,e,n,r,i,o,a){if(this.c=t,this.b=e||null,this.g=n||null,this.f=r||null,this.h=o||null,this.i=a||null,this.a=i||null,!this.g&&!this.a)throw new C(\"invalid-auth-event\");if(this.g&&this.a)throw new C(\"invalid-auth-event\");if(this.g&&!this.f)throw new C(\"invalid-auth-event\")}function Ho(t){return(t=t||{}).type?new zo(t.type,t.eventId,t.urlResponse,t.sessionId,t.error&&k(t.error),t.postBody,t.tenantId):null}function Ko(){this.b=null,this.a=[]}uo.prototype.Ha=function(){return this.a?Ne(this.a):Ne(this.b)},uo.prototype.w=function(){return this.type==co?{multiFactorSession:{idToken:this.a}}:{multiFactorSession:{pendingCredential:this.b}}},ho.prototype.ja=function(){},ho.prototype.b=function(){},ho.prototype.c=function(){},ho.prototype.w=function(){},po.prototype.ja=function(t){return Is(t,vo(this))},po.prototype.b=function(t,e){var n=vo(this);return n.idToken=e,Ss(t,n)},po.prototype.c=function(t,e){return fo(Os(t,vo(this)),e)},po.prototype.w=function(){return{providerId:this.providerId,signInMethod:this.signInMethod,pendingToken:this.a}},go.prototype.ja=function(t){return Is(t,mo(this))},go.prototype.b=function(t,e){var n=mo(this);return n.idToken=e,Ss(t,n)},go.prototype.c=function(t,e){return fo(Os(t,mo(this)),e)},go.prototype.w=function(){var t={providerId:this.providerId,signInMethod:this.signInMethod};return this.idToken&&(t.oauthIdToken=this.idToken),this.accessToken&&(t.oauthAccessToken=this.accessToken),this.secret&&(t.oauthTokenSecret=this.secret),this.nonce&&(t.nonce=this.nonce),this.a&&(t.pendingToken=this.a),t},_o.prototype.Ka=function(t){return this.Hb=yt(t),this},S(wo,_o),S(Eo,_o),Eo.prototype.Ca=function(t){return Y(this.a,t)||this.a.push(t),this},Eo.prototype.Pb=function(){return Z(this.a)},Eo.prototype.credential=function(t,e){var n;if(!(n=y(t)?{idToken:t.idToken||null,accessToken:t.accessToken||null,nonce:t.rawNonce||null}:{idToken:t||null,accessToken:e||null}).idToken&&!n.accessToken)throw new C(\"argument-error\",\"credential failed: must provide the ID token and/or the access token.\");return new go(this.providerId,n,this.providerId)},S(To,Eo),$r(To,\"PROVIDER_ID\",\"facebook.com\"),$r(To,\"FACEBOOK_SIGN_IN_METHOD\",\"facebook.com\"),S(So,Eo),$r(So,\"PROVIDER_ID\",\"github.com\"),$r(So,\"GITHUB_SIGN_IN_METHOD\",\"github.com\"),S(Co,Eo),$r(Co,\"PROVIDER_ID\",\"google.com\"),$r(Co,\"GOOGLE_SIGN_IN_METHOD\",\"google.com\"),S(No,_o),$r(No,\"PROVIDER_ID\",\"twitter.com\"),$r(No,\"TWITTER_SIGN_IN_METHOD\",\"twitter.com\"),Po.prototype.ja=function(t){return this.signInMethod==jo.EMAIL_LINK_SIGN_IN_METHOD?su(t,xs,{email:this.a,oobCode:this.f}):su(t,nu,{email:this.a,password:this.f})},Po.prototype.b=function(t,e){return this.signInMethod==jo.EMAIL_LINK_SIGN_IN_METHOD?su(t,Ds,{idToken:e,email:this.a,oobCode:this.f}):su(t,Qs,{idToken:e,email:this.a,password:this.f})},Po.prototype.c=function(t,e){return fo(this.ja(t),e)},Po.prototype.w=function(){return{email:this.a,password:this.f,signInMethod:this.signInMethod}},Zr(jo,{PROVIDER_ID:\"password\"}),Zr(jo,{EMAIL_LINK_SIGN_IN_METHOD:\"emailLink\"}),Zr(jo,{EMAIL_PASSWORD_SIGN_IN_METHOD:\"password\"}),Lo.prototype.ja=function(t){return t.eb(Fo(this))},Lo.prototype.b=function(t,e){var n=Fo(this);return n.idToken=e,su(t,iu,n)},Lo.prototype.c=function(t,e){var n=Fo(this);return n.operation=\"REAUTH\",fo(t=su(t,ou,n),e)},Lo.prototype.w=function(){var t={providerId:\"phone\"};return this.a.cb&&(t.verificationId=this.a.cb),this.a.bb&&(t.verificationCode=this.a.bb),this.a.La&&(t.temporaryProof=this.a.La),this.a.ea&&(t.phoneNumber=this.a.ea),t},Uo.prototype.eb=function(t,e){var n=this.a.a;return Ne(e.verify()).then((function(r){if(\"string\"!==typeof r)throw new C(\"argument-error\",\"An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.\");switch(e.type){case\"recaptcha\":var i=y(t)?t.session:null,o=y(t)?t.phoneNumber:t;return(i&&i.type==co?i.Ha().then((function(t){return function(t,e){return su(t,Js,e).then((function(t){return t.phoneSessionInfo.sessionInfo}))}(n,{idToken:t,phoneEnrollmentInfo:{phoneNumber:o,recaptchaToken:r}})})):i&&i.type==lo?i.Ha().then((function(e){return function(t,e){return su(t,Xs,e).then((function(t){return t.phoneResponseInfo.sessionInfo}))}(n,{mfaPendingCredential:e,mfaEnrollmentId:t.multiFactorHint&&t.multiFactorHint.uid||t.multiFactorUid,phoneSignInInfo:{recaptchaToken:r}})})):function(t,e){return su(t,Ws,e)}(n,{phoneNumber:o,recaptchaToken:r})).then((function(t){return\"function\"===typeof e.reset&&e.reset(),t}),(function(t){throw\"function\"===typeof e.reset&&e.reset(),t}));default:throw new C(\"argument-error\",'Only firebase.auth.ApplicationVerifiers with type=\"recaptcha\" are currently supported.')}}))},Zr(Uo,{PROVIDER_ID:\"phone\"}),Zr(Uo,{PHONE_SIGN_IN_METHOD:\"phone\"}),zo.prototype.getUid=function(){var t=[];return t.push(this.c),this.b&&t.push(this.b),this.f&&t.push(this.f),this.i&&t.push(this.i),t.join(\"-\")},zo.prototype.S=function(){return this.i},zo.prototype.w=function(){return{type:this.c,eventId:this.b,urlResponse:this.g,sessionId:this.f,postBody:this.h,tenantId:this.i,error:this.a&&this.a.w()}};var Wo,Go=null;function Qo(t){var e=\"unauthorized-domain\",n=void 0,r=qn(t);t=r.a,\"chrome-extension\"==(r=r.f)?n=Ht(\"This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.\",t):\"http\"==r||\"https\"==r?n=Ht(\"This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.\",t):e=\"operation-not-supported-in-this-environment\",C.call(this,e,n)}function Yo(t,e,n){C.call(this,t,n),(t=e||{}).Ib&&$r(this,\"email\",t.Ib),t.ea&&$r(this,\"phoneNumber\",t.ea),t.credential&&$r(this,\"credential\",t.credential),t.Yb&&$r(this,\"tenantId\",t.Yb)}function Jo(t){if(t.code){var e=t.code||\"\";0==e.indexOf(A)&&(e=e.substring(A.length));var n={credential:qo(t),Yb:t.tenantId};if(t.email)n.Ib=t.email;else if(t.phoneNumber)n.ea=t.phoneNumber;else if(!n.credential)return new C(e,t.message||void 0);return new Yo(e,n,t.message)}return null}function Xo(){}function $o(t){return t.c||(t.c=t.b())}function Zo(){}function ta(t){if(!t.f&&\"undefined\"==typeof XMLHttpRequest&&\"undefined\"!=typeof ActiveXObject){for(var e=[\"MSXML2.XMLHTTP.6.0\",\"MSXML2.XMLHTTP.3.0\",\"MSXML2.XMLHTTP\",\"Microsoft.XMLHTTP\"],n=0;n<e.length;n++){var r=e[n];try{return new ActiveXObject(r),t.f=r}catch(i){}}throw Error(\"Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed\")}return t.f}function ea(){}function na(){this.a=new XDomainRequest,this.readyState=0,this.onreadystatechange=null,this.responseType=this.responseText=this.response=\"\",this.status=-1,this.statusText=\"\",this.a.onload=E(this.pc,this),this.a.onerror=E(this.Rb,this),this.a.onprogress=E(this.qc,this),this.a.ontimeout=E(this.uc,this)}function ra(t,e){t.readyState=e,t.onreadystatechange&&t.onreadystatechange()}function ia(t,e,n){this.reset(t,e,n,void 0,void 0)}S(Qo,C),S(Yo,C),Yo.prototype.w=function(){var t={code:this.code,message:this.message};this.email&&(t.email=this.email),this.phoneNumber&&(t.phoneNumber=this.phoneNumber),this.tenantId&&(t.tenantId=this.tenantId);var e=this.credential&&this.credential.w();return e&&mt(t,e),t},Yo.prototype.toJSON=function(){return this.w()},Xo.prototype.c=null,S(Zo,Xo),Zo.prototype.a=function(){var t=ta(this);return t?new ActiveXObject(t):new XMLHttpRequest},Zo.prototype.b=function(){var t={};return ta(this)&&(t[0]=!0,t[1]=!0),t},Wo=new Zo,S(ea,Xo),ea.prototype.a=function(){var t=new XMLHttpRequest;if(\"withCredentials\"in t)return t;if(\"undefined\"!=typeof XDomainRequest)return new na;throw Error(\"Unsupported browser\")},ea.prototype.b=function(){return{}},(n=na.prototype).open=function(t,e,n){if(null!=n&&!n)throw Error(\"Only async requests are supported.\");this.a.open(t,e)},n.send=function(t){if(t){if(\"string\"!=typeof t)throw Error(\"Only string data is supported\");this.a.send(t)}else this.a.send()},n.abort=function(){this.a.abort()},n.setRequestHeader=function(){},n.getResponseHeader=function(t){return\"content-type\"==t.toLowerCase()?this.a.contentType:\"\"},n.pc=function(){this.status=200,this.response=this.responseText=this.a.responseText,ra(this,4)},n.Rb=function(){this.status=500,this.response=this.responseText=\"\",ra(this,4)},n.uc=function(){this.Rb()},n.qc=function(){this.status=200,ra(this,1)},n.getAllResponseHeaders=function(){return\"content-type: \"+this.a.contentType},ia.prototype.a=null;function oa(t){this.f=t,this.b=this.c=this.a=null}function aa(t,e){this.name=t,this.value=e}ia.prototype.reset=function(t,e,n,r,i){\"number\"==typeof i||0,r||I(),delete this.a},aa.prototype.toString=function(){return this.name};var sa=new aa(\"SEVERE\",1e3),ua=new aa(\"WARNING\",900),ca=new aa(\"CONFIG\",700),la=new aa(\"FINE\",500);function ha(t){return t.c?t.c:t.a?ha(t.a):(M(\"Root logger has no level set.\"),null)}oa.prototype.log=function(t,e,n){if(t.value>=ha(this).value)for(v(e)&&(e=e()),t=new ia(t,String(e),this.f),n&&(t.a=n),n=this;n;)n=n.a};var fa,pa={},da=null;function va(t){var e;if(da||(da=new oa(\"\"),pa[\"\"]=da,da.c=ca),!(e=pa[t])){e=new oa(t);var n=t.lastIndexOf(\".\"),r=t.substr(n+1);(n=va(t.substr(0,n))).b||(n.b={}),n.b[r]=e,e.a=n,pa[t]=e}return e}function ya(t,e){t&&t.log(la,e,void 0)}function ga(t){this.f=t}function ma(t){Tn.call(this),this.u=t,this.i=void 0,this.readyState=ba,this.status=0,this.responseType=this.responseText=this.response=this.statusText=\"\",this.onreadystatechange=null,this.l=new Headers,this.b=null,this.s=\"GET\",this.f=\"\",this.a=!1,this.h=va(\"goog.net.FetchXmlHttp\"),this.m=this.c=this.g=null}S(ga,Xo),ga.prototype.a=function(){return new ma(this.f)},ga.prototype.b=(fa={},function(){return fa}),S(ma,Tn);var ba=0;function _a(t){t.c.read().then(t.oc.bind(t)).catch(t.Ta.bind(t))}function wa(t){t.readyState=4,t.g=null,t.c=null,t.m=null,Ea(t)}function Ea(t){t.onreadystatechange&&t.onreadystatechange.call(t)}function Ta(t){Tn.call(this),this.headers=new Pn,this.O=t||null,this.c=!1,this.A=this.a=null,this.i=this.P=this.l=\"\",this.f=this.N=this.h=this.G=!1,this.g=0,this.s=null,this.m=Ia,this.u=this.R=!1}(n=ma.prototype).open=function(t,e){if(this.readyState!=ba)throw this.abort(),Error(\"Error reopening a connection\");this.s=t,this.f=e,this.readyState=1,Ea(this)},n.send=function(t){if(1!=this.readyState)throw this.abort(),Error(\"need to call open() first. \");this.a=!0;var e={headers:this.l,method:this.s,credentials:this.i,cache:void 0};t&&(e.body=t),this.u.fetch(new Request(this.f,e)).then(this.tc.bind(this),this.Ta.bind(this))},n.abort=function(){this.response=this.responseText=\"\",this.l=new Headers,this.status=0,this.c&&this.c.cancel(\"Request was aborted.\"),1<=this.readyState&&this.a&&4!=this.readyState&&(this.a=!1,wa(this)),this.readyState=ba},n.tc=function(t){this.a&&(this.g=t,this.b||(this.status=this.g.status,this.statusText=this.g.statusText,this.b=t.headers,this.readyState=2,Ea(this)),this.a&&(this.readyState=3,Ea(this),this.a&&(\"arraybuffer\"===this.responseType?t.arrayBuffer().then(this.rc.bind(this),this.Ta.bind(this)):\"undefined\"!==typeof u.ReadableStream&&\"body\"in t?(this.response=this.responseText=\"\",this.c=t.body.getReader(),this.m=new TextDecoder,_a(this)):t.text().then(this.sc.bind(this),this.Ta.bind(this)))))},n.oc=function(t){if(this.a){var e=this.m.decode(t.value?t.value:new Uint8Array(0),{stream:!t.done});e&&(this.response=this.responseText+=e),t.done?wa(this):Ea(this),3==this.readyState&&_a(this)}},n.sc=function(t){this.a&&(this.response=this.responseText=t,wa(this))},n.rc=function(t){this.a&&(this.response=t,wa(this))},n.Ta=function(t){var e=this.h;e&&e.log(ua,\"Failed to fetch url \"+this.f,t instanceof Error?t:Error(t)),this.a&&wa(this)},n.setRequestHeader=function(t,e){this.l.append(t,e)},n.getResponseHeader=function(t){return this.b?this.b.get(t.toLowerCase())||\"\":((t=this.h)&&t.log(ua,\"Attempting to get response header but no headers have been received for url: \"+this.f,void 0),\"\")},n.getAllResponseHeaders=function(){if(!this.b){var t=this.h;return t&&t.log(ua,\"Attempting to get all response headers but no headers have been received for url: \"+this.f,void 0),\"\"}t=[];for(var e=this.b.entries(),n=e.next();!n.done;)n=n.value,t.push(n[0]+\": \"+n[1]),n=e.next();return t.join(\"\\r\\n\")},Object.defineProperty(ma.prototype,\"withCredentials\",{get:function(){return\"include\"===this.i},set:function(t){this.i=t?\"include\":\"same-origin\"}}),S(Ta,Tn);var Ia=\"\";Ta.prototype.b=va(\"goog.net.XhrIo\");var Sa=/^https?$/i,Oa=[\"POST\",\"PUT\"];function Ca(t,e,n,r,i){if(t.a)throw Error(\"[goog.net.XhrIo] Object is active with another request=\"+t.l+\"; newUri=\"+e);n=n?n.toUpperCase():\"GET\",t.l=e,t.i=\"\",t.P=n,t.G=!1,t.c=!0,t.a=t.O?t.O.a():Wo.a(),t.A=t.O?$o(t.O):$o(Wo),t.a.onreadystatechange=E(t.Ub,t);try{ya(t.b,La(t,\"Opening Xhr\")),t.N=!0,t.a.open(n,String(e),!0),t.N=!1}catch(a){return ya(t.b,La(t,\"Error opening Xhr: \"+a.message)),void Na(t,a)}e=r||\"\";var o=new Pn(t.headers);i&&function(t,e){if(t.forEach&&\"function\"==typeof t.forEach)t.forEach(e,void 0);else if(d(t)||\"string\"===typeof t)K(t,e,void 0);else for(var n=An(t),r=Nn(t),i=r.length,o=0;o<i;o++)e.call(void 0,r[o],n&&n[o],t)}(i,(function(t,e){o.set(e,t)})),i=function(t){t:{for(var e=ka,n=t.length,r=\"string\"===typeof t?t.split(\"\"):t,i=0;i<n;i++)if(i in r&&e.call(void 0,r[i],i,t)){e=i;break t}e=-1}return 0>e?null:\"string\"===typeof t?t.charAt(e):t[e]}(o.Y()),r=u.FormData&&e instanceof u.FormData,!Y(Oa,n)||i||r||o.set(\"Content-Type\",\"application/x-www-form-urlencoded;charset=utf-8\"),o.forEach((function(t,e){this.a.setRequestHeader(e,t)}),t),t.m&&(t.a.responseType=t.m),\"withCredentials\"in t.a&&t.a.withCredentials!==t.R&&(t.a.withCredentials=t.R);try{ja(t),0<t.g&&(t.u=function(t){return Yt&&ae(9)&&\"number\"===typeof t.timeout&&void 0!==t.ontimeout}(t.a),ya(t.b,La(t,\"Will abort after \"+t.g+\"ms if incomplete, xhr2 \"+t.u)),t.u?(t.a.timeout=t.g,t.a.ontimeout=E(t.Ma,t)):t.s=Cn(t.Ma,t.g,t)),ya(t.b,La(t,\"Sending request\")),t.h=!0,t.a.send(e),t.h=!1}catch(a){ya(t.b,La(t,\"Send error: \"+a.message)),Na(t,a)}}function ka(t){return\"content-type\"==t.toLowerCase()}function Na(t,e){t.c=!1,t.a&&(t.f=!0,t.a.abort(),t.f=!1),t.i=e,Aa(t),Ra(t)}function Aa(t){t.G||(t.G=!0,t.dispatchEvent(\"complete\"),t.dispatchEvent(\"error\"))}function Pa(t){if(t.c&&\"undefined\"!=typeof s)if(t.A[1]&&4==xa(t)&&2==Da(t))ya(t.b,La(t,\"Local request error detected and ignored\"));else if(t.h&&4==xa(t))Cn(t.Ub,0,t);else if(t.dispatchEvent(\"readystatechange\"),4==xa(t)){ya(t.b,La(t,\"Request complete\")),t.c=!1;try{var e,n=Da(t);t:switch(n){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var r=!0;break t;default:r=!1}if(!(e=r)){var i;if(i=0===n){var o=String(t.l).match(xn)[1]||null;if(!o&&u.self&&u.self.location){var a=u.self.location.protocol;o=a.substr(0,a.length-1)}i=!Sa.test(o?o.toLowerCase():\"\")}e=i}if(e)t.dispatchEvent(\"complete\"),t.dispatchEvent(\"success\");else{try{var c=2<xa(t)?t.a.statusText:\"\"}catch(l){ya(t.b,\"Can not get status: \"+l.message),c=\"\"}t.i=c+\" [\"+Da(t)+\"]\",Aa(t)}}finally{Ra(t)}}}function Ra(t,e){if(t.a){ja(t);var n=t.a,r=t.A[0]?f:null;t.a=null,t.A=null,e||t.dispatchEvent(\"ready\");try{n.onreadystatechange=r}catch(i){(t=t.b)&&t.log(sa,\"Problem encountered resetting onreadystatechange: \"+i.message,void 0)}}}function ja(t){t.a&&t.u&&(t.a.ontimeout=null),t.s&&(u.clearTimeout(t.s),t.s=null)}function xa(t){return t.a?t.a.readyState:0}function Da(t){try{return 2<xa(t)?t.a.status:-1}catch(e){return-1}}function La(t,e){return e+\" [\"+t.P+\" \"+t.l+\" \"+Da(t)+\"]\"}function Ma(t){var e=Qa;this.g=[],this.u=e,this.s=t||null,this.f=this.a=!1,this.c=void 0,this.m=this.A=this.h=!1,this.i=0,this.b=null,this.l=0}function Fa(t,e,n){t.a=!0,t.c=n,t.f=!e,Ba(t)}function Ua(t){if(t.a){if(!t.m)throw new za(t);t.m=!1}}function Va(t,e,n,r){t.g.push([e,n,r]),t.a&&Ba(t)}function qa(t){return Q(t.g,(function(t){return v(t[1])}))}function Ba(t){if(t.i&&t.a&&qa(t)){var e=t.i,n=Wa[e];n&&(u.clearTimeout(n.a),delete Wa[e]),t.i=0}t.b&&(t.b.l--,delete t.b),e=t.c;for(var r=n=!1;t.g.length&&!t.h;){var i=t.g.shift(),o=i[0],a=i[1];if(i=i[2],o=t.f?a:o)try{var s=o.call(i||t.s,e);void 0!==s&&(t.f=t.f&&(s==e||s instanceof Error),t.c=e=s),(x(e)||\"function\"===typeof u.Promise&&e instanceof u.Promise)&&(r=!0,t.h=!0)}catch(c){e=c,t.f=!0,qa(t)||(n=!0)}}t.c=e,r&&(s=E(t.v,t,!0),r=E(t.v,t,!1),e instanceof Ma?(Va(e,s,r),e.A=!0):e.then(s,r)),n&&(e=new Ka(e),Wa[e.a]=e,t.i=e.a)}function za(){D.call(this)}function Ha(){D.call(this)}function Ka(t){this.a=u.setTimeout(E(this.c,this),0),this.b=t}(n=Ta.prototype).Ma=function(){\"undefined\"!=typeof s&&this.a&&(this.i=\"Timed out after \"+this.g+\"ms, aborting\",ya(this.b,La(this,this.i)),this.dispatchEvent(\"timeout\"),this.abort(8))},n.abort=function(){this.a&&this.c&&(ya(this.b,La(this,\"Aborting\")),this.c=!1,this.f=!0,this.a.abort(),this.f=!1,this.dispatchEvent(\"complete\"),this.dispatchEvent(\"abort\"),Ra(this))},n.Da=function(){this.a&&(this.c&&(this.c=!1,this.f=!0,this.a.abort(),this.f=!1),Ra(this,!0)),Ta.$a.Da.call(this)},n.Ub=function(){this.xa||(this.N||this.h||this.f?Pa(this):this.Ic())},n.Ic=function(){Pa(this)},n.getResponse=function(){try{if(!this.a)return null;if(\"response\"in this.a)return this.a.response;switch(this.m){case Ia:case\"text\":return this.a.responseText;case\"arraybuffer\":if(\"mozResponseArrayBuffer\"in this.a)return this.a.mozResponseArrayBuffer}var t=this.b;return t&&t.log(sa,\"Response type \"+this.m+\" is not supported on this browser\",void 0),null}catch(e){return ya(this.b,\"Can not get response: \"+e.message),null}},Ma.prototype.cancel=function(t){if(this.a)this.c instanceof Ma&&this.c.cancel();else{if(this.b){var e=this.b;delete this.b,t?e.cancel(t):(e.l--,0>=e.l&&e.cancel())}this.u?this.u.call(this.s,this):this.m=!0,this.a||(t=new Ha(this),Ua(this),Fa(this,!1,t))}},Ma.prototype.v=function(t,e){this.h=!1,Fa(this,t,e)},Ma.prototype.then=function(t,e,n){var r,i,o=new Ee((function(t,e){r=t,i=e}));return Va(this,r,(function(t){t instanceof Ha?o.cancel():i(t)})),o.then(t,e,n)},Ma.prototype.$goog_Thenable=!0,S(za,D),za.prototype.message=\"Deferred has already fired\",za.prototype.name=\"AlreadyCalledError\",S(Ha,D),Ha.prototype.message=\"Deferred was canceled\",Ha.prototype.name=\"CanceledError\",Ka.prototype.c=function(){throw delete Wa[this.a],this.b};var Wa={};function Ga(t){var e={},n=e.document||document,r=Ct(t).toString(),i=ye(document,\"SCRIPT\"),o={Vb:i,Ma:void 0},a=new Ma(o),s=null,c=null!=e.timeout?e.timeout:5e3;return 0<c&&(s=window.setTimeout((function(){Ya(i,!0);var t=new $a(Xa,\"Timeout reached for loading script \"+r);Ua(a),Fa(a,!1,t)}),c),o.Ma=s),i.onload=i.onreadystatechange=function(){i.readyState&&\"loaded\"!=i.readyState&&\"complete\"!=i.readyState||(Ya(i,e.wd||!1,s),Ua(a),Fa(a,!0,null))},i.onerror=function(){Ya(i,!0,s);var t=new $a(Ja,\"Error while loading script \"+r);Ua(a),Fa(a,!1,t)},mt(o=e.attributes||{},{type:\"text/javascript\",charset:\"UTF-8\"}),he(i,o),function(t,e){bt(t,\"HTMLScriptElement\"),t.src=Ct(e),(e=t.ownerDocument&&t.ownerDocument.defaultView)&&e!=u?e=h(e.document):(null===l&&(l=h(u.document)),e=l),e&&t.setAttribute(\"nonce\",e)}(i,t),function(t){var e;return(e=(t||document).getElementsByTagName(\"HEAD\"))&&0!=e.length?e[0]:t.documentElement}(n).appendChild(i),a}function Qa(){if(this&&this.Vb){var t=this.Vb;t&&\"SCRIPT\"==t.tagName&&Ya(t,!0,this.Ma)}}function Ya(t,e,n){null!=n&&u.clearTimeout(n),t.onload=f,t.onerror=f,t.onreadystatechange=f,e&&window.setTimeout((function(){t&&t.parentNode&&t.parentNode.removeChild(t)}),0)}var Ja=0,Xa=1;function $a(t,e){var n=\"Jsloader error (code #\"+t+\")\";e&&(n+=\": \"+e),D.call(this,n),this.code=t}function Za(t){this.f=t}function ts(t,n,r){if(this.c=t,t=n||{},this.l=t.secureTokenEndpoint||\"https://securetoken.googleapis.com/v1/token\",this.v=t.secureTokenTimeout||rs,this.g=yt(t.secureTokenHeaders||is),this.i=t.firebaseEndpoint||\"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\",this.h=t.identityPlatformEndpoint||\"https://identitytoolkit.googleapis.com/v2/\",this.m=t.firebaseTimeout||os,this.a=yt(t.firebaseHeaders||as),r&&(this.a[\"X-Client-Version\"]=r,this.g[\"X-Client-Version\"]=r),r=\"Node\"==Ir(),!(r=u.XMLHttpRequest||r&&e.a.INTERNAL.node&&e.a.INTERNAL.node.XMLHttpRequest)&&!Tr())throw new C(\"internal-error\",\"The XMLHttpRequest compatibility library was not found.\");this.f=void 0,Tr()?this.f=new ga(self):Sr()?this.f=new Za(r):this.f=new ea,this.b=null}S($a,D),S(Za,Xo),Za.prototype.a=function(){return new this.f},Za.prototype.b=function(){return{}};var es,ns=\"idToken\",rs=new Hr(3e4,6e4),is={\"Content-Type\":\"application/x-www-form-urlencoded\"},os=new Hr(3e4,6e4),as={\"Content-Type\":\"application/json\"};function ss(t,e){e?t.a[\"X-Firebase-Locale\"]=e:delete t.a[\"X-Firebase-Locale\"]}function us(t,e){e&&(t.l=cs(\"https://securetoken.googleapis.com/v1/token\",e),t.i=cs(\"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\",e),t.h=cs(\"https://identitytoolkit.googleapis.com/v2/\",e))}function cs(t,e){return t=qn(t),e=qn(e.url),t.c=t.a+t.c,Ln(t,e.f),t.a=e.a,Mn(t,e.g),t.toString()}function ls(t,e){e?(t.a[\"X-Client-Version\"]=e,t.g[\"X-Client-Version\"]=e):(delete t.a[\"X-Client-Version\"],delete t.g[\"X-Client-Version\"])}function hs(t,e,n,r,i,o,a){(function(){var t=Pr();return!((t=kr(t)!=Cr?null:(t=t.match(/\\sChrome\\/(\\d+)/i))&&2==t.length?parseInt(t[1],10):null)&&30>t)&&(!Yt||!ue||9<ue)})()||Tr()?t=E(t.u,t):(es||(es=new Ee((function(t,e){!function(t,e){if(((window.gapi||{}).client||{}).request)t();else{u[ps]=function(){((window.gapi||{}).client||{}).request?t():e(Error(\"CORS_UNSUPPORTED\"))},function(t,e){Va(t,null,e,void 0)}(Ga(kt(fs,{onload:ps})),(function(){e(Error(\"CORS_UNSUPPORTED\"))}))}}(t,e)}))),t=E(t.s,t)),t(e,n,r,i,o,a)}ts.prototype.S=function(){return this.b},ts.prototype.u=function(t,e,n,r,i,o){if(Tr()&&(\"undefined\"===typeof u.fetch||\"undefined\"===typeof u.Headers||\"undefined\"===typeof u.Request))throw new C(\"operation-not-supported-in-this-environment\",\"fetch, Headers and Request native APIs or equivalent Polyfills must be available to support HTTP requests from a Worker environment.\");var a=new Ta(this.f);if(o){a.g=Math.max(0,o);var s=setTimeout((function(){a.dispatchEvent(\"timeout\")}),o)}In(a,\"complete\",(function(){s&&clearTimeout(s);var t=null;try{t=JSON.parse(function(t){try{return t.a?t.a.responseText:\"\"}catch(e){return ya(t.b,\"Can not get responseText: \"+e.message),\"\"}}(this))||null}catch(n){t=null}e&&e(t)})),Sn(a,\"ready\",(function(){s&&clearTimeout(s),Ge(this)})),Sn(a,\"timeout\",(function(){s&&clearTimeout(s),Ge(this),e&&e(null)})),Ca(a,t,n,r,i)};var fs=new _t(It,\"https://apis.google.com/js/client.js?onload=%{onload}\"),ps=\"__fcb\"+Math.floor(1e6*Math.random()).toString();function ds(t,e,n,r,i,o,a){var s=qn(e+n);Un(s,\"key\",t.c),a&&Un(s,\"cb\",I().toString());var u=\"GET\"==r;if(u)for(var c in i)i.hasOwnProperty(c)&&Un(s,c,i[c]);return new Ee((function(e,n){hs(t,s.toString(),(function(t){t?t.error?n(cu(t,o||{})):e(t):n(new C(\"network-request-failed\"))}),r,u?void 0:or(Ur(i)),t.a,t.m.get())}))}function vs(t){if(\"string\"!==typeof(t=t.email)||!br.test(t))throw new C(\"invalid-email\")}function ys(t){\"email\"in t&&vs(t)}function gs(t){if(!t[ns]){if(t.mfaPendingCredential)throw new C(\"multi-factor-auth-required\",null,yt(t));throw new C(\"internal-error\")}}function ms(t){if(t.phoneNumber||t.temporaryProof){if(!t.phoneNumber||!t.temporaryProof)throw new C(\"internal-error\")}else{if(!t.sessionInfo)throw new C(\"missing-verification-id\");if(!t.code)throw new C(\"missing-verification-code\")}}ts.prototype.s=function(t,e,n,r,i){var o=this;es.then((function(){window.gapi.client.setApiKey(o.c);var a=window.gapi.auth.getToken();window.gapi.auth.setToken(null),window.gapi.client.request({path:t,method:n,body:r,headers:i,authType:\"none\",callback:function(t){window.gapi.auth.setToken(a),e&&e(t)}})})).o((function(t){e&&e({error:{message:t&&t.message||\"CORS_UNSUPPORTED\"}})}))},ts.prototype.yb=function(){return su(this,Ys,{})},ts.prototype.Ab=function(t,e){return su(this,Gs,{idToken:t,email:e})},ts.prototype.Bb=function(t,e){return su(this,Qs,{idToken:t,password:e})};var bs={displayName:\"DISPLAY_NAME\",photoUrl:\"PHOTO_URL\"};function _s(t){if(!t.phoneVerificationInfo)throw new C(\"internal-error\");if(!t.phoneVerificationInfo.sessionInfo)throw new C(\"missing-verification-id\");if(!t.phoneVerificationInfo.code)throw new C(\"missing-verification-code\")}function ws(t){if(!t.requestUri||!t.sessionId&&!t.postBody&&!t.pendingToken)throw new C(\"internal-error\")}function Es(t,e){return e.oauthIdToken&&e.providerId&&0==e.providerId.indexOf(\"oidc.\")&&!e.pendingToken&&(t.sessionId?e.nonce=t.sessionId:t.postBody&&(er(t=new Xn(t.postBody),\"nonce\")&&(e.nonce=t.get(\"nonce\")))),e}function Ts(t){var e=null;if(t.needConfirmation?(t.code=\"account-exists-with-different-credential\",e=Jo(t)):\"FEDERATED_USER_ID_ALREADY_LINKED\"==t.errorMessage?(t.code=\"credential-already-in-use\",e=Jo(t)):\"EMAIL_EXISTS\"==t.errorMessage?(t.code=\"email-already-in-use\",e=Jo(t)):t.errorMessage&&(e=uu(t.errorMessage)),e)throw e;gs(t)}function Is(t,e){return e.returnIdpCredential=!0,su(t,$s,e)}function Ss(t,e){return e.returnIdpCredential=!0,su(t,tu,e)}function Os(t,e){return e.returnIdpCredential=!0,e.autoCreate=!1,su(t,Zs,e)}function Cs(t){if(!t.oobCode)throw new C(\"invalid-action-code\")}(n=ts.prototype).Cb=function(t,e){var n={idToken:t},r=[];return dt(bs,(function(t,i){var o=e[i];null===o?r.push(t):i in e&&(n[i]=o)})),r.length&&(n.deleteAttribute=r),su(this,Gs,n)},n.ub=function(t,e){return mt(t={requestType:\"PASSWORD_RESET\",email:t},e),su(this,Bs,t)},n.vb=function(t,e){return mt(t={requestType:\"EMAIL_SIGNIN\",email:t},e),su(this,Us,t)},n.tb=function(t,e){return mt(t={requestType:\"VERIFY_EMAIL\",idToken:t},e),su(this,Vs,t)},n.Db=function(t,e,n){return mt(t={requestType:\"VERIFY_AND_CHANGE_EMAIL\",idToken:t,newEmail:e},n),su(this,qs,t)},n.eb=function(t){return su(this,ru,t)},n.mb=function(t,e){return su(this,Ks,{oobCode:t,newPassword:e})},n.Qa=function(t){return su(this,Ns,{oobCode:t})},n.ib=function(t){return su(this,ks,{oobCode:t})};var ks={endpoint:\"setAccountInfo\",B:Cs,Z:\"email\",C:!0},Ns={endpoint:\"resetPassword\",B:Cs,F:function(t){var e=t.requestType;if(!e||!t.email&&\"EMAIL_SIGNIN\"!=e&&\"VERIFY_AND_CHANGE_EMAIL\"!=e)throw new C(\"internal-error\")},C:!0},As={endpoint:\"signupNewUser\",B:function(t){if(vs(t),!t.password)throw new C(\"weak-password\")},F:gs,U:!0,C:!0},Ps={endpoint:\"createAuthUri\",C:!0},Rs={endpoint:\"deleteAccount\",M:[\"idToken\"]},js={endpoint:\"setAccountInfo\",M:[\"idToken\",\"deleteProvider\"],B:function(t){if(!Array.isArray(t.deleteProvider))throw new C(\"internal-error\")}},xs={endpoint:\"emailLinkSignin\",M:[\"email\",\"oobCode\"],B:vs,F:gs,U:!0,C:!0},Ds={endpoint:\"emailLinkSignin\",M:[\"idToken\",\"email\",\"oobCode\"],B:vs,F:gs,U:!0},Ls={endpoint:\"accounts/mfaEnrollment:finalize\",M:[\"idToken\",\"phoneVerificationInfo\"],B:_s,F:gs,C:!0,Na:!0},Ms={endpoint:\"accounts/mfaSignIn:finalize\",M:[\"mfaPendingCredential\",\"phoneVerificationInfo\"],B:_s,F:gs,C:!0,Na:!0},Fs={endpoint:\"getAccountInfo\"},Us={endpoint:\"getOobConfirmationCode\",M:[\"requestType\"],B:function(t){if(\"EMAIL_SIGNIN\"!=t.requestType)throw new C(\"internal-error\");vs(t)},Z:\"email\",C:!0},Vs={endpoint:\"getOobConfirmationCode\",M:[\"idToken\",\"requestType\"],B:function(t){if(\"VERIFY_EMAIL\"!=t.requestType)throw new C(\"internal-error\")},Z:\"email\",C:!0},qs={endpoint:\"getOobConfirmationCode\",M:[\"idToken\",\"newEmail\",\"requestType\"],B:function(t){if(\"VERIFY_AND_CHANGE_EMAIL\"!=t.requestType)throw new C(\"internal-error\")},Z:\"email\",C:!0},Bs={endpoint:\"getOobConfirmationCode\",M:[\"requestType\"],B:function(t){if(\"PASSWORD_RESET\"!=t.requestType)throw new C(\"internal-error\");vs(t)},Z:\"email\",C:!0},zs={kb:!0,endpoint:\"getProjectConfig\",Tb:\"GET\"},Hs={kb:!0,endpoint:\"getRecaptchaParam\",Tb:\"GET\",F:function(t){if(!t.recaptchaSiteKey)throw new C(\"internal-error\")}},Ks={endpoint:\"resetPassword\",B:Cs,Z:\"email\",C:!0},Ws={endpoint:\"sendVerificationCode\",M:[\"phoneNumber\",\"recaptchaToken\"],Z:\"sessionInfo\",C:!0},Gs={endpoint:\"setAccountInfo\",M:[\"idToken\"],B:ys,U:!0},Qs={endpoint:\"setAccountInfo\",M:[\"idToken\"],B:function(t){if(ys(t),!t.password)throw new C(\"weak-password\")},F:gs,U:!0},Ys={endpoint:\"signupNewUser\",F:gs,U:!0,C:!0},Js={endpoint:\"accounts/mfaEnrollment:start\",M:[\"idToken\",\"phoneEnrollmentInfo\"],B:function(t){if(!t.phoneEnrollmentInfo)throw new C(\"internal-error\");if(!t.phoneEnrollmentInfo.phoneNumber)throw new C(\"missing-phone-number\");if(!t.phoneEnrollmentInfo.recaptchaToken)throw new C(\"missing-app-credential\")},F:function(t){if(!t.phoneSessionInfo||!t.phoneSessionInfo.sessionInfo)throw new C(\"internal-error\")},C:!0,Na:!0},Xs={endpoint:\"accounts/mfaSignIn:start\",M:[\"mfaPendingCredential\",\"mfaEnrollmentId\",\"phoneSignInInfo\"],B:function(t){if(!t.phoneSignInInfo||!t.phoneSignInInfo.recaptchaToken)throw new C(\"missing-app-credential\")},F:function(t){if(!t.phoneResponseInfo||!t.phoneResponseInfo.sessionInfo)throw new C(\"internal-error\")},C:!0,Na:!0},$s={endpoint:\"verifyAssertion\",B:ws,Xa:Es,F:Ts,U:!0,C:!0},Zs={endpoint:\"verifyAssertion\",B:ws,Xa:Es,F:function(t){if(t.errorMessage&&\"USER_NOT_FOUND\"==t.errorMessage)throw new C(\"user-not-found\");if(t.errorMessage)throw uu(t.errorMessage);gs(t)},U:!0,C:!0},tu={endpoint:\"verifyAssertion\",B:function(t){if(ws(t),!t.idToken)throw new C(\"internal-error\")},Xa:Es,F:Ts,U:!0},eu={endpoint:\"verifyCustomToken\",B:function(t){if(!t.token)throw new C(\"invalid-custom-token\")},F:gs,U:!0,C:!0},nu={endpoint:\"verifyPassword\",B:function(t){if(vs(t),!t.password)throw new C(\"wrong-password\")},F:gs,U:!0,C:!0},ru={endpoint:\"verifyPhoneNumber\",B:ms,F:gs,C:!0},iu={endpoint:\"verifyPhoneNumber\",B:function(t){if(!t.idToken)throw new C(\"internal-error\");ms(t)},F:function(t){if(t.temporaryProof)throw t.code=\"credential-already-in-use\",Jo(t);gs(t)}},ou={Gb:{USER_NOT_FOUND:\"user-not-found\"},endpoint:\"verifyPhoneNumber\",B:ms,F:gs,C:!0},au={endpoint:\"accounts/mfaEnrollment:withdraw\",M:[\"idToken\",\"mfaEnrollmentId\"],F:function(t){if(!!t[ns]^!!t.refreshToken)throw new C(\"internal-error\")},C:!0,Na:!0};function su(t,e,n){if(!function(t,e){if(!e||!e.length)return!0;if(!t)return!1;for(var n=0;n<e.length;n++){var r=t[e[n]];if(void 0===r||null===r||\"\"===r)return!1}return!0}(n,e.M))return Ae(new C(\"internal-error\"));var r,i=!!e.Na,o=e.Tb||\"POST\";return Ne(n).then(e.B).then((function(){return e.U&&(n.returnSecureToken=!0),e.C&&t.b&&\"undefined\"===typeof n.tenantId&&(n.tenantId=t.b),ds(t,i?t.h:t.i,e.endpoint,o,n,e.Gb,e.kb||!1)})).then((function(t){return r=t,e.Xa?e.Xa(n,r):r})).then(e.F).then((function(){if(!e.Z)return r;if(!(e.Z in r))throw new C(\"internal-error\");return r[e.Z]}))}function uu(t){return cu({error:{errors:[{message:t}],code:400,message:t}})}function cu(t,e){var n=(t.error&&t.error.errors&&t.error.errors[0]||{}).reason||\"\",r={keyInvalid:\"invalid-api-key\",ipRefererBlocked:\"app-not-authorized\"};if(n=r[n]?new C(r[n]):null)return n;for(var i in n=t.error&&t.error.message||\"\",mt(r={INVALID_CUSTOM_TOKEN:\"invalid-custom-token\",CREDENTIAL_MISMATCH:\"custom-token-mismatch\",MISSING_CUSTOM_TOKEN:\"internal-error\",INVALID_IDENTIFIER:\"invalid-email\",MISSING_CONTINUE_URI:\"internal-error\",INVALID_EMAIL:\"invalid-email\",INVALID_PASSWORD:\"wrong-password\",USER_DISABLED:\"user-disabled\",MISSING_PASSWORD:\"internal-error\",EMAIL_EXISTS:\"email-already-in-use\",PASSWORD_LOGIN_DISABLED:\"operation-not-allowed\",INVALID_IDP_RESPONSE:\"invalid-credential\",INVALID_PENDING_TOKEN:\"invalid-credential\",FEDERATED_USER_ID_ALREADY_LINKED:\"credential-already-in-use\",MISSING_OR_INVALID_NONCE:\"missing-or-invalid-nonce\",INVALID_MESSAGE_PAYLOAD:\"invalid-message-payload\",INVALID_RECIPIENT_EMAIL:\"invalid-recipient-email\",INVALID_SENDER:\"invalid-sender\",EMAIL_NOT_FOUND:\"user-not-found\",RESET_PASSWORD_EXCEED_LIMIT:\"too-many-requests\",EXPIRED_OOB_CODE:\"expired-action-code\",INVALID_OOB_CODE:\"invalid-action-code\",MISSING_OOB_CODE:\"internal-error\",INVALID_PROVIDER_ID:\"invalid-provider-id\",CREDENTIAL_TOO_OLD_LOGIN_AGAIN:\"requires-recent-login\",INVALID_ID_TOKEN:\"invalid-user-token\",TOKEN_EXPIRED:\"user-token-expired\",USER_NOT_FOUND:\"user-token-expired\",CORS_UNSUPPORTED:\"cors-unsupported\",DYNAMIC_LINK_NOT_ACTIVATED:\"dynamic-link-not-activated\",INVALID_APP_ID:\"invalid-app-id\",TOO_MANY_ATTEMPTS_TRY_LATER:\"too-many-requests\",WEAK_PASSWORD:\"weak-password\",OPERATION_NOT_ALLOWED:\"operation-not-allowed\",USER_CANCELLED:\"user-cancelled\",CAPTCHA_CHECK_FAILED:\"captcha-check-failed\",INVALID_APP_CREDENTIAL:\"invalid-app-credential\",INVALID_CODE:\"invalid-verification-code\",INVALID_PHONE_NUMBER:\"invalid-phone-number\",INVALID_SESSION_INFO:\"invalid-verification-id\",INVALID_TEMPORARY_PROOF:\"invalid-credential\",MISSING_APP_CREDENTIAL:\"missing-app-credential\",MISSING_CODE:\"missing-verification-code\",MISSING_PHONE_NUMBER:\"missing-phone-number\",MISSING_SESSION_INFO:\"missing-verification-id\",QUOTA_EXCEEDED:\"quota-exceeded\",SESSION_EXPIRED:\"code-expired\",REJECTED_CREDENTIAL:\"rejected-credential\",INVALID_CONTINUE_URI:\"invalid-continue-uri\",MISSING_ANDROID_PACKAGE_NAME:\"missing-android-pkg-name\",MISSING_IOS_BUNDLE_ID:\"missing-ios-bundle-id\",UNAUTHORIZED_DOMAIN:\"unauthorized-continue-uri\",INVALID_DYNAMIC_LINK_DOMAIN:\"invalid-dynamic-link-domain\",INVALID_OAUTH_CLIENT_ID:\"invalid-oauth-client-id\",INVALID_CERT_HASH:\"invalid-cert-hash\",UNSUPPORTED_TENANT_OPERATION:\"unsupported-tenant-operation\",INVALID_TENANT_ID:\"invalid-tenant-id\",TENANT_ID_MISMATCH:\"tenant-id-mismatch\",ADMIN_ONLY_OPERATION:\"admin-restricted-operation\",INVALID_MFA_PENDING_CREDENTIAL:\"invalid-multi-factor-session\",MFA_ENROLLMENT_NOT_FOUND:\"multi-factor-info-not-found\",MISSING_MFA_PENDING_CREDENTIAL:\"missing-multi-factor-session\",MISSING_MFA_ENROLLMENT_ID:\"missing-multi-factor-info\",EMAIL_CHANGE_NEEDS_VERIFICATION:\"email-change-needs-verification\",SECOND_FACTOR_EXISTS:\"second-factor-already-in-use\",SECOND_FACTOR_LIMIT_EXCEEDED:\"maximum-second-factor-count-exceeded\",UNSUPPORTED_FIRST_FACTOR:\"unsupported-first-factor\",UNVERIFIED_EMAIL:\"unverified-email\"},e||{}),e=(e=n.match(/^[^\\s]+\\s*:\\s*([\\s\\S]*)$/))&&1<e.length?e[1]:void 0,r)if(0===n.indexOf(i))return new C(r[i],e);return!e&&t&&(e=Fr(t)),new C(\"internal-error\",e)}function lu(t){this.b=t,this.a=null,this.qb=function(t){return(du||(du=new Ee((function(t,e){function n(){zr(),Rr(\"gapi.load\")(\"gapi.iframes\",{callback:t,ontimeout:function(){zr(),e(Error(\"Network Error\"))},timeout:fu.get()})}if(Rr(\"gapi.iframes.Iframe\"))t();else if(Rr(\"gapi.load\"))n();else{var r=\"__iframefcb\"+Math.floor(1e6*Math.random()).toString();u[r]=function(){Rr(\"gapi.load\")?n():e(Error(\"Network Error\"))},Ne(Ga(r=kt(hu,{onload:r}))).o((function(){e(Error(\"Network Error\"))}))}})).o((function(t){throw du=null,t})))).then((function(){return new Ee((function(e,n){Rr(\"gapi.iframes.getContext\")().open({where:document.body,url:t.b,messageHandlersFilter:Rr(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"),attributes:{style:{position:\"absolute\",top:\"-100px\",width:\"1px\",height:\"1px\"}},dontclear:!0},(function(r){function i(){clearTimeout(o),e()}t.a=r,t.a.restyle({setHideOnLeave:!1});var o=setTimeout((function(){n(Error(\"Network Error\"))}),pu.get());r.ping(i).then(i,(function(){n(Error(\"Network Error\"))}))}))}))}))}(this)}var hu=new _t(It,\"https://apis.google.com/js/api.js?onload=%{onload}\"),fu=new Hr(3e4,6e4),pu=new Hr(5e3,15e3),du=null;function vu(t,e,n,r){this.l=t,this.i=e,this.h=n,this.g=r,this.f=null,this.g?t=Bn((t=qn(this.g.url)).f,t.a,t.g,\"/emulator/auth/iframe\"):t=Bn(\"https\",this.l,null,\"/__/auth/iframe\"),this.a=t,Un(this.a,\"apiKey\",this.i),Un(this.a,\"appName\",this.h),this.b=null,this.c=[]}function yu(t,e,n,r,i,o){this.u=t,this.s=e,this.c=n,this.v=r,this.m=o,this.h=this.g=this.l=null,this.a=i,this.i=this.f=null}function gu(t){try{return e.a.app(t).auth().Ga()}catch(n){return[]}}function mu(t,e,n,r,i,o){this.s=t,this.g=e,this.b=n,this.f=o,this.c=r||null,this.h=i||null,this.l=this.u=this.A=null,this.i=[],this.v=this.a=null}function bu(t){var e=fr();return function(t){return su(t,zs,{}).then((function(t){return t.authorizedDomains||[]}))}(t).then((function(t){t:{var n=qn(e),r=n.f;n=n.a;for(var i=0;i<t.length;i++){var o=t[i],a=n,s=r;if(0==o.indexOf(\"chrome-extension://\")?a=qn(o).a==a&&\"chrome-extension\"==s:\"http\"!=s&&\"https\"!=s?a=!1:mr.test(o)?a=a==o:(o=o.split(\".\").join(\"\\\\.\"),a=new RegExp(\"^(.+\\\\.\"+o+\"|\"+o+\")$\",\"i\").test(a)),a){t=!0;break t}}t=!1}if(!t)throw new Qo(fr())}))}function _u(t){return t.v||(t.v=_r().then((function(){if(!t.u){var e=t.c,n=t.h,r=gu(t.b),i=new vu(t.s,t.g,t.b,t.f);i.f=e,i.b=n,i.c=Z(r||[]),t.u=i.toString()}t.m=new lu(t.u),function(t){if(!t.m)throw Error(\"IfcHandler must be initialized!\");!function(t,e){t.qb.then((function(){t.a.register(\"authEvent\",e,Rr(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"))}))}(t.m,(function(e){var n={};if(e&&e.authEvent){var r=!1;for(e=Ho(e.authEvent),n=0;n<t.i.length;n++)r=t.i[n](e)||r;return(n={}).status=r?\"ACK\":\"ERROR\",Ne(n)}return n.status=\"ERROR\",Ne(n)}))}(t)}))),t.v}function wu(t){return t.l||(t.A=t.c?Ar(t.c,gu(t.b)):null,t.l=new ts(t.g,j(t.h),t.A),t.f&&us(t.l,t.f)),t.l}function Eu(t,e,n,r,i,o,a,s,u,c,l,h){return(t=new yu(t,e,n,r,i,h)).l=o,t.g=a,t.h=s,t.b=yt(u||null),t.f=c,t.xb(l).toString()}function Tu(t){if(this.a=t||e.a.INTERNAL.reactNative&&e.a.INTERNAL.reactNative.AsyncStorage,!this.a)throw new C(\"internal-error\",\"The React Native compatibility library was not found.\");this.type=\"asyncStorage\"}function Iu(t){this.b=t,this.a={},this.f=E(this.c,this)}vu.prototype.toString=function(){return this.f?Un(this.a,\"v\",this.f):tr(this.a.b,\"v\"),this.b?Un(this.a,\"eid\",this.b):tr(this.a.b,\"eid\"),this.c.length?Un(this.a,\"fw\",this.c.join(\",\")):tr(this.a.b,\"fw\"),this.a.toString()},yu.prototype.xb=function(t){return this.i=t,this},yu.prototype.toString=function(){if(this.m){var t=qn(this.m.url);t=Bn(t.f,t.a,t.g,\"/emulator/auth/handler\")}else t=Bn(\"https\",this.u,null,\"/__/auth/handler\");if(Un(t,\"apiKey\",this.s),Un(t,\"appName\",this.c),Un(t,\"authType\",this.v),this.a.isOAuthProvider){var n=this.a;try{var r=e.a.app(this.c).auth().ka()}catch(u){r=null}for(var i in n.nb=r,Un(t,\"providerId\",this.a.providerId),n=Ur((r=this.a).Hb))n[i]=n[i].toString();i=r.Pc,n=yt(n);for(var o=0;o<i.length;o++){var a=i[o];a in n&&delete n[a]}r.ob&&r.nb&&!n[r.ob]&&(n[r.ob]=r.nb),vt(n)||Un(t,\"customParameters\",Fr(n))}if(\"function\"===typeof this.a.Pb&&((r=this.a.Pb()).length&&Un(t,\"scopes\",r.join(\",\"))),this.l?Un(t,\"redirectUrl\",this.l):tr(t.b,\"redirectUrl\"),this.g?Un(t,\"eventId\",this.g):tr(t.b,\"eventId\"),this.h?Un(t,\"v\",this.h):tr(t.b,\"v\"),this.b)for(var s in this.b)this.b.hasOwnProperty(s)&&!Vn(t,s)&&Un(t,s,this.b[s]);return this.i?Un(t,\"tid\",this.i):tr(t.b,\"tid\"),this.f?Un(t,\"eid\",this.f):tr(t.b,\"eid\"),(s=gu(this.c)).length&&Un(t,\"fw\",s.join(\",\")),t.toString()},(n=mu.prototype).Nb=function(t,e,n){var r=new C(\"popup-closed-by-user\"),i=new C(\"web-storage-unsupported\"),o=this,a=!1;return this.la().then((function(){(function(t){var e={type:\"webStorageSupport\"};return _u(t).then((function(){return function(t,e){return t.qb.then((function(){return new Ee((function(n){t.a.send(e.type,e,n,Rr(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"))}))}))}(t.m,e)})).then((function(t){if(t&&t.length&&\"undefined\"!==typeof t[0].webStorageSupport)return t[0].webStorageSupport;throw Error()}))})(o).then((function(n){n||(t&&yr(t),e(i),a=!0)}))})).o((function(){})).then((function(){if(!a)return function(t){return new Ee((function(e){return function n(){kn(2e3).then((function(){if(t&&!t.closed)return n();e()}))}()}))}(t)})).then((function(){if(!a)return kn(n).then((function(){e(r)}))}))},n.Wb=function(){var t=Pr();return!Mr(t)&&!Br(t)},n.Sb=function(){return!1},n.Lb=function(t,e,n,r,i,o,a,s){if(!t)return Ae(new C(\"popup-blocked\"));if(a&&!Mr())return this.la().o((function(e){yr(t),i(e)})),r(),Ne();this.a||(this.a=bu(wu(this)));var u=this;return this.a.then((function(){var e=u.la().o((function(e){throw yr(t),i(e),e}));return r(),e})).then((function(){(Bo(n),a)||pr(Eu(u.s,u.g,u.b,e,n,null,o,u.c,void 0,u.h,s,u.f),t)})).o((function(t){throw\"auth/network-request-failed\"==t.code&&(u.a=null),t}))},n.Mb=function(t,e,n,r){this.a||(this.a=bu(wu(this)));var i=this;return this.a.then((function(){Bo(e),pr(Eu(i.s,i.g,i.b,t,e,fr(),n,i.c,void 0,i.h,r,i.f))})).o((function(t){throw\"auth/network-request-failed\"==t.code&&(i.a=null),t}))},n.la=function(){var t=this;return _u(this).then((function(){return t.m.qb})).o((function(){throw t.a=null,new C(\"network-request-failed\")}))},n.Zb=function(){return!0},n.Ea=function(t){this.i.push(t)},n.Ra=function(t){X(this.i,(function(e){return e==t}))},(n=Tu.prototype).get=function(t){return Ne(this.a.getItem(t)).then((function(t){return t&&Vr(t)}))},n.set=function(t,e){return Ne(this.a.setItem(t,Fr(e)))},n.T=function(t){return Ne(this.a.removeItem(t))},n.ca=function(){},n.ia=function(){};var Su,Ou=[];function Cu(t,e,n){vt(t.a)&&t.b.addEventListener(\"message\",t.f),\"undefined\"===typeof t.a[e]&&(t.a[e]=[]),t.a[e].push(n)}function ku(t){this.a=t}function Nu(t){this.c=t,this.b=!1,this.a=[]}function Au(t,e,n,r){var i,o,a,s,u=n||{},c=null;if(t.b)return Ae(Error(\"connection_unavailable\"));var l=r?800:50,h=\"undefined\"!==typeof MessageChannel?new MessageChannel:null;return new Ee((function(n,r){h?(i=Math.floor(Math.random()*Math.pow(10,20)).toString(),h.port1.start(),a=setTimeout((function(){r(Error(\"unsupported_event\"))}),l),c={messageChannel:h,onMessage:o=function(t){t.data.eventId===i&&(\"ack\"===t.data.status?(clearTimeout(a),s=setTimeout((function(){r(Error(\"timeout\"))}),3e3)):\"done\"===t.data.status?(clearTimeout(s),\"undefined\"!==typeof t.data.response?n(t.data.response):r(Error(\"unknown_error\"))):(clearTimeout(a),clearTimeout(s),r(Error(\"invalid_response\"))))}},t.a.push(c),h.port1.addEventListener(\"message\",o),t.c.postMessage({eventType:e,eventId:i,data:u},[h.port2])):r(Error(\"connection_unavailable\"))})).then((function(e){return Pu(t,c),e})).o((function(e){throw Pu(t,c),e}))}function Pu(t,e){if(e){var n=e.messageChannel,r=e.onMessage;n&&(n.port1.removeEventListener(\"message\",r),n.port1.close()),X(t.a,(function(t){return t==e}))}}function Ru(){if(!Lu())throw new C(\"web-storage-unsupported\");this.c={},this.a=[],this.b=0,this.v=u.indexedDB,this.type=\"indexedDB\",this.g=this.m=this.f=this.l=null,this.s=!1,this.i=null;var t=this;Tr()&&self?(this.m=function(){var t=Tr()?self:null;if(K(Ou,(function(n){n.b==t&&(e=n)})),!e){var e=new Iu(t);Ou.push(e)}return e}(),Cu(this.m,\"keyChanged\",(function(e,n){return qu(t).then((function(e){return 0<e.length&&K(t.a,(function(t){t(e)})),{keyProcessed:Y(e,n.key)}}))})),Cu(this.m,\"ping\",(function(){return Ne([\"keyChanged\"])}))):function(){var t=u.navigator;return t&&t.serviceWorker?Ne().then((function(){return t.serviceWorker.ready})).then((function(t){return t.active||null})).o((function(){return null})):Ne(null)}().then((function(e){(t.i=e)&&(t.g=new Nu(new ku(e)),Au(t.g,\"ping\",null,!0).then((function(e){e[0].fulfilled&&Y(e[0].value,\"keyChanged\")&&(t.s=!0)})).o((function(){})))}))}function ju(t){return new Ee((function(e,n){var r=t.v.open(\"firebaseLocalStorageDb\",1);r.onerror=function(t){try{t.preventDefault()}catch(e){}n(Error(t.target.error))},r.onupgradeneeded=function(t){t=t.target.result;try{t.createObjectStore(\"firebaseLocalStorage\",{keyPath:\"fbase_key\"})}catch(e){n(e)}},r.onsuccess=function(r){(r=r.target.result).objectStoreNames.contains(\"firebaseLocalStorage\")?e(r):function(t){return new Ee((function(e,n){var r=t.v.deleteDatabase(\"firebaseLocalStorageDb\");r.onsuccess=function(){e()},r.onerror=function(t){n(Error(t.target.error))}}))}(t).then((function(){return ju(t)})).then((function(t){e(t)})).o((function(t){n(t)}))}}))}function xu(t){return t.h||(t.h=ju(t)),t.h}function Du(t,e){var n=0;return new Ee((function r(i,o){xu(t).then(e).then(i).o((function(e){if(!(3<++n))return xu(t).then((function(e){return e.close(),t.h=void 0,r(i,o)})).o((function(t){o(t)}));o(e)}))}))}function Lu(){try{return!!u.indexedDB}catch(fa){return!1}}function Mu(t){return t.objectStore(\"firebaseLocalStorage\")}function Fu(t,e){return t.transaction([\"firebaseLocalStorage\"],e?\"readwrite\":\"readonly\")}function Uu(t){return new Ee((function(e,n){t.onsuccess=function(t){t&&t.target?e(t.target.result):e()},t.onerror=function(t){n(t.target.error)}}))}function Vu(t,e){return t.g&&t.i&&function(){var t=u.navigator;return t&&t.serviceWorker&&t.serviceWorker.controller||null}()===t.i?Au(t.g,\"keyChanged\",{key:e},t.s).then((function(){})).o((function(){})):Ne()}function qu(t){return xu(t).then((function(t){var e=Mu(Fu(t,!1));return e.getAll?Uu(e.getAll()):new Ee((function(t,n){var r=[],i=e.openCursor();i.onsuccess=function(e){(e=e.target.result)?(r.push(e.value),e.continue()):t(r)},i.onerror=function(t){n(t.target.error)}}))})).then((function(e){var n={},r=[];if(0==t.b){for(r=0;r<e.length;r++)n[e[r].fbase_key]=e[r].value;r=dr(t.c,n),t.c=n}return r}))}function Bu(t){t.l&&t.l.cancel(\"STOP_EVENT\"),t.f&&(clearTimeout(t.f),t.f=null)}function zu(t){var e=this,n=null;this.a=[],this.type=\"indexedDB\",this.c=t,this.b=Ne().then((function(){if(Lu()){var t=qr(),r=\"__sak\"+t;return Su||(Su=new Ru),(n=Su).set(r,t).then((function(){return n.get(r)})).then((function(e){if(e!==t)throw Error(\"indexedDB not supported!\");return n.T(r)})).then((function(){return n})).o((function(){return e.c}))}return e.c})).then((function(t){return e.type=t.type,t.ca((function(t){K(e.a,(function(e){e(t)}))})),t}))}function Hu(){this.a={},this.type=\"inMemory\"}function Ku(){if(!function(){var t=\"Node\"==Ir();if(!(t=Wu()||t&&e.a.INTERNAL.node&&e.a.INTERNAL.node.localStorage))return!1;try{return t.setItem(\"__sak\",\"1\"),t.removeItem(\"__sak\"),!0}catch(n){return!1}}()){if(\"Node\"==Ir())throw new C(\"internal-error\",\"The LocalStorage compatibility library was not found.\");throw new C(\"web-storage-unsupported\")}this.a=Wu()||e.a.INTERNAL.node.localStorage,this.type=\"localStorage\"}function Wu(){try{var t=u.localStorage,e=qr();return t&&(t.setItem(e,\"1\"),t.removeItem(e)),t}catch(n){return null}}function Gu(){this.type=\"nullStorage\"}function Qu(){if(!function(){var t=\"Node\"==Ir();if(!(t=Yu()||t&&e.a.INTERNAL.node&&e.a.INTERNAL.node.sessionStorage))return!1;try{return t.setItem(\"__sak\",\"1\"),t.removeItem(\"__sak\"),!0}catch(n){return!1}}()){if(\"Node\"==Ir())throw new C(\"internal-error\",\"The SessionStorage compatibility library was not found.\");throw new C(\"web-storage-unsupported\")}this.a=Yu()||e.a.INTERNAL.node.sessionStorage,this.type=\"sessionStorage\"}function Yu(){try{var t=u.sessionStorage,e=qr();return t&&(t.setItem(e,\"1\"),t.removeItem(e)),t}catch(n){return null}}function Ju(){var t={};t.Browser=Zu,t.Node=tc,t.ReactNative=ec,t.Worker=nc,this.a=t[Ir()]}Iu.prototype.c=function(t){var e=t.data.eventType,n=t.data.eventId,r=this.a[e];if(r&&0<r.length){t.ports[0].postMessage({status:\"ack\",eventId:n,eventType:e,response:null});var i=[];K(r,(function(e){i.push(Ne().then((function(){return e(t.origin,t.data.data)})))})),Re(i).then((function(r){var i=[];K(r,(function(t){i.push({fulfilled:t.Ob,value:t.value,reason:t.reason?t.reason.message:void 0})})),K(i,(function(t){for(var e in t)\"undefined\"===typeof t[e]&&delete t[e]})),t.ports[0].postMessage({status:\"done\",eventId:n,eventType:e,response:i})}))}},ku.prototype.postMessage=function(t,e){this.a.postMessage(t,e)},Nu.prototype.close=function(){for(;0<this.a.length;)Pu(this,this.a[0]);this.b=!0},(n=Ru.prototype).set=function(t,e){var n=this,r=!1;return Du(this,(function(e){return Uu((e=Mu(Fu(e,!0))).get(t))})).then((function(i){return Du(n,(function(o){if(o=Mu(Fu(o,!0)),i)return i.value=e,Uu(o.put(i));n.b++,r=!0;var a={};return a.fbase_key=t,a.value=e,Uu(o.add(a))}))})).then((function(){return n.c[t]=e,Vu(n,t)})).na((function(){r&&n.b--}))},n.get=function(t){return Du(this,(function(e){return Uu(Mu(Fu(e,!1)).get(t))})).then((function(t){return t&&t.value}))},n.T=function(t){var e=this,n=!1;return Du(this,(function(r){return n=!0,e.b++,Uu(Mu(Fu(r,!0)).delete(t))})).then((function(){return delete e.c[t],Vu(e,t)})).na((function(){n&&e.b--}))},n.ca=function(t){0==this.a.length&&function(t){function e(){t.f=setTimeout((function(){t.l=qu(t).then((function(e){0<e.length&&K(t.a,(function(t){t(e)}))})).then((function(){e()})).o((function(t){\"STOP_EVENT\"!=t.message&&e()}))}),800)}Bu(t),e()}(this),this.a.push(t)},n.ia=function(t){X(this.a,(function(e){return e==t})),0==this.a.length&&Bu(this)},(n=zu.prototype).get=function(t){return this.b.then((function(e){return e.get(t)}))},n.set=function(t,e){return this.b.then((function(n){return n.set(t,e)}))},n.T=function(t){return this.b.then((function(e){return e.T(t)}))},n.ca=function(t){this.a.push(t)},n.ia=function(t){X(this.a,(function(e){return e==t}))},(n=Hu.prototype).get=function(t){return Ne(this.a[t])},n.set=function(t,e){return this.a[t]=e,Ne()},n.T=function(t){return delete this.a[t],Ne()},n.ca=function(){},n.ia=function(){},(n=Ku.prototype).get=function(t){var e=this;return Ne().then((function(){return Vr(e.a.getItem(t))}))},n.set=function(t,e){var n=this;return Ne().then((function(){var r=Fr(e);null===r?n.T(t):n.a.setItem(t,r)}))},n.T=function(t){var e=this;return Ne().then((function(){e.a.removeItem(t)}))},n.ca=function(t){u.window&&hn(u.window,\"storage\",t)},n.ia=function(t){u.window&&dn(u.window,\"storage\",t)},(n=Gu.prototype).get=function(){return Ne(null)},n.set=function(){return Ne()},n.T=function(){return Ne()},n.ca=function(){},n.ia=function(){},(n=Qu.prototype).get=function(t){var e=this;return Ne().then((function(){return Vr(e.a.getItem(t))}))},n.set=function(t,e){var n=this;return Ne().then((function(){var r=Fr(e);null===r?n.T(t):n.a.setItem(t,r)}))},n.T=function(t){var e=this;return Ne().then((function(){e.a.removeItem(t)}))},n.ca=function(){},n.ia=function(){};var Xu,$u,Zu={D:Ku,ab:Qu},tc={D:Ku,ab:Qu},ec={D:Tu,ab:Gu},nc={D:Ku,ab:Gu},rc={qd:\"local\",NONE:\"none\",sd:\"session\"};function ic(){var t=!(Br(Pr())||!Er()),e=Mr(),n=jr();this.v=t,this.i=e,this.l=n,this.a={},Xu||(Xu=new Ju),t=Xu;try{this.g=!hr()&&Gr()||!u.indexedDB?new t.a.D:new zu(Tr()?new Hu:new t.a.D)}catch(r){this.g=new Hu,this.i=!0}try{this.h=new t.a.ab}catch(r){this.h=new Hu}this.m=new Hu,this.f=E(this.Xb,this),this.b={}}function oc(){return $u||($u=new ic),$u}function ac(t,e){switch(e){case\"session\":return t.h;case\"none\":return t.m;default:return t.g}}function sc(t,e){return\"firebase:\"+t.name+(e?\":\"+e:\"\")}function uc(t,e,n){return n=sc(e,n),\"local\"==e.D&&(t.b[n]=null),ac(t,e.D).T(n)}function cc(t){t.c&&(clearInterval(t.c),t.c=null)}function lc(t){this.a=t,this.b=oc()}(n=ic.prototype).get=function(t,e){return ac(this,t.D).get(sc(t,e))},n.set=function(t,e,n){var r=sc(t,n),i=this,o=ac(this,t.D);return o.set(r,e).then((function(){return o.get(r)})).then((function(e){\"local\"==t.D&&(i.b[r]=e)}))},n.addListener=function(t,e,n){t=sc(t,e),this.l&&(this.b[t]=u.localStorage.getItem(t)),vt(this.a)&&(ac(this,\"local\").ca(this.f),this.i||(hr()||!Gr())&&u.indexedDB||!this.l||function(t){cc(t),t.c=setInterval((function(){for(var e in t.a){var n=u.localStorage.getItem(e),r=t.b[e];n!=r&&(t.b[e]=n,n=new Ze({type:\"storage\",key:e,target:window,oldValue:r,newValue:n,a:!0}),t.Xb(n))}}),1e3)}(this)),this.a[t]||(this.a[t]=[]),this.a[t].push(n)},n.removeListener=function(t,e,n){t=sc(t,e),this.a[t]&&(X(this.a[t],(function(t){return t==n})),0==this.a[t].length&&delete this.a[t]),vt(this.a)&&(ac(this,\"local\").ia(this.f),cc(this))},n.Xb=function(t){if(t&&t.g){var e=t.a.key;if(null==e)for(var n in this.a){var r=this.b[n];\"undefined\"===typeof r&&(r=null);var i=u.localStorage.getItem(n);i!==r&&(this.b[n]=i,this.lb(n))}else if(0==e.indexOf(\"firebase:\")&&this.a[e]){if(\"undefined\"!==typeof t.a.a?ac(this,\"local\").ia(this.f):cc(this),this.v)if(n=u.localStorage.getItem(e),(r=t.a.newValue)!==n)null!==r?u.localStorage.setItem(e,r):u.localStorage.removeItem(e);else if(this.b[e]===r&&\"undefined\"===typeof t.a.a)return;var o=this;n=function(){\"undefined\"===typeof t.a.a&&o.b[e]===u.localStorage.getItem(e)||(o.b[e]=u.localStorage.getItem(e),o.lb(e))},Yt&&ue&&10==ue&&u.localStorage.getItem(e)!==t.a.newValue&&t.a.newValue!==t.a.oldValue?setTimeout(n,10):n()}}else K(t,E(this.lb,this))},n.lb=function(t){this.a[t]&&K(this.a[t],(function(t){t()}))};var hc,fc={name:\"authEvent\",D:\"local\"};function pc(){this.a=oc()}function dc(t,e){this.b=vc,this.f=u.Uint8Array?new Uint8Array(this.b):Array(this.b),this.g=this.c=0,this.a=[],this.h=t,this.i=e,this.l=u.Int32Array?new Int32Array(64):Array(64),void 0===hc&&(hc=u.Int32Array?new Int32Array(Ec):Ec),this.reset()}S(dc,(function(){this.b=-1}));for(var vc=64,yc=vc-1,gc=[],mc=0;mc<yc;mc++)gc[mc]=0;var bc=$(128,gc);function _c(t){for(var e=t.f,n=t.l,r=0,i=0;i<e.length;)n[r++]=e[i]<<24|e[i+1]<<16|e[i+2]<<8|e[i+3],i=4*r;for(e=16;64>e;e++){i=0|n[e-15],r=0|n[e-2];var o=(0|n[e-16])+((i>>>7|i<<25)^(i>>>18|i<<14)^i>>>3)|0,a=(0|n[e-7])+((r>>>17|r<<15)^(r>>>19|r<<13)^r>>>10)|0;n[e]=o+a|0}r=0|t.a[0],i=0|t.a[1];var s=0|t.a[2],u=0|t.a[3],c=0|t.a[4],l=0|t.a[5],h=0|t.a[6];for(o=0|t.a[7],e=0;64>e;e++){var f=((r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10))+(r&i^r&s^i&s)|0;a=(o=o+((c>>>6|c<<26)^(c>>>11|c<<21)^(c>>>25|c<<7))|0)+((a=(a=c&l^~c&h)+(0|hc[e])|0)+(0|n[e])|0)|0,o=h,h=l,l=c,c=u+a|0,u=s,s=i,i=r,r=a+f|0}t.a[0]=t.a[0]+r|0,t.a[1]=t.a[1]+i|0,t.a[2]=t.a[2]+s|0,t.a[3]=t.a[3]+u|0,t.a[4]=t.a[4]+c|0,t.a[5]=t.a[5]+l|0,t.a[6]=t.a[6]+h|0,t.a[7]=t.a[7]+o|0}function wc(t,e,n){void 0===n&&(n=e.length);var r=0,i=t.c;if(\"string\"===typeof e)for(;r<n;)t.f[i++]=e.charCodeAt(r++),i==t.b&&(_c(t),i=0);else{if(!d(e))throw Error(\"message must be string or array\");for(;r<n;){var o=e[r++];if(!(\"number\"==typeof o&&0<=o&&255>=o&&o==(0|o)))throw Error(\"message must be a byte array\");t.f[i++]=o,i==t.b&&(_c(t),i=0)}}t.c=i,t.g+=n}dc.prototype.reset=function(){this.g=this.c=0,this.a=u.Int32Array?new Int32Array(this.i):Z(this.i)};var Ec=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function Tc(){dc.call(this,8,Ic)}S(Tc,dc);var Ic=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];function Sc(t,e,n,r,i,o){this.m=t,this.h=e,this.l=n,this.v=r||null,this.u=i||null,this.s=o,this.i=e+\":\"+n,this.A=new pc,this.g=new lc(this.i),this.f=null,this.b=[],this.a=this.c=null}function Oc(t){return new C(\"invalid-cordova-configuration\",t)}function Cc(t){var e=new Tc;wc(e,t),t=[];var n=8*e.g;56>e.c?wc(e,bc,56-e.c):wc(e,bc,e.b-(e.c-56));for(var r=63;56<=r;r--)e.f[r]=255&n,n/=256;for(_c(e),r=n=0;r<e.h;r++)for(var i=24;0<=i;i-=8)t[n++]=e.a[r]>>i&255;return function(t){return G(t,(function(t){return 1<(t=t.toString(16)).length?t:\"0\"+t})).join(\"\")}(t)}function kc(t,e){for(var n=0;n<t.b.length;n++)try{t.b[n](e)}catch(r){}}function Nc(t){return t.f||(t.f=t.la().then((function(){return new Ee((function(e){t.Ea((function n(r){return e(r),t.Ra(n),!1})),function(t){function e(e){r=!0,i&&i.cancel(),Ac(t).then((function(r){var i=n;if(r&&e&&e.url){var o=null;-1!=(i=so(e.url)).indexOf(\"/__/auth/callback\")&&(o=(o=\"object\"===typeof(o=Vr(Vn(o=qn(i),\"firebaseError\")||null))?k(o):null)?new zo(r.c,r.b,null,null,o,null,r.S()):new zo(r.c,r.b,i,r.f,null,null,r.S())),i=o||n}kc(t,i)}))}var n=new zo(\"unknown\",null,null,null,new C(\"no-auth-event\")),r=!1,i=kn(500).then((function(){return Ac(t).then((function(){r||kc(t,n)}))})),o=u.handleOpenURL;u.handleOpenURL=function(t){if(0==t.toLowerCase().indexOf(Rr(\"BuildInfo.packageName\",u).toLowerCase()+\"://\")&&e({url:t}),\"function\"===typeof o)try{o(t)}catch(n){console.error(n)}},Go||(Go=new Ko),function(t){var e=Go;e.a.push(t),e.b||(e.b=function(t){for(var n=0;n<e.a.length;n++)e.a[n](t)},\"function\"===typeof(t=Rr(\"universalLinks.subscribe\",u))&&t(null,e.b))}(e)}(t)}))}))),t.f}function Ac(t){var e=null;return function(t){return t.b.get(fc,t.a).then((function(t){return Ho(t)}))}(t.g).then((function(n){return e=n,uc((n=t.g).b,fc,n.a)})).then((function(){return e}))}function Pc(t){this.a=t,this.b=oc()}(n=Sc.prototype).la=function(){return this.Ia?this.Ia:this.Ia=(wr(void 0)?_r().then((function(){return new Ee((function(t,e){var n=u.document,r=setTimeout((function(){e(Error(\"Cordova framework is not ready.\"))}),1e3);n.addEventListener(\"deviceready\",(function(){clearTimeout(r),t()}),!1)}))})):Ae(Error(\"Cordova must run in an Android or iOS file scheme.\"))).then((function(){if(\"function\"!==typeof Rr(\"universalLinks.subscribe\",u))throw Oc(\"cordova-universal-links-plugin-fix is not installed\");if(\"undefined\"===typeof Rr(\"BuildInfo.packageName\",u))throw Oc(\"cordova-plugin-buildinfo is not installed\");if(\"function\"!==typeof Rr(\"cordova.plugins.browsertab.openUrl\",u))throw Oc(\"cordova-plugin-browsertab is not installed\");if(\"function\"!==typeof Rr(\"cordova.InAppBrowser.open\",u))throw Oc(\"cordova-plugin-inappbrowser is not installed\")}),(function(){throw new C(\"cordova-not-ready\")}))},n.Nb=function(t,e){return e(new C(\"operation-not-supported-in-this-environment\")),Ne()},n.Lb=function(){return Ae(new C(\"operation-not-supported-in-this-environment\"))},n.Zb=function(){return!1},n.Wb=function(){return!0},n.Sb=function(){return!0},n.Mb=function(t,e,n,r){if(this.c)return Ae(new C(\"redirect-operation-pending\"));var i=this,o=u.document,a=null,s=null,c=null,l=null;return this.c=Ne().then((function(){return Bo(e),Nc(i)})).then((function(){return function(t,e,n,r,i){var o=function(){for(var t=20,e=[];0<t;)e.push(\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".charAt(Math.floor(62*Math.random()))),t--;return e.join(\"\")}(),a=new zo(e,r,null,o,new C(\"no-auth-event\"),null,i),s=Rr(\"BuildInfo.packageName\",u);if(\"string\"!==typeof s)throw new C(\"invalid-cordova-configuration\");var c=Rr(\"BuildInfo.displayName\",u),l={};if(Pr().toLowerCase().match(/iphone|ipad|ipod/))l.ibi=s;else{if(!Pr().toLowerCase().match(/android/))return Ae(new C(\"operation-not-supported-in-this-environment\"));l.apn=s}c&&(l.appDisplayName=c),o=Cc(o),l.sessionId=o;var h=Eu(t.m,t.h,t.l,e,n,null,r,t.v,l,t.u,i,t.s);return t.la().then((function(){var e=t.i;return t.A.a.set(fc,a.w(),e)})).then((function(){var e=Rr(\"cordova.plugins.browsertab.isAvailable\",u);if(\"function\"!==typeof e)throw new C(\"invalid-cordova-configuration\");var n=null;e((function(e){if(e){if(\"function\"!==typeof(n=Rr(\"cordova.plugins.browsertab.openUrl\",u)))throw new C(\"invalid-cordova-configuration\");n(h)}else{if(\"function\"!==typeof(n=Rr(\"cordova.InAppBrowser.open\",u)))throw new C(\"invalid-cordova-configuration\");e=Pr(),t.a=n(h,e.match(/(iPad|iPhone|iPod).*OS 7_\\d/i)||e.match(/(iPad|iPhone|iPod).*OS 8_\\d/i)?\"_blank\":\"_system\",\"location=yes\")}}))}))}(i,t,e,n,r)})).then((function(){return new Ee((function(t,e){s=function(){var e=Rr(\"cordova.plugins.browsertab.close\",u);return t(),\"function\"===typeof e&&e(),i.a&&\"function\"===typeof i.a.close&&(i.a.close(),i.a=null),!1},i.Ea(s),c=function(){a||(a=kn(2e3).then((function(){e(new C(\"redirect-cancelled-by-user\"))})))},l=function(){Kr()&&c()},o.addEventListener(\"resume\",c,!1),Pr().toLowerCase().match(/android/)||o.addEventListener(\"visibilitychange\",l,!1)})).o((function(t){return Ac(i).then((function(){throw t}))}))})).na((function(){c&&o.removeEventListener(\"resume\",c,!1),l&&o.removeEventListener(\"visibilitychange\",l,!1),a&&a.cancel(),s&&i.Ra(s),i.c=null}))},n.Ea=function(t){this.b.push(t),Nc(this).o((function(e){\"auth/invalid-cordova-configuration\"===e.code&&(e=new zo(\"unknown\",null,null,null,new C(\"no-auth-event\")),t(e))}))},n.Ra=function(t){X(this.b,(function(e){return e==t}))};var Rc={name:\"pendingRedirect\",D:\"session\"};function jc(t){return uc(t.b,Rc,t.a)}function xc(t,e,n,r){this.h={},this.u=0,this.O=t,this.m=e,this.v=n,this.G=r,this.i=[],this.f=!1,this.l=E(this.s,this),this.b=new Yc,this.A=new tl,this.g=new Pc(Gc(this.m,this.v)),this.c={},this.c.unknown=this.b,this.c.signInViaRedirect=this.b,this.c.linkViaRedirect=this.b,this.c.reauthViaRedirect=this.b,this.c.signInViaPopup=this.A,this.c.linkViaPopup=this.A,this.c.reauthViaPopup=this.A,this.a=Dc(this.O,this.m,this.v,N,this.G)}function Dc(t,n,r,i,o){var a=e.a.SDK_VERSION||null;return wr()?new Sc(t,n,r,a,i,o):new mu(t,n,r,a,i,o)}function Lc(t){t.f||(t.f=!0,t.a.Ea(t.l));var e=t.a;return t.a.la().o((function(n){throw t.a==e&&t.reset(),n}))}function Mc(t){t.a.Wb()&&Lc(t).o((function(e){var n=new zo(\"unknown\",null,null,null,new C(\"operation-not-supported-in-this-environment\"));zc(e)&&t.s(n)})),t.a.Sb()||Jc(t.b)}function Fc(t,e){Y(t.i,e)||t.i.push(e),t.f||function(t){return t.b.get(Rc,t.a).then((function(t){return\"pending\"==t}))}(t.g).then((function(e){e?jc(t.g).then((function(){Lc(t).o((function(e){var n=new zo(\"unknown\",null,null,null,new C(\"operation-not-supported-in-this-environment\"));zc(e)&&t.s(n)}))})):Mc(t)})).o((function(){Mc(t)}))}function Uc(t,e){X(t.i,(function(t){return t==e}))}xc.prototype.reset=function(){this.f=!1,this.a.Ra(this.l),this.a=Dc(this.O,this.m,this.v,null,this.G),this.h={}},xc.prototype.s=function(t){if(!t)throw new C(\"invalid-auth-event\");if(6e5<=I()-this.u&&(this.h={},this.u=0),t&&t.getUid()&&this.h.hasOwnProperty(t.getUid()))return!1;for(var e=!1,n=0;n<this.i.length;n++){var r=this.i[n];if(r.Eb(t.c,t.b)){(e=this.c[t.c])&&(e.i(t,r),t&&(t.f||t.b)&&(this.h[t.getUid()]=!0,this.u=I())),e=!0;break}}return Jc(this.b),e};var Vc=new Hr(2e3,1e4),qc=new Hr(3e4,6e4);function Bc(t,e,n,r,i,o,a){return t.a.Lb(e,n,r,(function(){t.f||(t.f=!0,t.a.Ea(t.l))}),(function(){t.reset()}),i,o,a)}function zc(t){return!(!t||\"auth/cordova-not-ready\"!=t.code)}function Hc(t,e,n,r,i){var o;return function(t){return t.b.set(Rc,\"pending\",t.a)}(t.g).then((function(){return t.a.Mb(e,n,r,i).o((function(e){if(zc(e))throw new C(\"operation-not-supported-in-this-environment\");return o=e,jc(t.g).then((function(){throw o}))})).then((function(){return t.a.Zb()?new Ee((function(){})):jc(t.g).then((function(){return t.qa()})).then((function(){})).o((function(){}))}))}))}function Kc(t,e,n,r,i){return t.a.Nb(r,(function(t){e.ma(n,null,t,i)}),Vc.get())}xc.prototype.qa=function(){return this.b.qa()};var Wc={};function Gc(t,e,n){return t=t+\":\"+e,n&&(t=t+\":\"+n.url),t}function Qc(t,e,n,r){var i=Gc(e,n,r);return Wc[i]||(Wc[i]=new xc(t,e,n,r)),Wc[i]}function Yc(){this.b=null,this.f=[],this.c=[],this.a=null,this.h=this.g=!1}function Jc(t){t.g||(t.g=!0,Zc(t,!1,null,null))}function Xc(t){t.g&&!t.h&&Zc(t,!1,null,null)}function $c(t,e){if(t.b=function(){return Ne(e)},t.f.length)for(var n=0;n<t.f.length;n++)t.f[n](e)}function Zc(t,e,n,r){e?r?function(t,e){if(t.b=function(){return Ae(e)},t.c.length)for(var n=0;n<t.c.length;n++)t.c[n](e)}(t,r):$c(t,n):$c(t,{user:null}),t.f=[],t.c=[]}function tl(){}function el(){this.hb=!1,Object.defineProperty(this,\"appVerificationDisabled\",{get:function(){return this.hb},set:function(t){this.hb=t},enumerable:!1})}function nl(t,e){this.a=e,$r(this,\"verificationId\",t)}function rl(t,e,n,r){return new Uo(t).eb(e,n).then((function(t){return new nl(t,r)}))}function il(t){var e=Gi(t);if(!(e&&e.exp&&e.auth_time&&e.iat))throw new C(\"internal-error\",\"An internal error occurred. The token obtained by Firebase appears to be malformed. Please retry the operation.\");Zr(this,{token:t,expirationTime:Wr(1e3*e.exp),authTime:Wr(1e3*e.auth_time),issuedAtTime:Wr(1e3*e.iat),signInProvider:e.firebase&&e.firebase.sign_in_provider?e.firebase.sign_in_provider:null,signInSecondFactor:e.firebase&&e.firebase.sign_in_second_factor?e.firebase.sign_in_second_factor:null,claims:e})}function ol(t,e,n){var r=e&&e[sl];if(!r)throw new C(\"argument-error\",\"Internal assert: Invalid MultiFactorResolver\");this.a=t,this.f=yt(e),this.g=n,this.c=new uo(null,r),this.b=[];var i=this;K(e[al]||[],(function(t){(t=ri(t))&&i.b.push(t)})),$r(this,\"auth\",this.a),$r(this,\"session\",this.c),$r(this,\"hints\",this.b)}Yc.prototype.reset=function(){this.b=null,this.a&&(this.a.cancel(),this.a=null)},Yc.prototype.i=function(t,e){if(t){this.reset(),this.g=!0;var n=t.c,r=t.b,i=t.a&&\"auth/web-storage-unsupported\"==t.a.code,o=t.a&&\"auth/operation-not-supported-in-this-environment\"==t.a.code;this.h=!(!i&&!o),\"unknown\"!=n||i||o?t.a?(Zc(this,!0,null,t.a),Ne()):e.Fa(n,r)?function(t,e,n){n=n.Fa(e.c,e.b);var r=e.g,i=e.f,o=e.h,a=e.S(),s=!!e.c.match(/Redirect$/);n(r,i,a,o).then((function(e){Zc(t,s,e,null)})).o((function(e){Zc(t,s,null,e)}))}(this,t,e):Ae(new C(\"invalid-auth-event\")):(Zc(this,!1,null,null),Ne())}else Ae(new C(\"invalid-auth-event\"))},Yc.prototype.qa=function(){var t=this;return new Ee((function(e,n){t.b?t.b().then(e,n):(t.f.push(e),t.c.push(n),function(t){var e=new C(\"timeout\");t.a&&t.a.cancel(),t.a=kn(qc.get()).then((function(){t.b||(t.g=!0,Zc(t,!0,null,e))}))}(t))}))},tl.prototype.i=function(t,e){if(t){var n=t.c,r=t.b;t.a?(e.ma(t.c,null,t.a,t.b),Ne()):e.Fa(n,r)?function(t,e){var n=t.b,r=t.c;e.Fa(r,n)(t.g,t.f,t.S(),t.h).then((function(t){e.ma(r,t,null,n)})).o((function(t){e.ma(r,null,t,n)}))}(t,e):Ae(new C(\"invalid-auth-event\"))}else Ae(new C(\"invalid-auth-event\"))},nl.prototype.confirm=function(t){return t=Vo(this.verificationId,t),this.a(t)};var al=\"mfaInfo\",sl=\"mfaPendingCredential\";function ul(t,e,n,r){C.call(this,\"multi-factor-auth-required\",r,e),this.b=new ol(t,e,n),$r(this,\"resolver\",this.b)}function cl(t,e,n){if(t&&y(t.serverResponse)&&\"auth/multi-factor-auth-required\"===t.code)try{return new ul(e,t.serverResponse,n,t.message)}catch(r){}return null}function ll(){}function hl(t){$r(this,\"factorId\",t.fa),this.a=t}function fl(t){if(hl.call(this,t),this.a.fa!=Uo.PROVIDER_ID)throw new C(\"argument-error\",\"firebase.auth.PhoneMultiFactorAssertion requires a valid firebase.auth.PhoneAuthCredential\")}function pl(t,e){for(var n in $e.call(this,t),e)this[n]=e[n]}function dl(t,e){this.a=t,this.b=[],this.c=E(this.xc,this),hn(this.a,\"userReloaded\",this.c);var n=[];e&&e.multiFactor&&e.multiFactor.enrolledFactors&&K(e.multiFactor.enrolledFactors,(function(t){var e=null,r={};if(t){t.uid&&(r[ai]=t.uid),t.displayName&&(r[ii]=t.displayName),t.enrollmentTime&&(r[oi]=new Date(t.enrollmentTime).toISOString()),t.phoneNumber&&(r[si]=t.phoneNumber);try{e=new ui(r)}catch(i){}t=e}else t=null;t&&n.push(t)})),vl(this,n)}function vl(t,e){t.b=e,$r(t,\"enrolledFactors\",e)}function yl(t,e,n){if(this.i=t,this.h=e,this.g=n,this.c=3e4,this.f=96e4,this.b=null,this.a=this.c,this.f<this.c)throw Error(\"Proactive refresh lower bound greater than upper bound!\")}function gl(t,e){t.stop(),t.b=kn(function(t,e){return e?(t.a=t.c,t.g()):(e=t.a,t.a*=2,t.a>t.f&&(t.a=t.f),e)}(t,e)).then((function(){return function(){var t=u.document,e=null;return Kr()||!t?Ne():new Ee((function(n){e=function(){Kr()&&(t.removeEventListener(\"visibilitychange\",e,!1),n())},t.addEventListener(\"visibilitychange\",e,!1)})).o((function(n){throw t.removeEventListener(\"visibilitychange\",e,!1),n}))}()})).then((function(){return t.i()})).then((function(){gl(t,!0)})).o((function(e){t.h(e)&&gl(t,!1)}))}function ml(t){this.f=t,this.b=this.a=null,this.c=Date.now()}function bl(t,e){\"undefined\"===typeof e&&(t.b?e=(e=t.b).a-e.g:e=0),t.c=Date.now()+1e3*e}function _l(t,e){t.b=Wi(e[ns]||\"\"),t.a=e.refreshToken,bl(t,\"undefined\"!==typeof(e=e.expiresIn)?Number(e):void 0)}function wl(t,e){return function(t,e){return new Ee((function(n,r){\"refresh_token\"==e.grant_type&&e.refresh_token||\"authorization_code\"==e.grant_type&&e.code?hs(t,t.l+\"?key=\"+encodeURIComponent(t.c),(function(t){t?t.error?r(cu(t)):t.access_token&&t.refresh_token?n(t):r(new C(\"internal-error\")):r(new C(\"network-request-failed\"))}),\"POST\",Zn(e).toString(),t.g,t.v.get()):r(new C(\"internal-error\"))}))}(t.f,e).then((function(e){return t.b=Wi(e.access_token),t.a=e.refresh_token,bl(t,e.expires_in),{accessToken:t.b.toString(),refreshToken:t.a}})).o((function(e){throw\"auth/user-token-expired\"==e.code&&(t.a=null),e}))}function El(t,e){this.a=t||null,this.b=e||null,Zr(this,{lastSignInTime:Wr(e||null),creationTime:Wr(t||null)})}function Tl(t,e,n,r,i,o){Zr(this,{uid:t,displayName:r||null,photoURL:i||null,email:n||null,phoneNumber:o||null,providerId:e})}function Il(t,n,r){this.G=[],this.l=t.apiKey,this.m=t.appName,this.s=t.authDomain||null;var i=e.a.SDK_VERSION?Ar(e.a.SDK_VERSION):null;this.a=new ts(this.l,j(N),i),t.emulatorConfig&&us(this.a,t.emulatorConfig),this.b=new ml(this.a),Rl(this,n[ns]),_l(this.b,n),$r(this,\"refreshToken\",this.b.a),Dl(this,r||{}),Tn.call(this),this.P=!1,this.s&&xr()&&(this.h=Qc(this.s,this.l,this.m)),this.R=[],this.f=null,this.u=function(t){return new yl((function(){return t.I(!0)}),(function(t){return!(!t||\"auth/network-request-failed\"!=t.code)}),(function(){var e=t.b.c-Date.now()-3e5;return 0<e?e:0}))}(this),this.$=E(this.gb,this);var o=this;this.pa=null,this.Ba=function(t){o.wa(t.i)},this.ba=null,this.za=function(t){us(o.a,t.c)},this.W=null,this.X=[],this.Aa=function(t){Cl(o,t.f)},this.aa=null,this.N=new dl(this,r),$r(this,\"multiFactor\",this.N)}function Sl(t,e){t.ba&&dn(t.ba,\"languageCodeChanged\",t.Ba),(t.ba=e)&&hn(e,\"languageCodeChanged\",t.Ba)}function Ol(t,e){t.W&&dn(t.W,\"emulatorConfigChanged\",t.za),(t.W=e)&&hn(e,\"emulatorConfigChanged\",t.za)}function Cl(t,n){t.X=n,ls(t.a,e.a.SDK_VERSION?Ar(e.a.SDK_VERSION,t.X):null)}function kl(t,e){t.aa&&dn(t.aa,\"frameworkChanged\",t.Aa),(t.aa=e)&&hn(e,\"frameworkChanged\",t.Aa)}function Nl(t){try{return e.a.app(t.m).auth()}catch(n){throw new C(\"internal-error\",\"No firebase.auth.Auth instance is available for the Firebase App '\"+t.m+\"'!\")}}function Al(t){t.A||t.u.b||(t.u.start(),dn(t,\"tokenChanged\",t.$),hn(t,\"tokenChanged\",t.$))}function Pl(t){dn(t,\"tokenChanged\",t.$),t.u.stop()}function Rl(t,e){t.ya=e,$r(t,\"_lat\",e)}function jl(t){for(var e=[],n=0;n<t.R.length;n++)e.push(t.R[n](t));return Re(e).then((function(){return t}))}function xl(t){t.h&&!t.P&&(t.P=!0,Fc(t.h,t))}function Dl(t,e){Zr(t,{uid:e.uid,displayName:e.displayName||null,photoURL:e.photoURL||null,email:e.email||null,emailVerified:e.emailVerified||!1,phoneNumber:e.phoneNumber||null,isAnonymous:e.isAnonymous||!1,tenantId:e.tenantId||null,metadata:new El(e.createdAt,e.lastLoginAt),providerData:[]}),t.a.b=t.tenantId}function Ll(){}function Ml(t){return Ne().then((function(){if(t.A)throw new C(\"app-deleted\")}))}function Fl(t){return G(t.providerData,(function(t){return t.providerId}))}function Ul(t,e){e&&(Vl(t,e.providerId),t.providerData.push(e))}function Vl(t,e){X(t.providerData,(function(t){return t.providerId==e}))}function ql(t,e,n){(\"uid\"!=e||n)&&t.hasOwnProperty(e)&&$r(t,e,n)}function Bl(t,e){t!=e&&(Zr(t,{uid:e.uid,displayName:e.displayName,photoURL:e.photoURL,email:e.email,emailVerified:e.emailVerified,phoneNumber:e.phoneNumber,isAnonymous:e.isAnonymous,tenantId:e.tenantId,providerData:[]}),e.metadata?$r(t,\"metadata\",function(t){return new El(t.a,t.b)}(e.metadata)):$r(t,\"metadata\",new El),K(e.providerData,(function(e){Ul(t,e)})),function(t,e){t.b=e.b,t.a=e.a,t.c=e.c}(t.b,e.b),$r(t,\"refreshToken\",t.b.a),vl(t.N,e.N.b))}function zl(t){return t.I().then((function(e){var n=t.isAnonymous;return function(t,e){return su(t.a,Fs,{idToken:e}).then(E(t.Jc,t))}(t,e).then((function(){return n||ql(t,\"isAnonymous\",!1),e}))}))}function Hl(t,e){e[ns]&&t.ya!=e[ns]&&(_l(t.b,e),t.dispatchEvent(new pl(\"tokenChanged\")),Rl(t,e[ns]),ql(t,\"refreshToken\",t.b.a))}function Kl(t,e){return zl(t).then((function(){if(Y(Fl(t),e))return jl(t).then((function(){throw new C(\"provider-already-linked\")}))}))}function Wl(t,e,n){return ti({user:t,credential:qo(e),additionalUserInfo:e=$i(e),operationType:n})}function Gl(t,e){return Hl(t,e),t.reload().then((function(){return t}))}function Ql(t,n,r,i,o){if(!xr())return Ae(new C(\"operation-not-supported-in-this-environment\"));if(t.f&&!o)return Ae(t.f);var a=Xi(r.providerId),s=qr(t.uid+\":::\"),u=null;(!Mr()||Er())&&t.s&&r.isOAuthProvider&&(u=Eu(t.s,t.l,t.m,n,r,null,s,e.a.SDK_VERSION||null,null,null,t.tenantId));var c=gr(u,a&&a.ua,a&&a.ta);return i=i().then((function(){if(Jl(t),!o)return t.I().then((function(){}))})).then((function(){return Bc(t.h,c,n,r,s,!!u,t.tenantId)})).then((function(){return new Ee((function(e,r){t.ma(n,null,new C(\"cancelled-popup-request\"),t.i||null),t.g=e,t.O=r,t.i=s,t.c=Kc(t.h,t,n,c,s)}))})).then((function(t){return c&&yr(c),t?ti(t):null})).o((function(t){throw c&&yr(c),t})),Xl(t,i,o)}function Yl(t,e,n,r,i){if(!xr())return Ae(new C(\"operation-not-supported-in-this-environment\"));if(t.f&&!i)return Ae(t.f);var o=null,a=qr(t.uid+\":::\");return r=r().then((function(){if(Jl(t),!i)return t.I().then((function(){}))})).then((function(){return t.ga=a,jl(t)})).then((function(e){return t.ha&&(e=(e=t.ha).b.set(th,t.w(),e.a)),e})).then((function(){return Hc(t.h,e,n,a,t.tenantId)})).o((function(e){if(o=e,t.ha)return eh(t.ha);throw o})).then((function(){if(o)throw o})),Xl(t,r,i)}function Jl(t){if(!t.h||!t.P){if(t.h&&!t.P)throw new C(\"internal-error\");throw new C(\"auth-domain-config-required\")}}function Xl(t,e,n){var r=function(t,e,n){return t.f&&!n?(e.cancel(),Ae(t.f)):e.o((function(e){throw!e||\"auth/user-disabled\"!=e.code&&\"auth/user-token-expired\"!=e.code||(t.f||t.dispatchEvent(new pl(\"userInvalidated\")),t.f=e),e}))}(t,e,n);return t.G.push(r),r.na((function(){J(t.G,r)})),r.o((function(e){var n=null;throw e&&\"auth/multi-factor-auth-required\"===e.code&&(n=cl(e.w(),Nl(t),E(t.ic,t))),n||e}))}function $l(t){if(!t.apiKey)return null;var e={apiKey:t.apiKey,authDomain:t.authDomain,appName:t.appName,emulatorConfig:t.emulatorConfig},n={};if(!t.stsTokenManager||!t.stsTokenManager.accessToken)return null;n[ns]=t.stsTokenManager.accessToken,n.refreshToken=t.stsTokenManager.refreshToken||null;var r=t.stsTokenManager.expirationTime;r&&(n.expiresIn=(r-Date.now())/1e3);var i=new Il(e,n,t);return t.providerData&&K(t.providerData,(function(t){t&&Ul(i,ti(t))})),t.redirectEventId&&(i.ga=t.redirectEventId),i}function Zl(t){this.a=t,this.b=oc()}ol.prototype.Qc=function(t){var e=this;return t.rb(this.a.a,this.c).then((function(t){var n=yt(e.f);return delete n[al],delete n[sl],mt(n,t),e.g(n)}))},S(ul,C),ll.prototype.rb=function(t,e,n){return e.type==co?function(t,e,n,r){return n.Ha().then((function(n){return n={idToken:n},\"undefined\"!==typeof r&&(n.displayName=r),mt(n,{phoneVerificationInfo:Fo(t.a)}),su(e,Ls,n)}))}(this,t,e,n):function(t,e,n){return n.Ha().then((function(n){return mt(n={mfaPendingCredential:n},{phoneVerificationInfo:Fo(t.a)}),su(e,Ms,n)}))}(this,t,e)},S(hl,ll),S(fl,hl),S(pl,$e),(n=dl.prototype).xc=function(t){vl(this,function(t){var e=[];return K(t.mfaInfo||[],(function(t){(t=ri(t))&&e.push(t)})),e}(t.gd))},n.Qb=function(){return this.a.I().then((function(t){return new uo(t,null)}))},n.ec=function(t,e){var n=this,r=this.a.a;return this.Qb().then((function(n){return t.rb(r,n,e)})).then((function(t){return Hl(n.a,t),n.a.reload()}))},n.ad=function(t){var e=this,n=\"string\"===typeof t?t:t.uid,r=this.a.a;return this.a.I().then((function(t){return su(r,au,{idToken:t,mfaEnrollmentId:n})})).then((function(t){var r=W(e.b,(function(t){return t.uid!=n}));return vl(e,r),Hl(e.a,t),e.a.reload().o((function(t){if(\"auth/user-token-expired\"!=t.code)throw t}))}))},n.w=function(){return{multiFactor:{enrolledFactors:G(this.b,(function(t){return t.w()}))}}},yl.prototype.start=function(){this.a=this.c,gl(this,!0)},yl.prototype.stop=function(){this.b&&(this.b.cancel(),this.b=null)},ml.prototype.w=function(){return{apiKey:this.f.c,refreshToken:this.a,accessToken:this.b&&this.b.toString(),expirationTime:this.c}},ml.prototype.getToken=function(t){return t=!!t,this.b&&!this.a?Ae(new C(\"user-token-expired\")):t||!this.b||Date.now()>this.c-3e4?this.a?wl(this,{grant_type:\"refresh_token\",refresh_token:this.a}):Ne(null):Ne({accessToken:this.b.toString(),refreshToken:this.a})},El.prototype.w=function(){return{lastLoginAt:this.b,createdAt:this.a}},S(Il,Tn),Il.prototype.wa=function(t){this.pa=t,ss(this.a,t)},Il.prototype.ka=function(){return this.pa},Il.prototype.Ga=function(){return Z(this.X)},Il.prototype.gb=function(){this.u.b&&(this.u.stop(),this.u.start())},$r(Il.prototype,\"providerId\",\"firebase\"),(n=Il.prototype).reload=function(){var t=this;return Xl(this,Ml(this).then((function(){return zl(t).then((function(){return jl(t)})).then(Ll)})))},n.nc=function(t){return this.I(t).then((function(t){return new il(t)}))},n.I=function(t){var e=this;return Xl(this,Ml(this).then((function(){return e.b.getToken(t)})).then((function(t){if(!t)throw new C(\"internal-error\");return t.accessToken!=e.ya&&(Rl(e,t.accessToken),e.dispatchEvent(new pl(\"tokenChanged\"))),ql(e,\"refreshToken\",t.refreshToken),t.accessToken})))},n.Jc=function(t){if(!(t=t.users)||!t.length)throw new C(\"internal-error\");Dl(this,{uid:(t=t[0]).localId,displayName:t.displayName,photoURL:t.photoUrl,email:t.email,emailVerified:!!t.emailVerified,phoneNumber:t.phoneNumber,lastLoginAt:t.lastLoginAt,createdAt:t.createdAt,tenantId:t.tenantId});for(var e=function(t){return(t=t.providerUserInfo)&&t.length?G(t,(function(t){return new Tl(t.rawId,t.providerId,t.email,t.displayName,t.photoUrl,t.phoneNumber)})):[]}(t),n=0;n<e.length;n++)Ul(this,e[n]);ql(this,\"isAnonymous\",!(this.email&&t.passwordHash)&&!(this.providerData&&this.providerData.length)),this.dispatchEvent(new pl(\"userReloaded\",{gd:t}))},n.Kc=function(t){return Jr(\"firebase.User.prototype.reauthenticateAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.reauthenticateWithCredential instead.\"),this.sb(t)},n.sb=function(t){var e=this,n=null;return Xl(this,t.c(this.a,this.uid).then((function(t){return Hl(e,t),n=Wl(e,t,\"reauthenticate\"),e.f=null,e.reload()})).then((function(){return n})),!0)},n.Bc=function(t){return Jr(\"firebase.User.prototype.linkAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.linkWithCredential instead.\"),this.pb(t)},n.pb=function(t){var e=this,n=null;return Xl(this,Kl(this,t.providerId).then((function(){return e.I()})).then((function(n){return t.b(e.a,n)})).then((function(t){return n=Wl(e,t,\"link\"),Gl(e,t)})).then((function(){return n})))},n.Cc=function(t,e){var n=this;return Xl(this,Kl(this,\"phone\").then((function(){return rl(Nl(n),t,e,E(n.pb,n))})))},n.Lc=function(t,e){var n=this;return Xl(this,Ne().then((function(){return rl(Nl(n),t,e,E(n.sb,n))})),!0)},n.Ab=function(t){var e=this;return Xl(this,this.I().then((function(n){return e.a.Ab(n,t)})).then((function(t){return Hl(e,t),e.reload()})))},n.dd=function(t){var e=this;return Xl(this,this.I().then((function(n){return t.b(e.a,n)})).then((function(t){return Hl(e,t),e.reload()})))},n.Bb=function(t){var e=this;return Xl(this,this.I().then((function(n){return e.a.Bb(n,t)})).then((function(t){return Hl(e,t),e.reload()})))},n.Cb=function(t){if(void 0===t.displayName&&void 0===t.photoURL)return Ml(this);var e=this;return Xl(this,this.I().then((function(n){return e.a.Cb(n,{displayName:t.displayName,photoUrl:t.photoURL})})).then((function(t){return Hl(e,t),ql(e,\"displayName\",t.displayName||null),ql(e,\"photoURL\",t.photoUrl||null),K(e.providerData,(function(t){\"password\"===t.providerId&&($r(t,\"displayName\",e.displayName),$r(t,\"photoURL\",e.photoURL))})),jl(e)})).then(Ll))},n.bd=function(t){var e=this;return Xl(this,zl(this).then((function(n){return Y(Fl(e),t)?function(t,e,n){return su(t,js,{idToken:e,deleteProvider:n})}(e.a,n,[t]).then((function(t){var n={};return K(t.providerUserInfo||[],(function(t){n[t.providerId]=!0})),K(Fl(e),(function(t){n[t]||Vl(e,t)})),n[Uo.PROVIDER_ID]||$r(e,\"phoneNumber\",null),jl(e)})):jl(e).then((function(){throw new C(\"no-such-provider\")}))})))},n.delete=function(){var t=this;return Xl(this,this.I().then((function(e){return su(t.a,Rs,{idToken:e})})).then((function(){t.dispatchEvent(new pl(\"userDeleted\"))}))).then((function(){for(var e=0;e<t.G.length;e++)t.G[e].cancel(\"app-deleted\");Sl(t,null),Ol(t,null),kl(t,null),t.G=[],t.A=!0,Pl(t),$r(t,\"refreshToken\",null),t.h&&Uc(t.h,t)}))},n.Eb=function(t,e){return!!(\"linkViaPopup\"==t&&(this.i||null)==e&&this.g||\"reauthViaPopup\"==t&&(this.i||null)==e&&this.g||\"linkViaRedirect\"==t&&(this.ga||null)==e||\"reauthViaRedirect\"==t&&(this.ga||null)==e)},n.ma=function(t,e,n,r){\"linkViaPopup\"!=t&&\"reauthViaPopup\"!=t||r!=(this.i||null)||(n&&this.O?this.O(n):e&&!n&&this.g&&this.g(e),this.c&&(this.c.cancel(),this.c=null),delete this.g,delete this.O)},n.Fa=function(t,e){return\"linkViaPopup\"==t&&e==(this.i||null)?E(this.Jb,this):\"reauthViaPopup\"==t&&e==(this.i||null)?E(this.Kb,this):\"linkViaRedirect\"==t&&(this.ga||null)==e?E(this.Jb,this):\"reauthViaRedirect\"==t&&(this.ga||null)==e?E(this.Kb,this):null},n.Dc=function(t){var e=this;return Ql(this,\"linkViaPopup\",t,(function(){return Kl(e,t.providerId).then((function(){return jl(e)}))}),!1)},n.Mc=function(t){return Ql(this,\"reauthViaPopup\",t,(function(){return Ne()}),!0)},n.Ec=function(t){var e=this;return Yl(this,\"linkViaRedirect\",t,(function(){return Kl(e,t.providerId)}),!1)},n.Nc=function(t){return Yl(this,\"reauthViaRedirect\",t,(function(){return Ne()}),!0)},n.Jb=function(t,e,n,r){var i=this;this.c&&(this.c.cancel(),this.c=null);var o=null;return Xl(this,this.I().then((function(n){return Ss(i.a,{requestUri:t,postBody:r,sessionId:e,idToken:n})})).then((function(t){return o=Wl(i,t,\"link\"),Gl(i,t)})).then((function(){return o})))},n.Kb=function(t,e,n,r){var i=this;this.c&&(this.c.cancel(),this.c=null);var o=null;return Xl(this,Ne().then((function(){return fo(Os(i.a,{requestUri:t,sessionId:e,postBody:r,tenantId:n}),i.uid)})).then((function(t){return o=Wl(i,t,\"reauthenticate\"),Hl(i,t),i.f=null,i.reload()})).then((function(){return o})),!0)},n.tb=function(t){var e=this,n=null;return Xl(this,this.I().then((function(e){return n=e,\"undefined\"===typeof t||vt(t)?{}:Bi(new Ri(t))})).then((function(t){return e.a.tb(n,t)})).then((function(t){if(e.email!=t)return e.reload()})).then((function(){})))},n.Db=function(t,e){var n=this,r=null;return Xl(this,this.I().then((function(t){return r=t,\"undefined\"===typeof e||vt(e)?{}:Bi(new Ri(e))})).then((function(e){return n.a.Db(r,t,e)})).then((function(t){if(n.email!=t)return n.reload()})).then((function(){})))},n.ic=function(t){var e=null,n=this;return Xl(this,t=fo(Ne(t),n.uid).then((function(t){return e=Wl(n,t,\"reauthenticate\"),Hl(n,t),n.f=null,n.reload()})).then((function(){return e})),!0)},n.toJSON=function(){return this.w()},n.w=function(){var t={uid:this.uid,displayName:this.displayName,photoURL:this.photoURL,email:this.email,emailVerified:this.emailVerified,phoneNumber:this.phoneNumber,isAnonymous:this.isAnonymous,tenantId:this.tenantId,providerData:[],apiKey:this.l,appName:this.m,authDomain:this.s,stsTokenManager:this.b.w(),redirectEventId:this.ga||null};return this.metadata&&mt(t,this.metadata.w()),K(this.providerData,(function(e){t.providerData.push(function(t){var e,n={};for(e in t)t.hasOwnProperty(e)&&(n[e]=t[e]);return n}(e))})),mt(t,this.N.w()),t};var th={name:\"redirectUser\",D:\"session\"};function eh(t){return uc(t.b,th,t.a)}function nh(t){this.a=t,this.b=oc(),this.c=null,this.f=function(t){var e=oh(\"local\"),n=oh(\"session\"),r=oh(\"none\");return function(t,e,n){var r=sc(e,n),i=ac(t,e.D);return t.get(e,n).then((function(o){var a=null;try{a=Vr(u.localStorage.getItem(r))}catch(s){}if(a&&!o)return u.localStorage.removeItem(r),t.set(e,a,n);a&&o&&\"localStorage\"!=i.type&&u.localStorage.removeItem(r)}))}(t.b,e,t.a).then((function(){return t.b.get(n,t.a)})).then((function(i){return i?n:t.b.get(r,t.a).then((function(n){return n?r:t.b.get(e,t.a).then((function(n){return n?e:t.b.get(ih,t.a).then((function(t){return t?oh(t):e}))}))}))})).then((function(e){return t.c=e,rh(t,e.D)})).o((function(){t.c||(t.c=e)}))}(this),this.b.addListener(oh(\"local\"),this.a,E(this.g,this))}function rh(t,e){var n,r=[];for(n in rc)rc[n]!==e&&r.push(uc(t.b,oh(rc[n]),t.a));return r.push(uc(t.b,ih,t.a)),function(t){return new Ee((function(e,n){var r=t.length,i=[];if(r)for(var o=function(t,n){r--,i[t]=n,0==r&&e(i)},a=function(t){n(t)},s=0;s<t.length;s++)Pe(t[s],T(o,s),a);else e(i)}))}(r)}nh.prototype.g=function(){var t=this,e=oh(\"local\");ch(this,(function(){return Ne().then((function(){return t.c&&\"local\"!=t.c.D?t.b.get(e,t.a):null})).then((function(n){if(n)return rh(t,\"local\").then((function(){t.c=e}))}))}))};var ih={name:\"persistence\",D:\"session\"};function oh(t){return{name:\"authUser\",D:t}}function ah(t,e){return ch(t,(function(){return t.b.set(t.c,e.w(),t.a)}))}function sh(t){return ch(t,(function(){return uc(t.b,t.c,t.a)}))}function uh(t,e,n){return ch(t,(function(){return t.b.get(t.c,t.a).then((function(t){return t&&e&&(t.authDomain=e),t&&n&&(t.emulatorConfig=n),$l(t||{})}))}))}function ch(t,e){return t.f=t.f.then(e,e),t.f}function lh(t){if(this.m=!1,$r(this,\"settings\",new el),$r(this,\"app\",t),!bh(this).options||!bh(this).options.apiKey)throw new C(\"invalid-api-key\");t=e.a.SDK_VERSION?Ar(e.a.SDK_VERSION):null,this.a=new ts(bh(this).options&&bh(this).options.apiKey,j(N),t),this.R=[],this.u=[],this.P=[],this.ac=e.a.INTERNAL.createSubscribe(E(this.yc,this)),this.X=void 0,this.bc=e.a.INTERNAL.createSubscribe(E(this.zc,this)),gh(this,null),this.l=new nh(bh(this).options.apiKey+\":\"+bh(this).name),this.G=new Zl(bh(this).options.apiKey+\":\"+bh(this).name),this.$=Th(this,function(t){var e=bh(t).options.authDomain,n=function(t){var e=function(t,e){return t.b.get(th,t.a).then((function(t){return t&&e&&(t.authDomain=e),$l(t||{})}))}(t.G,bh(t).options.authDomain).then((function(e){return(t.s=e)&&(e.ha=t.G),eh(t.G)}));return Th(t,e)}(t).then((function(){return uh(t.l,e,t.f)})).then((function(e){return e?(e.ha=t.G,t.s&&(t.s.ga||null)==(e.ga||null)?e:e.reload().then((function(){return ah(t.l,e).then((function(){return e}))})).o((function(n){return\"auth/network-request-failed\"==n.code?e:sh(t.l)}))):null})).then((function(e){gh(t,e||null)}));return Th(t,n)}(this)),this.h=Th(this,function(t){return t.$.then((function(){return vh(t)})).o((function(){})).then((function(){if(!t.m)return t.pa()})).o((function(){})).then((function(){if(!t.m){t.ba=!0;var e=t.l;e.b.addListener(oh(\"local\"),e.a,t.pa)}}))}(this)),this.ba=!1,this.pa=E(this.Yc,this),this.Ba=E(this.da,this),this.ya=E(this.kc,this),this.za=E(this.vc,this),this.Aa=E(this.wc,this),this.b=null,function(t){var e=bh(t).options.authDomain,n=bh(t).options.apiKey;e&&xr()&&(t.gb=t.$.then((function(){if(!t.m){if(t.b=Qc(e,n,bh(t).name,t.f),Fc(t.b,t),_h(t)&&xl(_h(t)),t.s){xl(t.s);var r=t.s;r.wa(t.ka()),Sl(r,t),Cl(r=t.s,t.N),kl(r,t),us((r=t.s).a,t.f),Ol(r,t),t.s=null}return t.b}})))}(this),this.INTERNAL={},this.INTERNAL.delete=E(this.delete,this),this.INTERNAL.logFramework=E(this.Fc,this),this.A=0,Tn.call(this),function(t){Object.defineProperty(t,\"lc\",{get:function(){return this.ka()},set:function(t){this.wa(t)},enumerable:!1}),t.aa=null,Object.defineProperty(t,\"ti\",{get:function(){return this.S()},set:function(t){this.xb(t)},enumerable:!1}),t.W=null}(this),this.N=[],this.f=null}function hh(t){$e.call(this,\"languageCodeChanged\"),this.i=t}function fh(t){$e.call(this,\"emulatorConfigChanged\"),this.c=t}function ph(t){$e.call(this,\"frameworkChanged\"),this.f=t}function dh(t){return t.gb||Ae(new C(\"auth-domain-config-required\"))}function vh(t){if(!xr())return Ae(new C(\"operation-not-supported-in-this-environment\"));var e=dh(t).then((function(){return t.b.qa()})).then((function(t){return t?ti(t):null}));return Th(t,e)}function yh(t,e){var n={};return n.apiKey=bh(t).options.apiKey,n.authDomain=bh(t).options.authDomain,n.appName=bh(t).name,t.f&&(n.emulatorConfig=t.f),t.$.then((function(){return function(t,e,n,r){var i=new Il(t,e);return n&&(i.ha=n),r&&Cl(i,r),i.reload().then((function(){return i}))}(n,e,t.G,t.Ga())})).then((function(e){return _h(t)&&e.uid==_h(t).uid?(Bl(_h(t),e),t.da(e)):(gh(t,e),xl(e),t.da(e))})).then((function(){Eh(t)}))}function gh(t,e){_h(t)&&(function(t,e){X(t.R,(function(t){return t==e}))}(_h(t),t.Ba),dn(_h(t),\"tokenChanged\",t.ya),dn(_h(t),\"userDeleted\",t.za),dn(_h(t),\"userInvalidated\",t.Aa),Pl(_h(t))),e&&(e.R.push(t.Ba),hn(e,\"tokenChanged\",t.ya),hn(e,\"userDeleted\",t.za),hn(e,\"userInvalidated\",t.Aa),0<t.A&&Al(e)),$r(t,\"currentUser\",e),e&&(e.wa(t.ka()),Sl(e,t),Cl(e,t.N),kl(e,t),us(e.a,t.f),Ol(e,t))}function mh(t,e){var n=null,r=null;return Th(t,e.then((function(e){return n=qo(e),r=$i(e),yh(t,e)}),(function(e){var n=null;throw e&&\"auth/multi-factor-auth-required\"===e.code&&(n=cl(e.w(),t,E(t.jc,t))),n||e})).then((function(){return ti({user:_h(t),credential:n,additionalUserInfo:r,operationType:\"signIn\"})})))}function bh(t){return t.app}function _h(t){return t.currentUser}function wh(t){return _h(t)&&_h(t)._lat||null}function Eh(t){if(t.ba){for(var e=0;e<t.u.length;e++)t.u[e]&&t.u[e](wh(t));if(t.X!==t.getUid()&&t.P.length)for(t.X=t.getUid(),e=0;e<t.P.length;e++)t.P[e]&&t.P[e](wh(t))}}function Th(t,e){return t.R.push(e),e.na((function(){J(t.R,e)})),e}function Ih(){}function Sh(){this.a={},this.b=1e12}nh.prototype.wb=function(t){var e=null,n=this;return function(t){var e=new C(\"invalid-persistence-type\"),n=new C(\"unsupported-persistence-type\");t:{for(r in rc)if(rc[r]==t){var r=!0;break t}r=!1}if(!r||\"string\"!==typeof t)throw e;switch(Ir()){case\"ReactNative\":if(\"session\"===t)throw n;break;case\"Node\":if(\"none\"!==t)throw n;break;case\"Worker\":if(\"session\"===t||!Lu()&&\"none\"!==t)throw n;break;default:if(!jr()&&\"none\"!==t)throw n}}(t),ch(this,(function(){return t!=n.c.D?n.b.get(n.c,n.a).then((function(r){return e=r,rh(n,t)})).then((function(){if(n.c=oh(t),e)return n.b.set(n.c,e,n.a)})):Ne()}))},S(lh,Tn),S(hh,$e),S(fh,$e),S(ph,$e),(n=lh.prototype).wb=function(t){return Th(this,t=this.l.wb(t))},n.wa=function(t){this.aa===t||this.m||(this.aa=t,ss(this.a,this.aa),this.dispatchEvent(new hh(this.ka())))},n.ka=function(){return this.aa},n.ed=function(){var t=u.navigator;this.wa(t&&(t.languages&&t.languages[0]||t.language||t.userLanguage)||null)},n.fd=function(t,e){if(!this.f){if(!/^https?:\\/\\//.test(t))throw new C(\"argument-error\",\"Emulator URL must start with a valid scheme (http:// or https://).\");!function(t){\"undefined\"!==typeof console&&\"function\"===typeof console.info&&console.info(\"WARNING: You are using the Auth Emulator, which is intended for local testing only.  Do not use with production credentials.\"),u.document&&!t&&_r().then((function(){var t=u.document.createElement(\"div\");t.innerText=\"Running in emulator mode. Do not use with production credentials.\",t.style.position=\"fixed\",t.style.width=\"100%\",t.style.backgroundColor=\"#ffffff\",t.style.border=\".1em solid #000000\",t.style.color=\"#ff0000\",t.style.bottom=\"0px\",t.style.left=\"0px\",t.style.margin=\"0px\",t.style.zIndex=1e4,t.style.textAlign=\"center\",t.classList.add(\"firebase-emulator-warning\"),u.document.body.appendChild(t)}))}(!!e&&!!e.disableWarnings),this.f={url:t},this.settings.hb=!0,us(this.a,this.f),this.dispatchEvent(new fh(this.f))}},n.Fc=function(t){this.N.push(t),ls(this.a,e.a.SDK_VERSION?Ar(e.a.SDK_VERSION,this.N):null),this.dispatchEvent(new ph(this.N))},n.Ga=function(){return Z(this.N)},n.xb=function(t){this.W===t||this.m||(this.W=t,this.a.b=this.W)},n.S=function(){return this.W},n.toJSON=function(){return{apiKey:bh(this).options.apiKey,authDomain:bh(this).options.authDomain,appName:bh(this).name,currentUser:_h(this)&&_h(this).w()}},n.Eb=function(t,e){switch(t){case\"unknown\":case\"signInViaRedirect\":return!0;case\"signInViaPopup\":return this.i==e&&!!this.g;default:return!1}},n.ma=function(t,e,n,r){\"signInViaPopup\"==t&&this.i==r&&(n&&this.O?this.O(n):e&&!n&&this.g&&this.g(e),this.c&&(this.c.cancel(),this.c=null),delete this.g,delete this.O)},n.Fa=function(t,e){return\"signInViaRedirect\"==t||\"signInViaPopup\"==t&&this.i==e&&this.g?E(this.hc,this):null},n.hc=function(t,e,n,r){var i=this,o={requestUri:t,postBody:r,sessionId:e,tenantId:n};return this.c&&(this.c.cancel(),this.c=null),i.$.then((function(){return mh(i,Is(i.a,o))}))},n.Wc=function(t){if(!xr())return Ae(new C(\"operation-not-supported-in-this-environment\"));var n=this,r=Xi(t.providerId),i=qr(),o=null;(!Mr()||Er())&&bh(this).options.authDomain&&t.isOAuthProvider&&(o=Eu(bh(this).options.authDomain,bh(this).options.apiKey,bh(this).name,\"signInViaPopup\",t,null,i,e.a.SDK_VERSION||null,null,null,this.S(),this.f));var a=gr(o,r&&r.ua,r&&r.ta);return Th(this,r=dh(this).then((function(e){return Bc(e,a,\"signInViaPopup\",t,i,!!o,n.S())})).then((function(){return new Ee((function(t,e){n.ma(\"signInViaPopup\",null,new C(\"cancelled-popup-request\"),n.i),n.g=t,n.O=e,n.i=i,n.c=Kc(n.b,n,\"signInViaPopup\",a,i)}))})).then((function(t){return a&&yr(a),t?ti(t):null})).o((function(t){throw a&&yr(a),t})))},n.Xc=function(t){if(!xr())return Ae(new C(\"operation-not-supported-in-this-environment\"));var e=this;return Th(this,dh(this).then((function(){return function(t){return ch(t,(function(){return t.b.set(ih,t.c.D,t.a)}))}(e.l)})).then((function(){return Hc(e.b,\"signInViaRedirect\",t,void 0,e.S())})))},n.qa=function(){var t=this;return vh(this).then((function(e){return t.b&&Xc(t.b.b),e})).o((function(e){throw t.b&&Xc(t.b.b),e}))},n.cd=function(t){if(!t)return Ae(new C(\"null-user\"));if(this.W!=t.tenantId)return Ae(new C(\"tenant-id-mismatch\"));var e=this,n={};n.apiKey=bh(this).options.apiKey,n.authDomain=bh(this).options.authDomain,n.appName=bh(this).name;var r=function(t,e,n,r){var i=t.b,o={};return o[ns]=i.b&&i.b.toString(),o.refreshToken=i.a,e=new Il(e||{apiKey:t.l,authDomain:t.s,appName:t.m},o),n&&(e.ha=n),r&&Cl(e,r),Bl(e,t),e}(t,n,e.G,e.Ga());return Th(this,this.h.then((function(){if(bh(e).options.apiKey!=t.l)return r.reload()})).then((function(){return _h(e)&&t.uid==_h(e).uid?(Bl(_h(e),t),e.da(t)):(gh(e,r),xl(r),e.da(r))})).then((function(){Eh(e)})))},n.zb=function(){var t=this;return Th(this,this.h.then((function(){return t.b&&Xc(t.b.b),_h(t)?(gh(t,null),sh(t.l).then((function(){Eh(t)}))):Ne()})))},n.Yc=function(){var t=this;return uh(this.l,bh(this).options.authDomain).then((function(e){if(!t.m){var n;if(n=_h(t)&&e){n=_h(t).uid;var r=e.uid;n=void 0!==n&&null!==n&&\"\"!==n&&void 0!==r&&null!==r&&\"\"!==r&&n==r}if(n)return Bl(_h(t),e),_h(t).I();(_h(t)||e)&&(gh(t,e),e&&(xl(e),e.ha=t.G),t.b&&Fc(t.b,t),Eh(t))}}))},n.da=function(t){return ah(this.l,t)},n.kc=function(){Eh(this),this.da(_h(this))},n.vc=function(){this.zb()},n.wc=function(){this.zb()},n.jc=function(t){var e=this;return this.h.then((function(){return mh(e,Ne(t))}))},n.yc=function(t){var e=this;this.addAuthTokenListener((function(){t.next(_h(e))}))},n.zc=function(t){var e=this;!function(t,e){t.P.push(e),Th(t,t.h.then((function(){!t.m&&Y(t.P,e)&&t.X!==t.getUid()&&(t.X=t.getUid(),e(wh(t)))})))}(this,(function(){t.next(_h(e))}))},n.Hc=function(t,e,n){var r=this;return this.ba&&Promise.resolve().then((function(){\"function\"===typeof t?t(_h(r)):\"function\"===typeof t.next&&t.next(_h(r))})),this.ac(t,e,n)},n.Gc=function(t,e,n){var r=this;return this.ba&&Promise.resolve().then((function(){r.X=r.getUid(),\"function\"===typeof t?t(_h(r)):\"function\"===typeof t.next&&t.next(_h(r))})),this.bc(t,e,n)},n.mc=function(t){var e=this;return Th(this,this.h.then((function(){return _h(e)?_h(e).I(t).then((function(t){return{accessToken:t}})):null})))},n.Sc=function(t){var e=this;return this.h.then((function(){return mh(e,su(e.a,eu,{token:t}))})).then((function(t){var n=t.user;return ql(n,\"isAnonymous\",!1),e.da(n),t}))},n.Tc=function(t,e){var n=this;return this.h.then((function(){return mh(n,su(n.a,nu,{email:t,password:e}))}))},n.dc=function(t,e){var n=this;return this.h.then((function(){return mh(n,su(n.a,As,{email:t,password:e}))}))},n.Za=function(t){var e=this;return this.h.then((function(){return mh(e,t.ja(e.a))}))},n.Rc=function(t){return Jr(\"firebase.auth.Auth.prototype.signInAndRetrieveDataWithCredential is deprecated. Please use firebase.auth.Auth.prototype.signInWithCredential instead.\"),this.Za(t)},n.yb=function(){var t=this;return this.h.then((function(){var e=_h(t);if(e&&e.isAnonymous){var n=ti({providerId:null,isNewUser:!1});return ti({user:e,credential:null,additionalUserInfo:n,operationType:\"signIn\"})}return mh(t,t.a.yb()).then((function(e){var n=e.user;return ql(n,\"isAnonymous\",!0),t.da(n),e}))}))},n.getUid=function(){return _h(this)&&_h(this).uid||null},n.cc=function(t){this.addAuthTokenListener(t),this.A++,0<this.A&&_h(this)&&Al(_h(this))},n.Oc=function(t){var e=this;K(this.u,(function(n){n==t&&e.A--})),0>this.A&&(this.A=0),0==this.A&&_h(this)&&Pl(_h(this)),this.removeAuthTokenListener(t)},n.addAuthTokenListener=function(t){var e=this;this.u.push(t),Th(this,this.h.then((function(){e.m||Y(e.u,t)&&t(wh(e))})))},n.removeAuthTokenListener=function(t){X(this.u,(function(e){return e==t}))},n.delete=function(){this.m=!0;for(var t=0;t<this.R.length;t++)this.R[t].cancel(\"app-deleted\");return this.R=[],this.l&&(t=this.l).b.removeListener(oh(\"local\"),t.a,this.pa),this.b&&(Uc(this.b,this),Xc(this.b.b)),Promise.resolve()},n.gc=function(t){return Th(this,function(t,e){return su(t,Ps,{identifier:e,continueUri:Dr()?fr():\"http://localhost\"}).then((function(t){return t.signinMethods||[]}))}(this.a,t))},n.Ac=function(t){return!!Do(t)},n.vb=function(t,e){var n=this;return Th(this,Ne().then((function(){var t=new Ri(e);if(!t.c)throw new C(\"argument-error\",Di+\" must be true when sending sign in link to email\");return Bi(t)})).then((function(e){return n.a.vb(t,e)})).then((function(){})))},n.hd=function(t){return this.Qa(t).then((function(t){return t.data.email}))},n.mb=function(t,e){return Th(this,this.a.mb(t,e).then((function(){})))},n.Qa=function(t){return Th(this,this.a.Qa(t).then((function(t){return new ci(t)})))},n.ib=function(t){return Th(this,this.a.ib(t).then((function(){})))},n.ub=function(t,e){var n=this;return Th(this,Ne().then((function(){return\"undefined\"===typeof e||vt(e)?{}:Bi(new Ri(e))})).then((function(e){return n.a.ub(t,e)})).then((function(){})))},n.Vc=function(t,e){return Th(this,rl(this,t,e,E(this.Za,this)))},n.Uc=function(t,e){var n=this;return Th(this,Ne().then((function(){var r=e||fr(),i=xo(t,r);if(!(r=Do(r)))throw new C(\"argument-error\",\"Invalid email link!\");if(r.tenantId!==n.S())throw new C(\"tenant-id-mismatch\");return n.Za(i)})))},Ih.prototype.render=function(){},Ih.prototype.reset=function(){},Ih.prototype.getResponse=function(){},Ih.prototype.execute=function(){};var Oh=null;function Ch(t,e){return(e=kh(e))&&t.a[e]||null}function kh(t){return(t=\"undefined\"===typeof t?1e12:t)?t.toString():null}function Nh(t,e){this.g=!1,this.c=e,this.a=this.b=null,this.i=\"invisible\"!==this.c.size,this.f=le(t);var n=this;this.h=function(){n.execute()},this.i?this.execute():hn(this.f,\"click\",this.h)}function Ah(t){if(t.g)throw Error(\"reCAPTCHA mock was already deleted!\")}function Ph(){}function Rh(){}Sh.prototype.render=function(t,e){return this.a[this.b.toString()]=new Nh(t,e),this.b++},Sh.prototype.reset=function(t){var e=Ch(this,t);t=kh(t),e&&t&&(e.delete(),delete this.a[t])},Sh.prototype.getResponse=function(t){return(t=Ch(this,t))?t.getResponse():null},Sh.prototype.execute=function(t){(t=Ch(this,t))&&t.execute()},Nh.prototype.getResponse=function(){return Ah(this),this.b},Nh.prototype.execute=function(){Ah(this);var t=this;this.a||(this.a=setTimeout((function(){t.b=function(){for(var t=50,e=[];0<t;)e.push(\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".charAt(Math.floor(62*Math.random()))),t--;return e.join(\"\")}();var e=t.c.callback,n=t.c[\"expired-callback\"];if(e)try{e(t.b)}catch(r){}t.a=setTimeout((function(){if(t.a=null,t.b=null,n)try{n()}catch(r){}t.i&&t.execute()}),6e4)}),500))},Nh.prototype.delete=function(){Ah(this),this.g=!0,clearTimeout(this.a),this.a=null,dn(this.f,\"click\",this.h)},$r(Ph,\"FACTOR_ID\",\"phone\"),Rh.prototype.g=function(){return Oh||(Oh=new Sh),Ne(Oh)},Rh.prototype.c=function(){};var jh=null;function xh(){this.b=u.grecaptcha?1/0:0,this.f=null,this.a=\"__rcb\"+Math.floor(1e6*Math.random()).toString()}var Dh=new _t(It,\"https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}\"),Lh=new Hr(3e4,6e4);xh.prototype.g=function(t){var e=this;return new Ee((function(n,r){var i=setTimeout((function(){r(new C(\"network-request-failed\"))}),Lh.get());!u.grecaptcha||t!==e.f&&!e.b?(u[e.a]=function(){if(u.grecaptcha){e.f=t;var o=u.grecaptcha.render;u.grecaptcha.render=function(t,n){return t=o(t,n),e.b++,t},clearTimeout(i),n(u.grecaptcha)}else clearTimeout(i),r(new C(\"internal-error\"));delete u[e.a]},Ne(Ga(kt(Dh,{onload:e.a,hl:t||\"\"}))).o((function(){clearTimeout(i),r(new C(\"internal-error\",\"Unable to load external reCAPTCHA dependencies!\"))}))):(clearTimeout(i),n(u.grecaptcha))}))},xh.prototype.c=function(){this.b--};var Mh=null;function Fh(t,e,n,r,i,o,a){if($r(this,\"type\",\"recaptcha\"),this.c=this.f=null,this.A=!1,this.m=e,this.g=null,a?(jh||(jh=new Rh),a=jh):(Mh||(Mh=new xh),a=Mh),this.v=a,this.a=n||{theme:\"light\",type:\"image\"},this.i=[],this.a[qh])throw new C(\"argument-error\",\"sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.\");if(this.h=\"invisible\"===this.a[Bh],!u.document)throw new C(\"operation-not-supported-in-this-environment\",\"RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment with DOM support.\");if(!le(e)||!this.h&&le(e).hasChildNodes())throw new C(\"argument-error\",\"reCAPTCHA container is either not found or already contains inner elements!\");this.s=new ts(t,o||null,i||null),this.u=r||function(){return null};var s=this;this.l=[];var c=this.a[Uh];this.a[Uh]=function(t){if(zh(s,t),\"function\"===typeof c)c(t);else if(\"string\"===typeof c){var e=Rr(c,u);\"function\"===typeof e&&e(t)}};var l=this.a[Vh];this.a[Vh]=function(){if(zh(s,null),\"function\"===typeof l)l();else if(\"string\"===typeof l){var t=Rr(l,u);\"function\"===typeof t&&t()}}}var Uh=\"callback\",Vh=\"expired-callback\",qh=\"sitekey\",Bh=\"size\";function zh(t,e){for(var n=0;n<t.l.length;n++)try{t.l[n](e)}catch(r){}}function Hh(t,e){return t.i.push(e),e.na((function(){J(t.i,e)})),e}function Kh(t){if(t.A)throw new C(\"internal-error\",\"RecaptchaVerifier instance has been destroyed.\")}function Wh(t,n,r){var i=!1;try{this.b=r||e.a.app()}catch(s){throw new C(\"argument-error\",\"No firebase.app.App instance is currently initialized.\")}if(!this.b.options||!this.b.options.apiKey)throw new C(\"invalid-api-key\");r=this.b.options.apiKey;var o=this,a=null;try{a=this.b.auth().Ga()}catch(s){}try{i=this.b.auth().settings.appVerificationDisabledForTesting}catch(s){}a=e.a.SDK_VERSION?Ar(e.a.SDK_VERSION,a):null,Fh.call(this,r,t,n,(function(){try{var t=o.b.auth().ka()}catch(e){t=null}return t}),a,j(N),i)}function Gh(t,e,n,r){t:{n=Array.prototype.slice.call(n);for(var i=0,o=!1,a=0;a<e.length;a++)if(e[a].optional)o=!0;else{if(o)throw new C(\"internal-error\",\"Argument validator encountered a required argument after an optional argument.\");i++}if(o=e.length,n.length<i||o<n.length)r=\"Expected \"+(i==o?1==i?\"1 argument\":i+\" arguments\":i+\"-\"+o+\" arguments\")+\" but got \"+n.length+\".\";else{for(i=0;i<n.length;i++)if(o=e[i].optional&&void 0===n[i],!e[i].K(n[i])&&!o){if(e=e[i],0>i||i>=Qh.length)throw new C(\"internal-error\",\"Argument validator received an unsupported number of arguments.\");n=Qh[i],r=(r?\"\":n+\" argument \")+(e.name?'\"'+e.name+'\" ':\"\")+\"must be \"+e.J+\".\";break t}r=null}}if(r)throw new C(\"argument-error\",t+\" failed: \"+r)}(n=Fh.prototype).Ia=function(){var t=this;return this.f?this.f:this.f=Hh(this,Ne().then((function(){if(Dr()&&!Tr())return _r();throw new C(\"operation-not-supported-in-this-environment\",\"RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.\")})).then((function(){return t.v.g(t.u())})).then((function(e){return t.g=e,su(t.s,Hs,{})})).then((function(e){t.a[qh]=e.recaptchaSiteKey})).o((function(e){throw t.f=null,e})))},n.render=function(){Kh(this);var t=this;return Hh(this,this.Ia().then((function(){if(null===t.c){var e=t.m;if(!t.h){var n=le(e);e=function(t,e,n){var r=arguments,i=document,o=String(r[0]),a=r[1];if(!ce&&a&&(a.name||a.type)){if(o=[\"<\",o],a.name&&o.push(' name=\"',Kt(a.name),'\"'),a.type){o.push(' type=\"',Kt(a.type),'\"');var s={};mt(s,a),delete s.type,a=s}o.push(\">\"),o=o.join(\"\")}return o=ye(i,o),a&&(\"string\"===typeof a?o.className=a:Array.isArray(a)?o.className=a.join(\" \"):he(o,a)),2<r.length&&ve(i,o,r),o}(\"DIV\"),n.appendChild(e)}t.c=t.g.render(e,t.a)}return t.c})))},n.verify=function(){Kh(this);var t=this;return Hh(this,this.render().then((function(e){return new Ee((function(n){var r=t.g.getResponse(e);if(r)n(r);else{t.l.push((function e(r){r&&(function(t,e){X(t.l,(function(t){return t==e}))}(t,e),n(r))})),t.h&&t.g.execute(t.c)}}))})))},n.reset=function(){Kh(this),null!==this.c&&this.g.reset(this.c)},n.clear=function(){Kh(this),this.A=!0,this.v.c();for(var t=0;t<this.i.length;t++)this.i[t].cancel(\"RecaptchaVerifier instance has been destroyed.\");if(!this.h){t=le(this.m);for(var e;e=t.firstChild;)t.removeChild(e)}},S(Wh,Fh);var Qh=\"First Second Third Fourth Fifth Sixth Seventh Eighth Ninth\".split(\" \");function Yh(t,e){return{name:t||\"\",J:\"a valid string\",optional:!!e,K:function(t){return\"string\"===typeof t}}}function Jh(t,e){return{name:t||\"\",J:\"a boolean\",optional:!!e,K:function(t){return\"boolean\"===typeof t}}}function Xh(t,e){return{name:t||\"\",J:\"a valid object\",optional:!!e,K:y}}function $h(t,e){return{name:t||\"\",J:\"a function\",optional:!!e,K:function(t){return\"function\"===typeof t}}}function Zh(t,e){return{name:t||\"\",J:\"null\",optional:!!e,K:function(t){return null===t}}}function tf(t){return{name:t?t+\"Credential\":\"credential\",J:t?\"a valid \"+t+\" credential\":\"a valid credential\",optional:!1,K:function(e){if(!e)return!1;var n=!t||e.providerId===t;return!(!e.ja||!n)}}}function ef(t,e){return y(t)&&\"string\"===typeof t.type&&t.type===e&&\"function\"===typeof t.Ha}function nf(t){return y(t)&&\"string\"===typeof t.uid}function rf(t,e,n,r){return{name:n||\"\",J:t.J+\" or \"+e.J,optional:!!r,K:function(n){return t.K(n)||e.K(n)}}}function of(t,e){for(var n in e){var r=e[n].name;t[r]=uf(r,t[n],e[n].j)}}function af(t,e){for(var n in e){var r=e[n].name;r!==n&&Object.defineProperty(t,r,{get:T((function(t){return this[t]}),n),set:T((function(t,e,n,r){Gh(t,[n],[r],!0),this[e]=r}),r,n,e[n].jb),enumerable:!0})}}function sf(t,e,n,r){t[e]=uf(e,n,r)}function uf(t,e,n){function r(){var t=Array.prototype.slice.call(arguments);return Gh(o,n,t),e.apply(this,t)}if(!n)return e;var i,o=function(t){return(t=t.split(\".\"))[t.length-1]}(t);for(i in e)r[i]=e[i];for(i in e.prototype)r.prototype[i]=e.prototype[i];return r}of(lh.prototype,{ib:{name:\"applyActionCode\",j:[Yh(\"code\")]},Qa:{name:\"checkActionCode\",j:[Yh(\"code\")]},mb:{name:\"confirmPasswordReset\",j:[Yh(\"code\"),Yh(\"newPassword\")]},dc:{name:\"createUserWithEmailAndPassword\",j:[Yh(\"email\"),Yh(\"password\")]},gc:{name:\"fetchSignInMethodsForEmail\",j:[Yh(\"email\")]},qa:{name:\"getRedirectResult\",j:[]},Ac:{name:\"isSignInWithEmailLink\",j:[Yh(\"emailLink\")]},Gc:{name:\"onAuthStateChanged\",j:[rf(Xh(),$h(),\"nextOrObserver\"),$h(\"opt_error\",!0),$h(\"opt_completed\",!0)]},Hc:{name:\"onIdTokenChanged\",j:[rf(Xh(),$h(),\"nextOrObserver\"),$h(\"opt_error\",!0),$h(\"opt_completed\",!0)]},ub:{name:\"sendPasswordResetEmail\",j:[Yh(\"email\"),rf(Xh(\"opt_actionCodeSettings\",!0),Zh(null,!0),\"opt_actionCodeSettings\",!0)]},vb:{name:\"sendSignInLinkToEmail\",j:[Yh(\"email\"),Xh(\"actionCodeSettings\")]},wb:{name:\"setPersistence\",j:[Yh(\"persistence\")]},Rc:{name:\"signInAndRetrieveDataWithCredential\",j:[tf()]},yb:{name:\"signInAnonymously\",j:[]},Za:{name:\"signInWithCredential\",j:[tf()]},Sc:{name:\"signInWithCustomToken\",j:[Yh(\"token\")]},Tc:{name:\"signInWithEmailAndPassword\",j:[Yh(\"email\"),Yh(\"password\")]},Uc:{name:\"signInWithEmailLink\",j:[Yh(\"email\"),Yh(\"emailLink\",!0)]},Vc:{name:\"signInWithPhoneNumber\",j:[Yh(\"phoneNumber\"),{name:\"applicationVerifier\",J:\"an implementation of firebase.auth.ApplicationVerifier\",optional:!1,K:function(t){return!(!t||\"string\"!==typeof t.type||\"function\"!==typeof t.verify)}}]},Wc:{name:\"signInWithPopup\",j:[{name:\"authProvider\",J:\"a valid Auth provider\",optional:!1,K:function(t){return!!(t&&t.providerId&&t.hasOwnProperty&&t.hasOwnProperty(\"isOAuthProvider\"))}}]},Xc:{name:\"signInWithRedirect\",j:[{name:\"authProvider\",J:\"a valid Auth provider\",optional:!1,K:function(t){return!!(t&&t.providerId&&t.hasOwnProperty&&t.hasOwnProperty(\"isOAuthProvider\"))}}]},cd:{name:\"updateCurrentUser\",j:[rf({name:\"user\",J:\"an instance of Firebase User\",optional:!1,K:function(t){return!!(t&&t instanceof Il)}},Zh(),\"user\")]},zb:{name:\"signOut\",j:[]},toJSON:{name:\"toJSON\",j:[Yh(null,!0)]},ed:{name:\"useDeviceLanguage\",j:[]},fd:{name:\"useEmulator\",j:[Yh(\"url\"),Xh(\"options\",!0)]},hd:{name:\"verifyPasswordResetCode\",j:[Yh(\"code\")]}}),af(lh.prototype,{lc:{name:\"languageCode\",jb:rf(Yh(),Zh(),\"languageCode\")},ti:{name:\"tenantId\",jb:rf(Yh(),Zh(),\"tenantId\")}}),lh.Persistence=rc,lh.Persistence.LOCAL=\"local\",lh.Persistence.SESSION=\"session\",lh.Persistence.NONE=\"none\",of(Il.prototype,{delete:{name:\"delete\",j:[]},nc:{name:\"getIdTokenResult\",j:[Jh(\"opt_forceRefresh\",!0)]},I:{name:\"getIdToken\",j:[Jh(\"opt_forceRefresh\",!0)]},Bc:{name:\"linkAndRetrieveDataWithCredential\",j:[tf()]},pb:{name:\"linkWithCredential\",j:[tf()]},Cc:{name:\"linkWithPhoneNumber\",j:[Yh(\"phoneNumber\"),{name:\"applicationVerifier\",J:\"an implementation of firebase.auth.ApplicationVerifier\",optional:!1,K:function(t){return!(!t||\"string\"!==typeof t.type||\"function\"!==typeof t.verify)}}]},Dc:{name:\"linkWithPopup\",j:[{name:\"authProvider\",J:\"a valid Auth provider\",optional:!1,K:function(t){return!!(t&&t.providerId&&t.hasOwnProperty&&t.hasOwnProperty(\"isOAuthProvider\"))}}]},Ec:{name:\"linkWithRedirect\",j:[{name:\"authProvider\",J:\"a valid Auth provider\",optional:!1,K:function(t){return!!(t&&t.providerId&&t.hasOwnProperty&&t.hasOwnProperty(\"isOAuthProvider\"))}}]},Kc:{name:\"reauthenticateAndRetrieveDataWithCredential\",j:[tf()]},sb:{name:\"reauthenticateWithCredential\",j:[tf()]},Lc:{name:\"reauthenticateWithPhoneNumber\",j:[Yh(\"phoneNumber\"),{name:\"applicationVerifier\",J:\"an implementation of firebase.auth.ApplicationVerifier\",optional:!1,K:function(t){return!(!t||\"string\"!==typeof t.type||\"function\"!==typeof t.verify)}}]},Mc:{name:\"reauthenticateWithPopup\",j:[{name:\"authProvider\",J:\"a valid Auth provider\",optional:!1,K:function(t){return!!(t&&t.providerId&&t.hasOwnProperty&&t.hasOwnProperty(\"isOAuthProvider\"))}}]},Nc:{name:\"reauthenticateWithRedirect\",j:[{name:\"authProvider\",J:\"a valid Auth provider\",optional:!1,K:function(t){return!!(t&&t.providerId&&t.hasOwnProperty&&t.hasOwnProperty(\"isOAuthProvider\"))}}]},reload:{name:\"reload\",j:[]},tb:{name:\"sendEmailVerification\",j:[rf(Xh(\"opt_actionCodeSettings\",!0),Zh(null,!0),\"opt_actionCodeSettings\",!0)]},toJSON:{name:\"toJSON\",j:[Yh(null,!0)]},bd:{name:\"unlink\",j:[Yh(\"provider\")]},Ab:{name:\"updateEmail\",j:[Yh(\"email\")]},Bb:{name:\"updatePassword\",j:[Yh(\"password\")]},dd:{name:\"updatePhoneNumber\",j:[tf(\"phone\")]},Cb:{name:\"updateProfile\",j:[Xh(\"profile\")]},Db:{name:\"verifyBeforeUpdateEmail\",j:[Yh(\"email\"),rf(Xh(\"opt_actionCodeSettings\",!0),Zh(null,!0),\"opt_actionCodeSettings\",!0)]}}),of(Sh.prototype,{execute:{name:\"execute\"},render:{name:\"render\"},reset:{name:\"reset\"},getResponse:{name:\"getResponse\"}}),of(Ih.prototype,{execute:{name:\"execute\"},render:{name:\"render\"},reset:{name:\"reset\"},getResponse:{name:\"getResponse\"}}),of(Ee.prototype,{na:{name:\"finally\"},o:{name:\"catch\"},then:{name:\"then\"}}),af(el.prototype,{appVerificationDisabled:{name:\"appVerificationDisabledForTesting\",jb:Jh(\"appVerificationDisabledForTesting\")}}),of(nl.prototype,{confirm:{name:\"confirm\",j:[Yh(\"verificationCode\")]}}),sf(ho,\"fromJSON\",(function(t){t=\"string\"===typeof t?JSON.parse(t):t;for(var e,n=[bo,Ro,Mo,yo],r=0;r<n.length;r++)if(e=n[r](t))return e;return null}),[rf(Yh(),Xh(),\"json\")]),sf(jo,\"credential\",(function(t,e){return new Po(t,e)}),[Yh(\"email\"),Yh(\"password\")]),of(Po.prototype,{w:{name:\"toJSON\",j:[Yh(null,!0)]}}),of(To.prototype,{Ca:{name:\"addScope\",j:[Yh(\"scope\")]},Ka:{name:\"setCustomParameters\",j:[Xh(\"customOAuthParameters\")]}}),sf(To,\"credential\",Io,[rf(Yh(),Xh(),\"token\")]),sf(jo,\"credentialWithLink\",xo,[Yh(\"email\"),Yh(\"emailLink\")]),of(So.prototype,{Ca:{name:\"addScope\",j:[Yh(\"scope\")]},Ka:{name:\"setCustomParameters\",j:[Xh(\"customOAuthParameters\")]}}),sf(So,\"credential\",Oo,[rf(Yh(),Xh(),\"token\")]),of(Co.prototype,{Ca:{name:\"addScope\",j:[Yh(\"scope\")]},Ka:{name:\"setCustomParameters\",j:[Xh(\"customOAuthParameters\")]}}),sf(Co,\"credential\",ko,[rf(Yh(),rf(Xh(),Zh()),\"idToken\"),rf(Yh(),Zh(),\"accessToken\",!0)]),of(No.prototype,{Ka:{name:\"setCustomParameters\",j:[Xh(\"customOAuthParameters\")]}}),sf(No,\"credential\",Ao,[rf(Yh(),Xh(),\"token\"),Yh(\"secret\",!0)]),of(Eo.prototype,{Ca:{name:\"addScope\",j:[Yh(\"scope\")]},credential:{name:\"credential\",j:[rf(Yh(),rf(Xh(),Zh()),\"optionsOrIdToken\"),rf(Yh(),Zh(),\"accessToken\",!0)]},Ka:{name:\"setCustomParameters\",j:[Xh(\"customOAuthParameters\")]}}),of(go.prototype,{w:{name:\"toJSON\",j:[Yh(null,!0)]}}),of(po.prototype,{w:{name:\"toJSON\",j:[Yh(null,!0)]}}),sf(Uo,\"credential\",Vo,[Yh(\"verificationId\"),Yh(\"verificationCode\")]),of(Uo.prototype,{eb:{name:\"verifyPhoneNumber\",j:[rf(Yh(),{name:\"phoneInfoOptions\",J:\"valid phone info options\",optional:!1,K:function(t){return!!t&&(t.session&&t.phoneNumber?ef(t.session,co)&&\"string\"===typeof t.phoneNumber:t.session&&t.multiFactorHint?ef(t.session,lo)&&nf(t.multiFactorHint):t.session&&t.multiFactorUid?ef(t.session,lo)&&\"string\"===typeof t.multiFactorUid:!!t.phoneNumber&&\"string\"===typeof t.phoneNumber)}},\"phoneInfoOptions\"),{name:\"applicationVerifier\",J:\"an implementation of firebase.auth.ApplicationVerifier\",optional:!1,K:function(t){return!(!t||\"string\"!==typeof t.type||\"function\"!==typeof t.verify)}}]}}),of(Lo.prototype,{w:{name:\"toJSON\",j:[Yh(null,!0)]}}),of(C.prototype,{toJSON:{name:\"toJSON\",j:[Yh(null,!0)]}}),of(Yo.prototype,{toJSON:{name:\"toJSON\",j:[Yh(null,!0)]}}),of(Qo.prototype,{toJSON:{name:\"toJSON\",j:[Yh(null,!0)]}}),of(ul.prototype,{toJSON:{name:\"toJSON\",j:[Yh(null,!0)]}}),of(ol.prototype,{Qc:{name:\"resolveSignIn\",j:[{name:\"multiFactorAssertion\",J:\"a valid multiFactorAssertion\",optional:!1,K:function(t){return!!t&&!!t.rb}}]}}),of(dl.prototype,{Qb:{name:\"getSession\",j:[]},ec:{name:\"enroll\",j:[{name:\"multiFactorAssertion\",J:\"a valid multiFactorAssertion\",optional:!1,K:function(t){return!!t&&!!t.rb}},Yh(\"displayName\",!0)]},ad:{name:\"unenroll\",j:[rf({name:\"multiFactorInfo\",J:\"a valid multiFactorInfo\",optional:!1,K:nf},Yh(),\"multiFactorInfoIdentifier\")]}}),of(Wh.prototype,{clear:{name:\"clear\",j:[]},render:{name:\"render\",j:[]},verify:{name:\"verify\",j:[]}}),sf(Ti,\"parseLink\",Pi,[Yh(\"link\")]),sf(Ph,\"assertion\",(function(t){return new fl(t)}),[tf(\"phone\")]),function(){if(\"undefined\"===typeof e.a||!e.a.INTERNAL||!e.a.INTERNAL.registerComponent)throw Error(\"Cannot find the firebase namespace; be sure to include firebase-app.js before this library.\");var t={ActionCodeInfo:{Operation:{EMAIL_SIGNIN:hi,PASSWORD_RESET:\"PASSWORD_RESET\",RECOVER_EMAIL:\"RECOVER_EMAIL\",REVERT_SECOND_FACTOR_ADDITION:li,VERIFY_AND_CHANGE_EMAIL:fi,VERIFY_EMAIL:\"VERIFY_EMAIL\"}},Auth:lh,AuthCredential:ho,Error:C};sf(t,\"EmailAuthProvider\",jo,[]),sf(t,\"FacebookAuthProvider\",To,[]),sf(t,\"GithubAuthProvider\",So,[]),sf(t,\"GoogleAuthProvider\",Co,[]),sf(t,\"TwitterAuthProvider\",No,[]),sf(t,\"OAuthProvider\",Eo,[Yh(\"providerId\")]),sf(t,\"SAMLAuthProvider\",wo,[Yh(\"providerId\")]),sf(t,\"PhoneAuthProvider\",Uo,[{name:\"auth\",J:\"an instance of Firebase Auth\",optional:!0,K:function(t){return!!(t&&t instanceof lh)}}]),sf(t,\"RecaptchaVerifier\",Wh,[rf(Yh(),{name:\"\",J:\"an HTML element\",optional:!1,K:function(t){return!!(t&&t instanceof Element)}},\"recaptchaContainer\"),Xh(\"recaptchaParameters\",!0),{name:\"app\",J:\"an instance of Firebase App\",optional:!0,K:function(t){return!!(t&&t instanceof e.a.app.App)}}]),sf(t,\"ActionCodeURL\",Ti,[]),sf(t,\"PhoneMultiFactorGenerator\",Ph,[]),e.a.INTERNAL.registerComponent({name:\"auth\",instanceFactory:function(t){return new lh(t=t.getProvider(\"app\").getImmediate())},multipleInstances:!1,serviceProps:t,instantiationMode:\"LAZY\",type:\"PUBLIC\"}),e.a.INTERNAL.registerComponent({name:\"auth-internal\",instanceFactory:function(t){return{getUid:E((t=t.getProvider(\"auth\").getImmediate()).getUid,t),getToken:E(t.mc,t),addAuthTokenListener:E(t.cc,t),removeAuthTokenListener:E(t.Oc,t)}},multipleInstances:!1,instantiationMode:\"LAZY\",type:\"PRIVATE\"}),e.a.registerVersion(\"@firebase/auth\",\"0.16.1\"),e.a.INTERNAL.extendNamespace({User:Il})}()}).apply(\"undefined\"!==typeof t?t:\"undefined\"!==typeof self?self:\"undefined\"!==typeof window?window:{})}).call(this,n(12))},function(t,e,n){\"use strict\";(function(t,e){var r=n(2),i=n(0),o=n(1),a=n(4),s=n(5),u=function(){function t(t){this.domStorage_=t,this.prefix_=\"firebase:\"}return t.prototype.set=function(t,e){null==e?this.domStorage_.removeItem(this.prefixedName_(t)):this.domStorage_.setItem(this.prefixedName_(t),Object(o.J)(e))},t.prototype.get=function(t){var e=this.domStorage_.getItem(this.prefixedName_(t));return null==e?null:Object(o.D)(e)},t.prototype.remove=function(t){this.domStorage_.removeItem(this.prefixedName_(t))},t.prototype.prefixedName_=function(t){return this.prefix_+t},t.prototype.toString=function(){return this.domStorage_.toString()},t}(),c=function(){function t(){this.cache_={},this.isInMemoryStorage=!0}return t.prototype.set=function(t,e){null==e?delete this.cache_[t]:this.cache_[t]=e},t.prototype.get=function(t){return Object(o.k)(this.cache_,t)?this.cache_[t]:null},t.prototype.remove=function(t){delete this.cache_[t]},t}(),l=function(t){try{if(\"undefined\"!==typeof window&&\"undefined\"!==typeof window[t]){var e=window[t];return e.setItem(\"firebase:sentinel\",\"cache\"),e.removeItem(\"firebase:sentinel\"),new u(e)}}catch(n){}return new c},h=l(\"localStorage\"),f=l(\"sessionStorage\"),p=new a.b(\"@firebase/database\"),d=function(){var t=1;return function(){return t++}}(),v=function(t){var e=Object(o.I)(t),n=new o.d;n.update(e);var r=n.digest();return o.h.encodeByteArray(r)},y=function t(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];for(var r=\"\",i=0;i<e.length;i++){var a=e[i];Array.isArray(a)||a&&\"object\"===typeof a&&\"number\"===typeof a.length?r+=t.apply(null,a):r+=\"object\"===typeof a?Object(o.J)(a):a,r+=\" \"}return r},g=null,m=!0,b=function(t,e){Object(o.f)(!e||!0===t||!1===t,\"Can't turn on custom loggers persistently.\"),!0===t?(p.logLevel=a.a.VERBOSE,g=p.log.bind(p),e&&f.set(\"logging_enabled\",!0)):\"function\"===typeof t?g=t:(g=null,f.remove(\"logging_enabled\"))},_=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if(!0===m&&(m=!1,null===g&&!0===f.get(\"logging_enabled\")&&b(!0)),g){var n=y.apply(null,t);g(n)}},w=function(t){return function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];_.apply(void 0,Object(i.f)([t],e))}},E=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=\"FIREBASE INTERNAL ERROR: \"+y.apply(void 0,Object(i.f)(t));p.error(n)},T=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=\"FIREBASE FATAL ERROR: \"+y.apply(void 0,Object(i.f)(t));throw p.error(n),new Error(n)},I=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=\"FIREBASE WARNING: \"+y.apply(void 0,Object(i.f)(t));p.warn(n)},S=function(t){return\"number\"===typeof t&&(t!==t||t===Number.POSITIVE_INFINITY||t===Number.NEGATIVE_INFINITY)},O=\"[MIN_NAME]\",C=\"[MAX_NAME]\",k=function(t,e){if(t===e)return 0;if(t===O||e===C)return-1;if(e===O||t===C)return 1;var n=L(t),r=L(e);return null!==n?null!==r?n-r===0?t.length-e.length:n-r:-1:null!==r?1:t<e?-1:1},N=function(t,e){return t===e?0:t<e?-1:1},A=function(t,e){if(e&&t in e)return e[t];throw new Error(\"Missing required key (\"+t+\") in object: \"+Object(o.J)(e))},P=function t(e){if(\"object\"!==typeof e||null===e)return Object(o.J)(e);var n=[];for(var r in e)n.push(r);n.sort();for(var i=\"{\",a=0;a<n.length;a++)0!==a&&(i+=\",\"),i+=Object(o.J)(n[a]),i+=\":\",i+=t(e[n[a]]);return i+=\"}\"},R=function(t,e){var n=t.length;if(n<=e)return[t];for(var r=[],i=0;i<n;i+=e)i+e>n?r.push(t.substring(i,n)):r.push(t.substring(i,i+e));return r};function j(t,e){for(var n in t)t.hasOwnProperty(n)&&e(n,t[n])}var x=function(t){Object(o.f)(!S(t),\"Invalid JSON number\");var e,n,r,i,a,s=1023;0===t?(n=0,r=0,e=1/t===-1/0?1:0):(e=t<0,(t=Math.abs(t))>=Math.pow(2,-1022)?(n=(i=Math.min(Math.floor(Math.log(t)/Math.LN2),s))+s,r=Math.round(t*Math.pow(2,52-i)-Math.pow(2,52))):(n=0,r=Math.round(t/Math.pow(2,-1074))));var u=[];for(a=52;a;a-=1)u.push(r%2?1:0),r=Math.floor(r/2);for(a=11;a;a-=1)u.push(n%2?1:0),n=Math.floor(n/2);u.push(e?1:0),u.reverse();var c=u.join(\"\"),l=\"\";for(a=0;a<64;a+=8){var h=parseInt(c.substr(a,8),2).toString(16);1===h.length&&(h=\"0\"+h),l+=h}return l.toLowerCase()},D=new RegExp(\"^-?(0*)\\\\d{1,10}$\"),L=function(t){if(D.test(t)){var e=Number(t);if(e>=-2147483648&&e<=2147483647)return e}return null},M=function(t){try{t()}catch(e){setTimeout((function(){var t=e.stack||\"\";throw I(\"Exception was thrown by user callback.\",t),e}),Math.floor(0))}},F=function(t,e){var n=setTimeout(t,e);return\"object\"===typeof n&&n.unref&&n.unref(),n},U=function(){function t(t,e){if(void 0===e){this.pieces_=t.split(\"/\");for(var n=0,r=0;r<this.pieces_.length;r++)this.pieces_[r].length>0&&(this.pieces_[n]=this.pieces_[r],n++);this.pieces_.length=n,this.pieceNum_=0}else this.pieces_=t,this.pieceNum_=e}return Object.defineProperty(t,\"Empty\",{get:function(){return new t(\"\")},enumerable:!1,configurable:!0}),t.prototype.getFront=function(){return this.pieceNum_>=this.pieces_.length?null:this.pieces_[this.pieceNum_]},t.prototype.getLength=function(){return this.pieces_.length-this.pieceNum_},t.prototype.popFront=function(){var e=this.pieceNum_;return e<this.pieces_.length&&e++,new t(this.pieces_,e)},t.prototype.getBack=function(){return this.pieceNum_<this.pieces_.length?this.pieces_[this.pieces_.length-1]:null},t.prototype.toString=function(){for(var t=\"\",e=this.pieceNum_;e<this.pieces_.length;e++)\"\"!==this.pieces_[e]&&(t+=\"/\"+this.pieces_[e]);return t||\"/\"},t.prototype.toUrlEncodedString=function(){for(var t=\"\",e=this.pieceNum_;e<this.pieces_.length;e++)\"\"!==this.pieces_[e]&&(t+=\"/\"+encodeURIComponent(String(this.pieces_[e])));return t||\"/\"},t.prototype.slice=function(t){return void 0===t&&(t=0),this.pieces_.slice(this.pieceNum_+t)},t.prototype.parent=function(){if(this.pieceNum_>=this.pieces_.length)return null;for(var e=[],n=this.pieceNum_;n<this.pieces_.length-1;n++)e.push(this.pieces_[n]);return new t(e,0)},t.prototype.child=function(e){for(var n=[],r=this.pieceNum_;r<this.pieces_.length;r++)n.push(this.pieces_[r]);if(e instanceof t)for(r=e.pieceNum_;r<e.pieces_.length;r++)n.push(e.pieces_[r]);else{var i=e.split(\"/\");for(r=0;r<i.length;r++)i[r].length>0&&n.push(i[r])}return new t(n,0)},t.prototype.isEmpty=function(){return this.pieceNum_>=this.pieces_.length},t.relativePath=function(e,n){var r=e.getFront(),i=n.getFront();if(null===r)return n;if(r===i)return t.relativePath(e.popFront(),n.popFront());throw new Error(\"INTERNAL ERROR: innerPath (\"+n+\") is not within outerPath (\"+e+\")\")},t.comparePaths=function(t,e){for(var n=t.slice(),r=e.slice(),i=0;i<n.length&&i<r.length;i++){var o=k(n[i],r[i]);if(0!==o)return o}return n.length===r.length?0:n.length<r.length?-1:1},t.prototype.equals=function(t){if(this.getLength()!==t.getLength())return!1;for(var e=this.pieceNum_,n=t.pieceNum_;e<=this.pieces_.length;e++,n++)if(this.pieces_[e]!==t.pieces_[n])return!1;return!0},t.prototype.contains=function(t){var e=this.pieceNum_,n=t.pieceNum_;if(this.getLength()>t.getLength())return!1;for(;e<this.pieces_.length;){if(this.pieces_[e]!==t.pieces_[n])return!1;++e,++n}return!0},t}(),V=function(){function t(t,e){this.errorPrefix_=e,this.parts_=t.slice(),this.byteLength_=Math.max(1,this.parts_.length);for(var n=0;n<this.parts_.length;n++)this.byteLength_+=Object(o.H)(this.parts_[n]);this.checkValid_()}return Object.defineProperty(t,\"MAX_PATH_DEPTH\",{get:function(){return 32},enumerable:!1,configurable:!0}),Object.defineProperty(t,\"MAX_PATH_LENGTH_BYTES\",{get:function(){return 768},enumerable:!1,configurable:!0}),t.prototype.push=function(t){this.parts_.length>0&&(this.byteLength_+=1),this.parts_.push(t),this.byteLength_+=Object(o.H)(t),this.checkValid_()},t.prototype.pop=function(){var t=this.parts_.pop();this.byteLength_-=Object(o.H)(t),this.parts_.length>0&&(this.byteLength_-=1)},t.prototype.checkValid_=function(){if(this.byteLength_>t.MAX_PATH_LENGTH_BYTES)throw new Error(this.errorPrefix_+\"has a key path longer than \"+t.MAX_PATH_LENGTH_BYTES+\" bytes (\"+this.byteLength_+\").\");if(this.parts_.length>t.MAX_PATH_DEPTH)throw new Error(this.errorPrefix_+\"path specified exceeds the maximum depth that can be written (\"+t.MAX_PATH_DEPTH+\") or object contains a cycle \"+this.toErrorString())},t.prototype.toErrorString=function(){return 0===this.parts_.length?\"\":\"in property '\"+this.parts_.join(\".\")+\"'\"},t}(),q=\"5\",B=/(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/,z=\"websocket\",H=\"long_polling\",K=function(){function t(t,e,n,r,i,o,a){void 0===i&&(i=!1),void 0===o&&(o=\"\"),void 0===a&&(a=!1),this.secure=e,this.namespace=n,this.webSocketOnly=r,this.nodeAdmin=i,this.persistenceKey=o,this.includeNamespaceInQueryParams=a,this.host=t.toLowerCase(),this.domain=this.host.substr(this.host.indexOf(\".\")+1),this.internalHost=h.get(\"host:\"+t)||this.host}return t.prototype.needsQueryParam=function(){return this.host!==this.internalHost||this.isCustomHost()||this.includeNamespaceInQueryParams},t.prototype.isCacheableHost=function(){return\"s-\"===this.internalHost.substr(0,2)},t.prototype.isDemoHost=function(){return\"firebaseio-demo.com\"===this.domain},t.prototype.isCustomHost=function(){return\"firebaseio.com\"!==this.domain&&\"firebaseio-demo.com\"!==this.domain},t.prototype.updateHost=function(t){t!==this.internalHost&&(this.internalHost=t,this.isCacheableHost()&&h.set(\"host:\"+this.host,this.internalHost))},t.prototype.connectionURL=function(t,e){var n;if(Object(o.f)(\"string\"===typeof t,\"typeof type must == string\"),Object(o.f)(\"object\"===typeof e,\"typeof params must == object\"),t===z)n=(this.secure?\"wss://\":\"ws://\")+this.internalHost+\"/.ws?\";else{if(t!==H)throw new Error(\"Unknown connection type: \"+t);n=(this.secure?\"https://\":\"http://\")+this.internalHost+\"/.lp?\"}this.needsQueryParam()&&(e.ns=this.namespace);var r=[];return j(e,(function(t,e){r.push(t+\"=\"+e)})),n+r.join(\"&\")},t.prototype.toString=function(){var t=this.toURLString();return this.persistenceKey&&(t+=\"<\"+this.persistenceKey+\">\"),t},t.prototype.toURLString=function(){var t=this.secure?\"https://\":\"http://\",e=this.includeNamespaceInQueryParams?\"?ns=\"+this.namespace:\"\";return\"\"+t+this.host+\"/\"+e},t}();var W,G,Q=function(t,e){var n=Y(t),r=n.namespace;\"firebase.com\"===n.domain&&T(n.host+\" is no longer supported. Please use <YOUR FIREBASE>.firebaseio.com instead\"),r&&\"undefined\"!==r||\"localhost\"===n.domain||T(\"Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com\"),n.secure||\"undefined\"!==typeof window&&window.location&&window.location.protocol&&-1!==window.location.protocol.indexOf(\"https:\")&&I(\"Insecure Firebase access from a secure page. Please use https in calls to new Firebase().\");var i=\"ws\"===n.scheme||\"wss\"===n.scheme;return{repoInfo:new K(n.host,n.secure,r,e,i,\"\",r!==n.subdomain),path:new U(n.pathString)}},Y=function(t){var e=\"\",n=\"\",r=\"\",o=\"\",a=\"\",s=!0,u=\"https\",c=443;if(\"string\"===typeof t){var l=t.indexOf(\"//\");l>=0&&(u=t.substring(0,l-1),t=t.substring(l+2));var h=t.indexOf(\"/\");-1===h&&(h=t.length);var f=t.indexOf(\"?\");-1===f&&(f=t.length),e=t.substring(0,Math.min(h,f)),h<f&&(o=function(t){for(var e=\"\",n=t.split(\"/\"),r=0;r<n.length;r++)if(n[r].length>0){var i=n[r];try{i=decodeURIComponent(i.replace(/\\+/g,\" \"))}catch(o){}e+=\"/\"+i}return e}(t.substring(h,f)));var p=function(t){var e,n,r={};\"?\"===t.charAt(0)&&(t=t.substring(1));try{for(var o=Object(i.h)(t.split(\"&\")),a=o.next();!a.done;a=o.next()){var s=a.value;if(0!==s.length){var u=s.split(\"=\");2===u.length?r[decodeURIComponent(u[0])]=decodeURIComponent(u[1]):I(\"Invalid query segment '\"+s+\"' in query '\"+t+\"'\")}}}catch(c){e={error:c}}finally{try{a&&!a.done&&(n=o.return)&&n.call(o)}finally{if(e)throw e.error}}return r}(t.substring(Math.min(t.length,f)));(l=e.indexOf(\":\"))>=0?(s=\"https\"===u||\"wss\"===u,c=parseInt(e.substring(l+1),10)):l=e.length;var d=e.slice(0,l);if(\"localhost\"===d.toLowerCase())n=\"localhost\";else if(d.split(\".\").length<=2)n=d;else{var v=e.indexOf(\".\");r=e.substring(0,v).toLowerCase(),n=e.substring(v+1),a=r}\"ns\"in p&&(a=p.ns)}return{host:e,port:c,domain:n,subdomain:r,secure:s,scheme:u,pathString:o,namespace:a}},J=/[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/,X=/[\\[\\].#$\\u0000-\\u001F\\u007F]/,$=10485760,Z=function(t){return\"string\"===typeof t&&0!==t.length&&!J.test(t)},tt=function(t){return\"string\"===typeof t&&0!==t.length&&!X.test(t)},et=function(t){return null===t||\"string\"===typeof t||\"number\"===typeof t&&!S(t)||t&&\"object\"===typeof t&&Object(o.k)(t,\".sv\")},nt=function(t,e,n,r,i){i&&void 0===n||rt(Object(o.o)(t,e,i),n,r)},rt=function t(e,n,r){var i=r instanceof U?new V(r,e):r;if(void 0===n)throw new Error(e+\"contains undefined \"+i.toErrorString());if(\"function\"===typeof n)throw new Error(e+\"contains a function \"+i.toErrorString()+\" with contents = \"+n.toString());if(S(n))throw new Error(e+\"contains \"+n.toString()+\" \"+i.toErrorString());if(\"string\"===typeof n&&n.length>$/3&&Object(o.H)(n)>$)throw new Error(e+\"contains a string greater than \"+\"10485760 utf8 bytes \"+i.toErrorString()+\" ('\"+n.substring(0,50)+\"...')\");if(n&&\"object\"===typeof n){var a=!1,s=!1;if(j(n,(function(n,r){if(\".value\"===n)a=!0;else if(\".priority\"!==n&&\".sv\"!==n&&(s=!0,!Z(n)))throw new Error(e+\" contains an invalid key (\"+n+\") \"+i.toErrorString()+'.  Keys must be non-empty strings and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');i.push(n),t(e,r,i),i.pop()})),a&&s)throw new Error(e+' contains \".value\" child '+i.toErrorString()+\" in addition to actual children.\")}},it=function(t,e,n,r,i){if(!i||void 0!==n){var a=Object(o.o)(t,e,i);if(!n||\"object\"!==typeof n||Array.isArray(n))throw new Error(a+\" must be an object containing the children to replace.\");var s=[];j(n,(function(t,e){var n=new U(t);if(rt(a,e,r.child(n)),\".priority\"===n.getBack()&&!et(e))throw new Error(a+\"contains an invalid value for '\"+n.toString()+\"', which must be a valid Firebase priority (a string, finite number, server value, or null).\");s.push(n)})),function(t,e){var n,r;for(n=0;n<e.length;n++)for(var i=(r=e[n]).slice(),o=0;o<i.length;o++)if(\".priority\"===i[o]&&o===i.length-1);else if(!Z(i[o]))throw new Error(t+\"contains an invalid key (\"+i[o]+\") in path \"+r.toString()+'. Keys must be non-empty strings and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');e.sort(U.comparePaths);var a=null;for(n=0;n<e.length;n++){if(r=e[n],null!==a&&a.contains(r))throw new Error(t+\"contains a path \"+a.toString()+\" that is ancestor of another path \"+r.toString());a=r}}(a,s)}},ot=function(t,e,n,r){if(!r||void 0!==n){if(S(n))throw new Error(Object(o.o)(t,e,r)+\"is \"+n.toString()+\", but must be a valid Firebase priority (a string, finite number, server value, or null).\");if(!et(n))throw new Error(Object(o.o)(t,e,r)+\"must be a valid Firebase priority (a string, finite number, server value, or null).\")}},at=function(t,e,n,r){if(!r||void 0!==n)switch(n){case\"value\":case\"child_added\":case\"child_removed\":case\"child_changed\":case\"child_moved\":break;default:throw new Error(Object(o.o)(t,e,r)+'must be a valid event type = \"value\", \"child_added\", \"child_removed\", \"child_changed\", or \"child_moved\".')}},st=function(t,e,n,r){if((!r||void 0!==n)&&!Z(n))throw new Error(Object(o.o)(t,e,r)+'was an invalid key = \"'+n+'\".  Firebase keys must be non-empty strings and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").')},ut=function(t,e,n,r){if((!r||void 0!==n)&&!tt(n))throw new Error(Object(o.o)(t,e,r)+'was an invalid path = \"'+n+'\". Paths must be non-empty strings and can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"')},ct=function(t,e,n,r){n&&(n=n.replace(/^\\/*\\.info(\\/|$)/,\"/\")),ut(t,e,n,r)},lt=function(t,e){if(\".info\"===e.getFront())throw new Error(t+\" failed = Can't modify data under /.info/\")},ht=function(t,e,n){var r=n.path.toString();if(\"string\"!==typeof n.repoInfo.host||0===n.repoInfo.host.length||!Z(n.repoInfo.namespace)&&\"localhost\"!==n.repoInfo.host.split(\":\")[0]||0!==r.length&&!function(t){return t&&(t=t.replace(/^\\/*\\.info(\\/|$)/,\"/\")),tt(t)}(r))throw new Error(Object(o.o)(t,e,!1)+'must be a valid firebase URL and the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".')},ft=function(t,e,n,r){if((!r||void 0!==n)&&\"boolean\"!==typeof n)throw new Error(Object(o.o)(t,e,r)+\"must be a boolean.\")},pt=function(){function t(t,e){this.repo_=t,this.path_=e}return t.prototype.cancel=function(t){Object(o.K)(\"OnDisconnect.cancel\",0,1,arguments.length),Object(o.L)(\"OnDisconnect.cancel\",1,t,!0);var e=new o.a;return this.repo_.onDisconnectCancel(this.path_,e.wrapCallback(t)),e.promise},t.prototype.remove=function(t){Object(o.K)(\"OnDisconnect.remove\",0,1,arguments.length),lt(\"OnDisconnect.remove\",this.path_),Object(o.L)(\"OnDisconnect.remove\",1,t,!0);var e=new o.a;return this.repo_.onDisconnectSet(this.path_,null,e.wrapCallback(t)),e.promise},t.prototype.set=function(t,e){Object(o.K)(\"OnDisconnect.set\",1,2,arguments.length),lt(\"OnDisconnect.set\",this.path_),nt(\"OnDisconnect.set\",1,t,this.path_,!1),Object(o.L)(\"OnDisconnect.set\",2,e,!0);var n=new o.a;return this.repo_.onDisconnectSet(this.path_,t,n.wrapCallback(e)),n.promise},t.prototype.setWithPriority=function(t,e,n){Object(o.K)(\"OnDisconnect.setWithPriority\",2,3,arguments.length),lt(\"OnDisconnect.setWithPriority\",this.path_),nt(\"OnDisconnect.setWithPriority\",1,t,this.path_,!1),ot(\"OnDisconnect.setWithPriority\",2,e,!1),Object(o.L)(\"OnDisconnect.setWithPriority\",3,n,!0);var r=new o.a;return this.repo_.onDisconnectSetWithPriority(this.path_,t,e,r.wrapCallback(n)),r.promise},t.prototype.update=function(t,e){if(Object(o.K)(\"OnDisconnect.update\",1,2,arguments.length),lt(\"OnDisconnect.update\",this.path_),Array.isArray(t)){for(var n={},r=0;r<t.length;++r)n[\"\"+r]=t[r];t=n,I(\"Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.\")}it(\"OnDisconnect.update\",1,t,this.path_,!1),Object(o.L)(\"OnDisconnect.update\",2,e,!0);var i=new o.a;return this.repo_.onDisconnectUpdate(this.path_,t,i.wrapCallback(e)),i.promise},t}(),dt=function(){function t(t,e){this.committed=t,this.snapshot=e}return t.prototype.toJSON=function(){return Object(o.K)(\"TransactionResult.toJSON\",0,1,arguments.length),{committed:this.committed,snapshot:this.snapshot.toJSON()}},t}(),vt=function(){var t=\"-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\",e=0,n=[];return function(r){var i,a=r===e;e=r;var s=new Array(8);for(i=7;i>=0;i--)s[i]=t.charAt(r%64),r=Math.floor(r/64);Object(o.f)(0===r,\"Cannot push at time == 0\");var u=s.join(\"\");if(a){for(i=11;i>=0&&63===n[i];i--)n[i]=0;n[i]++}else for(i=0;i<12;i++)n[i]=Math.floor(64*Math.random());for(i=0;i<12;i++)u+=t.charAt(n[i]);return Object(o.f)(20===u.length,\"nextPushId: Length should be 20.\"),u}}(),yt=function(){function t(t,e){this.name=t,this.node=e}return t.Wrap=function(e,n){return new t(e,n)},t}(),gt=function(){function t(){}return t.prototype.getCompare=function(){return this.compare.bind(this)},t.prototype.indexedValueChanged=function(t,e){var n=new yt(O,t),r=new yt(O,e);return 0!==this.compare(n,r)},t.prototype.minPost=function(){return yt.MIN},t}(),mt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(i.c)(e,t),Object.defineProperty(e,\"__EMPTY_NODE\",{get:function(){return W},set:function(t){W=t},enumerable:!1,configurable:!0}),e.prototype.compare=function(t,e){return k(t.name,e.name)},e.prototype.isDefinedOn=function(t){throw Object(o.g)(\"KeyIndex.isDefinedOn not expected to be called.\")},e.prototype.indexedValueChanged=function(t,e){return!1},e.prototype.minPost=function(){return yt.MIN},e.prototype.maxPost=function(){return new yt(C,W)},e.prototype.makePost=function(t,e){return Object(o.f)(\"string\"===typeof t,\"KeyIndex indexValue must always be a string.\"),new yt(t,W)},e.prototype.toString=function(){return\".key\"},e}(gt),bt=new mt;var _t,wt,Et,Tt=function(t){return\"number\"===typeof t?\"number:\"+x(t):\"string:\"+t},It=function(t){if(t.isLeafNode()){var e=t.val();Object(o.f)(\"string\"===typeof e||\"number\"===typeof e||\"object\"===typeof e&&Object(o.k)(e,\".sv\"),\"Priority must be a string or number.\")}else Object(o.f)(t===G||t.isEmpty(),\"priority of unexpected type.\");Object(o.f)(t===G||t.getPriority().isEmpty(),\"Priority nodes can't have a priority of their own.\")},St=function(){function t(e,n){void 0===n&&(n=t.__childrenNodeConstructor.EMPTY_NODE),this.value_=e,this.priorityNode_=n,this.lazyHash_=null,Object(o.f)(void 0!==this.value_&&null!==this.value_,\"LeafNode shouldn't be created with null/undefined value.\"),It(this.priorityNode_)}return Object.defineProperty(t,\"__childrenNodeConstructor\",{get:function(){return _t},set:function(t){_t=t},enumerable:!1,configurable:!0}),t.prototype.isLeafNode=function(){return!0},t.prototype.getPriority=function(){return this.priorityNode_},t.prototype.updatePriority=function(e){return new t(this.value_,e)},t.prototype.getImmediateChild=function(e){return\".priority\"===e?this.priorityNode_:t.__childrenNodeConstructor.EMPTY_NODE},t.prototype.getChild=function(e){return e.isEmpty()?this:\".priority\"===e.getFront()?this.priorityNode_:t.__childrenNodeConstructor.EMPTY_NODE},t.prototype.hasChild=function(){return!1},t.prototype.getPredecessorChildName=function(t,e){return null},t.prototype.updateImmediateChild=function(e,n){return\".priority\"===e?this.updatePriority(n):n.isEmpty()&&\".priority\"!==e?this:t.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(e,n).updatePriority(this.priorityNode_)},t.prototype.updateChild=function(e,n){var r=e.getFront();return null===r?n:n.isEmpty()&&\".priority\"!==r?this:(Object(o.f)(\".priority\"!==r||1===e.getLength(),\".priority must be the last token in a path\"),this.updateImmediateChild(r,t.__childrenNodeConstructor.EMPTY_NODE.updateChild(e.popFront(),n)))},t.prototype.isEmpty=function(){return!1},t.prototype.numChildren=function(){return 0},t.prototype.forEachChild=function(t,e){return!1},t.prototype.val=function(t){return t&&!this.getPriority().isEmpty()?{\".value\":this.getValue(),\".priority\":this.getPriority().val()}:this.getValue()},t.prototype.hash=function(){if(null===this.lazyHash_){var t=\"\";this.priorityNode_.isEmpty()||(t+=\"priority:\"+Tt(this.priorityNode_.val())+\":\");var e=typeof this.value_;t+=e+\":\",t+=\"number\"===e?x(this.value_):this.value_,this.lazyHash_=v(t)}return this.lazyHash_},t.prototype.getValue=function(){return this.value_},t.prototype.compareTo=function(e){return e===t.__childrenNodeConstructor.EMPTY_NODE?1:e instanceof t.__childrenNodeConstructor?-1:(Object(o.f)(e.isLeafNode(),\"Unknown node type\"),this.compareToLeafNode_(e))},t.prototype.compareToLeafNode_=function(e){var n=typeof e.value_,r=typeof this.value_,i=t.VALUE_TYPE_ORDER.indexOf(n),a=t.VALUE_TYPE_ORDER.indexOf(r);return Object(o.f)(i>=0,\"Unknown leaf type: \"+n),Object(o.f)(a>=0,\"Unknown leaf type: \"+r),i===a?\"object\"===r?0:this.value_<e.value_?-1:this.value_===e.value_?0:1:a-i},t.prototype.withIndex=function(){return this},t.prototype.isIndexed=function(){return!0},t.prototype.equals=function(t){if(t===this)return!0;if(t.isLeafNode()){var e=t;return this.value_===e.value_&&this.priorityNode_.equals(e.priorityNode_)}return!1},t.VALUE_TYPE_ORDER=[\"object\",\"boolean\",\"number\",\"string\"],t}();var Ot,Ct,kt=new(function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(i.c)(e,t),e.prototype.compare=function(t,e){var n=t.node.getPriority(),r=e.node.getPriority(),i=n.compareTo(r);return 0===i?k(t.name,e.name):i},e.prototype.isDefinedOn=function(t){return!t.getPriority().isEmpty()},e.prototype.indexedValueChanged=function(t,e){return!t.getPriority().equals(e.getPriority())},e.prototype.minPost=function(){return yt.MIN},e.prototype.maxPost=function(){return new yt(C,new St(\"[PRIORITY-POST]\",Et))},e.prototype.makePost=function(t,e){var n=wt(t);return new yt(e,new St(\"[PRIORITY-POST]\",n))},e.prototype.toString=function(){return\".priority\"},e}(gt)),Nt=function(){function t(t,e,n,r,i){void 0===i&&(i=null),this.isReverse_=r,this.resultGenerator_=i,this.nodeStack_=[];for(var o=1;!t.isEmpty();)if(t=t,o=e?n(t.key,e):1,r&&(o*=-1),o<0)t=this.isReverse_?t.left:t.right;else{if(0===o){this.nodeStack_.push(t);break}this.nodeStack_.push(t),t=this.isReverse_?t.right:t.left}}return t.prototype.getNext=function(){if(0===this.nodeStack_.length)return null;var t,e=this.nodeStack_.pop();if(t=this.resultGenerator_?this.resultGenerator_(e.key,e.value):{key:e.key,value:e.value},this.isReverse_)for(e=e.left;!e.isEmpty();)this.nodeStack_.push(e),e=e.right;else for(e=e.right;!e.isEmpty();)this.nodeStack_.push(e),e=e.left;return t},t.prototype.hasNext=function(){return this.nodeStack_.length>0},t.prototype.peek=function(){if(0===this.nodeStack_.length)return null;var t=this.nodeStack_[this.nodeStack_.length-1];return this.resultGenerator_?this.resultGenerator_(t.key,t.value):{key:t.key,value:t.value}},t}(),At=function(){function t(e,n,r,i,o){this.key=e,this.value=n,this.color=null!=r?r:t.RED,this.left=null!=i?i:Rt.EMPTY_NODE,this.right=null!=o?o:Rt.EMPTY_NODE}return t.prototype.copy=function(e,n,r,i,o){return new t(null!=e?e:this.key,null!=n?n:this.value,null!=r?r:this.color,null!=i?i:this.left,null!=o?o:this.right)},t.prototype.count=function(){return this.left.count()+1+this.right.count()},t.prototype.isEmpty=function(){return!1},t.prototype.inorderTraversal=function(t){return this.left.inorderTraversal(t)||!!t(this.key,this.value)||this.right.inorderTraversal(t)},t.prototype.reverseTraversal=function(t){return this.right.reverseTraversal(t)||t(this.key,this.value)||this.left.reverseTraversal(t)},t.prototype.min_=function(){return this.left.isEmpty()?this:this.left.min_()},t.prototype.minKey=function(){return this.min_().key},t.prototype.maxKey=function(){return this.right.isEmpty()?this.key:this.right.maxKey()},t.prototype.insert=function(t,e,n){var r=this,i=n(t,r.key);return(r=i<0?r.copy(null,null,null,r.left.insert(t,e,n),null):0===i?r.copy(null,e,null,null,null):r.copy(null,null,null,null,r.right.insert(t,e,n))).fixUp_()},t.prototype.removeMin_=function(){if(this.left.isEmpty())return Rt.EMPTY_NODE;var t=this;return t.left.isRed_()||t.left.left.isRed_()||(t=t.moveRedLeft_()),(t=t.copy(null,null,null,t.left.removeMin_(),null)).fixUp_()},t.prototype.remove=function(t,e){var n,r;if(e(t,(n=this).key)<0)n.left.isEmpty()||n.left.isRed_()||n.left.left.isRed_()||(n=n.moveRedLeft_()),n=n.copy(null,null,null,n.left.remove(t,e),null);else{if(n.left.isRed_()&&(n=n.rotateRight_()),n.right.isEmpty()||n.right.isRed_()||n.right.left.isRed_()||(n=n.moveRedRight_()),0===e(t,n.key)){if(n.right.isEmpty())return Rt.EMPTY_NODE;r=n.right.min_(),n=n.copy(r.key,r.value,null,null,n.right.removeMin_())}n=n.copy(null,null,null,null,n.right.remove(t,e))}return n.fixUp_()},t.prototype.isRed_=function(){return this.color},t.prototype.fixUp_=function(){var t=this;return t.right.isRed_()&&!t.left.isRed_()&&(t=t.rotateLeft_()),t.left.isRed_()&&t.left.left.isRed_()&&(t=t.rotateRight_()),t.left.isRed_()&&t.right.isRed_()&&(t=t.colorFlip_()),t},t.prototype.moveRedLeft_=function(){var t=this.colorFlip_();return t.right.left.isRed_()&&(t=(t=(t=t.copy(null,null,null,null,t.right.rotateRight_())).rotateLeft_()).colorFlip_()),t},t.prototype.moveRedRight_=function(){var t=this.colorFlip_();return t.left.left.isRed_()&&(t=(t=t.rotateRight_()).colorFlip_()),t},t.prototype.rotateLeft_=function(){var e=this.copy(null,null,t.RED,null,this.right.left);return this.right.copy(null,null,this.color,e,null)},t.prototype.rotateRight_=function(){var e=this.copy(null,null,t.RED,this.left.right,null);return this.left.copy(null,null,this.color,null,e)},t.prototype.colorFlip_=function(){var t=this.left.copy(null,null,!this.left.color,null,null),e=this.right.copy(null,null,!this.right.color,null,null);return this.copy(null,null,!this.color,t,e)},t.prototype.checkMaxDepth_=function(){var t=this.check_();return Math.pow(2,t)<=this.count()+1},t.prototype.check_=function(){if(this.isRed_()&&this.left.isRed_())throw new Error(\"Red node has red child(\"+this.key+\",\"+this.value+\")\");if(this.right.isRed_())throw new Error(\"Right child of (\"+this.key+\",\"+this.value+\") is red\");var t=this.left.check_();if(t!==this.right.check_())throw new Error(\"Black depths differ\");return t+(this.isRed_()?0:1)},t.RED=!0,t.BLACK=!1,t}(),Pt=function(){function t(){}return t.prototype.copy=function(t,e,n,r,i){return this},t.prototype.insert=function(t,e,n){return new At(t,e,null)},t.prototype.remove=function(t,e){return this},t.prototype.count=function(){return 0},t.prototype.isEmpty=function(){return!0},t.prototype.inorderTraversal=function(t){return!1},t.prototype.reverseTraversal=function(t){return!1},t.prototype.minKey=function(){return null},t.prototype.maxKey=function(){return null},t.prototype.check_=function(){return 0},t.prototype.isRed_=function(){return!1},t}(),Rt=function(){function t(e,n){void 0===n&&(n=t.EMPTY_NODE),this.comparator_=e,this.root_=n}return t.prototype.insert=function(e,n){return new t(this.comparator_,this.root_.insert(e,n,this.comparator_).copy(null,null,At.BLACK,null,null))},t.prototype.remove=function(e){return new t(this.comparator_,this.root_.remove(e,this.comparator_).copy(null,null,At.BLACK,null,null))},t.prototype.get=function(t){for(var e,n=this.root_;!n.isEmpty();){if(0===(e=this.comparator_(t,n.key)))return n.value;e<0?n=n.left:e>0&&(n=n.right)}return null},t.prototype.getPredecessorKey=function(t){for(var e,n=this.root_,r=null;!n.isEmpty();){if(0===(e=this.comparator_(t,n.key))){if(n.left.isEmpty())return r?r.key:null;for(n=n.left;!n.right.isEmpty();)n=n.right;return n.key}e<0?n=n.left:e>0&&(r=n,n=n.right)}throw new Error(\"Attempted to find predecessor key for a nonexistent key.  What gives?\")},t.prototype.isEmpty=function(){return this.root_.isEmpty()},t.prototype.count=function(){return this.root_.count()},t.prototype.minKey=function(){return this.root_.minKey()},t.prototype.maxKey=function(){return this.root_.maxKey()},t.prototype.inorderTraversal=function(t){return this.root_.inorderTraversal(t)},t.prototype.reverseTraversal=function(t){return this.root_.reverseTraversal(t)},t.prototype.getIterator=function(t){return new Nt(this.root_,null,this.comparator_,!1,t)},t.prototype.getIteratorFrom=function(t,e){return new Nt(this.root_,t,this.comparator_,!1,e)},t.prototype.getReverseIteratorFrom=function(t,e){return new Nt(this.root_,t,this.comparator_,!0,e)},t.prototype.getReverseIterator=function(t){return new Nt(this.root_,null,this.comparator_,!0,t)},t.EMPTY_NODE=new Pt,t}(),jt=Math.log(2),xt=function(){function t(t){var e;this.count=(e=t+1,parseInt(Math.log(e)/jt,10)),this.current_=this.count-1;var n,r=(n=this.count,parseInt(Array(n+1).join(\"1\"),2));this.bits_=t+1&r}return t.prototype.nextBitIsOne=function(){var t=!(this.bits_&1<<this.current_);return this.current_--,t},t}(),Dt=function(t,e,n,r){t.sort(e);var i=function e(r,i){var o,a,s=i-r;if(0===s)return null;if(1===s)return o=t[r],a=n?n(o):o,new At(a,o.node,At.BLACK,null,null);var u=parseInt(s/2,10)+r,c=e(r,u),l=e(u+1,i);return o=t[u],a=n?n(o):o,new At(a,o.node,At.BLACK,c,l)},o=function(e){for(var r=null,o=null,a=t.length,s=function(e,r){var o=a-e,s=a;a-=e;var c=i(o+1,s),l=t[o],h=n?n(l):l;u(new At(h,l.node,r,null,c))},u=function(t){r?(r.left=t,r=t):(o=t,r=t)},c=0;c<e.count;++c){var l=e.nextBitIsOne(),h=Math.pow(2,e.count-(c+1));l?s(h,At.BLACK):(s(h,At.BLACK),s(h,At.RED))}return o}(new xt(t.length));return new Rt(r||e,o)},Lt={},Mt=function(){function t(t,e){this.indexes_=t,this.indexSet_=e}return Object.defineProperty(t,\"Default\",{get:function(){return Object(o.f)(Lt&&kt,\"ChildrenNode.ts has not been loaded\"),Ot=Ot||new t({\".priority\":Lt},{\".priority\":kt})},enumerable:!1,configurable:!0}),t.prototype.get=function(t){var e=Object(o.G)(this.indexes_,t);if(!e)throw new Error(\"No index defined for \"+t);return e instanceof Rt?e:null},t.prototype.hasIndex=function(t){return Object(o.k)(this.indexSet_,t.toString())},t.prototype.addIndex=function(e,n){Object(o.f)(e!==bt,\"KeyIndex always exists and isn't meant to be added to the IndexMap.\");for(var r,a=[],s=!1,u=n.getIterator(yt.Wrap),c=u.getNext();c;)s=s||e.isDefinedOn(c.node),a.push(c),c=u.getNext();r=s?Dt(a,e.getCompare()):Lt;var l=e.toString(),h=Object(i.a)({},this.indexSet_);h[l]=e;var f=Object(i.a)({},this.indexes_);return f[l]=r,new t(f,h)},t.prototype.addToIndexes=function(e,n){var r=this;return new t(Object(o.E)(this.indexes_,(function(t,i){var a=Object(o.G)(r.indexSet_,i);if(Object(o.f)(a,\"Missing index implementation for \"+i),t===Lt){if(a.isDefinedOn(e.node)){for(var s=[],u=n.getIterator(yt.Wrap),c=u.getNext();c;)c.name!==e.name&&s.push(c),c=u.getNext();return s.push(e),Dt(s,a.getCompare())}return Lt}var l=n.get(e.name),h=t;return l&&(h=h.remove(new yt(e.name,l))),h.insert(e,e.node)})),this.indexSet_)},t.prototype.removeFromIndexes=function(e,n){return new t(Object(o.E)(this.indexes_,(function(t){if(t===Lt)return t;var r=n.get(e.name);return r?t.remove(new yt(e.name,r)):t})),this.indexSet_)},t}();function Ft(t,e){return k(t.name,e.name)}function Ut(t,e){return k(t,e)}var Vt=function(){function t(t,e,n){this.children_=t,this.priorityNode_=e,this.indexMap_=n,this.lazyHash_=null,this.priorityNode_&&It(this.priorityNode_),this.children_.isEmpty()&&Object(o.f)(!this.priorityNode_||this.priorityNode_.isEmpty(),\"An empty node cannot have a priority\")}return Object.defineProperty(t,\"EMPTY_NODE\",{get:function(){return Ct||(Ct=new t(new Rt(Ut),null,Mt.Default))},enumerable:!1,configurable:!0}),t.prototype.isLeafNode=function(){return!1},t.prototype.getPriority=function(){return this.priorityNode_||Ct},t.prototype.updatePriority=function(e){return this.children_.isEmpty()?this:new t(this.children_,e,this.indexMap_)},t.prototype.getImmediateChild=function(t){if(\".priority\"===t)return this.getPriority();var e=this.children_.get(t);return null===e?Ct:e},t.prototype.getChild=function(t){var e=t.getFront();return null===e?this:this.getImmediateChild(e).getChild(t.popFront())},t.prototype.hasChild=function(t){return null!==this.children_.get(t)},t.prototype.updateImmediateChild=function(e,n){if(Object(o.f)(n,\"We should always be passing snapshot nodes\"),\".priority\"===e)return this.updatePriority(n);var r=new yt(e,n),i=void 0,a=void 0;n.isEmpty()?(i=this.children_.remove(e),a=this.indexMap_.removeFromIndexes(r,this.children_)):(i=this.children_.insert(e,n),a=this.indexMap_.addToIndexes(r,this.children_));var s=i.isEmpty()?Ct:this.priorityNode_;return new t(i,s,a)},t.prototype.updateChild=function(t,e){var n=t.getFront();if(null===n)return e;Object(o.f)(\".priority\"!==t.getFront()||1===t.getLength(),\".priority must be the last token in a path\");var r=this.getImmediateChild(n).updateChild(t.popFront(),e);return this.updateImmediateChild(n,r)},t.prototype.isEmpty=function(){return this.children_.isEmpty()},t.prototype.numChildren=function(){return this.children_.count()},t.prototype.val=function(e){if(this.isEmpty())return null;var n={},r=0,i=0,o=!0;if(this.forEachChild(kt,(function(a,s){n[a]=s.val(e),r++,o&&t.INTEGER_REGEXP_.test(a)?i=Math.max(i,Number(a)):o=!1})),!e&&o&&i<2*r){var a=[];for(var s in n)a[s]=n[s];return a}return e&&!this.getPriority().isEmpty()&&(n[\".priority\"]=this.getPriority().val()),n},t.prototype.hash=function(){if(null===this.lazyHash_){var t=\"\";this.getPriority().isEmpty()||(t+=\"priority:\"+Tt(this.getPriority().val())+\":\"),this.forEachChild(kt,(function(e,n){var r=n.hash();\"\"!==r&&(t+=\":\"+e+\":\"+r)})),this.lazyHash_=\"\"===t?\"\":v(t)}return this.lazyHash_},t.prototype.getPredecessorChildName=function(t,e,n){var r=this.resolveIndex_(n);if(r){var i=r.getPredecessorKey(new yt(t,e));return i?i.name:null}return this.children_.getPredecessorKey(t)},t.prototype.getFirstChildName=function(t){var e=this.resolveIndex_(t);if(e){var n=e.minKey();return n&&n.name}return this.children_.minKey()},t.prototype.getFirstChild=function(t){var e=this.getFirstChildName(t);return e?new yt(e,this.children_.get(e)):null},t.prototype.getLastChildName=function(t){var e=this.resolveIndex_(t);if(e){var n=e.maxKey();return n&&n.name}return this.children_.maxKey()},t.prototype.getLastChild=function(t){var e=this.getLastChildName(t);return e?new yt(e,this.children_.get(e)):null},t.prototype.forEachChild=function(t,e){var n=this.resolveIndex_(t);return n?n.inorderTraversal((function(t){return e(t.name,t.node)})):this.children_.inorderTraversal(e)},t.prototype.getIterator=function(t){return this.getIteratorFrom(t.minPost(),t)},t.prototype.getIteratorFrom=function(t,e){var n=this.resolveIndex_(e);if(n)return n.getIteratorFrom(t,(function(t){return t}));for(var r=this.children_.getIteratorFrom(t.name,yt.Wrap),i=r.peek();null!=i&&e.compare(i,t)<0;)r.getNext(),i=r.peek();return r},t.prototype.getReverseIterator=function(t){return this.getReverseIteratorFrom(t.maxPost(),t)},t.prototype.getReverseIteratorFrom=function(t,e){var n=this.resolveIndex_(e);if(n)return n.getReverseIteratorFrom(t,(function(t){return t}));for(var r=this.children_.getReverseIteratorFrom(t.name,yt.Wrap),i=r.peek();null!=i&&e.compare(i,t)>0;)r.getNext(),i=r.peek();return r},t.prototype.compareTo=function(t){return this.isEmpty()?t.isEmpty()?0:-1:t.isLeafNode()||t.isEmpty()?1:t===qt?-1:0},t.prototype.withIndex=function(e){if(e===bt||this.indexMap_.hasIndex(e))return this;var n=this.indexMap_.addIndex(e,this.children_);return new t(this.children_,this.priorityNode_,n)},t.prototype.isIndexed=function(t){return t===bt||this.indexMap_.hasIndex(t)},t.prototype.equals=function(t){if(t===this)return!0;if(t.isLeafNode())return!1;var e=t;if(this.getPriority().equals(e.getPriority())){if(this.children_.count()===e.children_.count()){for(var n=this.getIterator(kt),r=e.getIterator(kt),i=n.getNext(),o=r.getNext();i&&o;){if(i.name!==o.name||!i.node.equals(o.node))return!1;i=n.getNext(),o=r.getNext()}return null===i&&null===o}return!1}return!1},t.prototype.resolveIndex_=function(t){return t===bt?null:this.indexMap_.get(t.toString())},t.INTEGER_REGEXP_=/^(0|[1-9]\\d*)$/,t}(),qt=new(function(t){function e(){return t.call(this,new Rt(Ut),Vt.EMPTY_NODE,Mt.Default)||this}return Object(i.c)(e,t),e.prototype.compareTo=function(t){return t===this?0:1},e.prototype.equals=function(t){return t===this},e.prototype.getPriority=function(){return this},e.prototype.getImmediateChild=function(t){return Vt.EMPTY_NODE},e.prototype.isEmpty=function(){return!1},e}(Vt));Object.defineProperties(yt,{MIN:{value:new yt(O,Vt.EMPTY_NODE)},MAX:{value:new yt(C,qt)}}),mt.__EMPTY_NODE=Vt.EMPTY_NODE,St.__childrenNodeConstructor=Vt,G=qt,function(t){Et=t}(qt);function Bt(t,e){if(void 0===e&&(e=null),null===t)return Vt.EMPTY_NODE;if(\"object\"===typeof t&&\".priority\"in t&&(e=t[\".priority\"]),Object(o.f)(null===e||\"string\"===typeof e||\"number\"===typeof e||\"object\"===typeof e&&\".sv\"in e,\"Invalid priority type found: \"+typeof e),\"object\"===typeof t&&\".value\"in t&&null!==t[\".value\"]&&(t=t[\".value\"]),\"object\"!==typeof t||\".sv\"in t)return new St(t,Bt(e));if(t instanceof Array){var n=Vt.EMPTY_NODE;return j(t,(function(e,r){if(Object(o.k)(t,e)&&\".\"!==e.substring(0,1)){var i=Bt(r);!i.isLeafNode()&&i.isEmpty()||(n=n.updateImmediateChild(e,i))}})),n.updatePriority(Bt(e))}var r=[],i=!1;if(j(t,(function(t,e){if(\".\"!==t.substring(0,1)){var n=Bt(e);n.isEmpty()||(i=i||!n.getPriority().isEmpty(),r.push(new yt(t,n)))}})),0===r.length)return Vt.EMPTY_NODE;var a=Dt(r,Ft,(function(t){return t.name}),Ut);if(i){var s=Dt(r,kt.getCompare());return new Vt(a,Bt(e),new Mt({\".priority\":s},{\".priority\":kt}))}return new Vt(a,Bt(e),Mt.Default)}!function(t){wt=t}(Bt);var zt,Ht=new(function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(i.c)(e,t),e.prototype.compare=function(t,e){var n=t.node.compareTo(e.node);return 0===n?k(t.name,e.name):n},e.prototype.isDefinedOn=function(t){return!0},e.prototype.indexedValueChanged=function(t,e){return!t.equals(e)},e.prototype.minPost=function(){return yt.MIN},e.prototype.maxPost=function(){return yt.MAX},e.prototype.makePost=function(t,e){var n=Bt(t);return new yt(e,n)},e.prototype.toString=function(){return\".value\"},e}(gt)),Kt=function(t){function e(e){var n=t.call(this)||this;return n.indexPath_=e,Object(o.f)(!e.isEmpty()&&\".priority\"!==e.getFront(),\"Can't create PathIndex with empty path or .priority key\"),n}return Object(i.c)(e,t),e.prototype.extractChild=function(t){return t.getChild(this.indexPath_)},e.prototype.isDefinedOn=function(t){return!t.getChild(this.indexPath_).isEmpty()},e.prototype.compare=function(t,e){var n=this.extractChild(t.node),r=this.extractChild(e.node),i=n.compareTo(r);return 0===i?k(t.name,e.name):i},e.prototype.makePost=function(t,e){var n=Bt(t),r=Vt.EMPTY_NODE.updateChild(this.indexPath_,n);return new yt(e,r)},e.prototype.maxPost=function(){var t=Vt.EMPTY_NODE.updateChild(this.indexPath_,qt);return new yt(C,t)},e.prototype.toString=function(){return this.indexPath_.slice().join(\"/\")},e}(gt),Wt=function(){function t(t,e,n){this.node_=t,this.ref_=e,this.index_=n}return t.prototype.val=function(){return Object(o.K)(\"DataSnapshot.val\",0,0,arguments.length),this.node_.val()},t.prototype.exportVal=function(){return Object(o.K)(\"DataSnapshot.exportVal\",0,0,arguments.length),this.node_.val(!0)},t.prototype.toJSON=function(){return Object(o.K)(\"DataSnapshot.toJSON\",0,1,arguments.length),this.exportVal()},t.prototype.exists=function(){return Object(o.K)(\"DataSnapshot.exists\",0,0,arguments.length),!this.node_.isEmpty()},t.prototype.child=function(e){Object(o.K)(\"DataSnapshot.child\",0,1,arguments.length),e=String(e),ut(\"DataSnapshot.child\",1,e,!1);var n=new U(e),r=this.ref_.child(n);return new t(this.node_.getChild(n),r,kt)},t.prototype.hasChild=function(t){Object(o.K)(\"DataSnapshot.hasChild\",1,1,arguments.length),ut(\"DataSnapshot.hasChild\",1,t,!1);var e=new U(t);return!this.node_.getChild(e).isEmpty()},t.prototype.getPriority=function(){return Object(o.K)(\"DataSnapshot.getPriority\",0,0,arguments.length),this.node_.getPriority().val()},t.prototype.forEach=function(e){var n=this;if(Object(o.K)(\"DataSnapshot.forEach\",1,1,arguments.length),Object(o.L)(\"DataSnapshot.forEach\",1,e,!1),this.node_.isLeafNode())return!1;var r=this.node_;return!!r.forEachChild(this.index_,(function(r,i){return e(new t(i,n.ref_.child(r),kt))}))},t.prototype.hasChildren=function(){return Object(o.K)(\"DataSnapshot.hasChildren\",0,0,arguments.length),!this.node_.isLeafNode()&&!this.node_.isEmpty()},Object.defineProperty(t.prototype,\"key\",{get:function(){return this.ref_.getKey()},enumerable:!1,configurable:!0}),t.prototype.numChildren=function(){return Object(o.K)(\"DataSnapshot.numChildren\",0,0,arguments.length),this.node_.numChildren()},t.prototype.getRef=function(){return Object(o.K)(\"DataSnapshot.ref\",0,0,arguments.length),this.ref_},Object.defineProperty(t.prototype,\"ref\",{get:function(){return this.getRef()},enumerable:!1,configurable:!0}),t}(),Gt=function(){function t(t,e,n,r){this.eventType=t,this.eventRegistration=e,this.snapshot=n,this.prevName=r}return t.prototype.getPath=function(){var t=this.snapshot.getRef();return\"value\"===this.eventType?t.path:t.getParent().path},t.prototype.getEventType=function(){return this.eventType},t.prototype.getEventRunner=function(){return this.eventRegistration.getEventRunner(this)},t.prototype.toString=function(){return this.getPath().toString()+\":\"+this.eventType+\":\"+Object(o.J)(this.snapshot.exportVal())},t}(),Qt=function(){function t(t,e,n){this.eventRegistration=t,this.error=e,this.path=n}return t.prototype.getPath=function(){return this.path},t.prototype.getEventType=function(){return\"cancel\"},t.prototype.getEventRunner=function(){return this.eventRegistration.getEventRunner(this)},t.prototype.toString=function(){return this.path.toString()+\":cancel\"},t}(),Yt=function(){function t(t,e,n){this.callback_=t,this.cancelCallback_=e,this.context_=n}return t.prototype.respondsTo=function(t){return\"value\"===t},t.prototype.createEvent=function(t,e){var n=e.getQueryParams().getIndex();return new Gt(\"value\",this,new Wt(t.snapshotNode,e.getRef(),n))},t.prototype.getEventRunner=function(t){var e=this.context_;if(\"cancel\"===t.getEventType()){Object(o.f)(this.cancelCallback_,\"Raising a cancel event on a listener with no cancel callback\");var n=this.cancelCallback_;return function(){n.call(e,t.error)}}var r=this.callback_;return function(){r.call(e,t.snapshot)}},t.prototype.createCancelEvent=function(t,e){return this.cancelCallback_?new Qt(this,t,e):null},t.prototype.matches=function(e){return e instanceof t&&(!e.callback_||!this.callback_||e.callback_===this.callback_&&e.context_===this.context_)},t.prototype.hasAnyCallback=function(){return null!==this.callback_},t}(),Jt=function(){function t(t,e,n){this.callbacks_=t,this.cancelCallback_=e,this.context_=n}return t.prototype.respondsTo=function(t){var e=\"children_added\"===t?\"child_added\":t;return e=\"children_removed\"===e?\"child_removed\":e,Object(o.k)(this.callbacks_,e)},t.prototype.createCancelEvent=function(t,e){return this.cancelCallback_?new Qt(this,t,e):null},t.prototype.createEvent=function(t,e){Object(o.f)(null!=t.childName,\"Child events should have a childName.\");var n=e.getRef().child(t.childName),r=e.getQueryParams().getIndex();return new Gt(t.type,this,new Wt(t.snapshotNode,n,r),t.prevName)},t.prototype.getEventRunner=function(t){var e=this.context_;if(\"cancel\"===t.getEventType()){Object(o.f)(this.cancelCallback_,\"Raising a cancel event on a listener with no cancel callback\");var n=this.cancelCallback_;return function(){n.call(e,t.error)}}var r=this.callbacks_[t.eventType];return function(){r.call(e,t.snapshot,t.prevName)}},t.prototype.matches=function(e){var n=this;if(e instanceof t){if(!this.callbacks_||!e.callbacks_)return!0;if(this.context_===e.context_){var r=Object.keys(e.callbacks_),i=Object.keys(this.callbacks_),o=r.length;if(o===i.length){if(1===o){var a=r[0],s=i[0];return s===a&&(!e.callbacks_[a]||!this.callbacks_[s]||e.callbacks_[a]===this.callbacks_[s])}return i.every((function(t){return e.callbacks_[t]===n.callbacks_[t]}))}}}return!1},t.prototype.hasAnyCallback=function(){return null!==this.callbacks_},t}(),Xt=function(){function t(t,e,n,r){this.repo=t,this.path=e,this.queryParams_=n,this.orderByCalled_=r}return Object.defineProperty(t,\"__referenceConstructor\",{get:function(){return Object(o.f)(zt,\"Reference.ts has not been loaded\"),zt},set:function(t){zt=t},enumerable:!1,configurable:!0}),t.validateQueryEndpoints_=function(t){var e=null,n=null;if(t.hasStart()&&(e=t.getIndexStartValue()),t.hasEnd()&&(n=t.getIndexEndValue()),t.getIndex()===bt){var r=\"Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().\",i=\"Query: When ordering by key, the argument passed to startAt(), endAt(),or equalTo() must be a string.\";if(t.hasStart()){if(t.getIndexStartName()!==O)throw new Error(r);if(\"string\"!==typeof e)throw new Error(i)}if(t.hasEnd()){if(t.getIndexEndName()!==C)throw new Error(r);if(\"string\"!==typeof n)throw new Error(i)}}else if(t.getIndex()===kt){if(null!=e&&!et(e)||null!=n&&!et(n))throw new Error(\"Query: When ordering by priority, the first argument passed to startAt(), endAt(), or equalTo() must be a valid priority value (null, a number, or a string).\")}else if(Object(o.f)(t.getIndex()instanceof Kt||t.getIndex()===Ht,\"unknown index type.\"),null!=e&&\"object\"===typeof e||null!=n&&\"object\"===typeof n)throw new Error(\"Query: First argument passed to startAt(), endAt(), or equalTo() cannot be an object.\")},t.validateLimit_=function(t){if(t.hasStart()&&t.hasEnd()&&t.hasLimit()&&!t.hasAnchoredLimit())throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\")},t.prototype.validateNoPreviousOrderByCall_=function(t){if(!0===this.orderByCalled_)throw new Error(t+\": You can't combine multiple orderBy calls.\")},t.prototype.getQueryParams=function(){return this.queryParams_},t.prototype.getRef=function(){return Object(o.K)(\"Query.ref\",0,0,arguments.length),new t.__referenceConstructor(this.repo,this.path)},t.prototype.on=function(e,n,r,i){Object(o.K)(\"Query.on\",2,4,arguments.length),at(\"Query.on\",1,e,!1),Object(o.L)(\"Query.on\",2,n,!1);var a=t.getCancelAndContextArgs_(\"Query.on\",r,i);if(\"value\"===e)this.onValueEvent(n,a.cancel,a.context);else{var s={};s[e]=n,this.onChildEvent(s,a.cancel,a.context)}return n},t.prototype.onValueEvent=function(t,e,n){var r=new Yt(t,e||null,n||null);this.repo.addEventCallbackForQuery(this,r)},t.prototype.onChildEvent=function(t,e,n){var r=new Jt(t,e,n);this.repo.addEventCallbackForQuery(this,r)},t.prototype.off=function(t,e,n){Object(o.K)(\"Query.off\",0,3,arguments.length),at(\"Query.off\",1,t,!0),Object(o.L)(\"Query.off\",2,e,!0),Object(o.M)(\"Query.off\",3,n,!0);var r=null,i=null;if(\"value\"===t){var a=e||null;r=new Yt(a,null,n||null)}else t&&(e&&((i={})[t]=e),r=new Jt(i,null,n||null));this.repo.removeEventCallbackForQuery(this,r)},t.prototype.get=function(){return this.repo.getValue(this)},t.prototype.once=function(e,n,r,i){var a=this;Object(o.K)(\"Query.once\",1,4,arguments.length),at(\"Query.once\",1,e,!1),Object(o.L)(\"Query.once\",2,n,!0);var s=t.getCancelAndContextArgs_(\"Query.once\",r,i),u=!0,c=new o.a;c.promise.catch((function(){}));var l=function t(r){u&&(u=!1,a.off(e,t),n&&n.bind(s.context)(r),c.resolve(r))};return this.on(e,l,(function(t){a.off(e,l),s.cancel&&s.cancel.bind(s.context)(t),c.reject(t)})),c.promise},t.prototype.limitToFirst=function(e){if(Object(o.K)(\"Query.limitToFirst\",1,1,arguments.length),\"number\"!==typeof e||Math.floor(e)!==e||e<=0)throw new Error(\"Query.limitToFirst: First argument must be a positive integer.\");if(this.queryParams_.hasLimit())throw new Error(\"Query.limitToFirst: Limit was already set (by another call to limit, limitToFirst, or limitToLast).\");return new t(this.repo,this.path,this.queryParams_.limitToFirst(e),this.orderByCalled_)},t.prototype.limitToLast=function(e){if(Object(o.K)(\"Query.limitToLast\",1,1,arguments.length),\"number\"!==typeof e||Math.floor(e)!==e||e<=0)throw new Error(\"Query.limitToLast: First argument must be a positive integer.\");if(this.queryParams_.hasLimit())throw new Error(\"Query.limitToLast: Limit was already set (by another call to limit, limitToFirst, or limitToLast).\");return new t(this.repo,this.path,this.queryParams_.limitToLast(e),this.orderByCalled_)},t.prototype.orderByChild=function(e){if(Object(o.K)(\"Query.orderByChild\",1,1,arguments.length),\"$key\"===e)throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');if(\"$priority\"===e)throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');if(\"$value\"===e)throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');ut(\"Query.orderByChild\",1,e,!1),this.validateNoPreviousOrderByCall_(\"Query.orderByChild\");var n=new U(e);if(n.isEmpty())throw new Error(\"Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.\");var r=new Kt(n),i=this.queryParams_.orderBy(r);return t.validateQueryEndpoints_(i),new t(this.repo,this.path,i,!0)},t.prototype.orderByKey=function(){Object(o.K)(\"Query.orderByKey\",0,0,arguments.length),this.validateNoPreviousOrderByCall_(\"Query.orderByKey\");var e=this.queryParams_.orderBy(bt);return t.validateQueryEndpoints_(e),new t(this.repo,this.path,e,!0)},t.prototype.orderByPriority=function(){Object(o.K)(\"Query.orderByPriority\",0,0,arguments.length),this.validateNoPreviousOrderByCall_(\"Query.orderByPriority\");var e=this.queryParams_.orderBy(kt);return t.validateQueryEndpoints_(e),new t(this.repo,this.path,e,!0)},t.prototype.orderByValue=function(){Object(o.K)(\"Query.orderByValue\",0,0,arguments.length),this.validateNoPreviousOrderByCall_(\"Query.orderByValue\");var e=this.queryParams_.orderBy(Ht);return t.validateQueryEndpoints_(e),new t(this.repo,this.path,e,!0)},t.prototype.startAt=function(e,n){void 0===e&&(e=null),Object(o.K)(\"Query.startAt\",0,2,arguments.length),nt(\"Query.startAt\",1,e,this.path,!0),st(\"Query.startAt\",2,n,!0);var r=this.queryParams_.startAt(e,n);if(t.validateLimit_(r),t.validateQueryEndpoints_(r),this.queryParams_.hasStart())throw new Error(\"Query.startAt: Starting point was already set (by another call to startAt or equalTo).\");return void 0===e&&(e=null,n=null),new t(this.repo,this.path,r,this.orderByCalled_)},t.prototype.endAt=function(e,n){void 0===e&&(e=null),Object(o.K)(\"Query.endAt\",0,2,arguments.length),nt(\"Query.endAt\",1,e,this.path,!0),st(\"Query.endAt\",2,n,!0);var r=this.queryParams_.endAt(e,n);if(t.validateLimit_(r),t.validateQueryEndpoints_(r),this.queryParams_.hasEnd())throw new Error(\"Query.endAt: Ending point was already set (by another call to endAt or equalTo).\");return new t(this.repo,this.path,r,this.orderByCalled_)},t.prototype.equalTo=function(t,e){if(Object(o.K)(\"Query.equalTo\",1,2,arguments.length),nt(\"Query.equalTo\",1,t,this.path,!1),st(\"Query.equalTo\",2,e,!0),this.queryParams_.hasStart())throw new Error(\"Query.equalTo: Starting point was already set (by another call to startAt or equalTo).\");if(this.queryParams_.hasEnd())throw new Error(\"Query.equalTo: Ending point was already set (by another call to endAt or equalTo).\");return this.startAt(t,e).endAt(t,e)},t.prototype.toString=function(){return Object(o.K)(\"Query.toString\",0,0,arguments.length),this.repo.toString()+this.path.toUrlEncodedString()},t.prototype.toJSON=function(){return Object(o.K)(\"Query.toJSON\",0,1,arguments.length),this.toString()},t.prototype.queryObject=function(){return this.queryParams_.getQueryObject()},t.prototype.queryIdentifier=function(){var t=this.queryObject(),e=P(t);return\"{}\"===e?\"default\":e},t.prototype.isEqual=function(e){if(Object(o.K)(\"Query.isEqual\",1,1,arguments.length),!(e instanceof t)){var n=\"Query.isEqual failed: First argument must be an instance of firebase.database.Query.\";throw new Error(n)}var r=this.repo===e.repo,i=this.path.equals(e.path),a=this.queryIdentifier()===e.queryIdentifier();return r&&i&&a},t.getCancelAndContextArgs_=function(t,e,n){var r={cancel:null,context:null};if(e&&n)r.cancel=e,Object(o.L)(t,3,r.cancel,!0),r.context=n,Object(o.M)(t,4,r.context,!0);else if(e)if(\"object\"===typeof e&&null!==e)r.context=e;else{if(\"function\"!==typeof e)throw new Error(Object(o.o)(t,3,!0)+\" must either be a cancel callback or a context object.\");r.cancel=e}return r},Object.defineProperty(t.prototype,\"ref\",{get:function(){return this.getRef()},enumerable:!1,configurable:!0}),t}(),$t=function(){function t(t){this.node_=t}return t.prototype.getImmediateChild=function(e){return new t(this.node_.getImmediateChild(e))},t.prototype.node=function(){return this.node_},t}(),Zt=function(){function t(t,e){this.syncTree_=t,this.path_=e}return t.prototype.getImmediateChild=function(e){var n=this.path_.child(e);return new t(this.syncTree_,n)},t.prototype.node=function(){return this.syncTree_.calcCompleteEventCache(this.path_)},t}(),te=function(t,e,n){return t&&\"object\"===typeof t?(Object(o.f)(\".sv\"in t,\"Unexpected leaf node or priority contents\"),\"string\"===typeof t[\".sv\"]?ee(t[\".sv\"],e,n):\"object\"===typeof t[\".sv\"]?ne(t[\".sv\"],e):void Object(o.f)(!1,\"Unexpected server value: \"+JSON.stringify(t,null,2))):t},ee=function(t,e,n){switch(t){case\"timestamp\":return n.timestamp;default:Object(o.f)(!1,\"Unexpected server value: \"+t)}},ne=function(t,e,n){t.hasOwnProperty(\"increment\")||Object(o.f)(!1,\"Unexpected server value: \"+JSON.stringify(t,null,2));var r=t.increment;\"number\"!==typeof r&&Object(o.f)(!1,\"Unexpected increment value: \"+r);var i=e.node();if(Object(o.f)(null!==i&&\"undefined\"!==typeof i,\"Expected ChildrenNode.EMPTY_NODE for nulls\"),!i.isLeafNode())return r;var a=i.getValue();return\"number\"!==typeof a?r:a+r},re=function(t,e,n,r){return oe(e,new Zt(n,t),r)},ie=function(t,e,n){return oe(t,new $t(e),n)};function oe(t,e,n){var r,i=t.getPriority().val(),o=te(i,e.getImmediateChild(\".priority\"),n);if(t.isLeafNode()){var a=t,s=te(a.getValue(),e,n);return s!==a.getValue()||o!==a.getPriority().val()?new St(s,Bt(o)):t}var u=t;return r=u,o!==u.getPriority().val()&&(r=r.updatePriority(new St(o))),u.forEachChild(kt,(function(t,i){var o=oe(i,e.getImmediateChild(t),n);o!==i&&(r=r.updateImmediateChild(t,o))})),r}var ae,se=function(){function t(){this.value=null,this.children=new Map}return t.prototype.find=function(t){if(null!=this.value)return this.value.getChild(t);if(!t.isEmpty()&&this.children.size>0){var e=t.getFront();return t=t.popFront(),this.children.has(e)?this.children.get(e).find(t):null}return null},t.prototype.remember=function(e,n){if(e.isEmpty())this.value=n,this.children.clear();else if(null!==this.value)this.value=this.value.updateChild(e,n);else{var r=e.getFront();this.children.has(r)||this.children.set(r,new t);var i=this.children.get(r);e=e.popFront(),i.remember(e,n)}},t.prototype.forget=function(t){if(t.isEmpty())return this.value=null,this.children.clear(),!0;if(null!==this.value){if(this.value.isLeafNode())return!1;var e=this.value;this.value=null;var n=this;return e.forEachChild(kt,(function(t,e){n.remember(new U(t),e)})),this.forget(t)}if(this.children.size>0){var r=t.getFront();if(t=t.popFront(),this.children.has(r))this.children.get(r).forget(t)&&this.children.delete(r);return 0===this.children.size}return!0},t.prototype.forEachTree=function(t,e){null!==this.value?e(t,this.value):this.forEachChild((function(n,r){var i=new U(t.toString()+\"/\"+n);r.forEachTree(i,e)}))},t.prototype.forEachChild=function(t){this.children.forEach((function(e,n){t(n,e)}))},t}();!function(t){t[t.OVERWRITE=0]=\"OVERWRITE\",t[t.MERGE=1]=\"MERGE\",t[t.ACK_USER_WRITE=2]=\"ACK_USER_WRITE\",t[t.LISTEN_COMPLETE=3]=\"LISTEN_COMPLETE\"}(ae||(ae={}));var ue,ce,le=function(){function t(t,e,n,r){this.fromUser=t,this.fromServer=e,this.queryId=n,this.tagged=r,Object(o.f)(!r||e,\"Tagged queries must be from server.\")}return t.User=new t(!0,!1,null,!1),t.Server=new t(!1,!0,null,!1),t.forServerTaggedQuery=function(e){return new t(!1,!0,e,!0)},t}(),he=function(){function t(t,e,n){this.path=t,this.affectedTree=e,this.revert=n,this.type=ae.ACK_USER_WRITE,this.source=le.User}return t.prototype.operationForChild=function(e){if(this.path.isEmpty()){if(null!=this.affectedTree.value)return Object(o.f)(this.affectedTree.children.isEmpty(),\"affectedTree should not have overlapping affected paths.\"),this;var n=this.affectedTree.subtree(new U(e));return new t(U.Empty,n,this.revert)}return Object(o.f)(this.path.getFront()===e,\"operationForChild called for unrelated child.\"),new t(this.path.popFront(),this.affectedTree,this.revert)},t}(),fe=function(){function t(t,e){void 0===e&&(ue||(ue=new Rt(N)),e=ue),this.value=t,this.children=e}return t.fromObject=function(e){var n=t.Empty;return j(e,(function(t,e){n=n.set(new U(t),e)})),n},t.prototype.isEmpty=function(){return null===this.value&&this.children.isEmpty()},t.prototype.findRootMostMatchingPathAndValue=function(t,e){if(null!=this.value&&e(this.value))return{path:U.Empty,value:this.value};if(t.isEmpty())return null;var n=t.getFront(),r=this.children.get(n);if(null!==r){var i=r.findRootMostMatchingPathAndValue(t.popFront(),e);return null!=i?{path:new U(n).child(i.path),value:i.value}:null}return null},t.prototype.findRootMostValueAndPath=function(t){return this.findRootMostMatchingPathAndValue(t,(function(){return!0}))},t.prototype.subtree=function(e){if(e.isEmpty())return this;var n=e.getFront(),r=this.children.get(n);return null!==r?r.subtree(e.popFront()):t.Empty},t.prototype.set=function(e,n){if(e.isEmpty())return new t(n,this.children);var r=e.getFront(),i=(this.children.get(r)||t.Empty).set(e.popFront(),n),o=this.children.insert(r,i);return new t(this.value,o)},t.prototype.remove=function(e){if(e.isEmpty())return this.children.isEmpty()?t.Empty:new t(null,this.children);var n=e.getFront(),r=this.children.get(n);if(r){var i=r.remove(e.popFront()),o=void 0;return o=i.isEmpty()?this.children.remove(n):this.children.insert(n,i),null===this.value&&o.isEmpty()?t.Empty:new t(this.value,o)}return this},t.prototype.get=function(t){if(t.isEmpty())return this.value;var e=t.getFront(),n=this.children.get(e);return n?n.get(t.popFront()):null},t.prototype.setTree=function(e,n){if(e.isEmpty())return n;var r=e.getFront(),i=(this.children.get(r)||t.Empty).setTree(e.popFront(),n),o=void 0;return o=i.isEmpty()?this.children.remove(r):this.children.insert(r,i),new t(this.value,o)},t.prototype.fold=function(t){return this.fold_(U.Empty,t)},t.prototype.fold_=function(t,e){var n={};return this.children.inorderTraversal((function(r,i){n[r]=i.fold_(t.child(r),e)})),e(t,this.value,n)},t.prototype.findOnPath=function(t,e){return this.findOnPath_(t,U.Empty,e)},t.prototype.findOnPath_=function(t,e,n){var r=!!this.value&&n(e,this.value);if(r)return r;if(t.isEmpty())return null;var i=t.getFront(),o=this.children.get(i);return o?o.findOnPath_(t.popFront(),e.child(i),n):null},t.prototype.foreachOnPath=function(t,e){return this.foreachOnPath_(t,U.Empty,e)},t.prototype.foreachOnPath_=function(e,n,r){if(e.isEmpty())return this;this.value&&r(n,this.value);var i=e.getFront(),o=this.children.get(i);return o?o.foreachOnPath_(e.popFront(),n.child(i),r):t.Empty},t.prototype.foreach=function(t){this.foreach_(U.Empty,t)},t.prototype.foreach_=function(t,e){this.children.inorderTraversal((function(n,r){r.foreach_(t.child(n),e)})),this.value&&e(t,this.value)},t.prototype.foreachChild=function(t){this.children.inorderTraversal((function(e,n){n.value&&t(e,n.value)}))},t.Empty=new t(null),t}(),pe=function(){function t(t,e){this.source=t,this.path=e,this.type=ae.LISTEN_COMPLETE}return t.prototype.operationForChild=function(e){return this.path.isEmpty()?new t(this.source,U.Empty):new t(this.source,this.path.popFront())},t}(),de=function(){function t(t,e,n){this.source=t,this.path=e,this.snap=n,this.type=ae.OVERWRITE}return t.prototype.operationForChild=function(e){return this.path.isEmpty()?new t(this.source,U.Empty,this.snap.getImmediateChild(e)):new t(this.source,this.path.popFront(),this.snap)},t}(),ve=function(){function t(t,e,n){this.source=t,this.path=e,this.children=n,this.type=ae.MERGE}return t.prototype.operationForChild=function(e){if(this.path.isEmpty()){var n=this.children.subtree(new U(e));return n.isEmpty()?null:n.value?new de(this.source,U.Empty,n.value):new t(this.source,U.Empty,n)}return Object(o.f)(this.path.getFront()===e,\"Can't get a merge for a child not on the path of the operation\"),new t(this.source,this.path.popFront(),this.children)},t.prototype.toString=function(){return\"Operation(\"+this.path+\": \"+this.source.toString()+\" merge: \"+this.children.toString()+\")\"},t}(),ye=function(){function t(t,e,n){this.node_=t,this.fullyInitialized_=e,this.filtered_=n}return t.prototype.isFullyInitialized=function(){return this.fullyInitialized_},t.prototype.isFiltered=function(){return this.filtered_},t.prototype.isCompleteForPath=function(t){if(t.isEmpty())return this.isFullyInitialized()&&!this.filtered_;var e=t.getFront();return this.isCompleteForChild(e)},t.prototype.isCompleteForChild=function(t){return this.isFullyInitialized()&&!this.filtered_||this.node_.hasChild(t)},t.prototype.getNode=function(){return this.node_},t}(),ge=function(){function t(t,e){this.eventCache_=t,this.serverCache_=e}return t.prototype.updateEventSnap=function(e,n,r){return new t(new ye(e,n,r),this.serverCache_)},t.prototype.updateServerSnap=function(e,n,r){return new t(this.eventCache_,new ye(e,n,r))},t.prototype.getEventCache=function(){return this.eventCache_},t.prototype.getCompleteEventSnap=function(){return this.eventCache_.isFullyInitialized()?this.eventCache_.getNode():null},t.prototype.getServerCache=function(){return this.serverCache_},t.prototype.getCompleteServerSnap=function(){return this.serverCache_.isFullyInitialized()?this.serverCache_.getNode():null},t.Empty=new t(new ye(Vt.EMPTY_NODE,!1,!1),new ye(Vt.EMPTY_NODE,!1,!1)),t}(),me=function(){function t(t,e,n,r,i){this.type=t,this.snapshotNode=e,this.childName=n,this.oldSnap=r,this.prevName=i}return t.valueChange=function(e){return new t(t.VALUE,e)},t.childAddedChange=function(e,n){return new t(t.CHILD_ADDED,n,e)},t.childRemovedChange=function(e,n){return new t(t.CHILD_REMOVED,n,e)},t.childChangedChange=function(e,n,r){return new t(t.CHILD_CHANGED,n,e,r)},t.childMovedChange=function(e,n){return new t(t.CHILD_MOVED,n,e)},t.CHILD_ADDED=\"child_added\",t.CHILD_REMOVED=\"child_removed\",t.CHILD_CHANGED=\"child_changed\",t.CHILD_MOVED=\"child_moved\",t.VALUE=\"value\",t}(),be=function(){function t(t){this.index_=t}return t.prototype.updateChild=function(t,e,n,r,i,a){Object(o.f)(t.isIndexed(this.index_),\"A node must be indexed if only a child is updated\");var s=t.getImmediateChild(e);return s.getChild(r).equals(n.getChild(r))&&s.isEmpty()===n.isEmpty()?t:(null!=a&&(n.isEmpty()?t.hasChild(e)?a.trackChildChange(me.childRemovedChange(e,s)):Object(o.f)(t.isLeafNode(),\"A child remove without an old child only makes sense on a leaf node\"):s.isEmpty()?a.trackChildChange(me.childAddedChange(e,n)):a.trackChildChange(me.childChangedChange(e,n,s))),t.isLeafNode()&&n.isEmpty()?t:t.updateImmediateChild(e,n).withIndex(this.index_))},t.prototype.updateFullNode=function(t,e,n){return null!=n&&(t.isLeafNode()||t.forEachChild(kt,(function(t,r){e.hasChild(t)||n.trackChildChange(me.childRemovedChange(t,r))})),e.isLeafNode()||e.forEachChild(kt,(function(e,r){if(t.hasChild(e)){var i=t.getImmediateChild(e);i.equals(r)||n.trackChildChange(me.childChangedChange(e,r,i))}else n.trackChildChange(me.childAddedChange(e,r))}))),e.withIndex(this.index_)},t.prototype.updatePriority=function(t,e){return t.isEmpty()?Vt.EMPTY_NODE:t.updatePriority(e)},t.prototype.filtersNodes=function(){return!1},t.prototype.getIndexedFilter=function(){return this},t.prototype.getIndex=function(){return this.index_},t}(),_e=function(){function t(){this.changeMap=new Map}return t.prototype.trackChildChange=function(t){var e=t.type,n=t.childName;Object(o.f)(e===me.CHILD_ADDED||e===me.CHILD_CHANGED||e===me.CHILD_REMOVED,\"Only child changes supported for tracking\"),Object(o.f)(\".priority\"!==n,\"Only non-priority child changes can be tracked.\");var r=this.changeMap.get(n);if(r){var i=r.type;if(e===me.CHILD_ADDED&&i===me.CHILD_REMOVED)this.changeMap.set(n,me.childChangedChange(n,t.snapshotNode,r.snapshotNode));else if(e===me.CHILD_REMOVED&&i===me.CHILD_ADDED)this.changeMap.delete(n);else if(e===me.CHILD_REMOVED&&i===me.CHILD_CHANGED)this.changeMap.set(n,me.childRemovedChange(n,r.oldSnap));else if(e===me.CHILD_CHANGED&&i===me.CHILD_ADDED)this.changeMap.set(n,me.childAddedChange(n,t.snapshotNode));else{if(e!==me.CHILD_CHANGED||i!==me.CHILD_CHANGED)throw Object(o.g)(\"Illegal combination of changes: \"+t+\" occurred after \"+r);this.changeMap.set(n,me.childChangedChange(n,t.snapshotNode,r.oldSnap))}}else this.changeMap.set(n,t)},t.prototype.getChanges=function(){return Array.from(this.changeMap.values())},t}(),we=new(function(){function t(){}return t.prototype.getCompleteChild=function(t){return null},t.prototype.getChildAfterChild=function(t,e,n){return null},t}()),Ee=function(){function t(t,e,n){void 0===n&&(n=null),this.writes_=t,this.viewCache_=e,this.optCompleteServerCache_=n}return t.prototype.getCompleteChild=function(t){var e=this.viewCache_.getEventCache();if(e.isCompleteForChild(t))return e.getNode().getImmediateChild(t);var n=null!=this.optCompleteServerCache_?new ye(this.optCompleteServerCache_,!0,!1):this.viewCache_.getServerCache();return this.writes_.calcCompleteChild(t,n)},t.prototype.getChildAfterChild=function(t,e,n){var r=null!=this.optCompleteServerCache_?this.optCompleteServerCache_:this.viewCache_.getCompleteServerSnap(),i=this.writes_.calcIndexedSlice(r,e,1,n,t);return 0===i.length?null:i[0]},t}(),Te=function(t,e){this.viewCache=t,this.changes=e},Ie=function(){function t(t){this.filter_=t}return t.prototype.assertIndexed=function(t){Object(o.f)(t.getEventCache().getNode().isIndexed(this.filter_.getIndex()),\"Event snap not indexed\"),Object(o.f)(t.getServerCache().getNode().isIndexed(this.filter_.getIndex()),\"Server snap not indexed\")},t.prototype.applyOperation=function(e,n,r,i){var a,s,u=new _e;if(n.type===ae.OVERWRITE){var c=n;c.source.fromUser?a=this.applyUserOverwrite_(e,c.path,c.snap,r,i,u):(Object(o.f)(c.source.fromServer,\"Unknown source.\"),s=c.source.tagged||e.getServerCache().isFiltered()&&!c.path.isEmpty(),a=this.applyServerOverwrite_(e,c.path,c.snap,r,i,s,u))}else if(n.type===ae.MERGE){var l=n;l.source.fromUser?a=this.applyUserMerge_(e,l.path,l.children,r,i,u):(Object(o.f)(l.source.fromServer,\"Unknown source.\"),s=l.source.tagged||e.getServerCache().isFiltered(),a=this.applyServerMerge_(e,l.path,l.children,r,i,s,u))}else if(n.type===ae.ACK_USER_WRITE){var h=n;a=h.revert?this.revertUserWrite_(e,h.path,r,i,u):this.ackUserWrite_(e,h.path,h.affectedTree,r,i,u)}else{if(n.type!==ae.LISTEN_COMPLETE)throw Object(o.g)(\"Unknown operation type: \"+n.type);a=this.listenComplete_(e,n.path,r,u)}var f=u.getChanges();return t.maybeAddValueEvent_(e,a,f),new Te(a,f)},t.maybeAddValueEvent_=function(t,e,n){var r=e.getEventCache();if(r.isFullyInitialized()){var i=r.getNode().isLeafNode()||r.getNode().isEmpty(),o=t.getCompleteEventSnap();(n.length>0||!t.getEventCache().isFullyInitialized()||i&&!r.getNode().equals(o)||!r.getNode().getPriority().equals(o.getPriority()))&&n.push(me.valueChange(e.getCompleteEventSnap()))}},t.prototype.generateEventCacheAfterServerEvent_=function(t,e,n,r,i){var a=t.getEventCache();if(null!=n.shadowingWrite(e))return t;var s=void 0,u=void 0;if(e.isEmpty())if(Object(o.f)(t.getServerCache().isFullyInitialized(),\"If change path is empty, we must have complete server data\"),t.getServerCache().isFiltered()){var c=t.getCompleteServerSnap(),l=c instanceof Vt?c:Vt.EMPTY_NODE,h=n.calcCompleteEventChildren(l);s=this.filter_.updateFullNode(t.getEventCache().getNode(),h,i)}else{var f=n.calcCompleteEventCache(t.getCompleteServerSnap());s=this.filter_.updateFullNode(t.getEventCache().getNode(),f,i)}else{var p=e.getFront();if(\".priority\"===p){Object(o.f)(1===e.getLength(),\"Can't have a priority with additional path components\");var d=a.getNode();u=t.getServerCache().getNode();var v=n.calcEventCacheAfterServerOverwrite(e,d,u);s=null!=v?this.filter_.updatePriority(d,v):a.getNode()}else{var y=e.popFront(),g=void 0;if(a.isCompleteForChild(p)){u=t.getServerCache().getNode();var m=n.calcEventCacheAfterServerOverwrite(e,a.getNode(),u);g=null!=m?a.getNode().getImmediateChild(p).updateChild(y,m):a.getNode().getImmediateChild(p)}else g=n.calcCompleteChild(p,t.getServerCache());s=null!=g?this.filter_.updateChild(a.getNode(),p,g,y,r,i):a.getNode()}}return t.updateEventSnap(s,a.isFullyInitialized()||e.isEmpty(),this.filter_.filtersNodes())},t.prototype.applyServerOverwrite_=function(t,e,n,r,i,o,a){var s,u=t.getServerCache(),c=o?this.filter_:this.filter_.getIndexedFilter();if(e.isEmpty())s=c.updateFullNode(u.getNode(),n,null);else if(c.filtersNodes()&&!u.isFiltered()){var l=u.getNode().updateChild(e,n);s=c.updateFullNode(u.getNode(),l,null)}else{var h=e.getFront();if(!u.isCompleteForPath(e)&&e.getLength()>1)return t;var f=e.popFront(),p=u.getNode().getImmediateChild(h).updateChild(f,n);s=\".priority\"===h?c.updatePriority(u.getNode(),p):c.updateChild(u.getNode(),h,p,f,we,null)}var d=t.updateServerSnap(s,u.isFullyInitialized()||e.isEmpty(),c.filtersNodes()),v=new Ee(r,d,i);return this.generateEventCacheAfterServerEvent_(d,e,r,v,a)},t.prototype.applyUserOverwrite_=function(t,e,n,r,i,o){var a,s,u=t.getEventCache(),c=new Ee(r,t,i);if(e.isEmpty())s=this.filter_.updateFullNode(t.getEventCache().getNode(),n,o),a=t.updateEventSnap(s,!0,this.filter_.filtersNodes());else{var l=e.getFront();if(\".priority\"===l)s=this.filter_.updatePriority(t.getEventCache().getNode(),n),a=t.updateEventSnap(s,u.isFullyInitialized(),u.isFiltered());else{var h=e.popFront(),f=u.getNode().getImmediateChild(l),p=void 0;if(h.isEmpty())p=n;else{var d=c.getCompleteChild(l);p=null!=d?\".priority\"===h.getBack()&&d.getChild(h.parent()).isEmpty()?d:d.updateChild(h,n):Vt.EMPTY_NODE}if(f.equals(p))a=t;else{var v=this.filter_.updateChild(u.getNode(),l,p,h,c,o);a=t.updateEventSnap(v,u.isFullyInitialized(),this.filter_.filtersNodes())}}}return a},t.cacheHasChild_=function(t,e){return t.getEventCache().isCompleteForChild(e)},t.prototype.applyUserMerge_=function(e,n,r,i,o,a){var s=this,u=e;return r.foreach((function(r,c){var l=n.child(r);t.cacheHasChild_(e,l.getFront())&&(u=s.applyUserOverwrite_(u,l,c,i,o,a))})),r.foreach((function(r,c){var l=n.child(r);t.cacheHasChild_(e,l.getFront())||(u=s.applyUserOverwrite_(u,l,c,i,o,a))})),u},t.prototype.applyMerge_=function(t,e){return e.foreach((function(e,n){t=t.updateChild(e,n)})),t},t.prototype.applyServerMerge_=function(t,e,n,r,i,o,a){var s=this;if(t.getServerCache().getNode().isEmpty()&&!t.getServerCache().isFullyInitialized())return t;var u,c=t;u=e.isEmpty()?n:fe.Empty.setTree(e,n);var l=t.getServerCache().getNode();return u.children.inorderTraversal((function(e,n){if(l.hasChild(e)){var u=t.getServerCache().getNode().getImmediateChild(e),h=s.applyMerge_(u,n);c=s.applyServerOverwrite_(c,new U(e),h,r,i,o,a)}})),u.children.inorderTraversal((function(e,n){var u=!t.getServerCache().isCompleteForChild(e)&&null==n.value;if(!l.hasChild(e)&&!u){var h=t.getServerCache().getNode().getImmediateChild(e),f=s.applyMerge_(h,n);c=s.applyServerOverwrite_(c,new U(e),f,r,i,o,a)}})),c},t.prototype.ackUserWrite_=function(t,e,n,r,i,o){if(null!=r.shadowingWrite(e))return t;var a=t.getServerCache().isFiltered(),s=t.getServerCache();if(null!=n.value){if(e.isEmpty()&&s.isFullyInitialized()||s.isCompleteForPath(e))return this.applyServerOverwrite_(t,e,s.getNode().getChild(e),r,i,a,o);if(e.isEmpty()){var u=fe.Empty;return s.getNode().forEachChild(bt,(function(t,e){u=u.set(new U(t),e)})),this.applyServerMerge_(t,e,u,r,i,a,o)}return t}var c=fe.Empty;return n.foreach((function(t,n){var r=e.child(t);s.isCompleteForPath(r)&&(c=c.set(t,s.getNode().getChild(r)))})),this.applyServerMerge_(t,e,c,r,i,a,o)},t.prototype.listenComplete_=function(t,e,n,r){var i=t.getServerCache(),o=t.updateServerSnap(i.getNode(),i.isFullyInitialized()||e.isEmpty(),i.isFiltered());return this.generateEventCacheAfterServerEvent_(o,e,n,we,r)},t.prototype.revertUserWrite_=function(t,e,n,r,i){var a;if(null!=n.shadowingWrite(e))return t;var s=new Ee(n,t,r),u=t.getEventCache().getNode(),c=void 0;if(e.isEmpty()||\".priority\"===e.getFront()){var l=void 0;if(t.getServerCache().isFullyInitialized())l=n.calcCompleteEventCache(t.getCompleteServerSnap());else{var h=t.getServerCache().getNode();Object(o.f)(h instanceof Vt,\"serverChildren would be complete if leaf node\"),l=n.calcCompleteEventChildren(h)}l=l,c=this.filter_.updateFullNode(u,l,i)}else{var f=e.getFront(),p=n.calcCompleteChild(f,t.getServerCache());null==p&&t.getServerCache().isCompleteForChild(f)&&(p=u.getImmediateChild(f)),(c=null!=p?this.filter_.updateChild(u,f,p,e.popFront(),s,i):t.getEventCache().getNode().hasChild(f)?this.filter_.updateChild(u,f,Vt.EMPTY_NODE,e.popFront(),s,i):u).isEmpty()&&t.getServerCache().isFullyInitialized()&&(a=n.calcCompleteEventCache(t.getCompleteServerSnap())).isLeafNode()&&(c=this.filter_.updateFullNode(c,a,i))}return a=t.getServerCache().isFullyInitialized()||null!=n.shadowingWrite(U.Empty),t.updateEventSnap(c,a,this.filter_.filtersNodes())},t}(),Se=function(){function t(t){this.query_=t,this.index_=this.query_.getQueryParams().getIndex()}return t.prototype.generateEventsForChanges=function(t,e,n){var r=this,i=[],o=[];return t.forEach((function(t){t.type===me.CHILD_CHANGED&&r.index_.indexedValueChanged(t.oldSnap,t.snapshotNode)&&o.push(me.childMovedChange(t.childName,t.snapshotNode))})),this.generateEventsForType_(i,me.CHILD_REMOVED,t,n,e),this.generateEventsForType_(i,me.CHILD_ADDED,t,n,e),this.generateEventsForType_(i,me.CHILD_MOVED,o,n,e),this.generateEventsForType_(i,me.CHILD_CHANGED,t,n,e),this.generateEventsForType_(i,me.VALUE,t,n,e),i},t.prototype.generateEventsForType_=function(t,e,n,r,i){var o=this,a=n.filter((function(t){return t.type===e}));a.sort(this.compareChanges_.bind(this)),a.forEach((function(e){var n=o.materializeSingleChange_(e,i);r.forEach((function(r){r.respondsTo(e.type)&&t.push(r.createEvent(n,o.query_))}))}))},t.prototype.materializeSingleChange_=function(t,e){return\"value\"===t.type||\"child_removed\"===t.type||(t.prevName=e.getPredecessorChildName(t.childName,t.snapshotNode,this.index_)),t},t.prototype.compareChanges_=function(t,e){if(null==t.childName||null==e.childName)throw Object(o.g)(\"Should only compare child_ events.\");var n=new yt(t.childName,t.snapshotNode),r=new yt(e.childName,e.snapshotNode);return this.index_.compare(n,r)},t}(),Oe=function(){function t(t,e){this.query_=t,this.eventRegistrations_=[];var n=this.query_.getQueryParams(),r=new be(n.getIndex()),i=n.getNodeFilter();this.processor_=new Ie(i);var o=e.getServerCache(),a=e.getEventCache(),s=r.updateFullNode(Vt.EMPTY_NODE,o.getNode(),null),u=i.updateFullNode(Vt.EMPTY_NODE,a.getNode(),null),c=new ye(s,o.isFullyInitialized(),r.filtersNodes()),l=new ye(u,a.isFullyInitialized(),i.filtersNodes());this.viewCache_=new ge(l,c),this.eventGenerator_=new Se(this.query_)}return t.prototype.getQuery=function(){return this.query_},t.prototype.getServerCache=function(){return this.viewCache_.getServerCache().getNode()},t.prototype.getCompleteServerCache=function(t){var e=this.viewCache_.getCompleteServerSnap();return e&&(this.query_.getQueryParams().loadsAllData()||!t.isEmpty()&&!e.getImmediateChild(t.getFront()).isEmpty())?e.getChild(t):null},t.prototype.isEmpty=function(){return 0===this.eventRegistrations_.length},t.prototype.addEventRegistration=function(t){this.eventRegistrations_.push(t)},t.prototype.removeEventRegistration=function(t,e){var n=[];if(e){Object(o.f)(null==t,\"A cancel should cancel all event registrations.\");var r=this.query_.path;this.eventRegistrations_.forEach((function(t){e=e;var i=t.createCancelEvent(e,r);i&&n.push(i)}))}if(t){for(var i=[],a=0;a<this.eventRegistrations_.length;++a){var s=this.eventRegistrations_[a];if(s.matches(t)){if(t.hasAnyCallback()){i=i.concat(this.eventRegistrations_.slice(a+1));break}}else i.push(s)}this.eventRegistrations_=i}else this.eventRegistrations_=[];return n},t.prototype.applyOperation=function(t,e,n){t.type===ae.MERGE&&null!==t.source.queryId&&(Object(o.f)(this.viewCache_.getCompleteServerSnap(),\"We should always have a full cache before handling merges\"),Object(o.f)(this.viewCache_.getCompleteEventSnap(),\"Missing event cache, even though we have a server cache\"));var r=this.viewCache_,i=this.processor_.applyOperation(r,t,e,n);return this.processor_.assertIndexed(i.viewCache),Object(o.f)(i.viewCache.getServerCache().isFullyInitialized()||!r.getServerCache().isFullyInitialized(),\"Once a server snap is complete, it should never go back\"),this.viewCache_=i.viewCache,this.generateEventsForChanges_(i.changes,i.viewCache.getEventCache().getNode(),null)},t.prototype.getInitialEvents=function(t){var e=this.viewCache_.getEventCache(),n=[];e.getNode().isLeafNode()||e.getNode().forEachChild(kt,(function(t,e){n.push(me.childAddedChange(t,e))}));return e.isFullyInitialized()&&n.push(me.valueChange(e.getNode())),this.generateEventsForChanges_(n,e.getNode(),t)},t.prototype.generateEventsForChanges_=function(t,e,n){var r=n?[n]:this.eventRegistrations_;return this.eventGenerator_.generateEventsForChanges(t,e,r)},t}(),Ce=function(){function t(){this.views=new Map}return Object.defineProperty(t,\"__referenceConstructor\",{get:function(){return Object(o.f)(ce,\"Reference.ts has not been loaded\"),ce},set:function(t){Object(o.f)(!ce,\"__referenceConstructor has already been defined\"),ce=t},enumerable:!1,configurable:!0}),t.prototype.isEmpty=function(){return 0===this.views.size},t.prototype.applyOperation=function(t,e,n){var r,a,s=t.source.queryId;if(null!==s){var u=this.views.get(s);return Object(o.f)(null!=u,\"SyncTree gave us an op for an invalid query.\"),u.applyOperation(t,e,n)}var c=[];try{for(var l=Object(i.h)(this.views.values()),h=l.next();!h.done;h=l.next()){u=h.value;c=c.concat(u.applyOperation(t,e,n))}}catch(f){r={error:f}}finally{try{h&&!h.done&&(a=l.return)&&a.call(l)}finally{if(r)throw r.error}}return c},t.prototype.addEventRegistration=function(t,e,n,r,i){var o=t.queryIdentifier(),a=this.views.get(o);if(!a){var s=n.calcCompleteEventCache(i?r:null),u=!1;s?u=!0:r instanceof Vt?(s=n.calcCompleteEventChildren(r),u=!1):(s=Vt.EMPTY_NODE,u=!1);var c=new ge(new ye(s,u,!1),new ye(r,i,!1));a=new Oe(t,c),this.views.set(o,a)}return a.addEventRegistration(e),a.getInitialEvents(e)},t.prototype.removeEventRegistration=function(e,n,r){var o,a,s=e.queryIdentifier(),u=[],c=[],l=this.hasCompleteView();if(\"default\"===s)try{for(var h=Object(i.h)(this.views.entries()),f=h.next();!f.done;f=h.next()){var p=Object(i.e)(f.value,2),d=p[0],v=p[1];c=c.concat(v.removeEventRegistration(n,r)),v.isEmpty()&&(this.views.delete(d),v.getQuery().getQueryParams().loadsAllData()||u.push(v.getQuery()))}}catch(y){o={error:y}}finally{try{f&&!f.done&&(a=h.return)&&a.call(h)}finally{if(o)throw o.error}}else(v=this.views.get(s))&&(c=c.concat(v.removeEventRegistration(n,r)),v.isEmpty()&&(this.views.delete(s),v.getQuery().getQueryParams().loadsAllData()||u.push(v.getQuery())));return l&&!this.hasCompleteView()&&u.push(new t.__referenceConstructor(e.repo,e.path)),{removed:u,events:c}},t.prototype.getQueryViews=function(){var t,e,n=[];try{for(var r=Object(i.h)(this.views.values()),o=r.next();!o.done;o=r.next()){var a=o.value;a.getQuery().getQueryParams().loadsAllData()||n.push(a)}}catch(s){t={error:s}}finally{try{o&&!o.done&&(e=r.return)&&e.call(r)}finally{if(t)throw t.error}}return n},t.prototype.getCompleteServerCache=function(t){var e,n,r=null;try{for(var o=Object(i.h)(this.views.values()),a=o.next();!a.done;a=o.next()){var s=a.value;r=r||s.getCompleteServerCache(t)}}catch(u){e={error:u}}finally{try{a&&!a.done&&(n=o.return)&&n.call(o)}finally{if(e)throw e.error}}return r},t.prototype.viewForQuery=function(t){if(t.getQueryParams().loadsAllData())return this.getCompleteView();var e=t.queryIdentifier();return this.views.get(e)},t.prototype.viewExistsForQuery=function(t){return null!=this.viewForQuery(t)},t.prototype.hasCompleteView=function(){return null!=this.getCompleteView()},t.prototype.getCompleteView=function(){var t,e;try{for(var n=Object(i.h)(this.views.values()),r=n.next();!r.done;r=n.next()){var o=r.value;if(o.getQuery().getQueryParams().loadsAllData())return o}}catch(a){t={error:a}}finally{try{r&&!r.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}return null},t}(),ke=function(){function t(t){this.writeTree_=t}return t.prototype.addWrite=function(e,n){if(e.isEmpty())return new t(new fe(n));var r=this.writeTree_.findRootMostValueAndPath(e);if(null!=r){var i=r.path,o=r.value,a=U.relativePath(i,e);return o=o.updateChild(a,n),new t(this.writeTree_.set(i,o))}var s=new fe(n);return new t(this.writeTree_.setTree(e,s))},t.prototype.addWrites=function(t,e){var n=this;return j(e,(function(e,r){n=n.addWrite(t.child(e),r)})),n},t.prototype.removeWrite=function(e){return e.isEmpty()?t.Empty:new t(this.writeTree_.setTree(e,fe.Empty))},t.prototype.hasCompleteWrite=function(t){return null!=this.getCompleteNode(t)},t.prototype.getCompleteNode=function(t){var e=this.writeTree_.findRootMostValueAndPath(t);return null!=e?this.writeTree_.get(e.path).getChild(U.relativePath(e.path,t)):null},t.prototype.getCompleteChildren=function(){var t=[],e=this.writeTree_.value;return null!=e?e.isLeafNode()||e.forEachChild(kt,(function(e,n){t.push(new yt(e,n))})):this.writeTree_.children.inorderTraversal((function(e,n){null!=n.value&&t.push(new yt(e,n.value))})),t},t.prototype.childCompoundWrite=function(e){if(e.isEmpty())return this;var n=this.getCompleteNode(e);return new t(null!=n?new fe(n):this.writeTree_.subtree(e))},t.prototype.isEmpty=function(){return this.writeTree_.isEmpty()},t.prototype.apply=function(t){return Ne(U.Empty,this.writeTree_,t)},t.Empty=new t(new fe(null)),t}();function Ne(t,e,n){if(null!=e.value)return n.updateChild(t,e.value);var r=null;return e.children.inorderTraversal((function(e,i){\".priority\"===e?(Object(o.f)(null!==i.value,\"Priority writes must always be leaf nodes\"),r=i.value):n=Ne(t.child(e),i,n)})),n.getChild(t).isEmpty()||null===r||(n=n.updateChild(t.child(\".priority\"),r)),n}var Ae=function(){function t(){this.visibleWrites_=ke.Empty,this.allWrites_=[],this.lastWriteId_=-1}return t.prototype.childWrites=function(t){return new Pe(t,this)},t.prototype.addOverwrite=function(t,e,n,r){Object(o.f)(n>this.lastWriteId_,\"Stacking an older write on top of newer ones\"),void 0===r&&(r=!0),this.allWrites_.push({path:t,snap:e,writeId:n,visible:r}),r&&(this.visibleWrites_=this.visibleWrites_.addWrite(t,e)),this.lastWriteId_=n},t.prototype.addMerge=function(t,e,n){Object(o.f)(n>this.lastWriteId_,\"Stacking an older merge on top of newer ones\"),this.allWrites_.push({path:t,children:e,writeId:n,visible:!0}),this.visibleWrites_=this.visibleWrites_.addWrites(t,e),this.lastWriteId_=n},t.prototype.getWrite=function(t){for(var e=0;e<this.allWrites_.length;e++){var n=this.allWrites_[e];if(n.writeId===t)return n}return null},t.prototype.removeWrite=function(t){var e=this,n=this.allWrites_.findIndex((function(e){return e.writeId===t}));Object(o.f)(n>=0,\"removeWrite called with nonexistent writeId.\");var r=this.allWrites_[n];this.allWrites_.splice(n,1);for(var i=r.visible,a=!1,s=this.allWrites_.length-1;i&&s>=0;){var u=this.allWrites_[s];u.visible&&(s>=n&&this.recordContainsPath_(u,r.path)?i=!1:r.path.contains(u.path)&&(a=!0)),s--}if(i){if(a)return this.resetTree_(),!0;r.snap?this.visibleWrites_=this.visibleWrites_.removeWrite(r.path):j(r.children,(function(t){e.visibleWrites_=e.visibleWrites_.removeWrite(r.path.child(t))}));return!0}return!1},t.prototype.getCompleteWriteData=function(t){return this.visibleWrites_.getCompleteNode(t)},t.prototype.calcCompleteEventCache=function(e,n,r,i){if(r||i){var o=this.visibleWrites_.childCompoundWrite(e);if(!i&&o.isEmpty())return n;if(i||null!=n||o.hasCompleteWrite(U.Empty)){var a=t.layerTree_(this.allWrites_,(function(t){return(t.visible||i)&&(!r||!~r.indexOf(t.writeId))&&(t.path.contains(e)||e.contains(t.path))}),e);c=n||Vt.EMPTY_NODE;return a.apply(c)}return null}var s=this.visibleWrites_.getCompleteNode(e);if(null!=s)return s;var u=this.visibleWrites_.childCompoundWrite(e);if(u.isEmpty())return n;if(null!=n||u.hasCompleteWrite(U.Empty)){var c=n||Vt.EMPTY_NODE;return u.apply(c)}return null},t.prototype.calcCompleteEventChildren=function(t,e){var n=Vt.EMPTY_NODE,r=this.visibleWrites_.getCompleteNode(t);if(r)return r.isLeafNode()||r.forEachChild(kt,(function(t,e){n=n.updateImmediateChild(t,e)})),n;if(e){var i=this.visibleWrites_.childCompoundWrite(t);return e.forEachChild(kt,(function(t,e){var r=i.childCompoundWrite(new U(t)).apply(e);n=n.updateImmediateChild(t,r)})),i.getCompleteChildren().forEach((function(t){n=n.updateImmediateChild(t.name,t.node)})),n}return this.visibleWrites_.childCompoundWrite(t).getCompleteChildren().forEach((function(t){n=n.updateImmediateChild(t.name,t.node)})),n},t.prototype.calcEventCacheAfterServerOverwrite=function(t,e,n,r){Object(o.f)(n||r,\"Either existingEventSnap or existingServerSnap must exist\");var i=t.child(e);if(this.visibleWrites_.hasCompleteWrite(i))return null;var a=this.visibleWrites_.childCompoundWrite(i);return a.isEmpty()?r.getChild(e):a.apply(r.getChild(e))},t.prototype.calcCompleteChild=function(t,e,n){var r=t.child(e),i=this.visibleWrites_.getCompleteNode(r);return null!=i?i:n.isCompleteForChild(e)?this.visibleWrites_.childCompoundWrite(r).apply(n.getNode().getImmediateChild(e)):null},t.prototype.shadowingWrite=function(t){return this.visibleWrites_.getCompleteNode(t)},t.prototype.calcIndexedSlice=function(t,e,n,r,i,o){var a,s=this.visibleWrites_.childCompoundWrite(t),u=s.getCompleteNode(U.Empty);if(null!=u)a=u;else{if(null==e)return[];a=s.apply(e)}if((a=a.withIndex(o)).isEmpty()||a.isLeafNode())return[];for(var c=[],l=o.getCompare(),h=i?a.getReverseIteratorFrom(n,o):a.getIteratorFrom(n,o),f=h.getNext();f&&c.length<r;)0!==l(f,n)&&c.push(f),f=h.getNext();return c},t.prototype.recordContainsPath_=function(t,e){if(t.snap)return t.path.contains(e);for(var n in t.children)if(t.children.hasOwnProperty(n)&&t.path.child(n).contains(e))return!0;return!1},t.prototype.resetTree_=function(){this.visibleWrites_=t.layerTree_(this.allWrites_,t.DefaultFilter_,U.Empty),this.allWrites_.length>0?this.lastWriteId_=this.allWrites_[this.allWrites_.length-1].writeId:this.lastWriteId_=-1},t.DefaultFilter_=function(t){return t.visible},t.layerTree_=function(t,e,n){for(var r=ke.Empty,i=0;i<t.length;++i){var a=t[i];if(e(a)){var s=a.path,u=void 0;if(a.snap)n.contains(s)?(u=U.relativePath(n,s),r=r.addWrite(u,a.snap)):s.contains(n)&&(u=U.relativePath(s,n),r=r.addWrite(U.Empty,a.snap.getChild(u)));else{if(!a.children)throw Object(o.g)(\"WriteRecord should have .snap or .children\");if(n.contains(s))u=U.relativePath(n,s),r=r.addWrites(u,a.children);else if(s.contains(n))if((u=U.relativePath(s,n)).isEmpty())r=r.addWrites(U.Empty,a.children);else{var c=Object(o.G)(a.children,u.getFront());if(c){var l=c.getChild(u.popFront());r=r.addWrite(U.Empty,l)}}}}}return r},t}(),Pe=function(){function t(t,e){this.treePath_=t,this.writeTree_=e}return t.prototype.calcCompleteEventCache=function(t,e,n){return this.writeTree_.calcCompleteEventCache(this.treePath_,t,e,n)},t.prototype.calcCompleteEventChildren=function(t){return this.writeTree_.calcCompleteEventChildren(this.treePath_,t)},t.prototype.calcEventCacheAfterServerOverwrite=function(t,e,n){return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_,t,e,n)},t.prototype.shadowingWrite=function(t){return this.writeTree_.shadowingWrite(this.treePath_.child(t))},t.prototype.calcIndexedSlice=function(t,e,n,r,i){return this.writeTree_.calcIndexedSlice(this.treePath_,t,e,n,r,i)},t.prototype.calcCompleteChild=function(t,e){return this.writeTree_.calcCompleteChild(this.treePath_,t,e)},t.prototype.child=function(e){return new t(this.treePath_.child(e),this.writeTree_)},t}(),Re=function(){function t(t){this.listenProvider_=t,this.syncPointTree_=fe.Empty,this.pendingWriteTree_=new Ae,this.tagToQueryMap=new Map,this.queryToTagMap=new Map}return t.prototype.applyUserOverwrite=function(t,e,n,r){return this.pendingWriteTree_.addOverwrite(t,e,n,r),r?this.applyOperationToSyncPoints_(new de(le.User,t,e)):[]},t.prototype.applyUserMerge=function(t,e,n){this.pendingWriteTree_.addMerge(t,e,n);var r=fe.fromObject(e);return this.applyOperationToSyncPoints_(new ve(le.User,t,r))},t.prototype.ackUserWrite=function(t,e){void 0===e&&(e=!1);var n=this.pendingWriteTree_.getWrite(t);if(this.pendingWriteTree_.removeWrite(t)){var r=fe.Empty;return null!=n.snap?r=r.set(U.Empty,!0):j(n.children,(function(t,e){r=r.set(new U(t),e)})),this.applyOperationToSyncPoints_(new he(n.path,r,e))}return[]},t.prototype.applyServerOverwrite=function(t,e){return this.applyOperationToSyncPoints_(new de(le.Server,t,e))},t.prototype.applyServerMerge=function(t,e){var n=fe.fromObject(e);return this.applyOperationToSyncPoints_(new ve(le.Server,t,n))},t.prototype.applyListenComplete=function(t){return this.applyOperationToSyncPoints_(new pe(le.Server,t))},t.prototype.applyTaggedQueryOverwrite=function(e,n,r){var i=this.queryKeyForTag_(r);if(null!=i){var o=t.parseQueryKey_(i),a=o.path,s=o.queryId,u=U.relativePath(a,e),c=new de(le.forServerTaggedQuery(s),u,n);return this.applyTaggedOperation_(a,c)}return[]},t.prototype.applyTaggedQueryMerge=function(e,n,r){var i=this.queryKeyForTag_(r);if(i){var o=t.parseQueryKey_(i),a=o.path,s=o.queryId,u=U.relativePath(a,e),c=fe.fromObject(n),l=new ve(le.forServerTaggedQuery(s),u,c);return this.applyTaggedOperation_(a,l)}return[]},t.prototype.applyTaggedListenComplete=function(e,n){var r=this.queryKeyForTag_(n);if(r){var i=t.parseQueryKey_(r),o=i.path,a=i.queryId,s=U.relativePath(o,e),u=new pe(le.forServerTaggedQuery(a),s);return this.applyTaggedOperation_(o,u)}return[]},t.prototype.addEventRegistration=function(e,n){var r=e.path,i=null,a=!1;this.syncPointTree_.foreachOnPath(r,(function(t,e){var n=U.relativePath(t,r);i=i||e.getCompleteServerCache(n),a=a||e.hasCompleteView()}));var s,u=this.syncPointTree_.get(r);(u?(a=a||u.hasCompleteView(),i=i||u.getCompleteServerCache(U.Empty)):(u=new Ce,this.syncPointTree_=this.syncPointTree_.set(r,u)),null!=i)?s=!0:(s=!1,i=Vt.EMPTY_NODE,this.syncPointTree_.subtree(r).foreachChild((function(t,e){var n=e.getCompleteServerCache(U.Empty);n&&(i=i.updateImmediateChild(t,n))})));var c=u.viewExistsForQuery(e);if(!c&&!e.getQueryParams().loadsAllData()){var l=t.makeQueryKey_(e);Object(o.f)(!this.queryToTagMap.has(l),\"View does not exist, but we have a tag\");var h=t.getNextQueryTag_();this.queryToTagMap.set(l,h),this.tagToQueryMap.set(h,l)}var f=this.pendingWriteTree_.childWrites(r),p=u.addEventRegistration(e,n,f,i,s);if(!c&&!a){var d=u.viewForQuery(e);p=p.concat(this.setupListener_(e,d))}return p},t.prototype.removeEventRegistration=function(e,n,r){var i=this,o=e.path,a=this.syncPointTree_.get(o),s=[];if(a&&(\"default\"===e.queryIdentifier()||a.viewExistsForQuery(e))){var u=a.removeEventRegistration(e,n,r);a.isEmpty()&&(this.syncPointTree_=this.syncPointTree_.remove(o));var c=u.removed;s=u.events;var l=-1!==c.findIndex((function(t){return t.getQueryParams().loadsAllData()})),h=this.syncPointTree_.findOnPath(o,(function(t,e){return e.hasCompleteView()}));if(l&&!h){var f=this.syncPointTree_.subtree(o);if(!f.isEmpty())for(var p=this.collectDistinctViewsForSubTree_(f),d=0;d<p.length;++d){var v=p[d],y=v.getQuery(),g=this.createListenerForView_(v);this.listenProvider_.startListening(t.queryForListening_(y),this.tagForQuery_(y),g.hashFn,g.onComplete)}}if(!h&&c.length>0&&!r)if(l){this.listenProvider_.stopListening(t.queryForListening_(e),null)}else c.forEach((function(e){var n=i.queryToTagMap.get(t.makeQueryKey_(e));i.listenProvider_.stopListening(t.queryForListening_(e),n)}));this.removeTags_(c)}return s},t.prototype.calcCompleteEventCache=function(t,e){var n=this.pendingWriteTree_,r=this.syncPointTree_.findOnPath(t,(function(e,n){var r=U.relativePath(e,t),i=n.getCompleteServerCache(r);if(i)return i}));return n.calcCompleteEventCache(t,r,e,!0)},t.prototype.collectDistinctViewsForSubTree_=function(t){return t.fold((function(t,e,n){if(e&&e.hasCompleteView())return[e.getCompleteView()];var r=[];return e&&(r=e.getQueryViews()),j(n,(function(t,e){r=r.concat(e)})),r}))},t.prototype.removeTags_=function(e){for(var n=0;n<e.length;++n){var r=e[n];if(!r.getQueryParams().loadsAllData()){var i=t.makeQueryKey_(r),o=this.queryToTagMap.get(i);this.queryToTagMap.delete(i),this.tagToQueryMap.delete(o)}}},t.queryForListening_=function(t){return t.getQueryParams().loadsAllData()&&!t.getQueryParams().isDefault()?t.getRef():t},t.prototype.setupListener_=function(e,n){var r=e.path,i=this.tagForQuery_(e),a=this.createListenerForView_(n),s=this.listenProvider_.startListening(t.queryForListening_(e),i,a.hashFn,a.onComplete),u=this.syncPointTree_.subtree(r);if(i)Object(o.f)(!u.value.hasCompleteView(),\"If we're adding a query, it shouldn't be shadowed\");else for(var c=u.fold((function(t,e,n){if(!t.isEmpty()&&e&&e.hasCompleteView())return[e.getCompleteView().getQuery()];var r=[];return e&&(r=r.concat(e.getQueryViews().map((function(t){return t.getQuery()})))),j(n,(function(t,e){r=r.concat(e)})),r})),l=0;l<c.length;++l){var h=c[l];this.listenProvider_.stopListening(t.queryForListening_(h),this.tagForQuery_(h))}return s},t.prototype.createListenerForView_=function(t){var e=this,n=t.getQuery(),r=this.tagForQuery_(n);return{hashFn:function(){return(t.getServerCache()||Vt.EMPTY_NODE).hash()},onComplete:function(t){if(\"ok\"===t)return r?e.applyTaggedListenComplete(n.path,r):e.applyListenComplete(n.path);var i=function(t,e){var n=\"Unknown Error\";\"too_big\"===t?n=\"The data requested exceeds the maximum size that can be accessed with a single request.\":\"permission_denied\"===t?n=\"Client doesn't have permission to access the desired data.\":\"unavailable\"===t&&(n=\"The service is unavailable\");var r=new Error(t+\" at \"+e.path.toString()+\": \"+n);return r.code=t.toUpperCase(),r}(t,n);return e.removeEventRegistration(n,null,i)}}},t.makeQueryKey_=function(t){return t.path.toString()+\"$\"+t.queryIdentifier()},t.parseQueryKey_=function(t){var e=t.indexOf(\"$\");return Object(o.f)(-1!==e&&e<t.length-1,\"Bad queryKey.\"),{queryId:t.substr(e+1),path:new U(t.substr(0,e))}},t.prototype.queryKeyForTag_=function(t){return this.tagToQueryMap.get(t)},t.prototype.tagForQuery_=function(e){var n=t.makeQueryKey_(e);return this.queryToTagMap.get(n)},t.getNextQueryTag_=function(){return t.nextQueryTag_++},t.prototype.applyTaggedOperation_=function(t,e){var n=this.syncPointTree_.get(t);Object(o.f)(n,\"Missing sync point for query tag that we're tracking\");var r=this.pendingWriteTree_.childWrites(t);return n.applyOperation(e,r,null)},t.prototype.applyOperationToSyncPoints_=function(t){return this.applyOperationHelper_(t,this.syncPointTree_,null,this.pendingWriteTree_.childWrites(U.Empty))},t.prototype.applyOperationHelper_=function(t,e,n,r){if(t.path.isEmpty())return this.applyOperationDescendantsHelper_(t,e,n,r);var i=e.get(U.Empty);null==n&&null!=i&&(n=i.getCompleteServerCache(U.Empty));var o=[],a=t.path.getFront(),s=t.operationForChild(a),u=e.children.get(a);if(u&&s){var c=n?n.getImmediateChild(a):null,l=r.child(a);o=o.concat(this.applyOperationHelper_(s,u,c,l))}return i&&(o=o.concat(i.applyOperation(t,r,n))),o},t.prototype.applyOperationDescendantsHelper_=function(t,e,n,r){var i=this,o=e.get(U.Empty);null==n&&null!=o&&(n=o.getCompleteServerCache(U.Empty));var a=[];return e.children.inorderTraversal((function(e,o){var s=n?n.getImmediateChild(e):null,u=r.child(e),c=t.operationForChild(e);c&&(a=a.concat(i.applyOperationDescendantsHelper_(c,o,s,u)))})),o&&(a=a.concat(o.applyOperation(t,r,n))),a},t.nextQueryTag_=1,t}(),je=function(){function t(){this.rootNode_=Vt.EMPTY_NODE}return t.prototype.getNode=function(t){return this.rootNode_.getChild(t)},t.prototype.updateSnapshot=function(t,e){this.rootNode_=this.rootNode_.updateChild(t,e)},t}(),xe=function(){function t(){this.counters_={}}return t.prototype.incrementCounter=function(t,e){void 0===e&&(e=1),Object(o.k)(this.counters_,t)||(this.counters_[t]=0),this.counters_[t]+=e},t.prototype.get=function(){return Object(o.m)(this.counters_)},t}(),De=function(){function t(){}return t.getCollection=function(t){var e=t.toString();return this.collections_[e]||(this.collections_[e]=new xe),this.collections_[e]},t.getOrCreateReporter=function(t,e){var n=t.toString();return this.reporters_[n]||(this.reporters_[n]=e()),this.reporters_[n]},t.collections_={},t.reporters_={},t}(),Le=function(){function t(t){this.collection_=t,this.last_=null}return t.prototype.get=function(){var t=this.collection_.get(),e=Object(i.a)({},t);return this.last_&&j(this.last_,(function(t,n){e[t]=e[t]-n})),this.last_=t,e},t}(),Me=function(){function t(t,e){this.server_=e,this.statsToReport_={},this.statsListener_=new Le(t);var n=1e4+2e4*Math.random();F(this.reportStats_.bind(this),Math.floor(n))}return t.prototype.includeStat=function(t){this.statsToReport_[t]=!0},t.prototype.reportStats_=function(){var t=this,e=this.statsListener_.get(),n={},r=!1;j(e,(function(e,i){i>0&&Object(o.k)(t.statsToReport_,e)&&(n[e]=i,r=!0)})),r&&this.server_.reportStats(n),F(this.reportStats_.bind(this),Math.floor(2*Math.random()*3e5))},t}(),Fe=function(){function t(){this.eventLists_=[],this.recursionDepth_=0}return t.prototype.queueEvents=function(t){for(var e=null,n=0;n<t.length;n++){var r=t[n],i=r.getPath();null===e||i.equals(e.getPath())||(this.eventLists_.push(e),e=null),null===e&&(e=new Ue(i)),e.add(r)}e&&this.eventLists_.push(e)},t.prototype.raiseEventsAtPath=function(t,e){this.queueEvents(e),this.raiseQueuedEventsMatchingPredicate_((function(e){return e.equals(t)}))},t.prototype.raiseEventsForChangedPath=function(t,e){this.queueEvents(e),this.raiseQueuedEventsMatchingPredicate_((function(e){return e.contains(t)||t.contains(e)}))},t.prototype.raiseQueuedEventsMatchingPredicate_=function(t){this.recursionDepth_++;for(var e=!0,n=0;n<this.eventLists_.length;n++){var r=this.eventLists_[n];if(r)t(r.getPath())?(this.eventLists_[n].raise(),this.eventLists_[n]=null):e=!1}e&&(this.eventLists_=[]),this.recursionDepth_--},t}(),Ue=function(){function t(t){this.path_=t,this.events_=[]}return t.prototype.add=function(t){this.events_.push(t)},t.prototype.raise=function(){for(var t=0;t<this.events_.length;t++){var e=this.events_[t];if(null!==e){this.events_[t]=null;var n=e.getEventRunner();g&&_(\"event: \"+e.toString()),M(n)}}},t.prototype.getPath=function(){return this.path_},t}(),Ve=function(){function t(t){this.allowedEvents_=t,this.listeners_={},Object(o.f)(Array.isArray(t)&&t.length>0,\"Requires a non-empty array\")}return t.prototype.trigger=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(Array.isArray(this.listeners_[t]))for(var r=Object(i.f)(this.listeners_[t]),o=0;o<r.length;o++)r[o].callback.apply(r[o].context,e)},t.prototype.on=function(t,e,n){this.validateEventType_(t),this.listeners_[t]=this.listeners_[t]||[],this.listeners_[t].push({callback:e,context:n});var r=this.getInitialEvent(t);r&&e.apply(n,r)},t.prototype.off=function(t,e,n){this.validateEventType_(t);for(var r=this.listeners_[t]||[],i=0;i<r.length;i++)if(r[i].callback===e&&(!n||n===r[i].context))return void r.splice(i,1)},t.prototype.validateEventType_=function(t){Object(o.f)(this.allowedEvents_.find((function(e){return e===t})),\"Unknown event: \"+t)},t}(),qe=function(t){function e(){var e,n,r=t.call(this,[\"visible\"])||this;return\"undefined\"!==typeof document&&\"undefined\"!==typeof document.addEventListener&&(\"undefined\"!==typeof document.hidden?(n=\"visibilitychange\",e=\"hidden\"):\"undefined\"!==typeof document.mozHidden?(n=\"mozvisibilitychange\",e=\"mozHidden\"):\"undefined\"!==typeof document.msHidden?(n=\"msvisibilitychange\",e=\"msHidden\"):\"undefined\"!==typeof document.webkitHidden&&(n=\"webkitvisibilitychange\",e=\"webkitHidden\")),r.visible_=!0,n&&document.addEventListener(n,(function(){var t=!document[e];t!==r.visible_&&(r.visible_=t,r.trigger(\"visible\",t))}),!1),r}return Object(i.c)(e,t),e.getInstance=function(){return new e},e.prototype.getInitialEvent=function(t){return Object(o.f)(\"visible\"===t,\"Unknown event type: \"+t),[this.visible_]},e}(Ve),Be=function(t){function e(){var e=t.call(this,[\"online\"])||this;return e.online_=!0,\"undefined\"===typeof window||\"undefined\"===typeof window.addEventListener||Object(o.x)()||(window.addEventListener(\"online\",(function(){e.online_||(e.online_=!0,e.trigger(\"online\",!0))}),!1),window.addEventListener(\"offline\",(function(){e.online_&&(e.online_=!1,e.trigger(\"online\",!1))}),!1)),e}return Object(i.c)(e,t),e.getInstance=function(){return new e},e.prototype.getInitialEvent=function(t){return Object(o.f)(\"online\"===t,\"Unknown event type: \"+t),[this.online_]},e.prototype.currentlyOnline=function(){return this.online_},e}(Ve),ze=function(){function t(t){this.onMessage_=t,this.pendingResponses=[],this.currentResponseNum=0,this.closeAfterResponse=-1,this.onClose=null}return t.prototype.closeAfter=function(t,e){this.closeAfterResponse=t,this.onClose=e,this.closeAfterResponse<this.currentResponseNum&&(this.onClose(),this.onClose=null)},t.prototype.handleResponse=function(t,e){var n=this;this.pendingResponses[t]=e;for(var r=function(){var t=i.pendingResponses[i.currentResponseNum];delete i.pendingResponses[i.currentResponseNum];for(var e=function(e){t[e]&&M((function(){n.onMessage_(t[e])}))},r=0;r<t.length;++r)e(r);if(i.currentResponseNum===i.closeAfterResponse)return i.onClose&&(i.onClose(),i.onClose=null),\"break\";i.currentResponseNum++},i=this;this.pendingResponses[this.currentResponseNum];){if(\"break\"===r())break}},t}(),He=\"start\",Ke=\"close\",We=function(){function t(t,e,n,r,i){this.connId=t,this.repoInfo=e,this.applicationId=n,this.transportSessionId=r,this.lastSessionId=i,this.bytesSent=0,this.bytesReceived=0,this.everConnected_=!1,this.log_=w(t),this.stats_=De.getCollection(e),this.urlFn=function(t){return e.connectionURL(H,t)}}return t.prototype.open=function(t,e){var n=this;this.curSegmentNum=0,this.onDisconnect_=e,this.myPacketOrderer=new ze(t),this.isClosed_=!1,this.connectTimeoutTimer_=setTimeout((function(){n.log_(\"Timed out trying to connect.\"),n.onClosed_(),n.connectTimeoutTimer_=null}),Math.floor(3e4)),function(t){if(Object(o.z)()||\"complete\"===document.readyState)t();else{var e=!1,n=function n(){document.body?e||(e=!0,t()):setTimeout(n,Math.floor(10))};document.addEventListener?(document.addEventListener(\"DOMContentLoaded\",n,!1),window.addEventListener(\"load\",n,!1)):document.attachEvent&&(document.attachEvent(\"onreadystatechange\",(function(){\"complete\"===document.readyState&&n()})),window.attachEvent(\"onload\",n))}}((function(){if(!n.isClosed_){n.scriptTagHolder=new Ge((function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var r=Object(i.e)(t,5),o=r[0],a=r[1],s=r[2];r[3],r[4];if(n.incrementIncomingBytes_(t),n.scriptTagHolder)if(n.connectTimeoutTimer_&&(clearTimeout(n.connectTimeoutTimer_),n.connectTimeoutTimer_=null),n.everConnected_=!0,o===He)n.id=a,n.password=s;else{if(o!==Ke)throw new Error(\"Unrecognized command received: \"+o);a?(n.scriptTagHolder.sendNewPolls=!1,n.myPacketOrderer.closeAfter(a,(function(){n.onClosed_()}))):n.onClosed_()}}),(function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var r=Object(i.e)(t,2),o=r[0],a=r[1];n.incrementIncomingBytes_(t),n.myPacketOrderer.handleResponse(o,a)}),(function(){n.onClosed_()}),n.urlFn);var t={start:\"t\"};t.ser=Math.floor(1e8*Math.random()),n.scriptTagHolder.uniqueCallbackIdentifier&&(t.cb=n.scriptTagHolder.uniqueCallbackIdentifier),t.v=q,n.transportSessionId&&(t.s=n.transportSessionId),n.lastSessionId&&(t.ls=n.lastSessionId),n.applicationId&&(t.p=n.applicationId),\"undefined\"!==typeof location&&location.hostname&&B.test(location.hostname)&&(t.r=\"f\");var e=n.urlFn(t);n.log_(\"Connecting via long-poll to \"+e),n.scriptTagHolder.addTag(e,(function(){}))}}))},t.prototype.start=function(){this.scriptTagHolder.startLongPoll(this.id,this.password),this.addDisconnectPingFrame(this.id,this.password)},t.forceAllow=function(){t.forceAllow_=!0},t.forceDisallow=function(){t.forceDisallow_=!0},t.isAvailable=function(){return!Object(o.z)()&&(!!t.forceAllow_||!t.forceDisallow_&&\"undefined\"!==typeof document&&null!=document.createElement&&!(\"object\"===typeof window&&window.chrome&&window.chrome.extension&&!/^chrome/.test(window.location.href))&&!(\"object\"===typeof Windows&&\"object\"===typeof Windows.UI))},t.prototype.markConnectionHealthy=function(){},t.prototype.shutdown_=function(){this.isClosed_=!0,this.scriptTagHolder&&(this.scriptTagHolder.close(),this.scriptTagHolder=null),this.myDisconnFrame&&(document.body.removeChild(this.myDisconnFrame),this.myDisconnFrame=null),this.connectTimeoutTimer_&&(clearTimeout(this.connectTimeoutTimer_),this.connectTimeoutTimer_=null)},t.prototype.onClosed_=function(){this.isClosed_||(this.log_(\"Longpoll is closing itself\"),this.shutdown_(),this.onDisconnect_&&(this.onDisconnect_(this.everConnected_),this.onDisconnect_=null))},t.prototype.close=function(){this.isClosed_||(this.log_(\"Longpoll is being closed.\"),this.shutdown_())},t.prototype.send=function(t){var e=Object(o.J)(t);this.bytesSent+=e.length,this.stats_.incrementCounter(\"bytes_sent\",e.length);for(var n=Object(o.i)(e),r=R(n,1840),i=0;i<r.length;i++)this.scriptTagHolder.enqueueSegment(this.curSegmentNum,r.length,r[i]),this.curSegmentNum++},t.prototype.addDisconnectPingFrame=function(t,e){if(!Object(o.z)()){this.myDisconnFrame=document.createElement(\"iframe\");var n={dframe:\"t\"};n.id=t,n.pw=e,this.myDisconnFrame.src=this.urlFn(n),this.myDisconnFrame.style.display=\"none\",document.body.appendChild(this.myDisconnFrame)}},t.prototype.incrementIncomingBytes_=function(t){var e=Object(o.J)(t).length;this.bytesReceived+=e,this.stats_.incrementCounter(\"bytes_received\",e)},t}(),Ge=function(){function t(e,n,r,i){if(this.onDisconnect=r,this.urlFn=i,this.outstandingRequests=new Set,this.pendingSegs=[],this.currentSerial=Math.floor(1e8*Math.random()),this.sendNewPolls=!0,Object(o.z)())this.commandCB=e,this.onMessageCB=n;else{this.uniqueCallbackIdentifier=d(),window[\"pLPCommand\"+this.uniqueCallbackIdentifier]=e,window[\"pRTLPCB\"+this.uniqueCallbackIdentifier]=n,this.myIFrame=t.createIFrame_();var a=\"\";if(this.myIFrame.src&&\"javascript:\"===this.myIFrame.src.substr(0,\"javascript:\".length))a='<script>document.domain=\"'+document.domain+'\";<\\/script>';var s=\"<html><body>\"+a+\"</body></html>\";try{this.myIFrame.doc.open(),this.myIFrame.doc.write(s),this.myIFrame.doc.close()}catch(u){_(\"frame writing exception\"),u.stack&&_(u.stack),_(u)}}}return t.createIFrame_=function(){var t=document.createElement(\"iframe\");if(t.style.display=\"none\",!document.body)throw\"Document body has not initialized. Wait to initialize Firebase until after the document is ready.\";document.body.appendChild(t);try{t.contentWindow.document||_(\"No IE domain setting required\")}catch(n){var e=document.domain;t.src=\"javascript:void((function(){document.open();document.domain='\"+e+\"';document.close();})())\"}return t.contentDocument?t.doc=t.contentDocument:t.contentWindow?t.doc=t.contentWindow.document:t.document&&(t.doc=t.document),t},t.prototype.close=function(){var t=this;this.alive=!1,this.myIFrame&&(this.myIFrame.doc.body.innerHTML=\"\",setTimeout((function(){null!==t.myIFrame&&(document.body.removeChild(t.myIFrame),t.myIFrame=null)}),Math.floor(0)));var e=this.onDisconnect;e&&(this.onDisconnect=null,e())},t.prototype.startLongPoll=function(t,e){for(this.myID=t,this.myPW=e,this.alive=!0;this.newRequest_(););},t.prototype.newRequest_=function(){if(this.alive&&this.sendNewPolls&&this.outstandingRequests.size<(this.pendingSegs.length>0?2:1)){this.currentSerial++;var t={};t.id=this.myID,t.pw=this.myPW,t.ser=this.currentSerial;for(var e=this.urlFn(t),n=\"\",r=0;this.pendingSegs.length>0;){if(!(this.pendingSegs[0].d.length+30+n.length<=1870))break;var i=this.pendingSegs.shift();n=n+\"&seg\"+r+\"=\"+i.seg+\"&ts\"+r+\"=\"+i.ts+\"&d\"+r+\"=\"+i.d,r++}return e+=n,this.addLongPollTag_(e,this.currentSerial),!0}return!1},t.prototype.enqueueSegment=function(t,e,n){this.pendingSegs.push({seg:t,ts:e,d:n}),this.alive&&this.newRequest_()},t.prototype.addLongPollTag_=function(t,e){var n=this;this.outstandingRequests.add(e);var r=function(){n.outstandingRequests.delete(e),n.newRequest_()},i=setTimeout(r,Math.floor(25e3));this.addTag(t,(function(){clearTimeout(i),r()}))},t.prototype.addTag=function(t,e){var n=this;Object(o.z)()?this.doNodeLongPoll(t,e):setTimeout((function(){try{if(!n.sendNewPolls)return;var r=n.myIFrame.doc.createElement(\"script\");r.type=\"text/javascript\",r.async=!0,r.src=t,r.onload=r.onreadystatechange=function(){var t=r.readyState;t&&\"loaded\"!==t&&\"complete\"!==t||(r.onload=r.onreadystatechange=null,r.parentNode&&r.parentNode.removeChild(r),e())},r.onerror=function(){_(\"Long-poll script failed to load: \"+t),n.sendNewPolls=!1,n.close()},n.myIFrame.doc.body.appendChild(r)}catch(i){}}),Math.floor(1))},t}(),Qe=\"\";function Ye(t){Qe=t}var Je=null;\"undefined\"!==typeof MozWebSocket?Je=MozWebSocket:\"undefined\"!==typeof WebSocket&&(Je=WebSocket);var Xe=function(){function e(t,n,r,i,o){this.connId=t,this.applicationId=r,this.keepaliveTimer=null,this.frames=null,this.totalFrames=0,this.bytesSent=0,this.bytesReceived=0,this.log_=w(this.connId),this.stats_=De.getCollection(n),this.connURL=e.connectionURL_(n,i,o),this.nodeAdmin=n.nodeAdmin}return e.connectionURL_=function(t,e,n){var r={};return r.v=q,!Object(o.z)()&&\"undefined\"!==typeof location&&location.hostname&&B.test(location.hostname)&&(r.r=\"f\"),e&&(r.s=e),n&&(r.ls=n),t.connectionURL(z,r)},e.prototype.open=function(e,n){var r=this;this.onDisconnect=n,this.onMessage=e,this.log_(\"Websocket connecting to \"+this.connURL),this.everConnected_=!1,h.set(\"previous_websocket_failure\",!0);try{if(Object(o.z)()){var i=this.nodeAdmin?\"AdminNode\":\"Node\",a={headers:{\"User-Agent\":\"Firebase/5/\"+Qe+\"/\"+t.platform+\"/\"+i,\"X-Firebase-GMPID\":this.applicationId||\"\"}},s=Object({NODE_ENV:\"production\",PUBLIC_URL:\"\",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}),u=0===this.connURL.indexOf(\"wss://\")?s.HTTPS_PROXY||s.https_proxy:s.HTTP_PROXY||s.http_proxy;u&&(a.proxy={origin:u}),this.mySock=new Je(this.connURL,[],a)}else{a={headers:{\"X-Firebase-GMPID\":this.applicationId||\"\"}};this.mySock=new Je(this.connURL,[],a)}}catch(l){this.log_(\"Error instantiating WebSocket.\");var c=l.message||l.data;return c&&this.log_(c),void this.onClosed_()}this.mySock.onopen=function(){r.log_(\"Websocket connected.\"),r.everConnected_=!0},this.mySock.onclose=function(){r.log_(\"Websocket connection was disconnected.\"),r.mySock=null,r.onClosed_()},this.mySock.onmessage=function(t){r.handleIncomingFrame(t)},this.mySock.onerror=function(t){r.log_(\"WebSocket error.  Closing connection.\");var e=t.message||t.data;e&&r.log_(e),r.onClosed_()}},e.prototype.start=function(){},e.forceDisallow=function(){e.forceDisallow_=!0},e.isAvailable=function(){var t=!1;if(\"undefined\"!==typeof navigator&&navigator.userAgent){var n=navigator.userAgent.match(/Android ([0-9]{0,}\\.[0-9]{0,})/);n&&n.length>1&&parseFloat(n[1])<4.4&&(t=!0)}return!t&&null!==Je&&!e.forceDisallow_},e.previouslyFailed=function(){return h.isInMemoryStorage||!0===h.get(\"previous_websocket_failure\")},e.prototype.markConnectionHealthy=function(){h.remove(\"previous_websocket_failure\")},e.prototype.appendFrame_=function(t){if(this.frames.push(t),this.frames.length===this.totalFrames){var e=this.frames.join(\"\");this.frames=null;var n=Object(o.D)(e);this.onMessage(n)}},e.prototype.handleNewFrameCount_=function(t){this.totalFrames=t,this.frames=[]},e.prototype.extractFrameCount_=function(t){if(Object(o.f)(null===this.frames,\"We already have a frame buffer\"),t.length<=6){var e=Number(t);if(!isNaN(e))return this.handleNewFrameCount_(e),null}return this.handleNewFrameCount_(1),t},e.prototype.handleIncomingFrame=function(t){if(null!==this.mySock){var e=t.data;if(this.bytesReceived+=e.length,this.stats_.incrementCounter(\"bytes_received\",e.length),this.resetKeepAlive(),null!==this.frames)this.appendFrame_(e);else{var n=this.extractFrameCount_(e);null!==n&&this.appendFrame_(n)}}},e.prototype.send=function(t){this.resetKeepAlive();var e=Object(o.J)(t);this.bytesSent+=e.length,this.stats_.incrementCounter(\"bytes_sent\",e.length);var n=R(e,16384);n.length>1&&this.sendString_(String(n.length));for(var r=0;r<n.length;r++)this.sendString_(n[r])},e.prototype.shutdown_=function(){this.isClosed_=!0,this.keepaliveTimer&&(clearInterval(this.keepaliveTimer),this.keepaliveTimer=null),this.mySock&&(this.mySock.close(),this.mySock=null)},e.prototype.onClosed_=function(){this.isClosed_||(this.log_(\"WebSocket is closing itself\"),this.shutdown_(),this.onDisconnect&&(this.onDisconnect(this.everConnected_),this.onDisconnect=null))},e.prototype.close=function(){this.isClosed_||(this.log_(\"WebSocket is being closed\"),this.shutdown_())},e.prototype.resetKeepAlive=function(){var t=this;clearInterval(this.keepaliveTimer),this.keepaliveTimer=setInterval((function(){t.mySock&&t.sendString_(\"0\"),t.resetKeepAlive()}),Math.floor(45e3))},e.prototype.sendString_=function(t){try{this.mySock.send(t)}catch(e){this.log_(\"Exception thrown from WebSocket.send():\",e.message||e.data,\"Closing connection.\"),setTimeout(this.onClosed_.bind(this),0)}},e.responsesRequiredToBeHealthy=2,e.healthyTimeout=3e4,e}(),$e=function(){function t(t){this.initTransports_(t)}return Object.defineProperty(t,\"ALL_TRANSPORTS\",{get:function(){return[We,Xe]},enumerable:!1,configurable:!0}),t.prototype.initTransports_=function(e){var n,r,o=Xe&&Xe.isAvailable(),a=o&&!Xe.previouslyFailed();if(e.webSocketOnly&&(o||I(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"),a=!0),a)this.transports_=[Xe];else{var s=this.transports_=[];try{for(var u=Object(i.h)(t.ALL_TRANSPORTS),c=u.next();!c.done;c=u.next()){var l=c.value;l&&l.isAvailable()&&s.push(l)}}catch(h){n={error:h}}finally{try{c&&!c.done&&(r=u.return)&&r.call(u)}finally{if(n)throw n.error}}}},t.prototype.initialTransport=function(){if(this.transports_.length>0)return this.transports_[0];throw new Error(\"No transports available\")},t.prototype.upgradeTransport=function(){return this.transports_.length>1?this.transports_[1]:null},t}(),Ze=function(){function t(t,e,n,r,i,o,a,s){this.id=t,this.repoInfo_=e,this.applicationId_=n,this.onMessage_=r,this.onReady_=i,this.onDisconnect_=o,this.onKill_=a,this.lastSessionId=s,this.connectionCount=0,this.pendingDataMessages=[],this.state_=0,this.log_=w(\"c:\"+this.id+\":\"),this.transportManager_=new $e(e),this.log_(\"Connection created\"),this.start_()}return t.prototype.start_=function(){var t=this,e=this.transportManager_.initialTransport();this.conn_=new e(this.nextTransportId_(),this.repoInfo_,this.applicationId_,void 0,this.lastSessionId),this.primaryResponsesRequired_=e.responsesRequiredToBeHealthy||0;var n=this.connReceiver_(this.conn_),r=this.disconnReceiver_(this.conn_);this.tx_=this.conn_,this.rx_=this.conn_,this.secondaryConn_=null,this.isHealthy_=!1,setTimeout((function(){t.conn_&&t.conn_.open(n,r)}),Math.floor(0));var i=e.healthyTimeout||0;i>0&&(this.healthyTimeout_=F((function(){t.healthyTimeout_=null,t.isHealthy_||(t.conn_&&t.conn_.bytesReceived>102400?(t.log_(\"Connection exceeded healthy timeout but has received \"+t.conn_.bytesReceived+\" bytes.  Marking connection healthy.\"),t.isHealthy_=!0,t.conn_.markConnectionHealthy()):t.conn_&&t.conn_.bytesSent>10240?t.log_(\"Connection exceeded healthy timeout but has sent \"+t.conn_.bytesSent+\" bytes.  Leaving connection alive.\"):(t.log_(\"Closing unhealthy connection after timeout.\"),t.close()))}),Math.floor(i)))},t.prototype.nextTransportId_=function(){return\"c:\"+this.id+\":\"+this.connectionCount++},t.prototype.disconnReceiver_=function(t){var e=this;return function(n){t===e.conn_?e.onConnectionLost_(n):t===e.secondaryConn_?(e.log_(\"Secondary connection lost.\"),e.onSecondaryConnectionLost_()):e.log_(\"closing an old connection\")}},t.prototype.connReceiver_=function(t){var e=this;return function(n){2!==e.state_&&(t===e.rx_?e.onPrimaryMessageReceived_(n):t===e.secondaryConn_?e.onSecondaryMessageReceived_(n):e.log_(\"message on old connection\"))}},t.prototype.sendRequest=function(t){var e={t:\"d\",d:t};this.sendData_(e)},t.prototype.tryCleanupConnection=function(){this.tx_===this.secondaryConn_&&this.rx_===this.secondaryConn_&&(this.log_(\"cleaning up and promoting a connection: \"+this.secondaryConn_.connId),this.conn_=this.secondaryConn_,this.secondaryConn_=null)},t.prototype.onSecondaryControl_=function(t){if(\"t\"in t){var e=t.t;\"a\"===e?this.upgradeIfSecondaryHealthy_():\"r\"===e?(this.log_(\"Got a reset on secondary, closing it\"),this.secondaryConn_.close(),this.tx_!==this.secondaryConn_&&this.rx_!==this.secondaryConn_||this.close()):\"o\"===e&&(this.log_(\"got pong on secondary.\"),this.secondaryResponsesRequired_--,this.upgradeIfSecondaryHealthy_())}},t.prototype.onSecondaryMessageReceived_=function(t){var e=A(\"t\",t),n=A(\"d\",t);if(\"c\"===e)this.onSecondaryControl_(n);else{if(\"d\"!==e)throw new Error(\"Unknown protocol layer: \"+e);this.pendingDataMessages.push(n)}},t.prototype.upgradeIfSecondaryHealthy_=function(){this.secondaryResponsesRequired_<=0?(this.log_(\"Secondary connection is healthy.\"),this.isHealthy_=!0,this.secondaryConn_.markConnectionHealthy(),this.proceedWithUpgrade_()):(this.log_(\"sending ping on secondary.\"),this.secondaryConn_.send({t:\"c\",d:{t:\"p\",d:{}}}))},t.prototype.proceedWithUpgrade_=function(){this.secondaryConn_.start(),this.log_(\"sending client ack on secondary\"),this.secondaryConn_.send({t:\"c\",d:{t:\"a\",d:{}}}),this.log_(\"Ending transmission on primary\"),this.conn_.send({t:\"c\",d:{t:\"n\",d:{}}}),this.tx_=this.secondaryConn_,this.tryCleanupConnection()},t.prototype.onPrimaryMessageReceived_=function(t){var e=A(\"t\",t),n=A(\"d\",t);\"c\"===e?this.onControl_(n):\"d\"===e&&this.onDataMessage_(n)},t.prototype.onDataMessage_=function(t){this.onPrimaryResponse_(),this.onMessage_(t)},t.prototype.onPrimaryResponse_=function(){this.isHealthy_||(this.primaryResponsesRequired_--,this.primaryResponsesRequired_<=0&&(this.log_(\"Primary connection is healthy.\"),this.isHealthy_=!0,this.conn_.markConnectionHealthy()))},t.prototype.onControl_=function(t){var e=A(\"t\",t);if(\"d\"in t){var n=t.d;if(\"h\"===e)this.onHandshake_(n);else if(\"n\"===e){this.log_(\"recvd end transmission on primary\"),this.rx_=this.secondaryConn_;for(var r=0;r<this.pendingDataMessages.length;++r)this.onDataMessage_(this.pendingDataMessages[r]);this.pendingDataMessages=[],this.tryCleanupConnection()}else\"s\"===e?this.onConnectionShutdown_(n):\"r\"===e?this.onReset_(n):\"e\"===e?E(\"Server Error: \"+n):\"o\"===e?(this.log_(\"got pong on primary.\"),this.onPrimaryResponse_(),this.sendPingOnPrimaryIfNecessary_()):E(\"Unknown control packet command: \"+e)}},t.prototype.onHandshake_=function(t){var e=t.ts,n=t.v,r=t.h;this.sessionId=t.s,this.repoInfo_.updateHost(r),0===this.state_&&(this.conn_.start(),this.onConnectionEstablished_(this.conn_,e),q!==n&&I(\"Protocol version mismatch detected\"),this.tryStartUpgrade_())},t.prototype.tryStartUpgrade_=function(){var t=this.transportManager_.upgradeTransport();t&&this.startUpgrade_(t)},t.prototype.startUpgrade_=function(t){var e=this;this.secondaryConn_=new t(this.nextTransportId_(),this.repoInfo_,this.applicationId_,this.sessionId),this.secondaryResponsesRequired_=t.responsesRequiredToBeHealthy||0;var n=this.connReceiver_(this.secondaryConn_),r=this.disconnReceiver_(this.secondaryConn_);this.secondaryConn_.open(n,r),F((function(){e.secondaryConn_&&(e.log_(\"Timed out trying to upgrade.\"),e.secondaryConn_.close())}),Math.floor(6e4))},t.prototype.onReset_=function(t){this.log_(\"Reset packet received.  New host: \"+t),this.repoInfo_.updateHost(t),1===this.state_?this.close():(this.closeConnections_(),this.start_())},t.prototype.onConnectionEstablished_=function(t,e){var n=this;this.log_(\"Realtime connection established.\"),this.conn_=t,this.state_=1,this.onReady_&&(this.onReady_(e,this.sessionId),this.onReady_=null),0===this.primaryResponsesRequired_?(this.log_(\"Primary connection is healthy.\"),this.isHealthy_=!0):F((function(){n.sendPingOnPrimaryIfNecessary_()}),Math.floor(5e3))},t.prototype.sendPingOnPrimaryIfNecessary_=function(){this.isHealthy_||1!==this.state_||(this.log_(\"sending ping on primary.\"),this.sendData_({t:\"c\",d:{t:\"p\",d:{}}}))},t.prototype.onSecondaryConnectionLost_=function(){var t=this.secondaryConn_;this.secondaryConn_=null,this.tx_!==t&&this.rx_!==t||this.close()},t.prototype.onConnectionLost_=function(t){this.conn_=null,t||0!==this.state_?1===this.state_&&this.log_(\"Realtime connection lost.\"):(this.log_(\"Realtime connection failed.\"),this.repoInfo_.isCacheableHost()&&(h.remove(\"host:\"+this.repoInfo_.host),this.repoInfo_.internalHost=this.repoInfo_.host)),this.close()},t.prototype.onConnectionShutdown_=function(t){this.log_(\"Connection shutdown command received. Shutting down...\"),this.onKill_&&(this.onKill_(t),this.onKill_=null),this.onDisconnect_=null,this.close()},t.prototype.sendData_=function(t){if(1!==this.state_)throw\"Connection is not connected\";this.tx_.send(t)},t.prototype.close=function(){2!==this.state_&&(this.log_(\"Closing realtime connection.\"),this.state_=2,this.closeConnections_(),this.onDisconnect_&&(this.onDisconnect_(),this.onDisconnect_=null))},t.prototype.closeConnections_=function(){this.log_(\"Shutting down all connections\"),this.conn_&&(this.conn_.close(),this.conn_=null),this.secondaryConn_&&(this.secondaryConn_.close(),this.secondaryConn_=null),this.healthyTimeout_&&(clearTimeout(this.healthyTimeout_),this.healthyTimeout_=null)},t}(),tn=function(){function t(){}return t.prototype.put=function(t,e,n,r){},t.prototype.merge=function(t,e,n,r){},t.prototype.refreshAuthToken=function(t){},t.prototype.onDisconnectPut=function(t,e,n){},t.prototype.onDisconnectMerge=function(t,e,n){},t.prototype.onDisconnectCancel=function(t,e){},t.prototype.reportStats=function(t){},t}(),en=1e3,nn=function(t){function e(n,r,i,a,s,u,c){var l=t.call(this)||this;if(l.repoInfo_=n,l.applicationId_=r,l.onDataUpdate_=i,l.onConnectStatus_=a,l.onServerInfoUpdate_=s,l.authTokenProvider_=u,l.authOverride_=c,l.id=e.nextPersistentConnectionId_++,l.log_=w(\"p:\"+l.id+\":\"),l.interruptReasons_={},l.listens=new Map,l.outstandingPuts_=[],l.outstandingGets_=[],l.outstandingPutCount_=0,l.outstandingGetCount_=0,l.onDisconnectRequestQueue_=[],l.connected_=!1,l.reconnectDelay_=en,l.maxReconnectDelay_=3e5,l.securityDebugCallback_=null,l.lastSessionId=null,l.establishConnectionTimer_=null,l.visible_=!1,l.requestCBHash_={},l.requestNumber_=0,l.realtime_=null,l.authToken_=null,l.forceTokenRefresh_=!1,l.invalidAuthTokenCount_=0,l.firstConnection_=!0,l.lastConnectionAttemptTime_=null,l.lastConnectionEstablishedTime_=null,c&&!Object(o.z)())throw new Error(\"Auth override specified in options, but not supported on non Node.js platforms\");return l.scheduleConnect_(0),qe.getInstance().on(\"visible\",l.onVisible_,l),-1===n.host.indexOf(\"fblocal\")&&Be.getInstance().on(\"online\",l.onOnline_,l),l}return Object(i.c)(e,t),e.prototype.sendRequest=function(t,e,n){var r=++this.requestNumber_,i={r:r,a:t,b:e};this.log_(Object(o.J)(i)),Object(o.f)(this.connected_,\"sendRequest call when we're not connected not allowed.\"),this.realtime_.sendRequest(i),n&&(this.requestCBHash_[r]=n)},e.prototype.get=function(t){var e=this,n=new o.a,r={p:t.path.toString(),q:t.queryObject()},i={action:\"g\",request:r,onComplete:function(t){var i=t.d;\"ok\"===t.s?(e.onDataUpdate_(r.p,i,!1,null),n.resolve(i)):n.reject(i)}};this.outstandingGets_.push(i),this.outstandingGetCount_++;var a=this.outstandingGets_.length-1;return this.connected_||setTimeout((function(){var t=e.outstandingGets_[a];void 0!==t&&i===t&&(delete e.outstandingGets_[a],e.outstandingGetCount_--,0===e.outstandingGetCount_&&(e.outstandingGets_=[]),e.log_(\"get \"+a+\" timed out on connection\"),n.reject(new Error(\"Client is offline.\")))}),3e3),this.connected_&&this.sendGet_(a),n.promise},e.prototype.listen=function(t,e,n,r){var i=t.queryIdentifier(),a=t.path.toString();this.log_(\"Listen called for \"+a+\" \"+i),this.listens.has(a)||this.listens.set(a,new Map),Object(o.f)(t.getQueryParams().isDefault()||!t.getQueryParams().loadsAllData(),\"listen() called for non-default but complete query\"),Object(o.f)(!this.listens.get(a).has(i),\"listen() called twice for same path/queryId.\");var s={onComplete:r,hashFn:e,query:t,tag:n};this.listens.get(a).set(i,s),this.connected_&&this.sendListen_(s)},e.prototype.sendGet_=function(t){var e=this,n=this.outstandingGets_[t];this.sendRequest(\"g\",n.request,(function(r){delete e.outstandingGets_[t],e.outstandingGetCount_--,0===e.outstandingGetCount_&&(e.outstandingGets_=[]),n.onComplete&&n.onComplete(r)}))},e.prototype.sendListen_=function(t){var n=this,r=t.query,i=r.path.toString(),o=r.queryIdentifier();this.log_(\"Listen on \"+i+\" for \"+o);var a={p:i};t.tag&&(a.q=r.queryObject(),a.t=t.tag),a.h=t.hashFn(),this.sendRequest(\"q\",a,(function(a){var s=a.d,u=a.s;e.warnOnListenWarnings_(s,r),(n.listens.get(i)&&n.listens.get(i).get(o))===t&&(n.log_(\"listen response\",a),\"ok\"!==u&&n.removeListen_(i,o),t.onComplete&&t.onComplete(u,s))}))},e.warnOnListenWarnings_=function(t,e){if(t&&\"object\"===typeof t&&Object(o.k)(t,\"w\")){var n=Object(o.G)(t,\"w\");if(Array.isArray(n)&&~n.indexOf(\"no_index\")){var r='\".indexOn\": \"'+e.getQueryParams().getIndex().toString()+'\"',i=e.path.toString();I(\"Using an unspecified index. Your data will be downloaded and filtered on the client. Consider adding \"+r+\" at \"+i+\" to your security rules for better performance.\")}}},e.prototype.refreshAuthToken=function(t){this.authToken_=t,this.log_(\"Auth token refreshed\"),this.authToken_?this.tryAuth():this.connected_&&this.sendRequest(\"unauth\",{},(function(){})),this.reduceReconnectDelayIfAdminCredential_(t)},e.prototype.reduceReconnectDelayIfAdminCredential_=function(t){(t&&40===t.length||Object(o.q)(t))&&(this.log_(\"Admin auth credential detected.  Reducing max reconnect time.\"),this.maxReconnectDelay_=3e4)},e.prototype.tryAuth=function(){var t=this;if(this.connected_&&this.authToken_){var e=this.authToken_,n=Object(o.C)(e)?\"auth\":\"gauth\",r={cred:e};null===this.authOverride_?r.noauth=!0:\"object\"===typeof this.authOverride_&&(r.authvar=this.authOverride_),this.sendRequest(n,r,(function(n){var r=n.s,i=n.d||\"error\";t.authToken_===e&&(\"ok\"===r?t.invalidAuthTokenCount_=0:t.onAuthRevoked_(r,i))}))}},e.prototype.unlisten=function(t,e){var n=t.path.toString(),r=t.queryIdentifier();this.log_(\"Unlisten called for \"+n+\" \"+r),Object(o.f)(t.getQueryParams().isDefault()||!t.getQueryParams().loadsAllData(),\"unlisten() called for non-default but complete query\"),this.removeListen_(n,r)&&this.connected_&&this.sendUnlisten_(n,r,t.queryObject(),e)},e.prototype.sendUnlisten_=function(t,e,n,r){this.log_(\"Unlisten on \"+t+\" for \"+e);var i={p:t};r&&(i.q=n,i.t=r),this.sendRequest(\"n\",i)},e.prototype.onDisconnectPut=function(t,e,n){this.connected_?this.sendOnDisconnect_(\"o\",t,e,n):this.onDisconnectRequestQueue_.push({pathString:t,action:\"o\",data:e,onComplete:n})},e.prototype.onDisconnectMerge=function(t,e,n){this.connected_?this.sendOnDisconnect_(\"om\",t,e,n):this.onDisconnectRequestQueue_.push({pathString:t,action:\"om\",data:e,onComplete:n})},e.prototype.onDisconnectCancel=function(t,e){this.connected_?this.sendOnDisconnect_(\"oc\",t,null,e):this.onDisconnectRequestQueue_.push({pathString:t,action:\"oc\",data:null,onComplete:e})},e.prototype.sendOnDisconnect_=function(t,e,n,r){var i={p:e,d:n};this.log_(\"onDisconnect \"+t,i),this.sendRequest(t,i,(function(t){r&&setTimeout((function(){r(t.s,t.d)}),Math.floor(0))}))},e.prototype.put=function(t,e,n,r){this.putInternal(\"p\",t,e,n,r)},e.prototype.merge=function(t,e,n,r){this.putInternal(\"m\",t,e,n,r)},e.prototype.putInternal=function(t,e,n,r,i){var o={p:e,d:n};void 0!==i&&(o.h=i),this.outstandingPuts_.push({action:t,request:o,onComplete:r}),this.outstandingPutCount_++;var a=this.outstandingPuts_.length-1;this.connected_?this.sendPut_(a):this.log_(\"Buffering put: \"+e)},e.prototype.sendPut_=function(t){var e=this,n=this.outstandingPuts_[t].action,r=this.outstandingPuts_[t].request,i=this.outstandingPuts_[t].onComplete;this.outstandingPuts_[t].queued=this.connected_,this.sendRequest(n,r,(function(r){e.log_(n+\" response\",r),delete e.outstandingPuts_[t],e.outstandingPutCount_--,0===e.outstandingPutCount_&&(e.outstandingPuts_=[]),i&&i(r.s,r.d)}))},e.prototype.reportStats=function(t){var e=this;if(this.connected_){var n={c:t};this.log_(\"reportStats\",n),this.sendRequest(\"s\",n,(function(t){if(\"ok\"!==t.s){var n=t.d;e.log_(\"reportStats\",\"Error sending stats: \"+n)}}))}},e.prototype.onDataMessage_=function(t){if(\"r\"in t){this.log_(\"from server: \"+Object(o.J)(t));var e=t.r,n=this.requestCBHash_[e];n&&(delete this.requestCBHash_[e],n(t.b))}else{if(\"error\"in t)throw\"A server-side error has occurred: \"+t.error;\"a\"in t&&this.onDataPush_(t.a,t.b)}},e.prototype.onDataPush_=function(t,e){this.log_(\"handleServerMessage\",t,e),\"d\"===t?this.onDataUpdate_(e.p,e.d,!1,e.t):\"m\"===t?this.onDataUpdate_(e.p,e.d,!0,e.t):\"c\"===t?this.onListenRevoked_(e.p,e.q):\"ac\"===t?this.onAuthRevoked_(e.s,e.d):\"sd\"===t?this.onSecurityDebugPacket_(e):E(\"Unrecognized action received from server: \"+Object(o.J)(t)+\"\\nAre you using the latest client?\")},e.prototype.onReady_=function(t,e){this.log_(\"connection ready\"),this.connected_=!0,this.lastConnectionEstablishedTime_=(new Date).getTime(),this.handleTimestamp_(t),this.lastSessionId=e,this.firstConnection_&&this.sendConnectStats_(),this.restoreState_(),this.firstConnection_=!1,this.onConnectStatus_(!0)},e.prototype.scheduleConnect_=function(t){var e=this;Object(o.f)(!this.realtime_,\"Scheduling a connect when we're already connected/ing?\"),this.establishConnectionTimer_&&clearTimeout(this.establishConnectionTimer_),this.establishConnectionTimer_=setTimeout((function(){e.establishConnectionTimer_=null,e.establishConnection_()}),Math.floor(t))},e.prototype.onVisible_=function(t){t&&!this.visible_&&this.reconnectDelay_===this.maxReconnectDelay_&&(this.log_(\"Window became visible.  Reducing delay.\"),this.reconnectDelay_=en,this.realtime_||this.scheduleConnect_(0)),this.visible_=t},e.prototype.onOnline_=function(t){t?(this.log_(\"Browser went online.\"),this.reconnectDelay_=en,this.realtime_||this.scheduleConnect_(0)):(this.log_(\"Browser went offline.  Killing connection.\"),this.realtime_&&this.realtime_.close())},e.prototype.onRealtimeDisconnect_=function(){if(this.log_(\"data client disconnected\"),this.connected_=!1,this.realtime_=null,this.cancelSentTransactions_(),this.requestCBHash_={},this.shouldReconnect_()){if(this.visible_){if(this.lastConnectionEstablishedTime_){(new Date).getTime()-this.lastConnectionEstablishedTime_>3e4&&(this.reconnectDelay_=en),this.lastConnectionEstablishedTime_=null}}else this.log_(\"Window isn't visible.  Delaying reconnect.\"),this.reconnectDelay_=this.maxReconnectDelay_,this.lastConnectionAttemptTime_=(new Date).getTime();var t=(new Date).getTime()-this.lastConnectionAttemptTime_,e=Math.max(0,this.reconnectDelay_-t);e=Math.random()*e,this.log_(\"Trying to reconnect in \"+e+\"ms\"),this.scheduleConnect_(e),this.reconnectDelay_=Math.min(this.maxReconnectDelay_,1.3*this.reconnectDelay_)}this.onConnectStatus_(!1)},e.prototype.establishConnection_=function(){var t=this;if(this.shouldReconnect_()){this.log_(\"Making a connection attempt\"),this.lastConnectionAttemptTime_=(new Date).getTime(),this.lastConnectionEstablishedTime_=null;var n=this.onDataMessage_.bind(this),r=this.onReady_.bind(this),i=this.onRealtimeDisconnect_.bind(this),a=this.id+\":\"+e.nextConnectionId_++,s=this,u=this.lastSessionId,c=!1,l=null,h=function(){l?l.close():(c=!0,i())};this.realtime_={close:h,sendRequest:function(t){Object(o.f)(l,\"sendRequest call when we're not connected not allowed.\"),l.sendRequest(t)}};var f=this.forceTokenRefresh_;this.forceTokenRefresh_=!1,this.authTokenProvider_.getToken(f).then((function(t){c?_(\"getToken() completed but was canceled\"):(_(\"getToken() completed. Creating connection.\"),s.authToken_=t&&t.accessToken,l=new Ze(a,s.repoInfo_,s.applicationId_,n,r,i,(function(t){I(t+\" (\"+s.repoInfo_.toString()+\")\"),s.interrupt(\"server_kill\")}),u))})).then(null,(function(e){s.log_(\"Failed to get token: \"+e),c||(t.repoInfo_.nodeAdmin&&I(e),h())}))}},e.prototype.interrupt=function(t){_(\"Interrupting connection for reason: \"+t),this.interruptReasons_[t]=!0,this.realtime_?this.realtime_.close():(this.establishConnectionTimer_&&(clearTimeout(this.establishConnectionTimer_),this.establishConnectionTimer_=null),this.connected_&&this.onRealtimeDisconnect_())},e.prototype.resume=function(t){_(\"Resuming connection for reason: \"+t),delete this.interruptReasons_[t],Object(o.u)(this.interruptReasons_)&&(this.reconnectDelay_=en,this.realtime_||this.scheduleConnect_(0))},e.prototype.handleTimestamp_=function(t){var e=t-(new Date).getTime();this.onServerInfoUpdate_({serverTimeOffset:e})},e.prototype.cancelSentTransactions_=function(){for(var t=0;t<this.outstandingPuts_.length;t++){var e=this.outstandingPuts_[t];e&&\"h\"in e.request&&e.queued&&(e.onComplete&&e.onComplete(\"disconnect\"),delete this.outstandingPuts_[t],this.outstandingPutCount_--)}0===this.outstandingPutCount_&&(this.outstandingPuts_=[])},e.prototype.onListenRevoked_=function(t,e){var n;n=e?e.map((function(t){return P(t)})).join(\"$\"):\"default\";var r=this.removeListen_(t,n);r&&r.onComplete&&r.onComplete(\"permission_denied\")},e.prototype.removeListen_=function(t,e){var n,r=new U(t).toString();if(this.listens.has(r)){var i=this.listens.get(r);n=i.get(e),i.delete(e),0===i.size&&this.listens.delete(r)}else n=void 0;return n},e.prototype.onAuthRevoked_=function(t,e){_(\"Auth token revoked: \"+t+\"/\"+e),this.authToken_=null,this.forceTokenRefresh_=!0,this.realtime_.close(),\"invalid_token\"!==t&&\"permission_denied\"!==t||(this.invalidAuthTokenCount_++,this.invalidAuthTokenCount_>=3&&(this.reconnectDelay_=3e4,this.authTokenProvider_.notifyForInvalidToken()))},e.prototype.onSecurityDebugPacket_=function(t){this.securityDebugCallback_?this.securityDebugCallback_(t):\"msg\"in t&&console.log(\"FIREBASE: \"+t.msg.replace(\"\\n\",\"\\nFIREBASE: \"))},e.prototype.restoreState_=function(){var t,e,n,r;this.tryAuth();try{for(var o=Object(i.h)(this.listens.values()),a=o.next();!a.done;a=o.next()){var s=a.value;try{for(var u=(n=void 0,Object(i.h)(s.values())),c=u.next();!c.done;c=u.next()){var l=c.value;this.sendListen_(l)}}catch(p){n={error:p}}finally{try{c&&!c.done&&(r=u.return)&&r.call(u)}finally{if(n)throw n.error}}}}catch(d){t={error:d}}finally{try{a&&!a.done&&(e=o.return)&&e.call(o)}finally{if(t)throw t.error}}for(var h=0;h<this.outstandingPuts_.length;h++)this.outstandingPuts_[h]&&this.sendPut_(h);for(;this.onDisconnectRequestQueue_.length;){var f=this.onDisconnectRequestQueue_.shift();this.sendOnDisconnect_(f.action,f.pathString,f.data,f.onComplete)}for(h=0;h<this.outstandingGets_.length;h++)this.outstandingGets_[h]&&this.sendGet_(h)},e.prototype.sendConnectStats_=function(){var t={},e=\"js\";Object(o.z)()&&(e=this.repoInfo_.nodeAdmin?\"admin_node\":\"node\"),t[\"sdk.\"+e+\".\"+Qe.replace(/\\./g,\"-\")]=1,Object(o.x)()?t[\"framework.cordova\"]=1:Object(o.A)()&&(t[\"framework.reactnative\"]=1),this.reportStats(t)},e.prototype.shouldReconnect_=function(){var t=Be.getInstance().currentlyOnline();return Object(o.u)(this.interruptReasons_)&&t},e.nextPersistentConnectionId_=0,e.nextConnectionId_=0,e}(tn),rn=function(t){function e(e,n,r){var i=t.call(this)||this;return i.repoInfo_=e,i.onDataUpdate_=n,i.authTokenProvider_=r,i.log_=w(\"p:rest:\"),i.listens_={},i}return Object(i.c)(e,t),e.prototype.reportStats=function(t){throw new Error(\"Method not implemented.\")},e.getListenId_=function(t,e){return void 0!==e?\"tag$\"+e:(Object(o.f)(t.getQueryParams().isDefault(),\"should have a tag if it's not a default query.\"),t.path.toString())},e.prototype.listen=function(t,n,r,i){var a=this,s=t.path.toString();this.log_(\"Listen called for \"+s+\" \"+t.queryIdentifier());var u=e.getListenId_(t,r),c={};this.listens_[u]=c;var l=t.getQueryParams().toRestQueryStringParameters();this.restRequest_(s+\".json\",l,(function(t,e){var n=e;(404===t&&(n=null,t=null),null===t&&a.onDataUpdate_(s,n,!1,r),Object(o.G)(a.listens_,u)===c)&&i(t?401===t?\"permission_denied\":\"rest_error:\"+t:\"ok\",null)}))},e.prototype.unlisten=function(t,n){var r=e.getListenId_(t,n);delete this.listens_[r]},e.prototype.get=function(t){var e=this,n=t.getQueryParams().toRestQueryStringParameters(),r=t.path.toString(),i=new o.a;return this.restRequest_(r+\".json\",n,(function(t,n){var o=n;404===t&&(o=null,t=null),null===t?(e.onDataUpdate_(r,o,!1,null),i.resolve(o)):i.reject(new Error(o))})),i.promise},e.prototype.refreshAuthToken=function(t){},e.prototype.restRequest_=function(t,e,n){var r=this;void 0===e&&(e={}),e.format=\"export\",this.authTokenProvider_.getToken(!1).then((function(i){var a=i&&i.accessToken;a&&(e.auth=a);var s=(r.repoInfo_.secure?\"https://\":\"http://\")+r.repoInfo_.host+t+\"?ns=\"+r.repoInfo_.namespace+Object(o.F)(e);r.log_(\"Sending REST request for \"+s);var u=new XMLHttpRequest;u.onreadystatechange=function(){if(n&&4===u.readyState){r.log_(\"REST Response for \"+s+\" received. status:\",u.status,\"response:\",u.responseText);var t=null;if(u.status>=200&&u.status<300){try{t=Object(o.D)(u.responseText)}catch(e){I(\"Failed to parse JSON response for \"+s+\": \"+u.responseText)}n(null,t)}else 401!==u.status&&404!==u.status&&I(\"Got unsuccessful REST response for \"+s+\" Status: \"+u.status),n(u.status);n=null}},u.open(\"GET\",s,!0),u.send()}))},e}(tn),on=\"repo_interrupt\",an=function(){function t(t,e,n,r){this.repoInfo_=t,this.forceRestClient_=e,this.app=n,this.authTokenProvider_=r,this.dataUpdateCount=0,this.statsListener_=null,this.eventQueue_=new Fe,this.nextWriteId_=1,this.interceptServerDataCallback_=null,this.onDisconnect_=new se,this.persistentConnection_=null,this.key=this.repoInfo_.toURLString()}return t.prototype.start=function(){var t=this;if(this.stats_=De.getCollection(this.repoInfo_),this.forceRestClient_||(\"object\"===typeof window&&window.navigator&&window.navigator.userAgent||\"\").search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i)>=0)this.server_=new rn(this.repoInfo_,this.onDataUpdate_.bind(this),this.authTokenProvider_),setTimeout(this.onConnectStatus_.bind(this,!0),0);else{var e=this.app.options.databaseAuthVariableOverride;if(\"undefined\"!==typeof e&&null!==e){if(\"object\"!==typeof e)throw new Error(\"Only objects are supported for option databaseAuthVariableOverride\");try{Object(o.J)(e)}catch(n){throw new Error(\"Invalid authOverride provided: \"+n)}}this.persistentConnection_=new nn(this.repoInfo_,this.app.options.appId,this.onDataUpdate_.bind(this),this.onConnectStatus_.bind(this),this.onServerInfoUpdate_.bind(this),this.authTokenProvider_,e),this.server_=this.persistentConnection_}this.authTokenProvider_.addTokenChangeListener((function(e){t.server_.refreshAuthToken(e)})),this.statsReporter_=De.getOrCreateReporter(this.repoInfo_,(function(){return new Me(t.stats_,t.server_)})),this.transactionsInit_(),this.infoData_=new je,this.infoSyncTree_=new Re({startListening:function(e,n,r,i){var o=[],a=t.infoData_.getNode(e.path);return a.isEmpty()||(o=t.infoSyncTree_.applyServerOverwrite(e.path,a),setTimeout((function(){i(\"ok\")}),0)),o},stopListening:function(){}}),this.updateInfo_(\"connected\",!1),this.serverSyncTree_=new Re({startListening:function(e,n,r,i){return t.server_.listen(e,r,n,(function(n,r){var o=i(n,r);t.eventQueue_.raiseEventsForChangedPath(e.path,o)})),[]},stopListening:function(e,n){t.server_.unlisten(e,n)}})},t.prototype.toString=function(){return(this.repoInfo_.secure?\"https://\":\"http://\")+this.repoInfo_.host},t.prototype.name=function(){return this.repoInfo_.namespace},t.prototype.serverTime=function(){var t=this.infoData_.getNode(new U(\".info/serverTimeOffset\")).val()||0;return(new Date).getTime()+t},t.prototype.generateServerValues=function(){return(t=(t={timestamp:this.serverTime()})||{}).timestamp=t.timestamp||(new Date).getTime(),t;var t},t.prototype.onDataUpdate_=function(t,e,n,r){this.dataUpdateCount++;var i=new U(t);e=this.interceptServerDataCallback_?this.interceptServerDataCallback_(t,e):e;var a=[];if(r)if(n){var s=Object(o.E)(e,(function(t){return Bt(t)}));a=this.serverSyncTree_.applyTaggedQueryMerge(i,s,r)}else{var u=Bt(e);a=this.serverSyncTree_.applyTaggedQueryOverwrite(i,u,r)}else if(n){var c=Object(o.E)(e,(function(t){return Bt(t)}));a=this.serverSyncTree_.applyServerMerge(i,c)}else{var l=Bt(e);a=this.serverSyncTree_.applyServerOverwrite(i,l)}var h=i;a.length>0&&(h=this.rerunTransactions_(i)),this.eventQueue_.raiseEventsForChangedPath(h,a)},t.prototype.interceptServerData_=function(t){this.interceptServerDataCallback_=t},t.prototype.onConnectStatus_=function(t){this.updateInfo_(\"connected\",t),!1===t&&this.runOnDisconnectEvents_()},t.prototype.onServerInfoUpdate_=function(t){var e=this;j(t,(function(t,n){e.updateInfo_(t,n)}))},t.prototype.updateInfo_=function(t,e){var n=new U(\"/.info/\"+t),r=Bt(e);this.infoData_.updateSnapshot(n,r);var i=this.infoSyncTree_.applyServerOverwrite(n,r);this.eventQueue_.raiseEventsForChangedPath(n,i)},t.prototype.getNextWriteId_=function(){return this.nextWriteId_++},t.prototype.getValue=function(t){var e=this;return this.server_.get(t).then((function(n){var r=Bt(n),i=e.serverSyncTree_.applyServerOverwrite(t.path,r);return e.eventQueue_.raiseEventsAtPath(t.path,i),Promise.resolve(new Wt(r,t.getRef(),t.getQueryParams().getIndex()))}),(function(n){e.log_(\"get for query \"+Object(o.J)(t)+\" falling back to cache after error: \"+n);var r=e.serverSyncTree_.calcCompleteEventCache(t.path);return r.isEmpty()?Promise.reject(new Error(n)):Promise.resolve(new Wt(r,t.getRef(),t.getQueryParams().getIndex()))}))},t.prototype.setWithPriority=function(t,e,n,r){var i=this;this.log_(\"set\",{path:t.toString(),value:e,priority:n});var o=this.generateServerValues(),a=Bt(e,n),s=this.serverSyncTree_.calcCompleteEventCache(t),u=ie(a,s,o),c=this.getNextWriteId_(),l=this.serverSyncTree_.applyUserOverwrite(t,u,c,!0);this.eventQueue_.queueEvents(l),this.server_.put(t.toString(),a.val(!0),(function(e,n){var o=\"ok\"===e;o||I(\"set at \"+t+\" failed: \"+e);var a=i.serverSyncTree_.ackUserWrite(c,!o);i.eventQueue_.raiseEventsForChangedPath(t,a),i.callOnCompleteCallback(r,e,n)}));var h=this.abortTransactions_(t);this.rerunTransactions_(h),this.eventQueue_.raiseEventsForChangedPath(h,[])},t.prototype.update=function(t,e,n){var r=this;this.log_(\"update\",{path:t.toString(),value:e});var i=!0,o=this.generateServerValues(),a={};if(j(e,(function(e,n){i=!1,a[e]=re(t.child(e),Bt(n),r.serverSyncTree_,o)})),i)_(\"update() called with empty data.  Don't do anything.\"),this.callOnCompleteCallback(n,\"ok\");else{var s=this.getNextWriteId_(),u=this.serverSyncTree_.applyUserMerge(t,a,s);this.eventQueue_.queueEvents(u),this.server_.merge(t.toString(),e,(function(e,i){var o=\"ok\"===e;o||I(\"update at \"+t+\" failed: \"+e);var a=r.serverSyncTree_.ackUserWrite(s,!o),u=a.length>0?r.rerunTransactions_(t):t;r.eventQueue_.raiseEventsForChangedPath(u,a),r.callOnCompleteCallback(n,e,i)})),j(e,(function(e){var n=r.abortTransactions_(t.child(e));r.rerunTransactions_(n)})),this.eventQueue_.raiseEventsForChangedPath(t,[])}},t.prototype.runOnDisconnectEvents_=function(){var t=this;this.log_(\"onDisconnectEvents\");var e=this.generateServerValues(),n=new se;this.onDisconnect_.forEachTree(U.Empty,(function(r,i){var o=re(r,i,t.serverSyncTree_,e);n.remember(r,o)}));var r=[];n.forEachTree(U.Empty,(function(e,n){r=r.concat(t.serverSyncTree_.applyServerOverwrite(e,n));var i=t.abortTransactions_(e);t.rerunTransactions_(i)})),this.onDisconnect_=new se,this.eventQueue_.raiseEventsForChangedPath(U.Empty,r)},t.prototype.onDisconnectCancel=function(t,e){var n=this;this.server_.onDisconnectCancel(t.toString(),(function(r,i){\"ok\"===r&&n.onDisconnect_.forget(t),n.callOnCompleteCallback(e,r,i)}))},t.prototype.onDisconnectSet=function(t,e,n){var r=this,i=Bt(e);this.server_.onDisconnectPut(t.toString(),i.val(!0),(function(e,o){\"ok\"===e&&r.onDisconnect_.remember(t,i),r.callOnCompleteCallback(n,e,o)}))},t.prototype.onDisconnectSetWithPriority=function(t,e,n,r){var i=this,o=Bt(e,n);this.server_.onDisconnectPut(t.toString(),o.val(!0),(function(e,n){\"ok\"===e&&i.onDisconnect_.remember(t,o),i.callOnCompleteCallback(r,e,n)}))},t.prototype.onDisconnectUpdate=function(t,e,n){var r=this;if(Object(o.u)(e))return _(\"onDisconnect().update() called with empty data.  Don't do anything.\"),void this.callOnCompleteCallback(n,\"ok\");this.server_.onDisconnectMerge(t.toString(),e,(function(i,o){\"ok\"===i&&j(e,(function(e,n){var i=Bt(n);r.onDisconnect_.remember(t.child(e),i)})),r.callOnCompleteCallback(n,i,o)}))},t.prototype.addEventCallbackForQuery=function(t,e){var n;n=\".info\"===t.path.getFront()?this.infoSyncTree_.addEventRegistration(t,e):this.serverSyncTree_.addEventRegistration(t,e),this.eventQueue_.raiseEventsAtPath(t.path,n)},t.prototype.removeEventCallbackForQuery=function(t,e){var n;n=\".info\"===t.path.getFront()?this.infoSyncTree_.removeEventRegistration(t,e):this.serverSyncTree_.removeEventRegistration(t,e),this.eventQueue_.raiseEventsAtPath(t.path,n)},t.prototype.interrupt=function(){this.persistentConnection_&&this.persistentConnection_.interrupt(on)},t.prototype.resume=function(){this.persistentConnection_&&this.persistentConnection_.resume(on)},t.prototype.stats=function(t){if(void 0===t&&(t=!1),\"undefined\"!==typeof console){var e;t?(this.statsListener_||(this.statsListener_=new Le(this.stats_)),e=this.statsListener_.get()):e=this.stats_.get();var n=Object.keys(e).reduce((function(t,e){return Math.max(e.length,t)}),0);j(e,(function(t,e){for(var r=t,i=t.length;i<n+2;i++)r+=\" \";console.log(r+e)}))}},t.prototype.statsIncrementCounter=function(t){this.stats_.incrementCounter(t),this.statsReporter_.includeStat(t)},t.prototype.log_=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=\"\";this.persistentConnection_&&(n=this.persistentConnection_.id+\":\"),_.apply(void 0,Object(i.f)([n],t))},t.prototype.callOnCompleteCallback=function(t,e,n){t&&M((function(){if(\"ok\"===e)t(null);else{var r=(e||\"error\").toUpperCase(),i=r;n&&(i+=\": \"+n);var o=new Error(i);o.code=r,t(o)}}))},Object.defineProperty(t.prototype,\"database\",{get:function(){return this.__database||(this.__database=new mn(this))},enumerable:!1,configurable:!0}),t}(),sn=function(){function t(e){this.indexedFilter_=new be(e.getIndex()),this.index_=e.getIndex(),this.startPost_=t.getStartPost_(e),this.endPost_=t.getEndPost_(e)}return t.prototype.getStartPost=function(){return this.startPost_},t.prototype.getEndPost=function(){return this.endPost_},t.prototype.matches=function(t){return this.index_.compare(this.getStartPost(),t)<=0&&this.index_.compare(t,this.getEndPost())<=0},t.prototype.updateChild=function(t,e,n,r,i,o){return this.matches(new yt(e,n))||(n=Vt.EMPTY_NODE),this.indexedFilter_.updateChild(t,e,n,r,i,o)},t.prototype.updateFullNode=function(t,e,n){e.isLeafNode()&&(e=Vt.EMPTY_NODE);var r=e.withIndex(this.index_);r=r.updatePriority(Vt.EMPTY_NODE);var i=this;return e.forEachChild(kt,(function(t,e){i.matches(new yt(t,e))||(r=r.updateImmediateChild(t,Vt.EMPTY_NODE))})),this.indexedFilter_.updateFullNode(t,r,n)},t.prototype.updatePriority=function(t,e){return t},t.prototype.filtersNodes=function(){return!0},t.prototype.getIndexedFilter=function(){return this.indexedFilter_},t.prototype.getIndex=function(){return this.index_},t.getStartPost_=function(t){if(t.hasStart()){var e=t.getIndexStartName();return t.getIndex().makePost(t.getIndexStartValue(),e)}return t.getIndex().minPost()},t.getEndPost_=function(t){if(t.hasEnd()){var e=t.getIndexEndName();return t.getIndex().makePost(t.getIndexEndValue(),e)}return t.getIndex().maxPost()},t}(),un=function(){function t(t){this.rangedFilter_=new sn(t),this.index_=t.getIndex(),this.limit_=t.getLimit(),this.reverse_=!t.isViewFromLeft()}return t.prototype.updateChild=function(t,e,n,r,i,o){return this.rangedFilter_.matches(new yt(e,n))||(n=Vt.EMPTY_NODE),t.getImmediateChild(e).equals(n)?t:t.numChildren()<this.limit_?this.rangedFilter_.getIndexedFilter().updateChild(t,e,n,r,i,o):this.fullLimitUpdateChild_(t,e,n,i,o)},t.prototype.updateFullNode=function(t,e,n){var r;if(e.isLeafNode()||e.isEmpty())r=Vt.EMPTY_NODE.withIndex(this.index_);else if(2*this.limit_<e.numChildren()&&e.isIndexed(this.index_)){r=Vt.EMPTY_NODE.withIndex(this.index_);var i=void 0;i=this.reverse_?e.getReverseIteratorFrom(this.rangedFilter_.getEndPost(),this.index_):e.getIteratorFrom(this.rangedFilter_.getStartPost(),this.index_);for(var o=0;i.hasNext()&&o<this.limit_;){var a=i.getNext();if(!(this.reverse_?this.index_.compare(this.rangedFilter_.getStartPost(),a)<=0:this.index_.compare(a,this.rangedFilter_.getEndPost())<=0))break;r=r.updateImmediateChild(a.name,a.node),o++}}else{r=(r=e.withIndex(this.index_)).updatePriority(Vt.EMPTY_NODE);var s=void 0,u=void 0,c=void 0;i=void 0;if(this.reverse_){i=r.getReverseIterator(this.index_),s=this.rangedFilter_.getEndPost(),u=this.rangedFilter_.getStartPost();var l=this.index_.getCompare();c=function(t,e){return l(e,t)}}else i=r.getIterator(this.index_),s=this.rangedFilter_.getStartPost(),u=this.rangedFilter_.getEndPost(),c=this.index_.getCompare();o=0;for(var h=!1;i.hasNext();){a=i.getNext();!h&&c(s,a)<=0&&(h=!0),h&&o<this.limit_&&c(a,u)<=0?o++:r=r.updateImmediateChild(a.name,Vt.EMPTY_NODE)}}return this.rangedFilter_.getIndexedFilter().updateFullNode(t,r,n)},t.prototype.updatePriority=function(t,e){return t},t.prototype.filtersNodes=function(){return!0},t.prototype.getIndexedFilter=function(){return this.rangedFilter_.getIndexedFilter()},t.prototype.getIndex=function(){return this.index_},t.prototype.fullLimitUpdateChild_=function(t,e,n,r,i){var a;if(this.reverse_){var s=this.index_.getCompare();a=function(t,e){return s(e,t)}}else a=this.index_.getCompare();var u=t;Object(o.f)(u.numChildren()===this.limit_,\"\");var c=new yt(e,n),l=this.reverse_?u.getFirstChild(this.index_):u.getLastChild(this.index_),h=this.rangedFilter_.matches(c);if(u.hasChild(e)){for(var f=u.getImmediateChild(e),p=r.getChildAfterChild(this.index_,l,this.reverse_);null!=p&&(p.name===e||u.hasChild(p.name));)p=r.getChildAfterChild(this.index_,p,this.reverse_);var d=null==p?1:a(p,c);if(h&&!n.isEmpty()&&d>=0)return null!=i&&i.trackChildChange(me.childChangedChange(e,n,f)),u.updateImmediateChild(e,n);null!=i&&i.trackChildChange(me.childRemovedChange(e,f));var v=u.updateImmediateChild(e,Vt.EMPTY_NODE);return null!=p&&this.rangedFilter_.matches(p)?(null!=i&&i.trackChildChange(me.childAddedChange(p.name,p.node)),v.updateImmediateChild(p.name,p.node)):v}return n.isEmpty()?t:h&&a(l,c)>=0?(null!=i&&(i.trackChildChange(me.childRemovedChange(l.name,l.node)),i.trackChildChange(me.childAddedChange(e,n))),u.updateImmediateChild(e,n).updateImmediateChild(l.name,Vt.EMPTY_NODE)):t},t}(),cn=function(){function t(){this.limitSet_=!1,this.startSet_=!1,this.startNameSet_=!1,this.endSet_=!1,this.endNameSet_=!1,this.limit_=0,this.viewFrom_=\"\",this.indexStartValue_=null,this.indexStartName_=\"\",this.indexEndValue_=null,this.indexEndName_=\"\",this.index_=kt}return t.prototype.hasStart=function(){return this.startSet_},t.prototype.isViewFromLeft=function(){return\"\"===this.viewFrom_?this.startSet_:this.viewFrom_===t.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT},t.prototype.getIndexStartValue=function(){return Object(o.f)(this.startSet_,\"Only valid if start has been set\"),this.indexStartValue_},t.prototype.getIndexStartName=function(){return Object(o.f)(this.startSet_,\"Only valid if start has been set\"),this.startNameSet_?this.indexStartName_:O},t.prototype.hasEnd=function(){return this.endSet_},t.prototype.getIndexEndValue=function(){return Object(o.f)(this.endSet_,\"Only valid if end has been set\"),this.indexEndValue_},t.prototype.getIndexEndName=function(){return Object(o.f)(this.endSet_,\"Only valid if end has been set\"),this.endNameSet_?this.indexEndName_:C},t.prototype.hasLimit=function(){return this.limitSet_},t.prototype.hasAnchoredLimit=function(){return this.limitSet_&&\"\"!==this.viewFrom_},t.prototype.getLimit=function(){return Object(o.f)(this.limitSet_,\"Only valid if limit has been set\"),this.limit_},t.prototype.getIndex=function(){return this.index_},t.prototype.copy_=function(){var e=new t;return e.limitSet_=this.limitSet_,e.limit_=this.limit_,e.startSet_=this.startSet_,e.indexStartValue_=this.indexStartValue_,e.startNameSet_=this.startNameSet_,e.indexStartName_=this.indexStartName_,e.endSet_=this.endSet_,e.indexEndValue_=this.indexEndValue_,e.endNameSet_=this.endNameSet_,e.indexEndName_=this.indexEndName_,e.index_=this.index_,e.viewFrom_=this.viewFrom_,e},t.prototype.limit=function(t){var e=this.copy_();return e.limitSet_=!0,e.limit_=t,e.viewFrom_=\"\",e},t.prototype.limitToFirst=function(e){var n=this.copy_();return n.limitSet_=!0,n.limit_=e,n.viewFrom_=t.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT,n},t.prototype.limitToLast=function(e){var n=this.copy_();return n.limitSet_=!0,n.limit_=e,n.viewFrom_=t.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT,n},t.prototype.startAt=function(t,e){var n=this.copy_();return n.startSet_=!0,void 0===t&&(t=null),n.indexStartValue_=t,null!=e?(n.startNameSet_=!0,n.indexStartName_=e):(n.startNameSet_=!1,n.indexStartName_=\"\"),n},t.prototype.endAt=function(t,e){var n=this.copy_();return n.endSet_=!0,void 0===t&&(t=null),n.indexEndValue_=t,void 0!==e?(n.endNameSet_=!0,n.indexEndName_=e):(n.endNameSet_=!1,n.indexEndName_=\"\"),n},t.prototype.orderBy=function(t){var e=this.copy_();return e.index_=t,e},t.prototype.getQueryObject=function(){var e=t.WIRE_PROTOCOL_CONSTANTS_,n={};if(this.startSet_&&(n[e.INDEX_START_VALUE]=this.indexStartValue_,this.startNameSet_&&(n[e.INDEX_START_NAME]=this.indexStartName_)),this.endSet_&&(n[e.INDEX_END_VALUE]=this.indexEndValue_,this.endNameSet_&&(n[e.INDEX_END_NAME]=this.indexEndName_)),this.limitSet_){n[e.LIMIT]=this.limit_;var r=this.viewFrom_;\"\"===r&&(r=this.isViewFromLeft()?e.VIEW_FROM_LEFT:e.VIEW_FROM_RIGHT),n[e.VIEW_FROM]=r}return this.index_!==kt&&(n[e.INDEX]=this.index_.toString()),n},t.prototype.loadsAllData=function(){return!(this.startSet_||this.endSet_||this.limitSet_)},t.prototype.isDefault=function(){return this.loadsAllData()&&this.index_===kt},t.prototype.getNodeFilter=function(){return this.loadsAllData()?new be(this.getIndex()):this.hasLimit()?new un(this):new sn(this)},t.prototype.toRestQueryStringParameters=function(){var e,n=t.REST_QUERY_CONSTANTS_,r={};return this.isDefault()||(this.index_===kt?e=n.PRIORITY_INDEX:this.index_===Ht?e=n.VALUE_INDEX:this.index_===bt?e=n.KEY_INDEX:(Object(o.f)(this.index_ instanceof Kt,\"Unrecognized index type!\"),e=this.index_.toString()),r[n.ORDER_BY]=Object(o.J)(e),this.startSet_&&(r[n.START_AT]=Object(o.J)(this.indexStartValue_),this.startNameSet_&&(r[n.START_AT]+=\",\"+Object(o.J)(this.indexStartName_))),this.endSet_&&(r[n.END_AT]=Object(o.J)(this.indexEndValue_),this.endNameSet_&&(r[n.END_AT]+=\",\"+Object(o.J)(this.indexEndName_))),this.limitSet_&&(this.isViewFromLeft()?r[n.LIMIT_TO_FIRST]=this.limit_:r[n.LIMIT_TO_LAST]=this.limit_)),r},t.WIRE_PROTOCOL_CONSTANTS_={INDEX_START_VALUE:\"sp\",INDEX_START_NAME:\"sn\",INDEX_END_VALUE:\"ep\",INDEX_END_NAME:\"en\",LIMIT:\"l\",VIEW_FROM:\"vf\",VIEW_FROM_LEFT:\"l\",VIEW_FROM_RIGHT:\"r\",INDEX:\"i\"},t.REST_QUERY_CONSTANTS_={ORDER_BY:\"orderBy\",PRIORITY_INDEX:\"$priority\",VALUE_INDEX:\"$value\",KEY_INDEX:\"$key\",START_AT:\"startAt\",END_AT:\"endAt\",LIMIT_TO_FIRST:\"limitToFirst\",LIMIT_TO_LAST:\"limitToLast\"},t.DEFAULT=new t,t}(),ln=function(t){function e(e,n){if(!(e instanceof an))throw new Error(\"new Reference() no longer supported - use app.database().\");return t.call(this,e,n,cn.DEFAULT,!1)||this}return Object(i.c)(e,t),e.prototype.getKey=function(){return Object(o.K)(\"Reference.key\",0,0,arguments.length),this.path.isEmpty()?null:this.path.getBack()},e.prototype.child=function(t){return Object(o.K)(\"Reference.child\",1,1,arguments.length),\"number\"===typeof t?t=String(t):t instanceof U||(null===this.path.getFront()?ct(\"Reference.child\",1,t,!1):ut(\"Reference.child\",1,t,!1)),new e(this.repo,this.path.child(t))},e.prototype.getParent=function(){Object(o.K)(\"Reference.parent\",0,0,arguments.length);var t=this.path.parent();return null===t?null:new e(this.repo,t)},e.prototype.getRoot=function(){Object(o.K)(\"Reference.root\",0,0,arguments.length);for(var t=this;null!==t.getParent();)t=t.getParent();return t},e.prototype.databaseProp=function(){return this.repo.database},e.prototype.set=function(t,e){Object(o.K)(\"Reference.set\",1,2,arguments.length),lt(\"Reference.set\",this.path),nt(\"Reference.set\",1,t,this.path,!1),Object(o.L)(\"Reference.set\",2,e,!0);var n=new o.a;return this.repo.setWithPriority(this.path,t,null,n.wrapCallback(e)),n.promise},e.prototype.update=function(t,e){if(Object(o.K)(\"Reference.update\",1,2,arguments.length),lt(\"Reference.update\",this.path),Array.isArray(t)){for(var n={},r=0;r<t.length;++r)n[\"\"+r]=t[r];t=n,I(\"Passing an Array to Firebase.update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.\")}it(\"Reference.update\",1,t,this.path,!1),Object(o.L)(\"Reference.update\",2,e,!0);var i=new o.a;return this.repo.update(this.path,t,i.wrapCallback(e)),i.promise},e.prototype.setWithPriority=function(t,e,n){if(Object(o.K)(\"Reference.setWithPriority\",2,3,arguments.length),lt(\"Reference.setWithPriority\",this.path),nt(\"Reference.setWithPriority\",1,t,this.path,!1),ot(\"Reference.setWithPriority\",2,e,!1),Object(o.L)(\"Reference.setWithPriority\",3,n,!0),\".length\"===this.getKey()||\".keys\"===this.getKey())throw\"Reference.setWithPriority failed: \"+this.getKey()+\" is a read-only object.\";var r=new o.a;return this.repo.setWithPriority(this.path,t,e,r.wrapCallback(n)),r.promise},e.prototype.remove=function(t){return Object(o.K)(\"Reference.remove\",0,1,arguments.length),lt(\"Reference.remove\",this.path),Object(o.L)(\"Reference.remove\",1,t,!0),this.set(null,t)},e.prototype.transaction=function(t,e,n){if(Object(o.K)(\"Reference.transaction\",1,3,arguments.length),lt(\"Reference.transaction\",this.path),Object(o.L)(\"Reference.transaction\",1,t,!1),Object(o.L)(\"Reference.transaction\",2,e,!0),ft(\"Reference.transaction\",3,n,!0),\".length\"===this.getKey()||\".keys\"===this.getKey())throw\"Reference.transaction failed: \"+this.getKey()+\" is a read-only object.\";void 0===n&&(n=!0);var r=new o.a;\"function\"===typeof e&&r.promise.catch((function(){}));var i=function(t,n,i){t?r.reject(t):r.resolve(new dt(n,i)),\"function\"===typeof e&&e(t,n,i)};return this.repo.startTransaction(this.path,t,i,n),r.promise},e.prototype.setPriority=function(t,e){Object(o.K)(\"Reference.setPriority\",1,2,arguments.length),lt(\"Reference.setPriority\",this.path),ot(\"Reference.setPriority\",1,t,!1),Object(o.L)(\"Reference.setPriority\",2,e,!0);var n=new o.a;return this.repo.setWithPriority(this.path.child(\".priority\"),t,null,n.wrapCallback(e)),n.promise},e.prototype.push=function(t,e){Object(o.K)(\"Reference.push\",0,2,arguments.length),lt(\"Reference.push\",this.path),nt(\"Reference.push\",1,t,this.path,!0),Object(o.L)(\"Reference.push\",2,e,!0);var n,r=this.repo.serverTime(),i=vt(r),a=this.child(i),s=this.child(i);return n=null!=t?a.set(t,e).then((function(){return s})):Promise.resolve(s),a.then=n.then.bind(n),a.catch=n.then.bind(n,void 0),\"function\"===typeof e&&n.catch((function(){})),a},e.prototype.onDisconnect=function(){return lt(\"Reference.onDisconnect\",this.path),new pt(this.repo,this.path)},Object.defineProperty(e.prototype,\"database\",{get:function(){return this.databaseProp()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"key\",{get:function(){return this.getKey()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"parent\",{get:function(){return this.getParent()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"root\",{get:function(){return this.getRoot()},enumerable:!1,configurable:!0}),e}(Xt);Xt.__referenceConstructor=ln,Ce.__referenceConstructor=ln;var hn,fn=function(){this.children={},this.childCount=0,this.value=null},pn=function(){function t(t,e,n){void 0===t&&(t=\"\"),void 0===e&&(e=null),void 0===n&&(n=new fn),this.name_=t,this.parent_=e,this.node_=n}return t.prototype.subTree=function(e){for(var n=e instanceof U?e:new U(e),r=this,i=n.getFront();null!==i;){r=new t(i,r,Object(o.G)(r.node_.children,i)||new fn),i=(n=n.popFront()).getFront()}return r},t.prototype.getValue=function(){return this.node_.value},t.prototype.setValue=function(t){Object(o.f)(\"undefined\"!==typeof t,\"Cannot set value to undefined\"),this.node_.value=t,this.updateParents_()},t.prototype.clear=function(){this.node_.value=null,this.node_.children={},this.node_.childCount=0,this.updateParents_()},t.prototype.hasChildren=function(){return this.node_.childCount>0},t.prototype.isEmpty=function(){return null===this.getValue()&&!this.hasChildren()},t.prototype.forEachChild=function(e){var n=this;j(this.node_.children,(function(r,i){e(new t(r,n,i))}))},t.prototype.forEachDescendant=function(t,e,n){e&&!n&&t(this),this.forEachChild((function(e){e.forEachDescendant(t,!0,n)})),e&&n&&t(this)},t.prototype.forEachAncestor=function(t,e){for(var n=e?this:this.parent();null!==n;){if(t(n))return!0;n=n.parent()}return!1},t.prototype.forEachImmediateDescendantWithValue=function(t){this.forEachChild((function(e){null!==e.getValue()?t(e):e.forEachImmediateDescendantWithValue(t)}))},t.prototype.path=function(){return new U(null===this.parent_?this.name_:this.parent_.path()+\"/\"+this.name_)},t.prototype.name=function(){return this.name_},t.prototype.parent=function(){return this.parent_},t.prototype.updateParents_=function(){null!==this.parent_&&this.parent_.updateChild_(this.name_,this)},t.prototype.updateChild_=function(t,e){var n=e.isEmpty(),r=Object(o.k)(this.node_.children,t);n&&r?(delete this.node_.children[t],this.node_.childCount--,this.updateParents_()):n||r||(this.node_.children[t]=e.node_,this.node_.childCount++,this.updateParents_())},t}();!function(t){t[t.RUN=0]=\"RUN\",t[t.SENT=1]=\"SENT\",t[t.COMPLETED=2]=\"COMPLETED\",t[t.SENT_NEEDS_ABORT=3]=\"SENT_NEEDS_ABORT\",t[t.NEEDS_ABORT=4]=\"NEEDS_ABORT\"}(hn||(hn={})),an.MAX_TRANSACTION_RETRIES_=25,an.prototype.transactionsInit_=function(){this.transactionQueueTree_=new pn},an.prototype.startTransaction=function(t,e,n,r){this.log_(\"transaction on \"+t);var i=function(){},a=new ln(this,t);a.on(\"value\",i);var s={path:t,update:e,onComplete:n,status:null,order:d(),applyLocally:r,retryCount:0,unwatcher:function(){a.off(\"value\",i)},abortReason:null,currentWriteId:null,currentInputSnapshot:null,currentOutputSnapshotRaw:null,currentOutputSnapshotResolved:null},u=this.getLatestState_(t);s.currentInputSnapshot=u;var c=s.update(u.val());if(void 0===c){if(s.unwatcher(),s.currentOutputSnapshotRaw=null,s.currentOutputSnapshotResolved=null,s.onComplete){var l=new Wt(s.currentInputSnapshot,new ln(this,s.path),kt);s.onComplete(null,!1,l)}}else{rt(\"transaction failed: Data returned \",c,s.path),s.status=hn.RUN;var h=this.transactionQueueTree_.subTree(t),f=h.getValue()||[];f.push(s),h.setValue(f);var p=void 0;if(\"object\"===typeof c&&null!==c&&Object(o.k)(c,\".priority\"))p=Object(o.G)(c,\".priority\"),Object(o.f)(et(p),\"Invalid priority returned by transaction. Priority must be a valid string, finite number, server value, or null.\");else p=(this.serverSyncTree_.calcCompleteEventCache(t)||Vt.EMPTY_NODE).getPriority().val();p=p;var v=this.generateServerValues(),y=Bt(c,p),g=ie(y,u,v);s.currentOutputSnapshotRaw=y,s.currentOutputSnapshotResolved=g,s.currentWriteId=this.getNextWriteId_();var m=this.serverSyncTree_.applyUserOverwrite(t,g,s.currentWriteId,s.applyLocally);this.eventQueue_.raiseEventsForChangedPath(t,m),this.sendReadyTransactions_()}},an.prototype.getLatestState_=function(t,e){return this.serverSyncTree_.calcCompleteEventCache(t,e)||Vt.EMPTY_NODE},an.prototype.sendReadyTransactions_=function(t){var e=this;if(void 0===t&&(t=this.transactionQueueTree_),t||this.pruneCompletedTransactionsBelowNode_(t),null!==t.getValue()){var n=this.buildTransactionQueue_(t);Object(o.f)(n.length>0,\"Sending zero length transaction queue\"),n.every((function(t){return t.status===hn.RUN}))&&this.sendTransactionQueue_(t.path(),n)}else t.hasChildren()&&t.forEachChild((function(t){e.sendReadyTransactions_(t)}))},an.prototype.sendTransactionQueue_=function(t,e){for(var n=this,r=e.map((function(t){return t.currentWriteId})),i=this.getLatestState_(t,r),a=i,s=i.hash(),u=0;u<e.length;u++){var c=e[u];Object(o.f)(c.status===hn.RUN,\"tryToSendTransactionQueue_: items in queue should all be run.\"),c.status=hn.SENT,c.retryCount++;var l=U.relativePath(t,c.path);a=a.updateChild(l,c.currentOutputSnapshotRaw)}var h=a.val(!0),f=t;this.server_.put(f.toString(),h,(function(r){n.log_(\"transaction put response\",{path:f.toString(),status:r});var i=[];if(\"ok\"===r){for(var o=[],a=0;a<e.length;a++){if(e[a].status=hn.COMPLETED,i=i.concat(n.serverSyncTree_.ackUserWrite(e[a].currentWriteId)),e[a].onComplete){var s=e[a].currentOutputSnapshotResolved,u=new ln(n,e[a].path),c=new Wt(s,u,kt);o.push(e[a].onComplete.bind(null,null,!0,c))}e[a].unwatcher()}n.pruneCompletedTransactionsBelowNode_(n.transactionQueueTree_.subTree(t)),n.sendReadyTransactions_(),n.eventQueue_.raiseEventsForChangedPath(t,i);for(a=0;a<o.length;a++)M(o[a])}else{if(\"datastale\"===r)for(a=0;a<e.length;a++)e[a].status===hn.SENT_NEEDS_ABORT?e[a].status=hn.NEEDS_ABORT:e[a].status=hn.RUN;else{I(\"transaction at \"+f.toString()+\" failed: \"+r);for(a=0;a<e.length;a++)e[a].status=hn.NEEDS_ABORT,e[a].abortReason=r}n.rerunTransactions_(t)}}),s)},an.prototype.rerunTransactions_=function(t){var e=this.getAncestorTransactionNode_(t),n=e.path(),r=this.buildTransactionQueue_(e);return this.rerunTransactionQueue_(r,n),n},an.prototype.rerunTransactionQueue_=function(t,e){if(0!==t.length){for(var n,r=[],i=[],a=t.filter((function(t){return t.status===hn.RUN})).map((function(t){return t.currentWriteId})),s=0;s<t.length;s++){var u=t[s],c=U.relativePath(e,u.path),l=!1,h=void 0;if(Object(o.f)(null!==c,\"rerunTransactionsUnderNode_: relativePath should not be null.\"),u.status===hn.NEEDS_ABORT)l=!0,h=u.abortReason,i=i.concat(this.serverSyncTree_.ackUserWrite(u.currentWriteId,!0));else if(u.status===hn.RUN)if(u.retryCount>=an.MAX_TRANSACTION_RETRIES_)l=!0,h=\"maxretry\",i=i.concat(this.serverSyncTree_.ackUserWrite(u.currentWriteId,!0));else{var f=this.getLatestState_(u.path,a);u.currentInputSnapshot=f;var p=t[s].update(f.val());if(void 0!==p){rt(\"transaction failed: Data returned \",p,u.path);var d=Bt(p);\"object\"===typeof p&&null!=p&&Object(o.k)(p,\".priority\")||(d=d.updatePriority(f.getPriority()));var v=u.currentWriteId,y=this.generateServerValues(),g=ie(d,f,y);u.currentOutputSnapshotRaw=d,u.currentOutputSnapshotResolved=g,u.currentWriteId=this.getNextWriteId_(),a.splice(a.indexOf(v),1),i=(i=i.concat(this.serverSyncTree_.applyUserOverwrite(u.path,g,u.currentWriteId,u.applyLocally))).concat(this.serverSyncTree_.ackUserWrite(v,!0))}else l=!0,h=\"nodata\",i=i.concat(this.serverSyncTree_.ackUserWrite(u.currentWriteId,!0))}if(this.eventQueue_.raiseEventsForChangedPath(e,i),i=[],l&&(t[s].status=hn.COMPLETED,n=t[s].unwatcher,setTimeout(n,Math.floor(0)),t[s].onComplete))if(\"nodata\"===h){var m=new ln(this,t[s].path),b=t[s].currentInputSnapshot,_=new Wt(b,m,kt);r.push(t[s].onComplete.bind(null,null,!1,_))}else r.push(t[s].onComplete.bind(null,new Error(h),!1,null))}this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);for(s=0;s<r.length;s++)M(r[s]);this.sendReadyTransactions_()}},an.prototype.getAncestorTransactionNode_=function(t){var e,n=this.transactionQueueTree_;for(e=t.getFront();null!==e&&null===n.getValue();)n=n.subTree(e),e=(t=t.popFront()).getFront();return n},an.prototype.buildTransactionQueue_=function(t){var e=[];return this.aggregateTransactionQueuesForNode_(t,e),e.sort((function(t,e){return t.order-e.order})),e},an.prototype.aggregateTransactionQueuesForNode_=function(t,e){var n=this,r=t.getValue();if(null!==r)for(var i=0;i<r.length;i++)e.push(r[i]);t.forEachChild((function(t){n.aggregateTransactionQueuesForNode_(t,e)}))},an.prototype.pruneCompletedTransactionsBelowNode_=function(t){var e=this,n=t.getValue();if(n){for(var r=0,i=0;i<n.length;i++)n[i].status!==hn.COMPLETED&&(n[r]=n[i],r++);n.length=r,t.setValue(n.length>0?n:null)}t.forEachChild((function(t){e.pruneCompletedTransactionsBelowNode_(t)}))},an.prototype.abortTransactions_=function(t){var e=this,n=this.getAncestorTransactionNode_(t).path(),r=this.transactionQueueTree_.subTree(t);return r.forEachAncestor((function(t){e.abortTransactionsOnNode_(t)})),this.abortTransactionsOnNode_(r),r.forEachDescendant((function(t){e.abortTransactionsOnNode_(t)})),n},an.prototype.abortTransactionsOnNode_=function(t){var e=t.getValue();if(null!==e){for(var n=[],r=[],i=-1,a=0;a<e.length;a++)if(e[a].status===hn.SENT_NEEDS_ABORT);else if(e[a].status===hn.SENT)Object(o.f)(i===a-1,\"All SENT items should be at beginning of queue.\"),i=a,e[a].status=hn.SENT_NEEDS_ABORT,e[a].abortReason=\"set\";else if(Object(o.f)(e[a].status===hn.RUN,\"Unexpected transaction status in abort\"),e[a].unwatcher(),r=r.concat(this.serverSyncTree_.ackUserWrite(e[a].currentWriteId,!0)),e[a].onComplete){n.push(e[a].onComplete.bind(null,new Error(\"set\"),!1,null))}-1===i?t.setValue(null):e.length=i+1,this.eventQueue_.raiseEventsForChangedPath(t.path(),r);for(a=0;a<n.length;a++)M(n[a])}};var dn,vn=function(){function t(t,e){var n=this;this.app_=t,this.authProvider_=e,this.auth_=null,this.auth_=e.getImmediate({optional:!0}),this.auth_||e.get().then((function(t){return n.auth_=t}))}return t.prototype.getToken=function(t){return this.auth_?this.auth_.getToken(t).catch((function(t){return t&&\"auth/token-not-initialized\"===t.code?(_(\"Got auth/token-not-initialized error.  Treating as null token.\"),null):Promise.reject(t)})):Promise.resolve(null)},t.prototype.addTokenChangeListener=function(t){this.auth_?this.auth_.addAuthTokenListener(t):(setTimeout((function(){return t(null)}),0),this.authProvider_.get().then((function(e){return e.addAuthTokenListener(t)})))},t.prototype.removeTokenChangeListener=function(t){this.authProvider_.get().then((function(e){return e.removeAuthTokenListener(t)}))},t.prototype.notifyForInvalidToken=function(){var t='Provided authentication credentials for the app named \"'+this.app_.name+'\" are invalid. This usually indicates your app was not initialized correctly. ';\"credential\"in this.app_.options?t+='Make sure the \"credential\" property provided to initializeApp() is authorized to access the specified \"databaseURL\" and is from the correct project.':\"serviceAccount\"in this.app_.options?t+='Make sure the \"serviceAccount\" property provided to initializeApp() is authorized to access the specified \"databaseURL\" and is from the correct project.':t+='Make sure the \"apiKey\" and \"databaseURL\" properties provided to initializeApp() match the values provided for your app at https://console.firebase.google.com/.',I(t)},t}(),yn=function(){function t(){}return t.prototype.getToken=function(e){return Promise.resolve({accessToken:t.EMULATOR_AUTH_TOKEN})},t.prototype.addTokenChangeListener=function(e){e(t.EMULATOR_AUTH_TOKEN)},t.prototype.removeTokenChangeListener=function(t){},t.prototype.notifyForInvalidToken=function(){},t.EMULATOR_AUTH_TOKEN=\"owner\",t}(),gn=function(){function e(){this.repos_={},this.useRestClient_=!1}return e.getInstance=function(){return dn||(dn=new e),dn},e.prototype.interrupt=function(){var t,e,n,r;try{for(var o=Object(i.h)(Object.keys(this.repos_)),a=o.next();!a.done;a=o.next()){var s=a.value;try{for(var u=(n=void 0,Object(i.h)(Object.keys(this.repos_[s]))),c=u.next();!c.done;c=u.next()){var l=c.value;this.repos_[s][l].interrupt()}}catch(h){n={error:h}}finally{try{c&&!c.done&&(r=u.return)&&r.call(u)}finally{if(n)throw n.error}}}}catch(f){t={error:f}}finally{try{a&&!a.done&&(e=o.return)&&e.call(o)}finally{if(t)throw t.error}}},e.prototype.resume=function(){var t,e,n,r;try{for(var o=Object(i.h)(Object.keys(this.repos_)),a=o.next();!a.done;a=o.next()){var s=a.value;try{for(var u=(n=void 0,Object(i.h)(Object.keys(this.repos_[s]))),c=u.next();!c.done;c=u.next()){var l=c.value;this.repos_[s][l].resume()}}catch(h){n={error:h}}finally{try{c&&!c.done&&(r=u.return)&&r.call(u)}finally{if(n)throw n.error}}}}catch(f){t={error:f}}finally{try{a&&!a.done&&(e=o.return)&&e.call(o)}finally{if(t)throw t.error}}},e.prototype.applyEmulatorSettings=function(t,e,n){t.repoInfo_=new K(e+\":\"+n,!1,t.repoInfo_.namespace,t.repoInfo_.webSocketOnly,t.repoInfo_.nodeAdmin,t.repoInfo_.persistenceKey,t.repoInfo_.includeNamespaceInQueryParams),t.repoInfo_.nodeAdmin&&(t.authTokenProvider_=new yn)},e.prototype.databaseFromApp=function(e,n,r,i){var o=r||e.options.databaseURL;void 0===o&&(e.options.projectId||T(\"Can't determine Firebase Database URL. Be sure to include  a Project ID when calling firebase.initializeApp().\"),_(\"Using default host for project \",e.options.projectId),o=e.options.projectId+\"-default-rtdb.firebaseio.com\");var a,s=Q(o,i),u=s.repoInfo,c=void 0;\"undefined\"!==typeof t&&(c=Object({NODE_ENV:\"production\",PUBLIC_URL:\"\",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}).FIREBASE_DATABASE_EMULATOR_HOST),c?(a=!0,o=\"http://\"+c+\"?ns=\"+u.namespace,u=(s=Q(o,i)).repoInfo):a=!s.repoInfo.secure;var l=i&&a?new yn:new vn(e,n);return ht(\"Invalid Firebase Database URL\",1,s),s.path.isEmpty()||T(\"Database URL must point to the root of a Firebase Database (not including a child path).\"),this.createRepo(u,e,l).database},e.prototype.deleteRepo=function(t){var e=Object(o.G)(this.repos_,t.app.name);e&&Object(o.G)(e,t.key)===t||T(\"Database \"+t.app.name+\"(\"+t.repoInfo_+\") has already been deleted.\"),t.interrupt(),delete e[t.key]},e.prototype.createRepo=function(t,e,n){var r=Object(o.G)(this.repos_,e.name);r||(r={},this.repos_[e.name]=r);var i=Object(o.G)(r,t.toURLString());return i&&T(\"Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.\"),i=new an(t,this.useRestClient_,e,n),r[t.toURLString()]=i,i},e.prototype.forceRestClient=function(t){this.useRestClient_=t},e}(),mn=function(){function t(t){var e=this;this.repoInternal_=t,this.instanceStarted_=!1,this.INTERNAL={delete:function(){return Object(i.b)(e,void 0,void 0,(function(){return Object(i.d)(this,(function(t){return this.checkDeleted_(\"delete\"),gn.getInstance().deleteRepo(this.repo_),this.repoInternal_=null,this.rootInternal_=null,[2]}))}))}},t instanceof an||T(\"Don't call new Database() directly - please use firebase.database().\")}return Object.defineProperty(t.prototype,\"repo_\",{get:function(){return this.instanceStarted_||(this.repoInternal_.start(),this.instanceStarted_=!0),this.repoInternal_},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"root_\",{get:function(){return this.rootInternal_||(this.rootInternal_=new ln(this.repo_,U.Empty)),this.rootInternal_},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"app\",{get:function(){return this.repo_.app},enumerable:!1,configurable:!0}),t.prototype.useEmulator=function(t,e){this.checkDeleted_(\"useEmulator\"),this.instanceStarted_?T(\"Cannot call useEmulator() after instance has already been initialized.\"):gn.getInstance().applyEmulatorSettings(this.repoInternal_,t,e)},t.prototype.ref=function(t){return this.checkDeleted_(\"ref\"),Object(o.K)(\"database.ref\",0,1,arguments.length),t instanceof ln?this.refFromURL(t.toString()):void 0!==t?this.root_.child(t):this.root_},t.prototype.refFromURL=function(t){var e=\"database.refFromURL\";this.checkDeleted_(e),Object(o.K)(e,1,1,arguments.length);var n=Q(t,this.repo_.repoInfo_.nodeAdmin);ht(e,1,n);var r=n.repoInfo;return this.repo_.repoInfo_.isCustomHost()||r.host===this.repo_.repoInfo_.host||T(e+\": Host name does not match the current database: (found \"+r.host+\" but expected \"+this.repo_.repoInfo_.host+\")\"),this.ref(n.path.toString())},t.prototype.checkDeleted_=function(t){null===this.repoInternal_&&T(\"Cannot call \"+t+\" on a deleted database.\")},t.prototype.goOffline=function(){Object(o.K)(\"database.goOffline\",0,0,arguments.length),this.checkDeleted_(\"goOffline\"),this.repo_.interrupt()},t.prototype.goOnline=function(){Object(o.K)(\"database.goOnline\",0,0,arguments.length),this.checkDeleted_(\"goOnline\"),this.repo_.resume()},t.ServerValue={TIMESTAMP:{\".sv\":\"timestamp\"},increment:function(t){return{\".sv\":{increment:t}}}},t}();var bn=Object.freeze({__proto__:null,forceLongPolling:function(){Xe.forceDisallow(),We.forceAllow()},forceWebSockets:function(){We.forceDisallow()},isWebSocketsAvailable:function(){return Xe.isAvailable()},setSecurityDebugCallback:function(t,e){t.repo.persistentConnection_.securityDebugCallback_=e},stats:function(t,e){t.repo.stats(e)},statsIncrementCounter:function(t,e){t.repo.statsIncrementCounter(e)},dataUpdateCount:function(t){return t.repo.dataUpdateCount},interceptServerData:function(t,e){return t.repo.interceptServerData_(e)},initStandalone:function(t){var e=t.app,n=t.url,r=t.version,i=t.customAuthImpl,o=t.namespace,a=t.nodeAdmin,u=void 0!==a&&a;Ye(r);var c=new s.c(\"auth-internal\",new s.b(\"database-standalone\"));return c.setComponent(new s.a(\"auth-internal\",(function(){return i}),\"PRIVATE\")),{instance:gn.getInstance().databaseFromApp(e,c,n,u),namespace:o}}}),_n=nn;nn.prototype.simpleListen=function(t,e){this.sendRequest(\"q\",{p:t},e)},nn.prototype.echo=function(t,e){this.sendRequest(\"echo\",{d:t},e)};var wn=Ze,En=K,Tn=Object.freeze({__proto__:null,DataConnection:_n,RealTimeConnection:wn,hijackHash:function(t){var e=nn.prototype.put;return nn.prototype.put=function(n,r,i,o){void 0!==o&&(o=t()),e.call(this,n,r,i,o)},function(){nn.prototype.put=e}},ConnectionTarget:En,queryIdentifier:function(t){return t.queryIdentifier()},forceRestClient:function(t){gn.getInstance().forceRestClient(t)}}),In=mn.ServerValue;!function(t){Ye(t.SDK_VERSION);var n=t.INTERNAL.registerComponent(new s.a(\"database\",(function(t,e){var n=t.getProvider(\"app\").getImmediate(),r=t.getProvider(\"auth-internal\");return gn.getInstance().databaseFromApp(n,r,e)}),\"PUBLIC\").setServiceProps({Reference:ln,Query:Xt,Database:mn,DataSnapshot:Wt,enableLogging:b,INTERNAL:bn,ServerValue:In,TEST_ACCESS:Tn}).setMultipleInstances(!0));t.registerVersion(\"@firebase/database\",\"0.8.3\"),Object(o.z)()&&(e.exports=n)}(r.a)}).call(this,n(13),n(24)(t))},function(t,e){t.exports=function(t){if(!t.webpackPolyfill){var e=Object.create(t);e.children||(e.children=[]),Object.defineProperty(e,\"loaded\",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,\"id\",{enumerable:!0,get:function(){return e.i}}),Object.defineProperty(e,\"exports\",{enumerable:!0}),e.webpackPolyfill=1}return e}},,function(t,e,n){}]]);\n//# sourceMappingURL=2.fd35f610.chunk.js.map"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "151.101.1.195",
        "startedDateTime": "2021-01-20T17:27:44.446Z",
        "time": 0.06399999256245792,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.05199998850002885,
          "receive": 0.01200000406242907,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://proiectae-550b9.web.app/",
          "lineNumber": 0
        },
        "_priority": "High",
        "_resourceType": "script",
        "cache": {},
        "connection": "154998",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://proiectae-550b9.web.app/static/js/main.1ef123d6.chunk.js",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Referer",
              "value": "https://proiectae-550b9.web.app/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "strict-transport-security",
              "value": "max-age=31556926; includeSubDomains; preload"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "last-modified",
              "value": "Wed, 20 Jan 2021 01:52:15 GMT"
            },
            {
              "name": "x-timer",
              "value": "S1611163639.475548,VS0,VE1"
            },
            {
              "name": "etag",
              "value": "\"4fecadd526afb34c40e717b3613b2d58bccbe295a1e1fc7723b6e2c79a65f5aa-br\""
            },
            {
              "name": "vary",
              "value": "x-fh-requested-host, accept-encoding"
            },
            {
              "name": "x-cache",
              "value": "HIT"
            },
            {
              "name": "content-type",
              "value": "text/javascript; charset=utf-8"
            },
            {
              "name": "cache-control",
              "value": "max-age=3600"
            },
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 17:27:19 GMT"
            },
            {
              "name": "x-cache-hits",
              "value": "1"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-length",
              "value": "2038"
            },
            {
              "name": "x-served-by",
              "value": "cache-hhn4043-HHN"
            }
          ],
          "cookies": [],
          "content": {
            "size": 6032,
            "mimeType": "text/javascript",
            "text": "(this.webpackJsonpproicet_ae=this.webpackJsonpproicet_ae||[]).push([[0],{21:function(e,t,s){},25:function(e,t,s){},27:function(e,t,s){\"use strict\";s.r(t);var c=s(3),a=s(8),n=s.n(a),i=s(14),r=s.n(i),o=(s(21),s(10)),l=s(15).a.initializeApp({apiKey:\"AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI\",authDomain:\"proiectae-550b9.firebaseapp.com\",projectId:\"proiectae-550b9\",storageBucket:\"proiectae-550b9.appspot.com\",messagingSenderId:\"139324772277\",appId:\"1:139324772277:web:60977b91514b280693d3fc\",measurementId:\"G-CGHJGQWRZS\"}),d=function(e){var t=e.email,s=e.setEmail,a=e.pass,n=e.setPass,i=e.handleLogin,r=e.handleSignup,o=e.accountExists,l=e.setAccountExists,d=e.emailError,j=e.passError;return Object(c.jsx)(\"section\",{className:\"login\",children:Object(c.jsxs)(\"div\",{className:\"loginContainer\",children:[Object(c.jsx)(\"label\",{children:\"Username\"}),Object(c.jsx)(\"input\",{type:\"text\",autoFocus:!0,required:!0,value:t,onChange:function(e){return s(e.target.value)}}),Object(c.jsx)(\"p\",{className:\"errorMsg\",children:d}),Object(c.jsx)(\"label\",{children:\"Password\"}),Object(c.jsx)(\"input\",{type:\"password\",required:!0,value:a,onChange:function(e){return n(e.target.value)}}),Object(c.jsx)(\"p\",{className:\"errorMsg\",children:j}),Object(c.jsx)(\"div\",{className:\"btnContainer\",children:o?Object(c.jsxs)(c.Fragment,{children:[Object(c.jsx)(\"button\",{onClick:i,children:\"Sign In\"}),Object(c.jsxs)(\"p\",{children:[\"Don't have an acocunt?\",Object(c.jsx)(\"span\",{onClick:function(){return l(!o)},children:\"Sign up\"})]})]}):Object(c.jsxs)(c.Fragment,{children:[Object(c.jsx)(\"button\",{onClick:r,children:\"Sign up\"}),Object(c.jsxs)(\"p\",{children:[\"Have an account?\",Object(c.jsx)(\"span\",{onClick:function(){return l(!o)},children:\"Sign in\"})]})]})})]})})},j=[{id:\"1\",name:\"produs 1\",stock:0,price:100,shortDesc:\"short description\",desc:\"long description\",image:\"https://png.pngtree.com/png-vector/20191027/ourmid/pngtree-white-mug-vector-3d-realistic-ceramic-coffee-tea-cup-isolated-on-png-image_1888425.jpg\"},{id:\"2\",name:\"produs 2\",stock:20,price:30,shortDesc:\"short description\",desc:\"long description\",image:\"https://atlas-content-cdn.pixelsquid.com/stock-images/large-vase-n1PDa4C-600.jpg\"},{id:\"3\",name:\"produs 3\",stock:15,price:149.99,shortDesc:\"short description\",desc:\"long description\",image:\"https://lh3.googleusercontent.com/proxy/fUzC_RUI3SBm8XDqZYj32PWF2jBndWeAI5lP7VjXBIZyh-yYzBoe27lqB5kkUAXS3gjP3t4hLwQt037kLElpa0s9aSsoZYAXkAab45IocZGC5gFcePCTIgU8cFaP\"},{id:\"4\",name:\"produs 4\",stock:5,price:19,shortDesc:\"short description\",desc:\"long description\",image:\"https://i.pinimg.com/originals/dc/19/e9/dc19e9b94a372ebc21ffeb7623d5632a.png\"}],u=function(e){var t=e.handleLogout,s=e.addToCart,a=e.handleCart;return Object(c.jsxs)(\"div\",{className:\"hero is-primary\",children:[Object(c.jsxs)(\"nav\",{children:[Object(c.jsx)(\"h2\",{children:\"Magazin\"}),Object(c.jsx)(\"button\",{onClick:t,children:\"Logout\"})]}),Object(c.jsxs)(\"div\",{className:\"hero-body container\",children:[Object(c.jsx)(\"h4\",{className:\"title\",children:\"Our Products\"}),Object(c.jsx)(\"label\",{children:\"Cart: \"}),Object(c.jsx)(\"span\",{children:s})]}),Object(c.jsx)(\"div\",{className:\"container\",children:Object(c.jsx)(\"div\",{className:\"column columns is-multiline\",children:j&&j.length?j.map((function(e,t){return Object(c.jsx)(\"div\",{className:\" column is-half\",children:Object(c.jsx)(\"div\",{className:\"box\",children:Object(c.jsxs)(\"div\",{className:\"media\",children:[Object(c.jsx)(\"div\",{className:\"media-left\",children:Object(c.jsx)(\"figure\",{className:\"image is-128x128\",children:Object(c.jsx)(\"img\",{src:e.image,alt:e.shortDesc})})}),Object(c.jsxs)(\"div\",{className:\"media-content\",children:[Object(c.jsxs)(\"b\",{style:{textTransform:\"capitalize\"},children:[e.name,\" \",Object(c.jsxs)(\"span\",{className:\"tag is-primary\",children:[\"$\",e.price]})]}),Object(c.jsx)(\"div\",{children:e.shortDesc}),e.stock>0?Object(c.jsx)(\"small\",{children:e.stock+\" Available\"}):Object(c.jsx)(\"small\",{className:\"has-text-danger\",children:\"Out Of Stock\"}),Object(c.jsx)(\"div\",{className:\"is-clearfix\",children:Object(c.jsx)(\"button\",{className:\"button is-small is-outlined is-primary   is-pulled-right\",onClick:a,children:\"Add to Cart\"})})]})]})})})})):Object(c.jsx)(\"div\",{className:\"column\",children:Object(c.jsx)(\"span\",{className:\"title has-text-grey-light\",children:\"No products found!\"})})})})]})},h=(s(25),function(){var e=Object(a.useState)(\"\"),t=Object(o.a)(e,2),s=t[0],n=t[1],i=Object(a.useState)(\"\"),r=Object(o.a)(i,2),j=r[0],h=r[1],b=Object(a.useState)(\"\"),m=Object(o.a)(b,2),p=m[0],g=m[1],O=Object(a.useState)(\"\"),x=Object(o.a)(O,2),f=x[0],v=x[1],k=Object(a.useState)(\"\"),C=Object(o.a)(k,2),N=C[0],S=C[1],E=Object(a.useState)(!0),w=Object(o.a)(E,2),y=w[0],A=w[1],I=Object(a.useState)(\"0\"),P=Object(o.a)(I,2),B=P[0],D=P[1],F=function(){v(\"\"),S(\"\")},L=function(){l.auth().onAuthStateChanged((function(e){e?(h(\"\"),g(\"\"),n(e)):n(\"\")}))};return Object(a.useEffect)((function(){L()}),[]),Object(c.jsx)(\"div\",{className:\"App\",children:s?Object(c.jsx)(u,{handleLogout:function(){l.auth().signOut()},addToCart:B,handleCart:function(){D(\"extraordinar\")}}):Object(c.jsx)(d,{email:j,setEmail:h,pass:p,setPass:g,handleLogin:function(){F(),l.auth().signInWithEmailAndPassword(j,p).catch((function(e){switch(e.code){case\"auth/invalid-email\":case\"auth/user-disabeled\":case\"auth/user-not-found\":v(e.message);break;case\"auth/wrong-password\":S(e.message)}}))},handleSignup:function(){F(),l.auth().createUserWithEmailAndPassword(j,p).catch((function(e){switch(e.code){case\"auth/email-already-in-use\":case\"auth/invalid-email\":v(e.message);break;case\"auth/weak-password\":S(e.message)}}))},accountExists:y,setAccountExists:A,emailError:f,passError:N})})}),b=function(e){e&&e instanceof Function&&s.e(3).then(s.bind(null,28)).then((function(t){var s=t.getCLS,c=t.getFID,a=t.getFCP,n=t.getLCP,i=t.getTTFB;s(e),c(e),a(e),n(e),i(e)}))};s(26);r.a.render(Object(c.jsx)(n.a.StrictMode,{children:Object(c.jsx)(h,{})}),document.getElementById(\"root\")),b()}},[[27,1,2]]]);\n//# sourceMappingURL=main.1ef123d6.chunk.js.map"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "151.101.1.195",
        "startedDateTime": "2021-01-20T17:27:44.446Z",
        "time": 0.06299998494796455,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.047999987145885825,
          "receive": 0.014999997802078724,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,400;0,700;0,800;1,300;1,600&display=swap"
        },
        "_priority": "VeryHigh",
        "_resourceType": "font",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://fonts.gstatic.com/s/montserrat/v15/JTUSjIg1_i6t8kCHKm459WlhyyTh89Y.woff2",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Origin",
              "value": "https://proiectae-550b9.web.app"
            },
            {
              "name": "Referer",
              "value": "https://fonts.googleapis.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 09:50:25 GMT"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "last-modified",
              "value": "Tue, 15 Sep 2020 18:12:14 GMT"
            },
            {
              "name": "server",
              "value": "sffe"
            },
            {
              "name": "age",
              "value": "26171"
            },
            {
              "name": "content-type",
              "value": "font/woff2"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=31536000"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "alt-svc",
              "value": "h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
            },
            {
              "name": "content-length",
              "value": "13708"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "expires",
              "value": "Thu, 20 Jan 2022 09:50:25 GMT"
            }
          ],
          "cookies": [],
          "content": {
            "size": 13708,
            "mimeType": "font/woff2"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "172.217.19.99",
        "startedDateTime": "2021-01-20T17:27:44.525Z",
        "time": 0.10200001997873187,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.0850000069476664,
          "receive": 0.017000013031065464,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "memory",
        "_initiator": {
          "type": "parser",
          "url": "https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,400;0,700;0,800;1,300;1,600&display=swap"
        },
        "_priority": "VeryHigh",
        "_resourceType": "font",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://fonts.gstatic.com/s/montserrat/v15/JTURjIg1_i6t8kCHKm45_dJE3gnD_vx3rCs.woff2",
          "httpVersion": "h3-29",
          "headers": [
            {
              "name": "Origin",
              "value": "https://proiectae-550b9.web.app"
            },
            {
              "name": "Referer",
              "value": "https://fonts.googleapis.com/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "h3-29",
          "headers": [
            {
              "name": "date",
              "value": "Tue, 19 Jan 2021 23:43:44 GMT"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "last-modified",
              "value": "Tue, 15 Sep 2020 18:11:15 GMT"
            },
            {
              "name": "server",
              "value": "sffe"
            },
            {
              "name": "age",
              "value": "62572"
            },
            {
              "name": "content-type",
              "value": "font/woff2"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=31536000"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "alt-svc",
              "value": "h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
            },
            {
              "name": "content-length",
              "value": "13612"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "expires",
              "value": "Wed, 19 Jan 2022 23:43:44 GMT"
            }
          ],
          "cookies": [],
          "content": {
            "size": 13612,
            "mimeType": "font/woff2"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "172.217.19.99",
        "startedDateTime": "2021-01-20T17:27:44.525Z",
        "time": 0.06999998004175723,
        "timings": {
          "blocked": -1,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.057999975979328156,
          "receive": 0.01200000406242907,
          "_blocked_queueing": -1
        }
      },
      {
        "_fromCache": "disk",
        "_initiator": {
          "type": "other"
        },
        "_priority": "Medium",
        "_resourceType": "manifest",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://proiectae-550b9.web.app/manifest.json",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Referer",
              "value": "https://proiectae-550b9.web.app/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "max-age=3600"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "etag",
              "value": "\"aff3449bdc238776f5d6d967f19ec491b36aed5fb7f23ccff6500736fd58494a-br\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 20 Jan 2021 01:52:15 GMT"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 17:27:20 GMT"
            },
            {
              "name": "x-served-by",
              "value": "cache-hhn4083-HHN"
            },
            {
              "name": "x-cache",
              "value": "MISS"
            },
            {
              "name": "x-cache-hits",
              "value": "0"
            },
            {
              "name": "x-timer",
              "value": "S1611163640.747862,VS0,VE379"
            },
            {
              "name": "vary",
              "value": "x-fh-requested-host, accept-encoding"
            },
            {
              "name": "content-length",
              "value": "203"
            }
          ],
          "cookies": [],
          "content": {
            "size": 492,
            "mimeType": "application/json",
            "text": "{\n  \"short_name\": \"React App\",\n  \"name\": \"Create React App Sample\",\n  \"icons\": [\n    {\n      \"src\": \"favicon.ico\",\n      \"sizes\": \"64x64 32x32 24x24 16x16\",\n      \"type\": \"image/x-icon\"\n    },\n    {\n      \"src\": \"logo192.png\",\n      \"type\": \"image/png\",\n      \"sizes\": \"192x192\"\n    },\n    {\n      \"src\": \"logo512.png\",\n      \"type\": \"image/png\",\n      \"sizes\": \"512x512\"\n    }\n  ],\n  \"start_url\": \".\",\n  \"display\": \"standalone\",\n  \"theme_color\": \"#000000\",\n  \"background_color\": \"#ffffff\"\n}\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "151.101.1.195",
        "startedDateTime": "2021-01-20T17:27:44.573Z",
        "time": 3.6689999978989363,
        "timings": {
          "blocked": 2.495000000797212,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.7099999855402856,
          "receive": 0.46400001156143844,
          "_blocked_queueing": 2.431000000797212
        }
      },
      {
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "other",
        "cache": {},
        "connection": "154998",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://proiectae-550b9.web.app/favicon.ico",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":authority",
              "value": "proiectae-550b9.web.app"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": ":path",
              "value": "/favicon.ico"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            },
            {
              "name": "accept",
              "value": "image/avif,image/webp,image/apng,image/*,*/*;q=0.8"
            },
            {
              "name": "sec-fetch-site",
              "value": "same-origin"
            },
            {
              "name": "sec-fetch-mode",
              "value": "no-cors"
            },
            {
              "name": "sec-fetch-dest",
              "value": "image"
            },
            {
              "name": "referer",
              "value": "https://proiectae-550b9.web.app/"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "accept-language",
              "value": "ro-RO,ro;q=0.9,en-US;q=0.8,en;q=0.7"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "max-age=3600"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "content-type",
              "value": "image/x-icon"
            },
            {
              "name": "etag",
              "value": "\"eae62e993eb980ec8a25058c39d5a51feab118bd2100c4deebb2a9c158ec11f9\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 20 Jan 2021 01:52:15 GMT"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31556926; includeSubDomains; preload"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 17:27:44 GMT"
            },
            {
              "name": "x-served-by",
              "value": "cache-hhn4043-HHN"
            },
            {
              "name": "x-cache",
              "value": "MISS"
            },
            {
              "name": "x-cache-hits",
              "value": "0"
            },
            {
              "name": "x-timer",
              "value": "S1611163664.440340,VS0,VE403"
            },
            {
              "name": "vary",
              "value": "x-fh-requested-host, accept-encoding"
            },
            {
              "name": "content-length",
              "value": "3460"
            }
          ],
          "cookies": [],
          "content": {
            "size": 3870,
            "mimeType": "image/x-icon",
            "text": "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",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 3585,
          "_error": null
        },
        "serverIPAddress": "151.101.1.195",
        "startedDateTime": "2021-01-20T17:27:44.573Z",
        "time": 439.96899999910966,
        "timings": {
          "blocked": 2.8340000016409905,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.6300000000000001,
          "wait": 435.97599998573025,
          "receive": 0.5290000117383897,
          "_blocked_queueing": 2.4120000016409904
        }
      },
      {
        "_fromCache": "disk",
        "_initiator": {
          "type": "other"
        },
        "_priority": "High",
        "_resourceType": "other",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://proiectae-550b9.web.app/logo192.png",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Referer",
              "value": "https://proiectae-550b9.web.app/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "cache-control",
              "value": "max-age=3600"
            },
            {
              "name": "content-encoding",
              "value": "br"
            },
            {
              "name": "content-type",
              "value": "image/png"
            },
            {
              "name": "etag",
              "value": "\"3ee59515172ee198f3be375979df15ac5345183e656720a381b8872b2a39dc8b-br\""
            },
            {
              "name": "last-modified",
              "value": "Wed, 20 Jan 2021 01:52:15 GMT"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 17:27:20 GMT"
            },
            {
              "name": "x-served-by",
              "value": "cache-hhn4043-HHN"
            },
            {
              "name": "x-cache",
              "value": "MISS"
            },
            {
              "name": "x-cache-hits",
              "value": "0"
            },
            {
              "name": "x-timer",
              "value": "S1611163640.164478,VS0,VE696"
            },
            {
              "name": "vary",
              "value": "x-fh-requested-host, accept-encoding"
            },
            {
              "name": "content-length",
              "value": "5291"
            }
          ],
          "cookies": [],
          "content": {
            "size": 5347,
            "mimeType": "image/png",
            "text": "iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAMAAABlApw1AAAAh1BMVEUAAABk2vth2vxh2/xh2vxh2/xh2vth2/xh2vth2vxh2/xh2vxh2vxh2/xh2vxh2vxh2vth2vth2vth2vxg2vth2vth2/th2vxh2vxh2vxh2vxh2vtg2vth2vth2/xh2vxh2/xh2vth2/xh2vth2vth2/th2vth2vtm6P9h3P5j3/9l4/9o6/9I1caUAAAAJ3RSTlMACPsj9g8s4NjrX5OArPGcRcDQTBwXbj9Y5bM0UWe5eXTKOqTFh4yMjSHNAAAT5ElEQVR42uxb6XKbMBAuAhtsLhs7PvAVx2nQwfs/Xy0s8SmVscgUt/2RzUwnAaTV3qvd7Y9v+IZv+IZv+IZv+IZv+Cp4LfzpRj/kHrefvwcmrj9C7Vl/PhWAxdtNTx9xnBwWvufA7Dj8craK0+MxzU+LlyeTALzrPKzoDXgQ5Zvll2jAPt5b8p5xqkBM0sUTKQDa3ZHXvCI3qJio6STdjIC6L/fHScRryiqit+JUzHfPogCIT4xWpAIQQjil4U9fvu5//FlJqLgurgwgFWWvzxECMOc1U0gBDfeCfAzcruMv3gVlOD12YnX8XDW61BqrjbrKfTdy+cFsLmjVtU8dD08AcCc4P2ngMwnBT4ctyJfjlJvH1zYACg5DUwDkMw51FdJxSGM2SaDbKSi4H7YSoo4P7Wug1UxWjQemAMgjobHULDzP59GE1590mXB6hB7d056osSGwoRZZUeZ5WhDK1EM6x5JhCXilRB2TxbuRfLRcvx4D6U3AURqsNAU2B2IujE855VG8WN7e+h+Mq3d0M6QIgH4U3jAQns2MF/7qzKUCQI+OSxzAZP9bVBukcprla88IyrNA7U/PWDYkAQdKlJKumwwMidAsNYMDodlGvrEjiDCOX2+TpZlJeYaJidlTrOCdKgadPm3fkLJLOSUEzG29OeRX1oywVkqTpHVY+OZDY7jg1XACGCvkIvLuxab1nPKWgqo++/IpPngLqSEiFiNzM4nc3mTAJ/L10AScNHuUn7ZImG6h4oRmUAPv+o4JAiOZ7+TD7jhDnmLG84YAIrnj3feRo1xACJzLtEa9+aBQn8ZNdWzhE3b7Jh+KAOz9MuG3vdMHbn4R1lAjmstn0kzLmhCwH4Gik0uiwDdDEbDmyklPza0tLb7Ao5L66EkTfylAlWAn+ZlLT1kAExrYiTJyP9BD2wMKQyiuxjjeGg/CN/mRm018NjgB8Y2N0gd5j70VGB7Qrb/LRNAqVTpSi52Kuhrcio837aRHx85X+i5tVCN0kgn9OxeJW7PPgjwpqY4UAa6d5etXzttTM/2bCPY/3GtThSYd7OCIMcQpW3ijoHX7UH9HloxgPGQ6BA+d8f4hxmstF+c/v/RauFJ+NISpDZVIsC+4B+U7AXXp9Vs3VeFyOxqYgJ3OFF2FDyRvHOfncd8L/0LcTGeyHJiAtagQBnqt2AsQwNZY5by1DhrJsDHFxv0WVMyQQNBXcGum8Iz/DQGwmYCb130x6bnu7b8g4Oq0JqYfbdzKVan/BwKIJMDtg0JKoEHNOhrBrwyjQsMbMZKJMw309Va0edFcvuppxDzzh3ajTLHmrcfGqY4BpE4u+D3/iht9GTqQEQQyZzqAM8cyCwx0NE6wdoBANnwqgZuDPv9F6pOsZuAy9G9SCSRzuNJ3a3F7+z3elka6osfYm2t1gmRuUFB1UahB5wmWE070fUxysXkkiA4HL47luSKgxMNBy1qoF3Q7IH3YUB0WUY3Jwu3j9aWBZlhI+9zIvLYDQjgc7tW38H79C9zIPgYlAK6F4E7cXcBugO/1d7BNGFF3Afk5d2IcAQ66o6igz/mKz1ATuAJjuwcb+NpbLwYnYM+Bv5t/gsCB4keuONatbcDFdwXi4bs0uJKJrkDgKTvp8IJe1BKH2l4vOQ9VWtzyG3rbj3pew2MYAJ+MvaU/lrDbyX/95dJbBwzqpaY8PLv6pEuLw8NZoOABr2lQsWivMGwSTSZZQIhUuYqQIMgmkyhrX1cLHB17oDaKAuyQIrjQ1g0B761RNj3FZREaVzAuOOcMwK8g8JpVYXHMk+l6+Rsdo9ARLgdo8XF5pVH9JX+2io9XztJby9UA1fjF3+oBKJRrWBYd49XM93SrZ1exZ/UHEIzoomnt7ZM0ygStqVDzGtVXQC1hzQZZlCb7hooNKsjDE7DMFHc+/ENeBKJhuvvgbkKkOGoRRJeVnysph8/o8XmFUOypqGZ7o89/BHK5FgatdIOmHL5BcwUdTBl7xHcCsJ86FipukPp1sOEtOIjltOB3Wcgq2zobEIIrEMZDbgnABv4+9RXqgZi/PJQZ5Q7G3bS3eC8v8c/TYbrZL2az2Xp9/Wex30wPr0mcp/NziG1YpwkJmpWH5R9SgObj/pJhmsQAeXRO65qjhVR6zsJDSY2GeE35XTIIozRLNyMnDW7mj3+GgvLfUGirEyQ85odDwCo0qG/ZWwNI5hpQ0pxwJYBgOs2PYePPQIU5CyK28dhBgmuucF9WVA8FAZho5hXT034sN89p3zETFB5Ut0dGw8UpLTLRBBR7kq06bjzQ8FXdORQCqmPAle/Jwvd0ok3VU2QwrjaSJri99PiLpNzew1RRGq0wVvGl459C+vuAop6WGKmPmh+ZvyAH7tszR/FEp1XLLSfIQ4BU0G2C0Yrex38NP2s+kXalldc35m0+tEag6tNfidTVt2mIv2n/RDVmWMPk1E8KaFeHlP9+epJeFOdqeWPFRQdVICeg9oCbl374U9864zSgepIN40UHCME9W/xOBTE1R1AyX/k/Rpkd6o+UoG7du84XMGJRfRYqEbqaxPSo52Lhcs8zRYGzCBdz8XkpL06+fKVPy7KlFr3MH3FT+2pujsQZ80h13jzxX8+8USXYgshfXCTI1/uwroxlvM7ytTbZ1W8zQ8qCu8st6qGNpVDreKgdQqL33utV63xSC4OEqp5snHOpXmwov9Sd8KSG01WNGjoErKpqbW+GX7oKMKT+qd6eBeaRNMbla0TFp0HBHJt1TWpg6opQWkw9HABzc1zqEO4Id0KAltBopE5jFUFrApcGZ4A7t2LatBCU4Eh1tHtUGFsE1CS32AC5PXeGUxCO1hlw+4f8Pdxuw/d82liQFQww4dfKEs4Y+2wKUylEZQ0H49sV58ZkWzi10EKH5mjb4BJu7jUrgyZ7bvLroIQHsaqNfC0pKOyKEKbxwjYhYITRzpmphFbGZFtyNweZt7dWuHNYMAg9yiSkBUZFCRnBjjUzmigGXbRzsgSqQSr6oQ5mjwxCe0pMtll8U17zx0xU1X2xH9oJb2AlED3aYcrvqOse3KpFgl8qPULt2nbNxugtkNkhSDNdS8Oe1v4wU0Aw5ef9eExEYUyMjjqTgwxCQNC5O9qAwcIHWQDdrT8pMUByU6sigJHWY1pZSL2YUYIo1kHBcl5XGiAocJYTbb0PRksQemnaCABqCy2rLfbf7Q140JvzXDiH/TxDsgSVIxinfsUPOH9HCR23easUDtdkA/n9Uz/Te+j8uvAe55iMof59tzVKOHsw2Qa2AdDOQqzroIDBWnQCirCDufKH5cGKE116MT8dtfdU5miNmBxGJLVzfRuQ6OBjhdfeq5sChR0BAwFWguhxKXlXOmR17ZDSdIElgpMWp6siBwYJ9P2Ra0XyqXOoEuoGnE1WZI3LdALDyBr650gTIB/HXKMqoHroTBkR1QXaZ9sxBSmNCZ1aDtkDvQu8tkZbCa3tsCXRpyyPux+uNoC5i4Dy3v95gF32GmixeFdSVw/Yzuigc5aT7QLgsEQAbXQAkijYE+Yg4n6TeZgHwkUYQy0PCMA8pe2IEIXdGmBOtIBtCJTusSpmCwDC6QZ4SlsEsO/+w7EvBgF9CzvI6EDyHxAAp9avr4RsBpdPr+8oje1q4DdM0twq1NEAj7+CHi1/dGfFr/bOdDttGIjCRZjF7EvYEpKwxpLs93++1ljwGYSRaUSXc5gfbRKwLVma0ejOndHOca2lqQyabddt4an2AJTnyRFMXuPeSAGjrzwySLYOsnaZ0WFhgikUFacvgxNmJlV8FzqIrWfpwNVzdIA9AS+Dt1EWl4SBhykraYcAYQ2vzFplisV2+BkA1lb3+OPNWXNIOE1ZhXiGvYlNwXZdfh2jNezonRNIKNx4y/oJDUnbhe4z7pZZLxR4UAzAfe70y+J0BVaXqZtaCe7hUuFr067IDhHRsDEOu3/F7W/Ic6OLZYQZySy6qcLaDBpuLctM2f1MQ7OlRKNupebEwra5KJ+hGwIB30qmaSw0r+0c9QyiqxLw1phumWasNQDHDeCc5CheBbAWCWtfYHJFvrRIWgf0gZeBHg+T4Hr7IY0Cj2b3GifAKoXt38da3IC2oJxHcl1QpQO1U8GkEurrm5raLrkSuhbJsGKvGUYzaqET2KrvSBBMXq994+P04oSMPit0wcL1DQq+stwwkhHRZKB97nhu+mSrGFokO1BIwVDyKs6HPodNjy7xZFYMs+akNh9o6wLACbMKOCdKkAxBKwkXG0PsBHd/zEaglQylTZtMBBZPdwnz5+0GPhkWVY8t+H+/SMH1I4FlQQ0AKKLoI/A63up5NZOYlpFUZ/egnfYTPJlqLxgrdjIEbEDU8pHmeb/ZU3Gses0t9YeQkSRQeTPAUW2DdRchnwy9iEW+2ku/bj7AjcDcGY2w9uPEh6pvs9kbVawuEVRc4Hz47aKOUjuQKh+gmd5EPk2QjO6K7iz9gPWOtGjmMeiEHePjR9shoYYE/P50DtHjzVbkmx9ZIbLC+id0QQ/fU9PGG2cGsQND+RDYFAUeIe6PWdWwQxmLtDXUUuWBr5gg5a04/UUFGikX/RmrGAsm6x+u8J2FfkRyALqwqgzJpr3IyCbM6Iajihg1gIKzK7NYfT1VPGZQfmHDUS7PgOSqyxDuIp3JnZGSOjp7j2JfKV0Eq7rVpgsUAhK76VwoFnwiO0Ss764UBRrKH/V0uo6S+Pz5Mu7iHZTpwub11AX4KnnLXbHoS+4dtb0Gv1LcBtxen7gqNH/oZHrYi9/HQYMQAXxw1Gr0+K5yHMO8BmOkstnIk7AjO2vylxuFrUjgiyAqeO0MXk5vbpWUJaywjUGDzRUvg89uT/EMBj5Rr4O7WXOsIiG0HSSdTeG6/76ZVHihJcFB4olCZjjUZPbeX4fpvOEJEJV6/Tea/1vEv51Cobj1wcNRvVG3M68uI8WGCr6lvSRkn9DfZXXe2a576qJeGkwfPVr9Pv2V1fCrGae+5VXeeSKlWgQK1MclJKqoYKGkTODAn7c+XX6YO9+szjnehrHUBVRvpRVxyH5n2hoP3urVSa1WOUmtNqnWN4Nla9XpB3xbqwI6uJKmAuV3288w1Jb9hSqiz0eIIXiLoNcLG41G85f8+i/s9QKhTNoGXy6i76uw2zIcYI/8dTAQF/v+EK5VhrduOOxKHbrquBSAy0frbY5Vtv5ouM4+RMHFPo5O3EzV3bcQmmp1m+KQPCO+2wvansTBaDvfHtlI1Qfm0CTpjqLe+vpoHHqRKaL4nZYb+r6UovG6P2QBjY87PO9ZTHjA4MuV+rLTHYWm7qWK7umEyjQ6FuFu2xnXK6dyGsoC4X2msxIMRcNqb8tV/2PUCHRM+44ai5znqsQqaIxe29NxvYadINzhOQsIQAX4kmcaqVXfOprlQElLFPG/uFOv1q7epmtFrH0Jkaktf7poQD85JYOON2neTOt9+kve31ut5Xg2y1AkbsGF1kaBmLcXARHC5bR7AbZDL/PSzoc2LTNJsIs9q0/B7cdAXPczgUvJocmc7jxhxUVGki3/lf7I6HYT6mgBNswRiwRtYZz9CESj4tlpR3qUMpMADgXJ6i4ujf+yDHCrHFUNIA8SbTPFPVS+WgaCkKHgtXAw79Z9Z7C7fEGhCmkegrI7jsoeTe9WtFsqWdzkNFNQCPsKjF2aB+FVhpQqdAWiTzh4N/0dwAcM2EHIs0bKU61FJ7MT/JFQaOqDRG5KEziZ8FpYAvNQhhRFnARqZGa+SDoo6zJuHlVfaF4CHqYkUjIdH+tdotW3VSgT6bViKmWDADPdpsi4pToqwWKwU0SW/ktUsRtwNwPunzoRvzflUC9FpMl3B/Cy3I5HRtJGlF6WuvDln+hARtI+9gBS9j/RgUFpbqSKkMMC8D91IO1BfguJc/m3dGBS0gphS+cRokmc+jtWqDw5lqS6+GwKdUv1APq+HDxqJV6VI2jvpbqgW9ZKUtP9r8QQQkkid3sTEULZ5nKcVMp1/mF3GoU50V9Bn4O4R6DL6U57L7JF9at1iXkcntqvdEQRcE0WZ6k6Un47sHLVH0N9lYb79bk5Kx7vxKvWsYBD7FHQLrVxFFvsn4KzQsXTi/L9TQ6vKECQtf8TmVhhbpghzpqhuTqapxual/wBChHndRW8JsiongSauZ3Fc+usmUCGmytHWHDWUYGmAX55EtQLdLqQWJhntjVT/x8mGKnWJGsWcSK19z09FhpkzU67jqSAmoTCXhzjouWQ2HXBDNo+LkJjWzjTmGVTKhqpOzTRPkgnalPiwoK1vNeZI/GAIbCav/mI41wLQxat4qOM+AoDAP3Vt4Dcql71kg43O5BzmD7Dl/sOk+K4LeAXj2KTsybEJwy1LaJtsWL6nB8IefU4LwotnhwQ5dcG2TSZeLE8/nUy7htqG8RCzppxH6i2H0zMp0ujJQ5/y8uRdkLHo/a01Vq1h6E8oxQJqfaV+460C3fb9v6r24y1ePihfIM492QZS5lIfcEO3L3dXGmvHyqYJMmpBoyyghveXVKIDUI4yjCVPdaRGylDg3qUQNFHICp/3SyExTzaFR+sGUiT4uldoOjz6LPJE7SrZXfuxUebCrmwAEjPPehSmTDPyFzsq984XJZJuGMF8SwUfrnIbVAyEcMW62ppQuGe430PEukksFeQB/Rg0mkcyr3qjK/RG36SKXEfk222XwfxgeOV/qsbjOJjBCrjeP8xaiwazV23M375jcqgXFIdf/Y/duv1cLuaUdDokUL1rEkNd9nDGeN/pvUoMz99+04Usv5TwpOf8pSnPOUpT3nKU/5r+QnL/zLKJKcZgAAAAABJRU5ErkJggg==",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "151.101.1.195",
        "startedDateTime": "2021-01-20T17:27:44.578Z",
        "time": 1.5239999920595437,
        "timings": {
          "blocked": 0.94399999435246,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.21100001103058458,
          "receive": 0.36899998667649925,
          "_blocked_queueing": 0.8859999943524599
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "Ca",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 682249
              },
              {
                "functionName": "ts.u",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 690746
              },
              {
                "functionName": "hs",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 689894
              },
              {
                "functionName": "",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 691071
              },
              {
                "functionName": "Ee",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 631328
              },
              {
                "functionName": "ds",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 691049
              },
              {
                "functionName": "",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 698580
              },
              {
                "functionName": "De.i.a.i.g",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 632633
              },
              {
                "functionName": "qe",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 633681
              },
              {
                "functionName": "Ve",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 633572
              },
              {
                "functionName": "n.fc",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 634152
              },
              {
                "functionName": "we",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 631181
              }
            ],
            "parent": {
              "description": "Promise.then",
              "callFrames": [
                {
                  "functionName": "pe",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 630031
                },
                {
                  "functionName": "me",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 631098
                },
                {
                  "functionName": "Fe",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 633389
                },
                {
                  "functionName": "xe",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 632491
                },
                {
                  "functionName": "De",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 632773
                },
                {
                  "functionName": "Ee.then",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 633755
                },
                {
                  "functionName": "n.dc",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 763492
                },
                {
                  "functionName": "r",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 774238
                },
                {
                  "functionName": "handleSignup",
                  "scriptId": "21",
                  "url": "https://proiectae-550b9.web.app/static/js/main.1ef123d6.chunk.js",
                  "lineNumber": 0,
                  "columnNumber": 5423
                },
                {
                  "functionName": "zt",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 496866
                },
                {
                  "functionName": "Yt",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 497020
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 515227
                },
                {
                  "functionName": "Sr",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 515321
                },
                {
                  "functionName": "Or",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 515736
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 521389
                },
                {
                  "functionName": "Lt",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 597248
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 517197
                },
                {
                  "functionName": "Rr",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 517227
                },
                {
                  "functionName": "Ze",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 505298
                },
                {
                  "functionName": "$e",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 504524
                },
                {
                  "functionName": "e.unstable_runWithPriority",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 603230
                },
                {
                  "functionName": "zi",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525589
                },
                {
                  "functionName": "xt",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 596987
                },
                {
                  "functionName": "Je",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 504316
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "xhr",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "POST",
          "url": "https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI",
          "httpVersion": "h3-29",
          "headers": [
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":authority",
              "value": "www.googleapis.com"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": ":path",
              "value": "/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI"
            },
            {
              "name": "content-length",
              "value": "75"
            },
            {
              "name": "x-client-version",
              "value": "Chrome/JsCore/8.0.1/FirebaseCore-web"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "origin",
              "value": "https://proiectae-550b9.web.app"
            },
            {
              "name": "x-client-data",
              "value": "CLO1yQEIjbbJAQimtskBCMG2yQEIqZ3KAQjHwsoBCKzHygEItMvKAQikzcoBCNzVygEIlJrLAQjVnMsBCKidywEIq53LARj6uMoB"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "referer",
              "value": "https://proiectae-550b9.web.app/"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "accept-language",
              "value": "ro-RO,ro;q=0.9,en-US;q=0.8,en;q=0.7"
            }
          ],
          "queryString": [
            {
              "name": "key",
              "value": "AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 75,
          "postData": {
            "mimeType": "application/json",
            "text": "{\"email\":\"email@gmail.com\",\"password\":\"parola123\",\"returnSecureToken\":true}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "h3-29",
          "headers": [
            {
              "name": "expires",
              "value": "Mon, 01 Jan 1990 00:00:00 GMT"
            },
            {
              "name": "cache-control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 17:27:55 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=UTF-8"
            },
            {
              "name": "vary",
              "value": "Origin"
            },
            {
              "name": "vary",
              "value": "X-Origin"
            },
            {
              "name": "vary",
              "value": "Referer"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "server",
              "value": "ESF"
            },
            {
              "name": "content-length",
              "value": "1001"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "access-control-allow-origin",
              "value": "https://proiectae-550b9.web.app"
            },
            {
              "name": "access-control-expose-headers",
              "value": "date,vary,vary,vary,content-encoding,server,content-length"
            },
            {
              "name": "alt-svc",
              "value": "h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
            }
          ],
          "cookies": [],
          "content": {
            "size": 1330,
            "mimeType": "application/json",
            "text": "{\n  \"kind\": \"identitytoolkit#SignupNewUserResponse\",\n  \"idToken\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImEyYjkxODJiMWI0NmNiN2ZjN2MzMTFlZTgwMjFhZDY1MmVlMjc2MjIiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vcHJvaWVjdGFlLTU1MGI5IiwiYXVkIjoicHJvaWVjdGFlLTU1MGI5IiwiYXV0aF90aW1lIjoxNjExMTYzNjc1LCJ1c2VyX2lkIjoiYkJNRVZJNGRVWVpZQ0IyZGgxa2lUVktMT1VmMSIsInN1YiI6ImJCTUVWSTRkVVlaWUNCMmRoMWtpVFZLTE9VZjEiLCJpYXQiOjE2MTExNjM2NzUsImV4cCI6MTYxMTE2NzI3NSwiZW1haWwiOiJlbWFpbEBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsiZW1haWxAZ21haWwuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.t_-0oyiz3_DXyuxRchA7ABN5kBy-hP-FVF741yAlWii6kSWg2TIL1gDX_0iFkMZfCc0Ya3TnTPeEUsyEXX4MdJvnY3dG2BtJLmQQ53FN7s_OSwUBoYp6iKfJ7xSUW3f832MgS3GahuudlaoXZfHrzCTdhzDrFx-rdY2c5M019vMCQJGvc11hp7hTaxwb7yeY4rl-yZPj4Kpd35DiGrUieYkeSy2axiVSK8kpm6d3dQLIIyPbFA8aDjaAx0l9k5lL1svx1yIVpbgXjm8ORn6cZYVzlKeHdPcWRuHZpj-0c3rpfFnTNuKg7PYbwgdhTOujtUQ6eT1ZYXX9lsO18O-2-w\",\n  \"email\": \"email@gmail.com\",\n  \"refreshToken\": \"AG8BCnc_AR4tm3D1O1JSEkHwbTeaSXdeeSqVzhQwT_j8q6BsWvBwMJDM8I7uxhtlW3noKgbxoArs-zlljg06aBQZAUWF9Zt-Zf2p9FGrC1XobBN60vUlGBE8xTvljZtLxmSbgxDROSujhPt0apll4UT9INv8hkpGvTR8xqjW94xRAQeLhhGhURtJ5YSvVbLtri_O5jlE9Woa9kgAHMnadB1VLTXQZPJjUw\",\n  \"expiresIn\": \"3600\",\n  \"localId\": \"bBMEVI4dUYZYCB2dh1kiTVKLOUf1\"\n}\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 1026,
          "_error": null
        },
        "serverIPAddress": "172.217.23.74",
        "startedDateTime": "2021-01-20T17:27:55.635Z",
        "time": 431.72300001606345,
        "timings": {
          "blocked": 132.97899999856762,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.078,
          "wait": 298.29199999274687,
          "receive": 0.3740000247489661,
          "_blocked_queueing": 132.86199999856763
        }
      },
      {
        "_initiator": {
          "type": "other",
          "url": "https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI"
        },
        "_priority": "High",
        "_resourceType": "other",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "OPTIONS",
          "url": "https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI",
          "httpVersion": "h3-29",
          "headers": [
            {
              "name": ":method",
              "value": "OPTIONS"
            },
            {
              "name": ":authority",
              "value": "www.googleapis.com"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": ":path",
              "value": "/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "access-control-request-method",
              "value": "POST"
            },
            {
              "name": "access-control-request-headers",
              "value": "content-type,x-client-version"
            },
            {
              "name": "origin",
              "value": "https://proiectae-550b9.web.app"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "referer",
              "value": "https://proiectae-550b9.web.app/"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "accept-language",
              "value": "ro-RO,ro;q=0.9,en-US;q=0.8,en;q=0.7"
            }
          ],
          "queryString": [
            {
              "name": "key",
              "value": "AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "h3-29",
          "headers": [
            {
              "name": "access-control-allow-origin",
              "value": "https://proiectae-550b9.web.app"
            },
            {
              "name": "vary",
              "value": "origin"
            },
            {
              "name": "vary",
              "value": "referer"
            },
            {
              "name": "vary",
              "value": "x-origin"
            },
            {
              "name": "access-control-allow-methods",
              "value": "DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT"
            },
            {
              "name": "access-control-allow-headers",
              "value": "content-type,x-client-version"
            },
            {
              "name": "access-control-max-age",
              "value": "3600"
            },
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 17:27:55 GMT"
            },
            {
              "name": "content-type",
              "value": "text/html"
            },
            {
              "name": "server",
              "value": "ESF"
            },
            {
              "name": "content-length",
              "value": "0"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "alt-svc",
              "value": "h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "text/html"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "172.217.23.74",
        "startedDateTime": "2021-01-20T17:27:55.637Z",
        "time": 131.4260000007786,
        "timings": {
          "blocked": -0.89,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.09699999999999999,
          "wait": 131.04599999956042,
          "receive": 0.2830000012181699,
          "_blocked_queueing": -1
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "Ca",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 682249
              },
              {
                "functionName": "ts.u",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 690746
              },
              {
                "functionName": "hs",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 689894
              },
              {
                "functionName": "",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 691071
              },
              {
                "functionName": "Ee",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 631328
              },
              {
                "functionName": "ds",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 691049
              },
              {
                "functionName": "",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 698580
              },
              {
                "functionName": "De.i.a.i.g",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 632633
              },
              {
                "functionName": "qe",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 633681
              },
              {
                "functionName": "Ve",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 633572
              },
              {
                "functionName": "n.fc",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 634152
              },
              {
                "functionName": "we",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 631181
              }
            ],
            "parent": {
              "description": "Promise.then",
              "callFrames": [
                {
                  "functionName": "pe",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 630031
                },
                {
                  "functionName": "me",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 631098
                },
                {
                  "functionName": "Fe",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 633389
                },
                {
                  "functionName": "Le",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 632927
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 631348
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 691127
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 690613
                },
                {
                  "functionName": "On",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 640513
                },
                {
                  "functionName": "Tn.dispatchEvent",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 642463
                },
                {
                  "functionName": "Pa",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 683114
                },
                {
                  "functionName": "n.Ic",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 685353
                },
                {
                  "functionName": "n.Ub",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 685330
                }
              ],
              "parent": {
                "description": "XMLHttpRequest.send",
                "callFrames": [
                  {
                    "functionName": "Ca",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 682249
                  },
                  {
                    "functionName": "ts.u",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 690746
                  },
                  {
                    "functionName": "hs",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 689894
                  },
                  {
                    "functionName": "",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 691071
                  },
                  {
                    "functionName": "Ee",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 631328
                  },
                  {
                    "functionName": "ds",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 691049
                  },
                  {
                    "functionName": "",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 698580
                  },
                  {
                    "functionName": "De.i.a.i.g",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 632633
                  },
                  {
                    "functionName": "qe",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 633681
                  },
                  {
                    "functionName": "Ve",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 633572
                  },
                  {
                    "functionName": "n.fc",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 634152
                  },
                  {
                    "functionName": "we",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 631181
                  }
                ],
                "parent": {
                  "description": "Promise.then",
                  "callFrames": [
                    {
                      "functionName": "pe",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 630031
                    },
                    {
                      "functionName": "me",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 631098
                    },
                    {
                      "functionName": "Fe",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 633389
                    },
                    {
                      "functionName": "xe",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 632491
                    },
                    {
                      "functionName": "De",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 632773
                    },
                    {
                      "functionName": "Ee.then",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 633755
                    },
                    {
                      "functionName": "n.dc",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 763492
                    },
                    {
                      "functionName": "r",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 774238
                    },
                    {
                      "functionName": "handleSignup",
                      "scriptId": "21",
                      "url": "https://proiectae-550b9.web.app/static/js/main.1ef123d6.chunk.js",
                      "lineNumber": 0,
                      "columnNumber": 5423
                    },
                    {
                      "functionName": "zt",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 496866
                    },
                    {
                      "functionName": "Yt",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 497020
                    },
                    {
                      "functionName": "",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 515227
                    },
                    {
                      "functionName": "Sr",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 515321
                    },
                    {
                      "functionName": "Or",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 515736
                    },
                    {
                      "functionName": "",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 521389
                    },
                    {
                      "functionName": "Lt",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 597248
                    },
                    {
                      "functionName": "",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 517197
                    },
                    {
                      "functionName": "Rr",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 517227
                    },
                    {
                      "functionName": "Ze",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 505298
                    },
                    {
                      "functionName": "$e",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 504524
                    },
                    {
                      "functionName": "e.unstable_runWithPriority",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 603230
                    },
                    {
                      "functionName": "zi",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 525589
                    },
                    {
                      "functionName": "xt",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 596987
                    },
                    {
                      "functionName": "Je",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 504316
                    }
                  ]
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "xhr",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "POST",
          "url": "https://www.googleapis.com/identitytoolkit/v3/relyingparty/getAccountInfo?key=AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI",
          "httpVersion": "h3-29",
          "headers": [
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":authority",
              "value": "www.googleapis.com"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": ":path",
              "value": "/identitytoolkit/v3/relyingparty/getAccountInfo?key=AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI"
            },
            {
              "name": "content-length",
              "value": "927"
            },
            {
              "name": "x-client-version",
              "value": "Chrome/JsCore/8.0.1/FirebaseCore-web"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "origin",
              "value": "https://proiectae-550b9.web.app"
            },
            {
              "name": "x-client-data",
              "value": "CLO1yQEIjbbJAQimtskBCMG2yQEIqZ3KAQjHwsoBCKzHygEItMvKAQikzcoBCNzVygEIlJrLAQjVnMsBCKidywEIq53LARj6uMoB"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "referer",
              "value": "https://proiectae-550b9.web.app/"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "accept-language",
              "value": "ro-RO,ro;q=0.9,en-US;q=0.8,en;q=0.7"
            }
          ],
          "queryString": [
            {
              "name": "key",
              "value": "AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 927,
          "postData": {
            "mimeType": "application/json",
            "text": "{\"idToken\":\"eyJhbGciOiJSUzI1NiIsImtpZCI6ImEyYjkxODJiMWI0NmNiN2ZjN2MzMTFlZTgwMjFhZDY1MmVlMjc2MjIiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vcHJvaWVjdGFlLTU1MGI5IiwiYXVkIjoicHJvaWVjdGFlLTU1MGI5IiwiYXV0aF90aW1lIjoxNjExMTYzNjc1LCJ1c2VyX2lkIjoiYkJNRVZJNGRVWVpZQ0IyZGgxa2lUVktMT1VmMSIsInN1YiI6ImJCTUVWSTRkVVlaWUNCMmRoMWtpVFZLTE9VZjEiLCJpYXQiOjE2MTExNjM2NzUsImV4cCI6MTYxMTE2NzI3NSwiZW1haWwiOiJlbWFpbEBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsiZW1haWxAZ21haWwuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.t_-0oyiz3_DXyuxRchA7ABN5kBy-hP-FVF741yAlWii6kSWg2TIL1gDX_0iFkMZfCc0Ya3TnTPeEUsyEXX4MdJvnY3dG2BtJLmQQ53FN7s_OSwUBoYp6iKfJ7xSUW3f832MgS3GahuudlaoXZfHrzCTdhzDrFx-rdY2c5M019vMCQJGvc11hp7hTaxwb7yeY4rl-yZPj4Kpd35DiGrUieYkeSy2axiVSK8kpm6d3dQLIIyPbFA8aDjaAx0l9k5lL1svx1yIVpbgXjm8ORn6cZYVzlKeHdPcWRuHZpj-0c3rpfFnTNuKg7PYbwgdhTOujtUQ6eT1ZYXX9lsO18O-2-w\"}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "h3-29",
          "headers": [
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 17:27:56 GMT"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "expires",
              "value": "Mon, 01 Jan 1990 00:00:00 GMT"
            },
            {
              "name": "cache-control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=UTF-8"
            },
            {
              "name": "vary",
              "value": "Origin"
            },
            {
              "name": "vary",
              "value": "X-Origin"
            },
            {
              "name": "vary",
              "value": "Referer"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "server",
              "value": "ESF"
            },
            {
              "name": "content-length",
              "value": "332"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "access-control-allow-origin",
              "value": "https://proiectae-550b9.web.app"
            },
            {
              "name": "access-control-expose-headers",
              "value": "date,vary,vary,vary,content-encoding,server,content-length"
            },
            {
              "name": "alt-svc",
              "value": "h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
            }
          ],
          "cookies": [],
          "content": {
            "size": 648,
            "mimeType": "application/json",
            "text": "{\n  \"kind\": \"identitytoolkit#GetAccountInfoResponse\",\n  \"users\": [\n    {\n      \"localId\": \"bBMEVI4dUYZYCB2dh1kiTVKLOUf1\",\n      \"email\": \"email@gmail.com\",\n      \"passwordHash\": \"UkVEQUNURUQ=\",\n      \"emailVerified\": false,\n      \"passwordUpdatedAt\": 1611163675757,\n      \"providerUserInfo\": [\n        {\n          \"providerId\": \"password\",\n          \"federatedId\": \"email@gmail.com\",\n          \"email\": \"email@gmail.com\",\n          \"rawId\": \"email@gmail.com\"\n        }\n      ],\n      \"validSince\": \"1611163675\",\n      \"lastLoginAt\": \"1611163675757\",\n      \"createdAt\": \"1611163675757\",\n      \"lastRefreshAt\": \"2021-01-20T17:27:55.757Z\"\n    }\n  ]\n}\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 357,
          "_error": null
        },
        "serverIPAddress": "172.217.23.74",
        "startedDateTime": "2021-01-20T17:27:56.070Z",
        "time": 176.67200000141747,
        "timings": {
          "blocked": 1.1970000024978071,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.106,
          "wait": 174.3859999935571,
          "receive": 0.9830000053625554,
          "_blocked_queueing": 1.0820000024978071
        }
      },
      {
        "_fromCache": "disk",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [],
            "parent": {
              "description": "Image",
              "callFrames": [
                {
                  "functionName": "_",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 484277
                },
                {
                  "functionName": "is",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 559724
                },
                {
                  "functionName": "ku",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579855
                },
                {
                  "functionName": "Cu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579737
                },
                {
                  "functionName": "Su",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579604
                },
                {
                  "functionName": "Iu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579467
                },
                {
                  "functionName": "yu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 576433
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525812
                },
                {
                  "functionName": "e.unstable_runWithPriority",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 603230
                },
                {
                  "functionName": "zi",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525589
                },
                {
                  "functionName": "Wi",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525757
                },
                {
                  "functionName": "Ki",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525692
                },
                {
                  "functionName": "hu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 573802
                },
                {
                  "functionName": "ka",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 545369
                },
                {
                  "functionName": "",
                  "scriptId": "21",
                  "url": "https://proiectae-550b9.web.app/static/js/main.1ef123d6.chunk.js",
                  "lineNumber": 0,
                  "columnNumber": 4862
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 13811
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 15113
                }
              ],
              "parent": {
                "description": "Promise.then",
                "callFrames": [
                  {
                    "functionName": "t.sendOne",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 15043
                  },
                  {
                    "functionName": "t.forEachObserver",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 14974
                  },
                  {
                    "functionName": "t.next",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 13780
                  },
                  {
                    "functionName": "",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 762642
                  },
                  {
                    "functionName": "Eh",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 756858
                  },
                  {
                    "functionName": "",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 755877
                  },
                  {
                    "functionName": "De.i.a.i.g",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 632633
                  },
                  {
                    "functionName": "qe",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 633681
                  },
                  {
                    "functionName": "Ve",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 633572
                  },
                  {
                    "functionName": "n.fc",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 634152
                  },
                  {
                    "functionName": "we",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 631181
                  }
                ],
                "parent": {
                  "description": "Promise.then",
                  "callFrames": [
                    {
                      "functionName": "pe",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 630031
                    },
                    {
                      "functionName": "me",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 631098
                    },
                    {
                      "functionName": "Fe",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 633389
                    },
                    {
                      "functionName": "Le",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 632927
                    },
                    {
                      "functionName": "",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 631348
                    },
                    {
                      "functionName": "Uu.t.onsuccess",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 712240
                    }
                  ],
                  "parent": {
                    "description": "IndexedDB",
                    "callFrames": [
                      {
                        "functionName": "",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 715811
                      },
                      {
                        "functionName": "De.i.a.i.g",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 632633
                      },
                      {
                        "functionName": "qe",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 633681
                      },
                      {
                        "functionName": "Ve",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 633572
                      },
                      {
                        "functionName": "n.fc",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 634152
                      },
                      {
                        "functionName": "we",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 631181
                      }
                    ],
                    "parent": {
                      "description": "Promise.then",
                      "callFrames": [
                        {
                          "functionName": "pe",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 630031
                        },
                        {
                          "functionName": "me",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 631098
                        },
                        {
                          "functionName": "Fe",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 633389
                        },
                        {
                          "functionName": "Le",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 632927
                        },
                        {
                          "functionName": "",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 631348
                        },
                        {
                          "functionName": "Uu.t.onsuccess",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 712240
                        }
                      ],
                      "parent": {
                        "description": "IndexedDB",
                        "callFrames": [
                          {
                            "functionName": "",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 715656
                          },
                          {
                            "functionName": "De.i.a.i.g",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 632633
                          },
                          {
                            "functionName": "qe",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 633681
                          },
                          {
                            "functionName": "Ve",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 633572
                          },
                          {
                            "functionName": "n.fc",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 634152
                          },
                          {
                            "functionName": "we",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 631181
                          }
                        ],
                        "parent": {
                          "description": "Promise.then",
                          "callFrames": [
                            {
                              "functionName": "pe",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 630031
                            },
                            {
                              "functionName": "me",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 631098
                            },
                            {
                              "functionName": "Fe",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 633389
                            },
                            {
                              "functionName": "Le",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 632927
                            },
                            {
                              "functionName": "",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 631348
                            },
                            {
                              "functionName": "Uu.t.onsuccess",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 712240
                            }
                          ],
                          "parent": {
                            "description": "IndexedDB",
                            "callFrames": [
                              {
                                "functionName": "",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 715496
                              },
                              {
                                "functionName": "De.i.a.i.g",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 632633
                              },
                              {
                                "functionName": "qe",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 633681
                              },
                              {
                                "functionName": "Ve",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 633572
                              },
                              {
                                "functionName": "n.fc",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 634152
                              },
                              {
                                "functionName": "we",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 631181
                              }
                            ],
                            "parent": {
                              "description": "Promise.then",
                              "callFrames": [
                                {
                                  "functionName": "pe",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 630031
                                },
                                {
                                  "functionName": "me",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 631098
                                },
                                {
                                  "functionName": "Fe",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 633389
                                },
                                {
                                  "functionName": "Le",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 632927
                                },
                                {
                                  "functionName": "",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 631348
                                },
                                {
                                  "functionName": "",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 691127
                                },
                                {
                                  "functionName": "",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 690613
                                },
                                {
                                  "functionName": "On",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 640513
                                },
                                {
                                  "functionName": "Tn.dispatchEvent",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 642463
                                },
                                {
                                  "functionName": "Pa",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 683114
                                },
                                {
                                  "functionName": "n.Ic",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 685353
                                },
                                {
                                  "functionName": "n.Ub",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 685330
                                }
                              ],
                              "parent": {
                                "description": "XMLHttpRequest.send",
                                "callFrames": [
                                  {
                                    "functionName": "Ca",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 682249
                                  },
                                  {
                                    "functionName": "ts.u",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 690746
                                  },
                                  {
                                    "functionName": "hs",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 689894
                                  },
                                  {
                                    "functionName": "",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 691071
                                  },
                                  {
                                    "functionName": "Ee",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 631328
                                  },
                                  {
                                    "functionName": "ds",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 691049
                                  },
                                  {
                                    "functionName": "",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 698580
                                  },
                                  {
                                    "functionName": "De.i.a.i.g",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 632633
                                  },
                                  {
                                    "functionName": "qe",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 633681
                                  },
                                  {
                                    "functionName": "Ve",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 633572
                                  },
                                  {
                                    "functionName": "n.fc",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 634152
                                  },
                                  {
                                    "functionName": "we",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 631181
                                  }
                                ],
                                "parent": {
                                  "description": "Promise.then",
                                  "callFrames": [
                                    {
                                      "functionName": "pe",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 630031
                                    },
                                    {
                                      "functionName": "me",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 631098
                                    },
                                    {
                                      "functionName": "Fe",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 633389
                                    },
                                    {
                                      "functionName": "Le",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 632927
                                    },
                                    {
                                      "functionName": "",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 631348
                                    },
                                    {
                                      "functionName": "",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 691127
                                    },
                                    {
                                      "functionName": "",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 690613
                                    },
                                    {
                                      "functionName": "On",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 640513
                                    },
                                    {
                                      "functionName": "Tn.dispatchEvent",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 642463
                                    },
                                    {
                                      "functionName": "Pa",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 683114
                                    },
                                    {
                                      "functionName": "n.Ic",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 685353
                                    },
                                    {
                                      "functionName": "n.Ub",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 685330
                                    }
                                  ],
                                  "parent": {
                                    "description": "XMLHttpRequest.send",
                                    "callFrames": [
                                      {
                                        "functionName": "Ca",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 682249
                                      },
                                      {
                                        "functionName": "ts.u",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 690746
                                      },
                                      {
                                        "functionName": "hs",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 689894
                                      },
                                      {
                                        "functionName": "",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 691071
                                      },
                                      {
                                        "functionName": "Ee",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 631328
                                      },
                                      {
                                        "functionName": "ds",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 691049
                                      },
                                      {
                                        "functionName": "",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 698580
                                      },
                                      {
                                        "functionName": "De.i.a.i.g",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 632633
                                      },
                                      {
                                        "functionName": "qe",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 633681
                                      },
                                      {
                                        "functionName": "Ve",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 633572
                                      },
                                      {
                                        "functionName": "n.fc",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 634152
                                      },
                                      {
                                        "functionName": "we",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 631181
                                      }
                                    ],
                                    "parent": {
                                      "description": "Promise.then",
                                      "callFrames": [
                                        {
                                          "functionName": "pe",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 630031
                                        },
                                        {
                                          "functionName": "me",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 631098
                                        },
                                        {
                                          "functionName": "Fe",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 633389
                                        },
                                        {
                                          "functionName": "xe",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 632491
                                        },
                                        {
                                          "functionName": "De",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 632773
                                        },
                                        {
                                          "functionName": "Ee.then",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 633755
                                        },
                                        {
                                          "functionName": "n.dc",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 763492
                                        },
                                        {
                                          "functionName": "r",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 774238
                                        },
                                        {
                                          "functionName": "handleSignup",
                                          "scriptId": "21",
                                          "url": "https://proiectae-550b9.web.app/static/js/main.1ef123d6.chunk.js",
                                          "lineNumber": 0,
                                          "columnNumber": 5423
                                        },
                                        {
                                          "functionName": "zt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 496866
                                        },
                                        {
                                          "functionName": "Yt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 497020
                                        },
                                        {
                                          "functionName": "",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 515227
                                        },
                                        {
                                          "functionName": "Sr",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 515321
                                        },
                                        {
                                          "functionName": "Or",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 515736
                                        },
                                        {
                                          "functionName": "",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 521389
                                        },
                                        {
                                          "functionName": "Lt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 597248
                                        },
                                        {
                                          "functionName": "",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 517197
                                        },
                                        {
                                          "functionName": "Rr",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 517227
                                        },
                                        {
                                          "functionName": "Ze",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 505298
                                        },
                                        {
                                          "functionName": "$e",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 504524
                                        },
                                        {
                                          "functionName": "e.unstable_runWithPriority",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 603230
                                        },
                                        {
                                          "functionName": "zi",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 525589
                                        },
                                        {
                                          "functionName": "xt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 596987
                                        },
                                        {
                                          "functionName": "Je",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 504316
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://png.pngtree.com/png-vector/20191027/ourmid/pngtree-white-mug-vector-3d-realistic-ceramic-coffee-tea-cup-isolated-on-png-image_1888425.jpg",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Referer",
              "value": "https://proiectae-550b9.web.app/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "x-amz-id-2",
              "value": "+2YzkJjoq8b5cMiZuvOZztC4U/dAp1b5QfuKnV41s3l0efXM4MPH739WX+AP9zxUAa1RZoiAldk="
            },
            {
              "name": "x-amz-request-id",
              "value": "96512D347EF0F03D"
            },
            {
              "name": "last-modified",
              "value": "Mon, 03 Feb 2020 21:17:28 GMT"
            },
            {
              "name": "etag",
              "value": "\"5d5382b87c7c734142da1a3ecf4df297\""
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "content-length",
              "value": "3550"
            },
            {
              "name": "server",
              "value": "AmazonS3"
            },
            {
              "name": "cache-control",
              "value": "max-age=1178268"
            },
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 17:06:36 GMT"
            }
          ],
          "cookies": [],
          "content": {
            "size": 3550,
            "mimeType": "image/jpeg",
            "text": "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",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "104.117.76.9",
        "startedDateTime": "2021-01-20T17:27:56.257Z",
        "time": 2.2659999958705157,
        "timings": {
          "blocked": 1.4350000045597553,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.40399999955110255,
          "receive": 0.42699999175965786,
          "_blocked_queueing": 1.3460000045597553
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [],
            "parent": {
              "description": "Image",
              "callFrames": [
                {
                  "functionName": "_",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 484277
                },
                {
                  "functionName": "is",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 559724
                },
                {
                  "functionName": "ku",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579855
                },
                {
                  "functionName": "Cu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579737
                },
                {
                  "functionName": "Su",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579604
                },
                {
                  "functionName": "Iu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579467
                },
                {
                  "functionName": "yu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 576433
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525812
                },
                {
                  "functionName": "e.unstable_runWithPriority",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 603230
                },
                {
                  "functionName": "zi",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525589
                },
                {
                  "functionName": "Wi",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525757
                },
                {
                  "functionName": "Ki",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525692
                },
                {
                  "functionName": "hu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 573802
                },
                {
                  "functionName": "ka",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 545369
                },
                {
                  "functionName": "",
                  "scriptId": "21",
                  "url": "https://proiectae-550b9.web.app/static/js/main.1ef123d6.chunk.js",
                  "lineNumber": 0,
                  "columnNumber": 4862
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 13811
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 15113
                }
              ],
              "parent": {
                "description": "Promise.then",
                "callFrames": [
                  {
                    "functionName": "t.sendOne",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 15043
                  },
                  {
                    "functionName": "t.forEachObserver",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 14974
                  },
                  {
                    "functionName": "t.next",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 13780
                  },
                  {
                    "functionName": "",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 762642
                  },
                  {
                    "functionName": "Eh",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 756858
                  },
                  {
                    "functionName": "",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 755877
                  },
                  {
                    "functionName": "De.i.a.i.g",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 632633
                  },
                  {
                    "functionName": "qe",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 633681
                  },
                  {
                    "functionName": "Ve",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 633572
                  },
                  {
                    "functionName": "n.fc",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 634152
                  },
                  {
                    "functionName": "we",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 631181
                  }
                ],
                "parent": {
                  "description": "Promise.then",
                  "callFrames": [
                    {
                      "functionName": "pe",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 630031
                    },
                    {
                      "functionName": "me",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 631098
                    },
                    {
                      "functionName": "Fe",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 633389
                    },
                    {
                      "functionName": "Le",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 632927
                    },
                    {
                      "functionName": "",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 631348
                    },
                    {
                      "functionName": "Uu.t.onsuccess",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 712240
                    }
                  ],
                  "parent": {
                    "description": "IndexedDB",
                    "callFrames": [
                      {
                        "functionName": "",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 715811
                      },
                      {
                        "functionName": "De.i.a.i.g",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 632633
                      },
                      {
                        "functionName": "qe",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 633681
                      },
                      {
                        "functionName": "Ve",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 633572
                      },
                      {
                        "functionName": "n.fc",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 634152
                      },
                      {
                        "functionName": "we",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 631181
                      }
                    ],
                    "parent": {
                      "description": "Promise.then",
                      "callFrames": [
                        {
                          "functionName": "pe",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 630031
                        },
                        {
                          "functionName": "me",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 631098
                        },
                        {
                          "functionName": "Fe",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 633389
                        },
                        {
                          "functionName": "Le",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 632927
                        },
                        {
                          "functionName": "",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 631348
                        },
                        {
                          "functionName": "Uu.t.onsuccess",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 712240
                        }
                      ],
                      "parent": {
                        "description": "IndexedDB",
                        "callFrames": [
                          {
                            "functionName": "",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 715656
                          },
                          {
                            "functionName": "De.i.a.i.g",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 632633
                          },
                          {
                            "functionName": "qe",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 633681
                          },
                          {
                            "functionName": "Ve",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 633572
                          },
                          {
                            "functionName": "n.fc",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 634152
                          },
                          {
                            "functionName": "we",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 631181
                          }
                        ],
                        "parent": {
                          "description": "Promise.then",
                          "callFrames": [
                            {
                              "functionName": "pe",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 630031
                            },
                            {
                              "functionName": "me",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 631098
                            },
                            {
                              "functionName": "Fe",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 633389
                            },
                            {
                              "functionName": "Le",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 632927
                            },
                            {
                              "functionName": "",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 631348
                            },
                            {
                              "functionName": "Uu.t.onsuccess",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 712240
                            }
                          ],
                          "parent": {
                            "description": "IndexedDB",
                            "callFrames": [
                              {
                                "functionName": "",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 715496
                              },
                              {
                                "functionName": "De.i.a.i.g",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 632633
                              },
                              {
                                "functionName": "qe",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 633681
                              },
                              {
                                "functionName": "Ve",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 633572
                              },
                              {
                                "functionName": "n.fc",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 634152
                              },
                              {
                                "functionName": "we",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 631181
                              }
                            ],
                            "parent": {
                              "description": "Promise.then",
                              "callFrames": [
                                {
                                  "functionName": "pe",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 630031
                                },
                                {
                                  "functionName": "me",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 631098
                                },
                                {
                                  "functionName": "Fe",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 633389
                                },
                                {
                                  "functionName": "Le",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 632927
                                },
                                {
                                  "functionName": "",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 631348
                                },
                                {
                                  "functionName": "",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 691127
                                },
                                {
                                  "functionName": "",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 690613
                                },
                                {
                                  "functionName": "On",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 640513
                                },
                                {
                                  "functionName": "Tn.dispatchEvent",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 642463
                                },
                                {
                                  "functionName": "Pa",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 683114
                                },
                                {
                                  "functionName": "n.Ic",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 685353
                                },
                                {
                                  "functionName": "n.Ub",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 685330
                                }
                              ],
                              "parent": {
                                "description": "XMLHttpRequest.send",
                                "callFrames": [
                                  {
                                    "functionName": "Ca",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 682249
                                  },
                                  {
                                    "functionName": "ts.u",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 690746
                                  },
                                  {
                                    "functionName": "hs",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 689894
                                  },
                                  {
                                    "functionName": "",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 691071
                                  },
                                  {
                                    "functionName": "Ee",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 631328
                                  },
                                  {
                                    "functionName": "ds",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 691049
                                  },
                                  {
                                    "functionName": "",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 698580
                                  },
                                  {
                                    "functionName": "De.i.a.i.g",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 632633
                                  },
                                  {
                                    "functionName": "qe",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 633681
                                  },
                                  {
                                    "functionName": "Ve",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 633572
                                  },
                                  {
                                    "functionName": "n.fc",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 634152
                                  },
                                  {
                                    "functionName": "we",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 631181
                                  }
                                ],
                                "parent": {
                                  "description": "Promise.then",
                                  "callFrames": [
                                    {
                                      "functionName": "pe",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 630031
                                    },
                                    {
                                      "functionName": "me",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 631098
                                    },
                                    {
                                      "functionName": "Fe",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 633389
                                    },
                                    {
                                      "functionName": "Le",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 632927
                                    },
                                    {
                                      "functionName": "",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 631348
                                    },
                                    {
                                      "functionName": "",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 691127
                                    },
                                    {
                                      "functionName": "",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 690613
                                    },
                                    {
                                      "functionName": "On",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 640513
                                    },
                                    {
                                      "functionName": "Tn.dispatchEvent",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 642463
                                    },
                                    {
                                      "functionName": "Pa",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 683114
                                    },
                                    {
                                      "functionName": "n.Ic",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 685353
                                    },
                                    {
                                      "functionName": "n.Ub",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 685330
                                    }
                                  ],
                                  "parent": {
                                    "description": "XMLHttpRequest.send",
                                    "callFrames": [
                                      {
                                        "functionName": "Ca",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 682249
                                      },
                                      {
                                        "functionName": "ts.u",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 690746
                                      },
                                      {
                                        "functionName": "hs",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 689894
                                      },
                                      {
                                        "functionName": "",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 691071
                                      },
                                      {
                                        "functionName": "Ee",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 631328
                                      },
                                      {
                                        "functionName": "ds",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 691049
                                      },
                                      {
                                        "functionName": "",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 698580
                                      },
                                      {
                                        "functionName": "De.i.a.i.g",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 632633
                                      },
                                      {
                                        "functionName": "qe",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 633681
                                      },
                                      {
                                        "functionName": "Ve",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 633572
                                      },
                                      {
                                        "functionName": "n.fc",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 634152
                                      },
                                      {
                                        "functionName": "we",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 631181
                                      }
                                    ],
                                    "parent": {
                                      "description": "Promise.then",
                                      "callFrames": [
                                        {
                                          "functionName": "pe",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 630031
                                        },
                                        {
                                          "functionName": "me",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 631098
                                        },
                                        {
                                          "functionName": "Fe",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 633389
                                        },
                                        {
                                          "functionName": "xe",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 632491
                                        },
                                        {
                                          "functionName": "De",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 632773
                                        },
                                        {
                                          "functionName": "Ee.then",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 633755
                                        },
                                        {
                                          "functionName": "n.dc",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 763492
                                        },
                                        {
                                          "functionName": "r",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 774238
                                        },
                                        {
                                          "functionName": "handleSignup",
                                          "scriptId": "21",
                                          "url": "https://proiectae-550b9.web.app/static/js/main.1ef123d6.chunk.js",
                                          "lineNumber": 0,
                                          "columnNumber": 5423
                                        },
                                        {
                                          "functionName": "zt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 496866
                                        },
                                        {
                                          "functionName": "Yt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 497020
                                        },
                                        {
                                          "functionName": "",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 515227
                                        },
                                        {
                                          "functionName": "Sr",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 515321
                                        },
                                        {
                                          "functionName": "Or",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 515736
                                        },
                                        {
                                          "functionName": "",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 521389
                                        },
                                        {
                                          "functionName": "Lt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 597248
                                        },
                                        {
                                          "functionName": "",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 517197
                                        },
                                        {
                                          "functionName": "Rr",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 517227
                                        },
                                        {
                                          "functionName": "Ze",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 505298
                                        },
                                        {
                                          "functionName": "$e",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 504524
                                        },
                                        {
                                          "functionName": "e.unstable_runWithPriority",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 603230
                                        },
                                        {
                                          "functionName": "zi",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 525589
                                        },
                                        {
                                          "functionName": "xt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 596987
                                        },
                                        {
                                          "functionName": "Je",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 504316
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "image",
        "cache": {},
        "connection": "155182",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://atlas-content-cdn.pixelsquid.com/stock-images/large-vase-n1PDa4C-600.jpg",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":authority",
              "value": "atlas-content-cdn.pixelsquid.com"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": ":path",
              "value": "/stock-images/large-vase-n1PDa4C-600.jpg"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            },
            {
              "name": "accept",
              "value": "image/avif,image/webp,image/apng,image/*,*/*;q=0.8"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "sec-fetch-mode",
              "value": "no-cors"
            },
            {
              "name": "sec-fetch-dest",
              "value": "image"
            },
            {
              "name": "referer",
              "value": "https://proiectae-550b9.web.app/"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "accept-language",
              "value": "ro-RO,ro;q=0.9,en-US;q=0.8,en;q=0.7"
            },
            {
              "name": "if-none-match",
              "value": "\"2056fb95c0c96f444ba1a50ce13b4d26\""
            },
            {
              "name": "if-modified-since",
              "value": "Thu, 05 Jul 2018 22:19:23 GMT"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 17:27:56 GMT"
            },
            {
              "name": "cache-control",
              "value": "max-age=30"
            },
            {
              "name": "server",
              "value": "AmazonS3"
            },
            {
              "name": "x-cache",
              "value": "Hit from cloudfront"
            },
            {
              "name": "via",
              "value": "1.1 28e5a05285f99582aabd539b43e9b669.cloudfront.net (CloudFront)"
            },
            {
              "name": "x-amz-cf-pop",
              "value": "OTP50-C1"
            },
            {
              "name": "x-amz-cf-id",
              "value": "1i0DiAYnMZ9b2BNr5jLRNCbJp4BEB3dq-hLJ5m5NXgb9tE_ZhVSfcA=="
            },
            {
              "name": "age",
              "value": "5213675"
            },
            {
              "name": "last-modified",
              "value": "Thu, 05 Jul 2018 22:19:23 GMT"
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "content-length",
              "value": "40215"
            },
            {
              "name": "etag",
              "value": "\"2056fb95c0c96f444ba1a50ce13b4d26\""
            }
          ],
          "cookies": [],
          "content": {
            "size": 40215,
            "mimeType": "image/jpeg",
            "text": "/9j/4AAQSkZJRgABAQEBLAEsAAD/7Q/sUGhvdG9zaG9wIDMuMAA4QklNBCUAAAAAABAAAAAAAAAAAAAAAAAAAAAAOEJJTQQ6AAAAAADlAAAAEAAAAAEAAAAAAAtwcmludE91dHB1dAAAAAUAAAAAUHN0U2Jvb2wBAAAAAEludGVlbnVtAAAAAEludGUAAAAAQ2xybQAAAA9wcmludFNpeHRlZW5CaXRib29sAAAAAAtwcmludGVyTmFtZVRFWFQAAAABAAAAAAAPcHJpbnRQcm9vZlNldHVwT2JqYwAAAAwAUAByAG8AbwBmACAAUwBlAHQAdQBwAAAAAAAKcHJvb2ZTZXR1cAAAAAEAAAAAQmx0bmVudW0AAAAMYnVpbHRpblByb29mAAAACXByb29mQ01ZSwA4QklNBDsAAAAAAi0AAAAQAAAAAQAAAAAAEnByaW50T3V0cHV0T3B0aW9ucwAAABcAAAAAQ3B0bmJvb2wAAAAAAENsYnJib29sAAAAAABSZ3NNYm9vbAAAAAAAQ3JuQ2Jvb2wAAAAAAENudENib29sAAAAAABMYmxzYm9vbAAAAAAATmd0dmJvb2wAAAAAAEVtbERib29sAAAAAABJbnRyYm9vbAAAAAAAQmNrZ09iamMAAAABAAAAAAAAUkdCQwAAAAMAAAAAUmQgIGRvdWJAb+AAAAAAAAAAAABHcm4gZG91YkBv4AAAAAAAAAAAAEJsICBkb3ViQG/gAAAAAAAAAAAAQnJkVFVudEYjUmx0AAAAAAAAAAAAAAAAQmxkIFVudEYjUmx0AAAAAAAAAAAAAAAAUnNsdFVudEYjUHhsQHLAAAAAAAAAAAAKdmVjdG9yRGF0YWJvb2wBAAAAAFBnUHNlbnVtAAAAAFBnUHMAAAAAUGdQQwAAAABMZWZ0VW50RiNSbHQAAAAAAAAAAAAAAABUb3AgVW50RiNSbHQAAAAAAAAAAAAAAABTY2wgVW50RiNQcmNAWQAAAAAAAAAAABBjcm9wV2hlblByaW50aW5nYm9vbAAAAAAOY3JvcFJlY3RCb3R0b21sb25nAAAAAAAAAAxjcm9wUmVjdExlZnRsb25nAAAAAAAAAA1jcm9wUmVjdFJpZ2h0bG9uZwAAAAAAAAALY3JvcFJlY3RUb3Bsb25nAAAAAAA4QklNA+0AAAAAABABLAAAAAEAAQEsAAAAAQABOEJJTQQmAAAAAAAOAAAAAAAAAAAAAD+AAAA4QklNBA0AAAAAAAQAAABaOEJJTQQZAAAAAAAEAAAAHjhCSU0D8wAAAAAACQAAAAAAAAAAAQA4QklNJxAAAAAAAAoAAQAAAAAAAAABOEJJTQP1AAAAAABIAC9mZgABAGxmZgAGAAAAAAABAC9mZgABAKGZmgAGAAAAAAABADIAAAABAFoAAAAGAAAAAAABADUAAAABAC0AAAAGAAAAAAABOEJJTQP4AAAAAABwAAD/////////////////////////////A+gAAAAA/////////////////////////////wPoAAAAAP////////////////////////////8D6AAAAAD/////////////////////////////A+gAADhCSU0EAAAAAAAAAgADOEJJTQQCAAAAAAAqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOEJJTQQwAAAAAAAVAQEBAQEBAQEBAQEBAQEBAQEBAQEBADhCSU0ELQAAAAAABgABAAAAHThCSU0ECAAAAAAAEAAAAAEAAAJAAAACQAAAAAA4QklNBB4AAAAAAAQAAAAAOEJJTQQaAAAAAANHAAAABgAAAAAAAAAAAAAIAAAACAAAAAAJAEgAZQByAG8ALgAwADAAOAAxAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAABAAAAABAAAAAAAAbnVsbAAAAAIAAAAGYm91bmRzT2JqYwAAAAEAAAAAAABSY3QxAAAABAAAAABUb3AgbG9uZwAAAAAAAAAATGVmdGxvbmcAAAAAAAAAAEJ0b21sb25nAAAIAAAAAABSZ2h0bG9uZwAACAAAAAAGc2xpY2VzVmxMcwAAAAFPYmpjAAAAAQAAAAAABXNsaWNlAAAAEgAAAAdzbGljZUlEbG9uZwAAAAAAAAAHZ3JvdXBJRGxvbmcAAAAAAAAABm9yaWdpbmVudW0AAAAMRVNsaWNlT3JpZ2luAAAADWF1dG9HZW5lcmF0ZWQAAAAAVHlwZWVudW0AAAAKRVNsaWNlVHlwZQAAAABJbWcgAAAABmJvdW5kc09iamMA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wl/C28NYw9TEUcTOxUvFyMZGxsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/0sHTRNPG1EnUy9VO1dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A24L3hROHM4lPi2+Nj4+vkc+T85YTmDeaW5x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO6070DvzPBY8OXxcvH/8ozzGfOn9DT0wvVQ9d72bfb794r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t////4RDQaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjYtYzEzMiA3OS4xNTkyODQsIDIwMTYvMDQvMTktMTM6MTM6NDAgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnBob3Rvc2hvcD0iaHR0cDovL25zLmFkb2JlLmNvbS9waG90b3Nob3AvMS4wLyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgMjAxNS41IChXaW5kb3dzKSIgeG1wOkNyZWF0ZURhdGU9IjIwMTgtMDYtMjlUMTg6NDc6MTQrMDE6MDAiIHhtcDpNZXRhZGF0YURhdGU9IjIwMTgtMDYtMjlUMTg6NDc6MTgrMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDE4LTA2LTI5VDE4OjQ3OjE4KzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL2pwZWciIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MDJkOGIzMzgtMWYwMC05YTQ1LTg0OWEtZTAyMDVkYWZlMjczIiB4bXBNTTpEb2N1bWVudElEPSJhZG9iZTpkb2NpZDpwaG90b3Nob3A6NzU0YTg5OWUtN2JjNC0xMWU4LWEyODItZmU5YTBjN2QyNTFjIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MjEzY2I5NDUtZGM0YS03MDQyLWEwNTctODBkOTYzZDM4YzNiIiBwaG90b3Nob3A6Q29sb3JNb2RlPSIzIiBwaG90b3Nob3A6SUNDUHJvZmlsZT0ic1JHQiBJRUM2MTk2Ni0yLjEiPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjIxM2NiOTQ1LWRjNGEtNzA0Mi1hMDU3LTgwZDk2M2QzOGMzYiIgc3RFdnQ6d2hlbj0iMjAxOC0wNi0yOVQxODo0NzoxNCswMTowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENDIDIwMTUuNSAoV2luZG93cykiLz4gPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjdkYmU2NDIwLWY2YjYtZjk0NS04ZjI4LTlmNzg4NTQ0YWY5ZiIgc3RFdnQ6d2hlbj0iMjAxOC0wNi0yOVQxODo0NzoxOCswMTowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENDIDIwMTUuNSAoV2luZG93cykiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4gPHJkZjpsaSBzdEV2dDphY3Rpb249ImNvbnZlcnRlZCIgc3RFdnQ6cGFyYW1ldGVycz0iZnJvbSBhcHBsaWNhdGlvbi92bmQuYWRvYmUucGhvdG9zaG9wIHRvIGltYWdlL2pwZWciLz4gPHJkZjpsaSBzdEV2dDphY3Rpb249ImRlcml2ZWQiIHN0RXZ0OnBhcmFtZXRlcnM9ImNvbnZlcnRlZCBmcm9tIGFwcGxpY2F0aW9uL3ZuZC5hZG9iZS5waG90b3Nob3AgdG8gaW1hZ2UvanBlZyIvPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6MDJkOGIzMzgtMWYwMC05YTQ1LTg0OWEtZTAyMDVkYWZlMjczIiBzdEV2dDp3aGVuPSIyMDE4LTA2LTI5VDE4OjQ3OjE4KzAxOjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgQ0MgMjAxNS41IChXaW5kb3dzKSIgc3RFdnQ6Y2hhbmdlZD0iLyIvPiA8L3JkZjpTZXE+IDwveG1wTU06SGlzdG9yeT4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6N2RiZTY0MjAtZjZiNi1mOTQ1LThmMjgtOWY3ODg1NDRhZjlmIiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjIxM2NiOTQ1LWRjNGEtNzA0Mi1hMDU3LTgwZDk2M2QzOGMzYiIgc3RSZWY6b3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjIxM2NiOTQ1LWRjNGEtNzA0Mi1hMDU3LTgwZDk2M2QzOGMzYiIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3hwYWNrZXQgZW5kPSJ3Ij8+/9sAQwABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQECAgEBAgEBAQICAgICAgICAgECAgICAgICAgIC/8AACwgCWAJYAQERAP/EAB4AAQABBAMBAQAAAAAAAAAAAAAGAgMEBQEHCAkK/8QAThAAAQIDBgMFBgQFAgIHBgcAAQARAiExAwQFQVFhEnGBBpGhsfAHEyLB0eEIFDLxCSNCUmIVchaiJDM0U2OCkhclQ0R1kyY1ZHODssL/2gAIAQEAAD8A/fwiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi6v7ee2f2X+zOwvFv227aYHgEN0gEd5hvl8s4Y7uDOEXifDdyQCQLSKAxASdeJO2H8Wn8EnZC1trvbe1e44peLEmA2eEww30RRwljDBHdo7QGa6PxL+OF+Em7mOHC7HtbjJBaCK64ZeBDaVmP8AokslErx/HJ9iEZ/92+zntzex/SYrpbWfFox9yFhw/wAbjsDbubt7I+18QJ+Ex2dqMsxxDZbCx/jQ9krYhvZH2pALM1lak1nL3+ikV0/jE9hrYw/mPZf2tsISWJFzvMTdIbQqYYf/ABcfZFbmH852R7VXMGvvMLxIgT/ugu0fkVPsM/in/h2v3DDerzfcPJbi/N2GKXYwPV/zGDQiR/yXbvZ78f8A+G3tBFBZ2HbW42VrGw4TfMOiIJMngtL3Zx6f0PsvSfZH2r+z7tz7kdme0+G4ja3gPY3cWpsre1IHEYbGC1AFvFwglrOKMsCaBdiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiGhYscjVt18xva77FvY57abnb9nvbR2Fwrtxc7DEr5eYBjNja2ttdb/HaR2d4vd3vV2vFjb3W8REEGKC1BNC68jXr+FL+CXELb81geCdouydqYjF7rDe0uJ213gidxDBd8agv3DDoBEtNfP4WHsRujnBvaH2rukAnZwWt37P32EDITwixJlLoope/wCHZ2Cwgxe69qOJEQvK27L4TakcM3Jsr/Zue5Ry0/Bj2Nw0xD/2kWlqIX/V2NsHAajw46xWLafhm7B3IfzO30UR/wAeyUME5SA/1vULH/8AYn7OrieK17d32IQicMPZi7w0nIxYyWmAqz2O9jOHwn832sxW0EILiDBrjZEsGIBN4j27lqb7b/hyw+B71e+0l/4aQWdjcbDipmMOjL1zXXON9t/wwXKKIw+zTEu0FqG//M8SvVlZFv7oLkbvJ8nXaHsR/EFB/wAVdm+xfsr7C4J2HuuK9p8Ds7KDCoLb8zHfrfErrdrteY7e1tbS1tbcRWoYm0LAEAM4P6cx8z5rlEREREREREREREREREREREREREREREREREREREREREXiD2l3A4b2tx+wA4IY79He7IN8Pu79BZ32EDbitouo2UPuVqRDCKiYPIHM+u9ZtvGeAl6Atz02H0XW2PiL4zFE1aHxr4NqukcccRRl65iWW5qzLp7G45kgvWbSDyYvT7rqrGbUnimQ3MgadF1HjlsfjJLn4uusuX0XS+PWxMUfxf3EEtk7dHC6ixW2JtIoqmYmSJ6g5yPivdv8OrsZF2u/Eb7OLOKzFpd8Jxe17S3kkPALHs3crzi1mY3FDe7vdIdzGBUr9UQoNc+ea5RERERERERERERERERERERERERERERERERERERERERF5X9umHiyx2536GFob/hcAjiZgba5W9pZk7n3VtYdwXRV1iIj4dXZw3znMFbiJzZloauGFGzLeqbqBdoIeKGMFnDzL6ZtSnVdE9oIJxgVBIedNSW2XSuPRE8YfMvVg4ehC6rxeJoYnGrBy+z8iul+0FoxjIikHMsqsulsbjLxuf6ZTqZrqbELQxW/AKGKooA9J0M19tP4RXYyG8dtO3XbC1seKzwHsjd8Lu1qR/1d87RYnZlwWlF+Swi9DKVqvvYiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIui/bpcveYNg9+A/7Nf7xdoiAP03u7G0hBJy47oO+U15VsWhtGkS/c2U1uS0UD6gsT4/OqgnaCVnacqjqJzXQ2PxF43NDEZeR3oul8bh4jEZzd65jQCq6kx2IARB9QXrqacl0p2gP6zLMjJjOQ6rpXHrQNaT1kzn1PwXV8cPHe4BraTecuLxnRfpY/hS9lv9K9iXaztGbPhj7Q9srK4wxMxiu+AYNdeEAvOEXnFr11dfUlERERERERERERERERERERERERERERERERERERERERERdYe1+7+/7E3yKR/LX3D7cPqbwLuf+W8FeMoAYbXhOhAIfWfraS3Ib3cqMWo+TnkoPj5eGMTdt+vSv7LoPtHwgxwjcyk9Z86LpTG4YuGNz4s0yztmum8f4yI3BzeRy0nObLpbHYjw2gObzG8QA6LpDHz+t6zJnsMvXJQO5WfvsSsYdbQBszOfXzX6x/4fmCQ4N+FvsFEIRDFi167S4taMGeK1x2+XSA7/AMm42c9l7TREREREREREREREREREREREREREREREREREREREREREUB9p4hPYbHeIt/LufD/u/wBRujDzXjCCw4oy8nNc6/VbQ2JhsqZbjqTlX1Rdf9oYCII3IBAruOVSvP3aQxcUehfn6chdM44ZRM8gdw+QXTuO0jykdwfQ8l0pj8J+PSe7fE83C6Wx6xJMZOvhPxcKLYLdTHi92BDj38BObfED85cl+uP8GkMEH4ZPZFBZkGGHs9egWaUf+u4sbSGWYjJHRenERERERERERERERERERERERERERERERERERERERERERF1T7YL/AA3bsrDcxF/MxLEbpYiCRJsrsYr5axNoDY2Q/wDOF5wumHG0aLhd9Qeopothb4bHDZ/pLNRg8pGi6q7T2Js4YoQWrTJ/ASfovPHaKyPHaZkEh5AT5H0y6bxiwYRBiXdpAAMZyyr4rqXGrsTxZ1nLyzzXTWPXT9cnqC/XvkuoMYwy0tDEwLOXDTI5CslosIws2eJWUXD/APEoZEcJcT6L9P34CO0dnjX4ecBwz3oivHZfFcXwe1sn+OzsbxeBjF1iIaUJs8RjA3szovaSIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi8w+1LGv9Z7TQYXd4/eXbBLOK7RcJeE363MEd8IGRgENjZkzY2UYWvwy4wiyhBYs2Wu/N1n327wQ2R5GTTAZtJGS6M7W2MJ95KnFPk41XnLtFZRCK1DO3Uyl88l0/i9i5iffbWYL+nXXGK3MRCOQ1amwG9N11lieEe+ijHBU6SJypz8VB8Q7Nu/8uocfCC/RRix7PmyvMMYgMopuH6k8K+tX8Pr2hwdm+0t77E3+2FlcO112sbK6e8i4YIcew8Wtpcg0QlHbXa0vViKcUZshoF9iERERERERERERERERERERERERERERERERERERERERERRLtr2lg7L4Deb+DBFfbX/AKLhtjFS0vttDFwRRQ52VnCIrSP/ABs2qQvJmHwW1tejbWkcdpa2kcVpaWkZ4orS0tIjHaWkRzMUcRJOpK7EusZghGcgJCvLqArd/tgbOJyzbV5uarpjtMYYobVjqBqA0+S89doYHtYw2pdstHO3muqcVurk/Cw8aZqB3+4k8QY5tyeb6B/JRu1wuEy4Q+bh2H1/daq84LBGD8FHaR5SbKiil8wOGzj4xBpka5A/NT3sBf7zgOKXO+XW3tLrebneLC9Xa3siYY7G8Xe0htrG1gIMo4bSCCIf7Q6+/Hsj9oV09pfYjCe0dlFZQ4gbMXPG7rZkNdcXu8EAvUMMLfDYWgigtrL/AMO8Qh3Bbs1ERERERERERERERERERERERERERERERERERERERERcEiEGKIgQgEkksABUk5Bl5I7ddpYu1vaG0isIjFhGGcd0w8A/BafE14vrNW1jgh4T/wB3BBqVh4bYcBBAd23LEZjIupJxCGF+7Ia09UWlxK8RQwEAt+oAVdts5LqHtBbk8YhMi4adSJB10rjYhJiLOXLBunUzpsutsRsnJLMx1M3FANMslEr1YvF069xykVp47sBFRs8hvRljRXQHicCc8gCKa8pLQ33D3ciFi5bT0y1l3svy9tDEBwsZzIaZYDw5r25+F72t/wDA3aixueI3kwdm+0BsMPxYRxRe6ulrxEXDFeEGRsbW0ihtD/3FvaZwQr62wxCKERQkGGIAgguCDMEHMNQrlEREREREREREREREREREREREREREREREREREREREXUPtW7VnDMPh7P3G1MOIYrZRfm44CRFdsMiJs4w4/TaW8Qis4f8ACG0P9r9AXCw4ooIQHH9UpFj9FL7vZiEO2eeUqSrJZVqeGGpEj4+h3qJYpbkgwvNiDm9RNzp3rqvGon43zhJl/bOe9CupsXYmLeRIoGOfQ+K6+v8ACJuWcHlXN8lGLxZmZmQeVZZZy9UWqtLIkuwnUnWRZtBnzVs2bAyEiGD6sxfIarXXqyBBcchKeh7h0UatrBjEZgQuRQDPN9CtzgV/jutrDOQMwdJu+pbwX14/DF7VYe2XZeHstil6EeO9m7vZwXWK0jMVtiGBQcNld7Vyf5ltdojBYWhzgNjGZxRL1IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi1WN4vdMCwu+YrfYuGwulkY+EFo7a0Pw2N3stbWO1MEMO8TmQK8fXy/33HsUveK36PjvF9tTHEASYLOGUNlYWTmVjZ2QhhhGkL1JW8uN3hswCBMirTo54t/otrDDkZgjznPRWbyTwnNg2vIHTOihWJxtxkGehaQk7jouq8btCTGHq/R5E1ry+y6xxI8RJiLzz2l3TKg9+E4qEQk18AdZeSj14hrkHOb1L90lrIhMuKGk2clyJ8vJUNUNKWVMmmfksK3sgQXGoG58qLQXixcRS1mwIeg6t5LUwvY2pLsRFLl6C7v9lfbvEuxfaLCcdw214bzh14htBAYjDZXmwiBgvVyvHCz2Ftd4rSziGQjEQnDCR9pOyvaXDO1/Z/C+0eEWvvLjil1gvFmD/wBZYWk4Le624/pvFlbw2lnGP7rMtIgqQIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiLzP7Ue1P+s4qMDuVpxYdhNrELeKCI8F5xIAwWsQyigsYTFZwn++K0P9pULw+7NCImE8szIsZUKk13suEANIVnmRlrJX4oGmWZ6VWuvkXDC7jNsg7S+agmJkRCIvXRtKg+pdF1fjInFXPN5zBG5+ZXW+IBoopzcyLUebevkohfBCeItR5AOZchVlHbaEMctT4iXJauOChyJ0ZgRkWpzVkQhyDWfIGr9ys2sMnY5gycUylVwtLerORkzHRnoWHco7bPDGSW21nTOdPNZ+GXyKxtYS9IqOaAjLL7r6EfhU9q8OEYr/wXit6bCO0FtBFh0drH/LuGORQQwWcIL/BY3qCGCyP/AI1nZH+uIr6MoiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIigXtC7Uf8OYJHDdrQQ4riXvLrcGPxWI4f599bSzgiHD/wCJaQZOvLd0sTaRvMuQTESSZmcRJqXeeeamN1sAIYQ0gzSnKh5rcQQEBpSlN/RK4tPhBzJaQ5P9VHsQtBwEZl9Gak9ZlQLErSIQROdXbSc/BdZ4patxVFdJDU7rrzEDxEkcm07hsPFRS81IIZ5z5yMvTKOXogEgzaki7u9BQfRa+IhvHn3ZzCxS7tpkKbZTqqI4zwmQnrTkZ0Wtt4XEVJvnMsJFjzUcvMA4iG1faU+rstfA9naPQAuHoeZ9fSfdm8YjuttZRQ2kUEUEUMUJhjihjhiEQIMEYLwxCIPCciHEwvsh7DfaVZe0fsdd7e820MeP4PDY3DG4H/mW1oLP/o2J8P8AZeLKCIxZC2srWGgC7oREREREREREREREREREREREREREREREREREREVu1tbOwsrS3to4bOxsbOO1tbSMtBZ2dnCY444iaQiEEk6BeQe1mPWvajHbziHxi7A/lsPsi49zc7OI+7LP8NpGTHaR/wCVo39IVu43b9MnGmpZjnMKTXeziYADhYVYesytjBDwhzKk9aVAM5BYd4i4nno/Kjy9FworiREIIebETNW0BpNdfYpbBohJiC2lHeXRdbYnFxGI85AlwddwoLfIgCQNTru5fp4qL3thSYmGzcUko7eIeI1I6ua+v/VktbERCDKZLPKgaEO1VZjYb1D9VjROZNKsmyJb5LFtAwiNX3mNeclor1ADNy+rz6g5/RR+2J4maTyrkBtqVk3K9RWNqInJBiB50+Tr1b7Bfaja9ge1uHYna2kcWE3rhw7HLCEmL3uGXiKHjthACOO3sLQQW8Gb2MUNIyvr/d7exvVhY3m72sFtYXiys7ewtrOIRWdrY2sAtLK1s4gWigigihIOYiBV5EREREREREREREREREREREREREREREREREREXUftZ7Qm5YZY4Dd4mvOK/wAy9cJ+Kzw+yinCWp722hEG8FnaDNdCXKw44xKbzJ1JfucnuUtu1kIMpEMM9jloOclurGDhgBAc85mVX1n4K8X4S8jOXLLehWrvEUIBMpcgw0rNQ7E4/wBWnjnJxT7LrjFYpRz5TEwAW0lWigGIGRm05PQB37nPIMoRfAATm76SNG9aqMXkg8WQ6nRs5S8lobeGGEmYaXi4OwDALU2zHQZVo2uhqsYtM5OaiRPzy7lbjpIkEgzpTbksO0MiJSPTV9z61WpvA+EtQmZFduajd5YOBJmYHaldmWr/ADDRO7TrNjmwPN8lMMDxeKytLIOQxDMcxprzX1w/Cl7Rx2q7H2vZW/W/HinZWGz/ACnEXjt8CvMcQuzOHi/L3jjsTOVnaWIXq5ERERERERERERERERERERERERERERERERERFwSACSQAA5JkABUk5BeQu0+Kxdou0OI3/i4rKK2NjdAaQXK7k2V3AGXFCDGf8rYqq4XcQMz8T5jJqHwdSSxsXEJqWdurUWyswAGmxrk8hRqZq3by4pMKVfvA6d60N7MjvLp8qKF4lGfim/dln8+i66xS1A4gSXEpU6bS8VAMRtgSQ+cizZATULvhmakZiR+FR28VI8uufJaG8hiQJAPz6/Jam2eRdjm5kB9/msO0iIG4AeQ2JkDWitGMDwadSclh20Y4dBtq3M+gtTeLUM5MtmMjqHn81Gb3aOSH3rk+jSGqjVvePd2lWrRgC5oJassi5Yl7uMTecgYiHnQr1X+Hf2m/8Fe0Ds/ilrbmHD7W9Q4Zi8LnhiwrEooLveoyHn7qKKxtw+d2DFfbSEiIAgggzBEwRkQ2RFOa5REREREREREREREREREREREREREREREREREUS7c4mcJ7LYreIIuC2trD8ldyK+9vsQu/FDvDZx2kX/kdeUrpC8ZFAYpGrNpqpddIJDWjmlWI7mUisGYSfQylq/WfVZnBKUzRwT9fTrDvAaE/Kk6kn0FHb5FCBG8pFgC4kMlBcStGMc2qM3Gx711zi0QnWb5UlTuXXuIEB5znPOYmA4zcKJ3mMfFPrToQT66LQXmIAOzNtLkW2Udt7RyWo7VflzotRbWwemZkWmTPz8lgR2garmfe1TOiwrS8M4zafIrX3i8tDEXcjpk/Vae3vVWPi2chyUZvl84XnmQS40Pr0yid9vgcl6VmWynSf3WnOJiCIHjfcEByDUvympz2Zx3gt7OIRluICJj/AE610X6CvYT2v/439lHYzHbS1FrezhVnhuIROTGb/g8cWG3iK0/zj/LQWm/vnzXbqIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi6X9sd/MFywjDYYh/OvFvfbWFzOG7WcNhZc/ivNp/6F0ZdYqEENxCmTnwopbdY3qxergUo5PRbyyjMmZnDSLafNZ4teEbgEA0lV5eg/RYN4tQAZipyPmN/JRLErfhBnnLJgJzfUjooFf7acTzLk1c7P3fdde4tbB4jxBi4ObsXcAqA4lauCXGgEpvruoderaIGKZzbqRVjKa0N5tjEC7l36GUm1ke9aG3tAOICs56O2hq/rXRW9qZz3NJB5OtTa3swlgXbPIgmlVrLa9s+VZTZ55nL7LV21/8AhiD93ylyUfvV/wCHimfHzNFFL9iA+Jic89qSrVQ6+4gfinqzEk+FSyjceIxe8aI13YzAppNSLA8WNjbQ/GagO+RNAAZUHVfcL8APa04t2E7Vdm7S2hiODYzc8Uu0BPxC74zczYW3D/iL1hhPO33K9/IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiLzT7Xb4bTtHZWD/Dc8Nu9mziUdvaW9vESH/tise5dZXa0aYfJydx6n4KS3S3AADsQHfv7lvrK3+Hn0rlTV/UlkC2eGoejyqJAyPesO2tQBEToRsDlzmFDMTvAPEXajnPN/F/Ndf4legREDKRbVxlRdd4rbkmKZnWbF5ks+dVB73b8XESXGe2rPUsoxerRydS86GWuij9vaO/yJE6kzq4K0V5tQCSGLNSfNyy0F5tQXYtm+gnnzUfvNqQ/IucpF5FaK83pgZkff5/RR+8XuIEgmVJZ83oo5fL6fi+JhOny7qqL36+Vc9HBbfbJRG+XxuIcUt6u/lVRm2vhMdaE1M66tz7ltMMvsQtIS9GqXn8s/qvrZ/Dn7Te69oOOYJHaPBjPZG8xQQGIh7zhV/uN6gibOL3Nte+hK+ySIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi8j+0i8fmO1uNRV93bWVgJ/wDcXS72LT/yB681CLKPhh3NA7c56UW3uttEInJFSw4i4fIA9/RbqxvNJycvLSvSS2AvEqyDvqKS2Wsvd5i4Sxd9fkNWChmIWxLh9S3nSv2UBxK24jFOc3LU15SbuUDxG0finKb5eXTvqoTfY2dgP9zs5GqjN6tCYvGmVZz1K0d7jkc3m/LQau/co3eLRzF8RymB01nl3rQXi1M2cVz9eqKP3q2E3M/2k2ijN7tmdt6UrPPZRy9Xj9THVz4MorfL0z65DTfcqL328V+Kcy+Y16M6iN9tzE4eQc906iv3UetbweKT0LSzo5fZZdwvZhtQ8TARBwJaBm3kvpH+AjHfyXt17FQRRAQ38Y1hkQJYH85gWIQwQkf/ALtnZ7OAv0CiYB1REREREREREREREREREREREREREREREREREXjDtva+87S49GaxYtfoRq0N4jgHP4IAOih8FoxDVEv2L7dy3F2tJBzPKbP15stpYRsRzm+jFyW3HfosuK2Adpirz5OdTWq1V7t5EPXqHpOchXfkorf7VgS9XmWz5Z8tFBMStHERymX5ag5eSgeI2peIAs0s3zkGGQPioffI/wBT0NZPETUM9eajt4MzqXlUEvTx5KP3xy5fMnOew6KO3mIARPR2E/M5zPPRRq9R/FF5aF9Oaj96tJVnUZGjPMqL3u0atJkl66KK3u1qNZtty9VUXvtoPiIOrU3m/qiiV8tomM5l85VooxebX4YiTM0OyjdralyQSJ6szsBNtFdulsYbSGhnI/bOnivdn4M8TN19uHstiEfDxdscHuxckfDfLWO6RQy1hvB71+lgSAGiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi8QdrYj/r+NHL/VsT8b7b95ZROCP4y2/wAmLcpLaXe0PCH1ZuXlQLb2VownKoqxJb13q9FafDMhmEgSOUuS114jkTPNjns75+ucZvscPDESZnKoEp0UDxKOZE8+T98vuoJf4plw7uaTDzY7OoffHLmTgxZZ5z4uYUcvERgerMXcfXdaO82rvrpk59HvUbvZiLjLTMUr4KNXozM82B/tYsHHJRu9xtxTrJ+kmUVvdqPiAPKbS5vo6it8jIER6abSPQKK3u0kZzM/seiit9jd56iuz96i18tJRmefcKePmo5b2k2eZ3kfRZVWFo0YctShzkZaFl7Q/CXeCPbR7LS7f/jzsqDs+M3SHm/xL9QyIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi8O9sZY/jX/ANXxLJ//AJ6312Kh/GISdqA0kzNp65LOu8YkAYZctXLDn5rc2dpIcyz8mnNV2loDJ5s2sncGujLXW9o4ILyfOgD9x+ij1+jDGe7v8+fplB8SImatQ5OdC1W81BL8REYnzoH0oXzmope/6ta0k23fNRm9Rfqm5r16ZhR29RCEkBhXKnqa0V4j/U/PQ8ty3OqjN8L8TgScVIlJRa+uARQB9pNoclE75Gxi4e59KBtaqK32IiEjWVd2oopfLRnnSdKjI96id6tCYon5g9+qi99tHJfly+tFHbxHDMgHOc3Hd0rNcXWN43lNnrIDmvaX4RRFa+2j2WQCp7e9kmzmMZucbvyhPNl+pJEREREREREREREREREREREREREREREREREReJ+3tn7vtNj9mwDYvfiBkIIreO0BlnwxjvXXkT+8haYbSZMxInZlsbu4r1J76dy29nE4DZTdtMqbrmIyrQNnMksTLRYVqJEhp16cs6KO31yCRkaNPT5eCht/oeTBzWeQeRn4KC39xFF0NOZIGqil5DmKpLNqHebybMKMXoAEmQBoGZxpSWU9lGb4HJINSedCZZ59FHrxGYQfipq24Z8lGr3GZmbNo8z9iFGL7EJgmgIlkdOqid8/VH4aOAZeKit9ieR57efp1Er6S8TdX0zl6oopeyRxGRamWR3UVvcfxRbSnN39FRu8Rs8/JmmzaZ0XN0i/mQ8Rl5TlxPky93/gmupvnt79lFkITFw9s8GvEQ/xucdpfYiTm0N2J6L9PomAdlyiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiLx57U7t7jtdjMLStLSwvFJH8xc7vHr/cY+4rqaKJowDuOr/2581nWUTht6CgbN3kGW0soiBMFiPTvVXnBEpikxNxVsgw8lg20n3ebEVd2Kj18i/UGAd/BjTRQzEImJmCGcBy2rVdvUlCsRlxFpDl0y2UQvRZ3ILu0pAfKXkove3iMRYic9/ifuYKNXuNnqeWdSJUzCjV6iJeplLInObbOozeiXLmriefqajN9JeI1L1eWlRX7KMXotxv8y/dkolfSHLtLLZjN+5RO+RAiKIT9FjJQ+9xme7lgPPSQ5zUVvZPxeLHRpeajltF8URn4BqBpc1VdImtIQP7gWqTNiW5FfTL+HThBxX8QvYaIwvBhtn2gxeMl2hFy7PYkLN2FffW9kOZE5r9IIkANERERERERERERERERERERERERERERERERERF5a9tF0912ks7cf8AzeF3W0eTvZWl4u5JBqWsoF0Lak8QepiJBBZpmTZ891mXeIluKVJEzLjI5U8VtYIgwJl1eubd/esjfuaUxmeixLfavdke9R2+Q1z23nQ5U6KG4gCXo/hUypT6qD34VeEtPQ6jKk1D784EQqZ5DdjKijN6iPCSS23r1Oqi97AiJfLLJxlWv1Ubvfwg6F2B0Off5KM3yIiYfmwDmWR1IUWvcRnlMuA3fvmo1eiwicPr5Bx6oojiEX6urTYVnMqI3yJoYq6aTGpyzURvcTPJ5yZnnm/cotfC3EzDOfShCjFvaTJE5tRy/fIP5Ku5AxW0GY4g4J30YuJr7L/ws8AF89qmP4xHD8OB9hcQjgjZxDb4rimFXGzDvIm7wXls2BX3jREREREREREREREREREREREREREREREREREXn3233VrTA73laWF+u0RmZ2dpdraFv/uRrzHbgmIhmfPr41Vy7EwiYk+bDebDmtxYkEA51ardPFZPFQlzIc+mmSxrwQQSJ/PcjzUcvxIBaQIrIP0PJQ2/RF43cjNh5DMfVQ2/iGYL6bCv0UOvo/V8xPflQ1UYvUAIi7xozZafZRa9QmBzIDLZqO3VRi+E7nZRq80PWuevrRRa9mZM/N66de9Re+Gs6mT9ajkCohfpmITZ86N5PMd6iN9jABFX+biXrJRC/RTORrRhJ2DvLPuUVvsUiO5yQ1QHJ6qL3mRAFDkXMn11d1sMJHFbw8wzZF5kd5X38/hU4B7vCfaj2ijg4YieyuCWMRhm3Di+JXiCEtT4rqTPML68oiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiLp/wBs91Fr2duN6ZzdsUhgJ/wvN1vEJf8A89nZryLbgi0NOHiJqzA8pibd6WQYtk4rXkQKFbWyiM5Z0+daMeqyYTxOCBrSpfy6LGtYDkaPyrn1WlvsAY5lp0JG3eSodfhCOL4Z5mUhpqVDMQhExIGdJlvQ3ooZfoYWM8s2rDMUrPVRK9xH4hlRyzu4m50Cjl8DgnmGNZO792iit8YuJGW311ZRm9MOIdZUec/HxUWvpA4juQJy3cZ+aiF9jichu7YD5uonfHIiZ83lWpy3URv5DGj0n01E1D78zl+bNNjIvL06il8imXyeb5jMyUcty8RAY8zME7Guy3OAwcV5s3pxQiefUZTX6Xf4aWAw4b7BsTxYw8NrjvbfEohEzGO74XhmE3CyLtMC2/NdXX0QREREREREREREREREREREREREREREREREREXX/tPuv5rsXiucV2N0vUNf/hXuxERE/wCyOJeKb2ALSJiHBm8pTdxqrNjEHIIm8qzlSm4Wzs6tuxNNQGDeu5ZsOU8pyz+Qo/Kas2sXC4E3nKkwZLRXsmPiJmA7iQOk5aKIX+CZJDMSNjJ/KSh1/EjSpZpECmQmyhl+DmJv06neclEL3DUyJGhYEHVRe9uCaFpFpv5TYlRa+ZmbAuQRPPPMd6it8cAkCQkZ0G/VRi9RAgvrNxzy0YEqJ32fEQW3nV+XLvURvpYRAakfvqVDr+d5E5yEmJZz6ZRC/R1EpsJbPvo3jsorfSwJM+4bOz1mFHLT9c6PIDxEzq3epf2WsveXyxFHtABtMB6/pY+K/Vj+CjA4cC/DP7MbPgNna4lh+J43bgw8PFFi2N4jerKOs3upu7HRl6qREREREREREREREREREREREREREREREREREWh7U3UXzs3jt1biNrhV+EMM5xw3a0jgpnxwheCb8WjiLyidqAEROZS596wrJixho7CbBnaS2tlEGDZUo3Ks81sIXYO03f8AqILP13Ct2olNtXHyloGWhvILmUiMmlvOeqiuIyedBMDxJA9clCr9CCYq5yYASByy+yht+AJL5kTaRcO3eoffs2atPBiAOail6i/UDN3l9APUlFb6D8RkQOKQbIs+XoKLXyTh5U/Yc1Fb3MEM41yOWfqSid+efLY51USvhlFPM5h2Oe1eih9/Nc2/bSdPFQ2/kcRoS5LDwfp5KKX6IzY6zyFG8vJaCIkxTYuXbnqV2J2KsDHfbAs/xcQaZeH4tZ0X7APY9gkPZv2UezbAhB7uLC+w3Za52sDcLW9ngtzN4cam3itCc3M12QiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIrdrZw2tnaWUYeG0gjs4v9scJhPgSvn3jVhFd7xbWMTg2FrbWMQeb2NrHZszaw+Elo4IiGJaokGNTKYOnktvd5hpPLYSylX1mtgGADZkhydqt1KtWp3fqCS1BWi016JD5mgmJjMmfp1Fb6BEYiBRpTnXJ9RmoViMHCC5HLOcpgmVVC77C7/8AMelH6KJXyByQcidJ5ifM/uofiEIhffXQmTEVzqoveiA+xInpoBnStVE76ZxEen9eKit8J4YjKmbE6z9ZdVFL7F+ucnNJ5POVZz5KHX2IvEBSZ6nr4qIX6J44pEM7vnJ6FRC+GcWod3bKhB9UUSv1S3OoaQ+60UDm1nq0jLSmq749jGCR472y7NYPZwcVpiuOYRhlmAHc4hiN1uYAHK2X7D7vY2d3sLKwsoeGysLOCxs4RSGCyhFnABo0MIV5ERERERERERERERERERERERERERERERERERF4Z9oF0/KdpsfsAOGGHFr7FCP8Le1ivEGX9ltCoDB+pn55O7yW0sCHE2Yme+fme5bBzFCBShfIdPTLiMEwvptvNjVnIWmvJ/UKEPuC9JPITUUv39TPOrH55TZQvEIiHB33Ls1cx9FDL9IxF3qZip65uPkonfSACwasRJ16jQKI36bu75+ec2URvYAJJJz03IMlE77WLIijaM4G6i98Lg6zLf7VE78zRUc0LlpSmXqOiht/iADeYJnIh1DL7G5jA3Mt9HCiF9iDliZOC5lvLVRG+kgmczXSdc+XctTZ/r1LjpMueq90fgg7PDtB+IP2T3M2fvLOHtjhWI20AobLBfeYzauH/Tw4fPQBfqjFBvPvmuUREREREREREREREREREREREREREREREREREXj/ANsN1F37X4hGISIb1d7jegQ4d7rDYRVp8d3i/d10zxfzCcpHm7ufPuW2sWDEZ0LtSnw9yzwX8BKTSzf1NVGn0BLtUPlIrSXuURffTMaKM3xjxGmbmWtVCMQhcnWbMCxDPWmRULvoE65n5t4HudlDb6SOKYYPrQ7HfyUTvsYaJiKu5y6mqil9dotPoZc5qKXyGrvQT355CncopfsxmwpOm+iht+c8VJbtuOrqH341n0fYzM9fNQ2+xFo9Q89501nqohfCPiNGeZlPp1USvh+IiXfP7ZLX2MPFbAPVgKCYOmk19Wv4YnZ44l+IHCcRisxaWfZ7sz2oxaImFxZxxXCzwexjOkXHi4ak+5fowRERERERERERERERERERERERERERERERERERF5m9ud14MWwy9swt8LjsoiKxRXa9Rk8/hvUPcvOUULxtoTpI5hxX7LPsSQIf1NObvL5LaQGQLEUE3NObtmqzJ3P39Bae+ARcRM9CN3du9Ri+D4TXQuA7tSnpnUKxAEcRO82m+hbcDdQm/S4nme+U6S3UNvo4iWmzT3Oh9UCiN8gLkTrFSjyHVRa/QibPMkzDmTvLYqJX2KZrs5Oh39TURvsQA2IiYvXJvX1UQv5IERq3VpUPeohfdXzLEDUZazUJvxA4jkOJgAznQEbOehUPvhfjOh/fOX2USvRJiiplqzOdtclZufxW8Mn+IBmJqZsF9yP4TfZ+KLtL7SO0cVn8OH9lcIwiCPhDQ2mM4xHe4xCdTZ4KOi+3qIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIui/bjdePDMFvbSsr1fLtEdrxd4LWEV//AEsS8n2koyCJirDTMNSSzbCLiDHnWUpsDr9FtrP9I1ydjVpToubQfCC9A++bV5rVW7niHNgBVqtqXZRjEPhETb1qAQc9XdQm/gxcTUZzWgo/qihF/wD1RS7675B+iiF8mDJqiXKUjn6kohfZE+Ln1JRS+ExOMw/wnV2Y+vFRC/huIO4rR8nLNmKdVEL4NSCz5nOlOSh9/MouZ2NAodfYpHkZfKXe2TKFX8uTNzOT1DHu+yht9dizEkme7S8VFbyXJbqJS1z9ZqvC4DHeINBECZM+jDVyv0Z/wrez8Vx9lfb/AB82bf6v2tw3DII2/VZ4JglneIgC1BbY1H1K+piIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIurva/dvf8AY62tWf8AKYhcbfN+GOOO6xzAkGvK8X3kCG0iIyInN6B5aK7YGcPKtOjdVubP9IyfKnIea5jieRPPRmIAIWBbMAT3SDal25eCid/BJikzEylSZYA1kK7qF36IwuwcFw2sX1nr1UJv54jFzLNMsZkqH34F4hpIPQFi4ZQy/jXnVnpQqJ30kVoAfprz+6iF9Lu4cDiJYiTdJF217lEr8ZkATnKYLUYN6pmobiBmzz8xMGeVPFQ2+mcRrVw2QdwJ0l4KG34uCTKrciSBTfyULvkTA0aLWgny5qLXl+IiupozHRqutjgcBjvMAAP6oS4Y0LDlM8pL9Sv8PPADgf4Y+y1vFAYD2gxvtRjhcNxwxYpFhVjFv/JwmzbYL2+iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiKIdvbqb52O7Q2I/pw61vAk87pFBewWb/wF4Svoa1iEyOIsRItMOwpCJTVNgHk7NIOXO7y3HVbqAyG7NPIZsq4xCRJnnkQaEhh8lgXiGT5AM4oH10UVvofiGjvUmQDtOX3UKv8ACC8w/wAXrbNQi/Ql4ogQxMiz5+tVDL8CCQdnzByavplEL7QnXupoeaiN/EouvfRQ++EgmQYkjR3z3USvxcRCYLMGFJzPgoZfQTxTkKZzmobiBAEekyBowczzULv8fwEPKI6ZU+emahl+MiBKrUm4o2f2UWvBnTnKtZgZhlI+ytnx36xcTEcByJIBeZGzd6/Xd+GHAIuzP4fPZBhEcHu47PsJgV9tIGZrXGLv/rFq41Npf4idSV3uiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiLCxK7fnMPv10qL1c71dyGdxb2FpZN/wAy+el/h4I+GIBwWiBaoHCX3cHuWPYFoudBLXn+y3dkTwichJsg8n5S5q7wyPwyHdOjdVr707SADmhDcnJ5CSit9+LilOo0k/ioXiEJBLiJwIpZSEq9O5Qu/S4hrlzqXyoobfhU5/FXV8xn9lD79QvUAsTI5z9ZKG32JyXnKXo81DsRaZeetCDsBk5PRQ6+RGIRZN3UAMTijlQ6/RMTR82d/DLuULxAmIR5s5HrKXkoPiEWm7CYJMqDRgojfzpJhyk7l5T9FRS1J421PIttsuxOwNwixDF7ldbKHitL3ebG7WYALxWl4tIbCzGpeO0h/wDUv2Y9nMLgwPs/geC2YENnhGD4ZhlnCKCDD7jd7pCBsBY+C3KIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi8Adr7p+Sx3Gbk3/ZsTv8AZMchBerbhG/wgEc8lG7F3AJoa8zTkt1YxfDDy8SRnl9lkhiNBpLTyWFeWAJ+3JpzmoxfAIhEeFnBNeZMupUMxIfqYEsTkwch5uXJYFQXEP6pVm2sy+xUMvpnEGk821+UzymodiBDRaZEbZsROqhV9JHEAOETY95Y8gVEr8zRPJ8zRnBbx60UMv5nG2hcylmDuoXiAYlw44TKrkhmbu7lC79E0JaRY5jKjFQrEczM5AZUmfH5KG34/qEpu1TPX1oo1aD4pndmpMO09l6k/Cn2b/4p9tfsuwOOAxwYl287K2FtCQ49xDjNzvF4cf2/l7C1JyZ3X66RTvPeXXKIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi8Ue1e6fk+2eOBpWtvYXuGjf8ASrpd7Y99pFH6ddZWczCxfIjQO2Z9MttYkmFudKNs82WcASC8m5vIPmNlhXiF4Wk0wz9CADz71Gb40JiBzkaSybuKhuJTERB1Y11Zy05DwUCxB3NGeZJlN95UUMvpmXlVt3l5+aht/IDgS8O7vUPvpBJykdR6IKh1+AYtPLIcudVDcQmCxkZGZE2oer9yhGIH4oi7EgjObqE392L7kOxpJuShWIR5EzDlmlv1qoXfyJibnKk5kM9J+a0JH8yjZZ9y+jf8N/s4Mc/Er7P4rSHjscIOO4/HERxAHC+z+JGwjJYzF8t7sx1IzX6cxIAaIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIvJ/tyufue0theIQGvmEXaMnWOwt7zdyH/2e776LoyyIBbw2+y2t3Mpwmebu+Rnqs53GmgPrVYNsHme+Uz03ZR2+gEREs5f4n9NIeqqGYgDMAOwY0mNv7VBsQAYuGqMunlVQbEA/Ew1acs6PsOqhd/H6tjXv23UMvzh6yLc93Jo3kohfs2y2zLZ6sX6KGX+OvKue5f66qFX8zizmQ3Mat4aqE4jEJiezBmqJmlFBb/E5MyZkfcKH3slzz12HcHC00HxWkOpIfN+5fZH+E92dhvftY7V47aQywHsBerOyi4f03jG8awq6wMcibC6XzxX37RERERERERERERERERERERERERERERERERERERedfb3dAbPAL4AHiGI3SIlzndbxZitf+tK8wCVoQdR4PKZW4u8TwuWlzNch1dZ8NJjrQsse3AaKdISwAZsjnoo3fWDkE6Samg71C8QI+KvoSDjOvUVUFxGbtJ85UGba0fkoTfof1MZTPe+R281CMQcREuzEhiGJZjoodfjKKhzcaH5zChl+ieKISNSDOheVBOaheIOeLR6NSeXUBQm/xH4nIOxChOIxu85iZP16hQa/lzFk85O7mnSfiobfJE6B8u6pWtu8PFbwf7shX7TyX6BP4SnZ6Gx7M+1jtLHZtHecQ7KYFd7Qh/hul1xbFLzAD/uv90JGw0X2Ff7b0+qO1ZI48/Cq5RERERERERERERERERERERERERERERERERERdN+266i27J3e8M8Vzxa7ElqQXiwvNgSTl/Misl47inanvFGkJhm59y2l2BoaVGb6dX5LZQSHOR2nz2Vq3/STInZpvSQrJlGL4GMQ+5zd26qE4iWdg2ZFQ9JNm/1UIv0P6jSvJ598lCsQEyMi52zqRuIVCcRhZ/UzX5KEX7+pnhMzrqxAz+zqGX6E/EeHfQVnP1qobfyfiAB6ktud+eyhN/pEQ1ay5NzdlBMSMyGeTTBmCZAk+HNQm/EAxTyLlxKdSMvqobfjWf79KFli4bBx3mAV+IF5yLvMeqL9OP8ADKwCHCPw3f6lFZ8Np2j7b9ob8IiGNpd8Pu+GYJYsQJwi1uF4aZE+a+h7v3Zzc8tfouXfPWlGZ6+qLk1Zw3DKUtH5fVH1LCVItc6UbyXIL5NmH65ZfuuX8nXKIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiKA+0+6fm+w2PQ8LxWNhYXuGTkflL3YW8RH/8cMfeV4aiDWhhejg9512WddiwGjNpIl69y2cLn+2WQNH81j2sMqMwLaF3DzMp+S0F8hckxA1nqSKdKKFYhC5ikRWQadQJvKnioLiLjilmHORcSD6qFYhPi8Ja67P5KD4hECTC057NOg79MlCL8ZxM+7UDBpzowUNxGPIOXnynkGkJU2UHxFviiOTmIg11b14KE4gWMQ/YuTUZ0UFxCL4j1fMBqyaVPFQW/wAdS9SeegbWih99nEXFfqJK/gVnx3yxDu0cM2YByJuPU1+tP8GGA/8ADn4YfY/cYrMWVpeuzBxy2+HhMdp2gxK/4xDFECK+5vllM5DNenly+gy0D57Kri0nsWL89FwDk0zPOfTOc1yJ6Uc59W1l4qtxlLPIE5vvmueXl1L965RERERERERERERERERERERERERFw6en9FcuB1RERERaftDdfz2A4zc+Hi/NYXiFgB/laXS1hh/5iF89bwALXip8IMzmQCZn1VZl2rlNjQSm7So5WzgLiYar8zkJUVu1mD/i5nVxo55KP3sn4nLE+M6eShmJgDinlxBhmeYlP1NQK/wzjAfOGrT2HNQjESWJ1qRIPSucj6koPiDF2d51rPlyUIxASOpltPIaKCX8xExAyMyZtV6PQKH38nMa8uc+5QrEJiM7uHDVaT+qKAYjEXiq70zmaMDr5qDX1gIpjXlNj5eKh97IckOXfNqHIZre9lrCK2v9nDAHjjiAgAr7wygDGrxMF+yr2dYKOzPs+7DdnBALL/Q+x3ZnCDAA3DFh+CXG6xyGfvLOPqVM+LJ9hWRGvh6dcguMvH6Ukgi2MgD9wfRVVN+W/rwT1Rciv0LearDkHQ6kiWeu/eqgcqmdNi3RVD1vuiIiIiIiIiIiIiIiIiIiIiIiLjT7fXJcE0+e035SXHFMZhhSZJegOdVTxaamdX2APNciLk4zkH6NTuXDhhs+uuneOq54m15b8yKV+y54pilW76GicXRjM5N3zkueLPJh40XLjy8VyuCHBBDgyIOYMj4L5349c/ymK4hdT8MV1v8AfLszCRu16tbEAh6tAFiXaIkgV8C4ab8ltoIj3tqQ1S5FKKmMs7hxnV5nlNaG/Q/1Ayek29fRQ7EJ0ahoWM5GeZlL7KB4iA8UznXkS3eoHiTvECdasH6dVB78/wATkTdqswlXIqE4jEZ8jWTchzUJv8QBi4i9fik3N+k+ahGJETNQdzo5Kg2IxSOWb5ijneSgWIEgRkjrk1B5B1B7+SIYjsQc8p/L6qIXiKZDEB895u45Lub2A9nYu1PtS7Adn4YTaf61207MYaYeB3gvuN3G72rjP+VaR/sv2IkgGICQhiihDSAAJAAbLhQF9+R+eS5efoT1Hh3LkEZ1kKs+r7My5ER1rkwd5Mfkrjtz0ebdVzp671VJ6z1GtTVvR6KpzmaTbk4y5hVDJpEu/merrl3p39xHmnpuq5REREREREREREREREREREVL7a6TG2skJGo17uS4dmlUB9shmuHo4pMM1au/MH6Kklz5z00Lc1wfB5SHiU9faa4REeg2NPHzTibPx5/dOMDMBnanV9Syq428K5ZPPZ1zx18JZ9cqrw17T7qbn2z7RWQDGPEor3Dpw32xsb33cVtF+yhl3BNK1eTHQkLaQUDsTKu+vrJcWhADNyz1Y+PgtLe4CAZvI9ZOa0yUNv0LcVRp0GpUDxMtxAVZot8m8KqCYlQtuxbKreIUFvzvFP8AT31dq1fzUIxEgu+7t3MH2KhGIispuaT2pzCguIP8QqA4rQuXl0HcoPiGZJ1llJwZ8lAsQJ+KWrTBGxDV+6g2IREu+j9QWbuUSvE4iKVzzO2a9yfw++zh7QfiZ9lVlFZ8VlhmOXntDbFuIQ2XZ/CcRxSCIgUAt7vYN0X6h4bRpcTyFczOVa079lWLU1o7PzmfIFXBHkficlg8xVg5z8JqoR6OWzyZ68/RV4RSaj+L06M/qlYLMXcFpiTaPu2SuAiZfrLmqqfMegy5d20mzaNlrvyQas+ooJTPyKqEXm+Ydy2R+tFzxZDvLSbUCgXIkA7vLU+s+i5ebaV+S5REREREREREREREREREXD+sv3XHFQnMP3TZ9VSSeTsAX3czGXrVUyymG3YsMgBJJ/LXkQuPI6rhEXDgZ0VJiAMmejn6BUGKU8s3M+b9O5UGJmmGnN2zmC5n6kqTaNzkZzyPDNU+9GfiDImWuu6qFuNaZyInMzPJeTPbZdRZdrReoRK+4Xh9sSBWOxFtdYwN/wCRAuo7COKGKHQs8vN5BbmEMAQBNgXmHI8UtWZ9XzdjVzqKrT3uL4HFWY5tIiZ1UIxKIkkAsG1Lsevp1BMRBYkgzEmbvLei6g2IEtE2WlHAd/WigWInh4ya5yqJTfvUHv4MXFpPNxrKjSdQy+hgQTkRqZ0GygeJMRFCA1dpDUjOtaKCYhEzzo4Dtn1nSuygWIzEedTzDENLcFQfEIuXk3OdXUUtG43+mpdtNl9Wf4V/Z7877asYx2OzeHs52Bxy8CMgtZ2+MXzC8HsInH6YjY3i9CozZfoAFozB3FJVnIyOauQ21AOJ8g+bhnfNXBakvEC5zYCbEGTU+ayYI3LO4LyETzLkkf3fJZEEcmYzzBc1YAltwsgFsj1Ge6uiKs3EmDF5qsHxl3fP6LlFU/XpsBXKiEnPrpoSWVQmHObA9C9XDZLl5Odps7Py5oC4BfLRhvUU5Kp/3yXKIiIiIiIiIiIiIiIipJ0YzFD080BzynnqRqZKkkM0y+jnN865rhyZdZgM0m5Kms5v3+qFD69a/VcIhVJPVyJVkR9VbMQzMznno7f3VrorZibSVZv+0X0VuIvScJ7xISnyVsxBpkhtjvLz5qyY5u9DylMgFWzaBw7UOYFT0YK2Y2kCR5EgO5nuAvP3ttu/Ha4FfT/VYX+5xEGnubawvEAPS2tGM5Oy6CsYps0wZscgZMMyt3ZF4ObP1yO7jwVVpCwnIVoXIOW01p73C8JPfrWYln9FCsRqeswP6iQH8SPTqEYgxfkX2d2559zKB4h8JiG83DOHJnn85qBYoxEUn/xEyz5vVi/0dQS/RfqprWXIkilFCMRjYRT1GsqNlNQPEYqn9psoDiB/W7ZgO7Nv1ZQTET8MT56eDafdQbEIhNnfUDTnXXoo2Rx2oDMHzkWJG0j9F9yP4U2A+4wz2sdp4rNuP/hTs5Yxt/8AVcXvMIJH+Nzfo+S+votD8LOAKz7wQM3ZXRahw7ZTY6zIGv1V2G2LTehBBaYfXIhZlnHMMKECWfOWjssyzjycgzP6pEyYuec1lwROxJajgcpZToVfhjDmvUMRm9ZTZV8Qee7aULjrNViKvM06Afuq/XpkRcjfQ61b6+S5eYbRpSfqKrk1plIv8nZnd1XRtWZgzltNly/f4d/qi529ZfVERERERERERERERFxOfz8OipGQPiWlMkt3rgzO2UpU0zqqZHYsXlI59FwzfPUT9d6aetvJcJ69SVPEz7dHzryVJOjyLCddcvTq0TpMBhOU5MGVEUVZuNTmS3jNWzEHIA3LkdznfzVqKOGlaZyOztMv5K1FEMno4bJg4LZ15useKNv3lSYZWyanPaYDeatRREgNm4kDObHv6rqT2v3b3/Z653qsVzxSAGIlyIb3drayMm/7yzsurLzPZEAkO5BmDN991ubAyDtrq8+Uz6KyLRjDQ6zeVatk7LS3swiEgPs1TnQ1+yhmIwiIRHIvR3kPGv0moDiRYmTOT3TmQTqygOIuTE0jIT1cvUzl5qB4gHMTic66PrrRQq/icWb0yYkV8fsoJiQBMQnPWj5EtVz5qB4mYgD3BhMfUMoBicTiIAaTIdwZEUUAxIljN6175DYenUIxGplKZEzVmmMp+S0lhCYrxADMmMN83fmv0Vfw3cE/0f8AD/esUigMFp2k7c4zehEzG0sMJuWGYTYl/wCqEW1nexPN919A4bd5ud6uR8/PorsNsBJ/o5YSnOSzLO0J+pznkX8d1mwR5F2qaAh6kfusyzjd2JYSEgQRQuS5d/l0zbO0dnMzUH/FmkBKh3V6C0YH9IP6qzLyMqFXREDm40d6l5tVXnGoqA3fNVg925OZJd8iyr4mzffee1KclWiLl/W8h5MqxnPfNpNTUVFVVPKTb16aOO6iq19dyIiIiIiIiIiIiIhpoqHmdBQZhxUzpzQEHk7CuU5afZcSJM3fuegpuT3qkylnJwBnMuGzZu9M6mWU3nUbbqnnki47vt6dUk9zh9n5cvFUk5T2zBEzN6q285SYF9TuOp9BWoi1S+4/tm7turZJo8xRq93rkrMRAc5ktqKT6qzFEWaVNneUuRLKyYzV+pYF5EHdmVqKJizsz0FC7v3TlqHVkxSzp+msh81aiiNH5THmKKEdv7H8z2SxYNOws7te4Tp+XvVjFEWH/hmPxXkwjhtXnImEht8nW2sQTCwP7s3JXySBMPq7iQBzI0FOi1F9Dgl2/UAKBqMHpmolf3IjlKj1IDM4lPNdfYnCHjYSmAN9gPU5KB4iC8Wxm8iJP0UDxEM7UnkHnOvgoLf5GJu/SR+agmIRgGLd3HrNQLEy/FTMl+b751XX2JfpiNWE4iWAIfPZ/Bdf4kXJBlOQD8hNQu/n4jRpmcnnt9Fr8Ns/eXyykZ2kIoZB5nObN1X6dfwj4T/w7+HX2V3IwiC0vfZ+0xu2DMfe49il/wATEUzU2Ftd+jTXpSC8AZiec9Wzrus6ytnMtwdz868ls7KNwDnTZh5U1WfZxHI6zzqxynNZtnEBDr/c7VeQrzZZEEWYOWZZtD0LrIhtJM/Lnk2s3V+GN6Fmk9Zicp1rmVkQRyqNaOZNUNvlorwioxcTznNz0oqwT6yKuQkyeQnMmbes1WiKqEzDtKjtLqqic3ExMd5m25XIAlN9xJyHFeR/dV9GRERERERERERERFTpQg+LzzPNcSlUMZ/C+hY6ZdyokNOZzPIZMuOf7tv3pt9D4rhPkqCdJzEjyeW/NUEuG0DCWtTP06oJyAfJssq9CrMUUyObnqJP5K1GXFXeg2YhuTqyYnBmDuzy0mOVf7lYMWQiBqR9+itGJ6kudxP6581aiiqH5nSXJWTE1dz5a1yVgxszykc6yylsJK2Y6fPM55LT43YG+4Tit0r+Yw++WcIkXiiu9rwj/wC5w9y8b2jiJ8yAWIABk5BrOYWwusbcJqWYt36Sks6IPC7ib0qc81p7244iJANpInObsofiJYEEtXod5/uoFiVYpZFhUzDyAEp+pqBYiSAeRyMuurElQHE5kkk61kXkBzZQTEImhicTn6d5KA4hDxRRTatMtG6Dx6qB4iABFmavSdS9F17ikZAiagJDDMNmRTqoBiZnt/zdZ0kO/qoRfY/ii086lX+z9hFeMRsrOEPHHEBCGE44iIYQJ/3EDqv1RdhbnZ9nux/ZLAYPhGC9mOz+FiGghiuGE3S72gIk/wDMgjeSm1nenqTOU6AGUzozd63l1tHbOpAJLHv9TbJb2xizbweRp1WygiYZDQaOP/7VWRDGXq4lt4GmQV+GJzwvCZh5CnM6Od2MlkCOfE/J3MhIz2CyYIw3JzRgJNlTXWZksiCLSgAajB5yGRWRCS05CrAOHpM5z81ehicTk+YoXNN5q9D4So4rPyfuVx9SuUVWVAZ1zZtOiqhlTmdJPUkSp6oqgdec5eeS50+VFyiIiIiIiIiIiIiKgg61l5u45KgyM8xz9TC4PpvVVx69BJD5Kk9AeWTvr4q2S50zq52+aoiiaus+r/dW4iNcvCs+qsRRHLOZabzrT1yVqIuKvtJjyy33ZY8REyCJT/ca/VWiXByDCUjIPU5ZqxFFOjhjsSDNWo4qtSUqAu/0ViKLwc1ap33Voxcqyeur/VY8cYoOeQ0zeR+isxWgBYl4SWiBGRLRTzkvHWK2Bu2I3y7P/wBnvt5sellbx2YLtVoRoqrE8IETsCZyrMUGfis13Du8nBGbF3Za69FxEGd3AbImYqNhyUNxLMSADmgyD1arqBX8M70ckT25yYAKA4o7mVC53eF6cvNQDEof1cydTsOfeoHiI/V1r1FOageIUiEh6k3Xouv8TJdgSZl89m5SK68xIl4tHNJPmW6dygOI/qM5zoKEsHcfPRQm+mcQ3oS9QfuuyvYlgh7Qe0nsXhHBxw4l2pwG6RQs4NnaYndvfCY/7kR5Gi/SxYX94yYTLii4RNuHiIhGwp3KR3G8G0IIaodjKRnUaqYXOKUOrCddpvyUisSGHdUa+azIYy0vN3nLnULJgi6tvLPqPssmzjDnYZMMqTosiCMt5TLwkB3APVZMJ+IknJ86M5IlkD1WTCQ7kv8A8oNA8L5mSybOI7vKW4cVPLwWTCZsZaTcgmrAiQd1ehJy8i/IAjQlXAA0tC2ezt16PzVaIqxkTmGmaDIkGoVRYyfUNTQAMRrmuQTqK001EuRVXy8/280RERERERERERERGdUkdXaVQPCipId2DCpeWWXj81R6+viuFTEHl9ekxurRDFq/Vp8laJDuaTHVspalWYi5Dh5nZ+4etVZiiajFq5EbGXPmseImYeooWlL4Zkb/ALKzEauzg6VyOWSsmKol5ikwe9WTENu/7K1EXJP0881jxmpqz000ViOMay1bvHc3csSO0AMyQNn2Hc/ksK0thDMHJsmlX/zbLzR20sIbPtHivDIWt6FuGJP/AGiysbcsKj4rSJ1o7KjDPMVnVp/t0WcxELAOGlmQ4rMTr4rXW4AEQNP6f6Z069O5RDEjwgksHBlIvt3hQHEYgHDmhPrxUBxI1cu5Lym4k7g1ooBiEX69Q7jUcnXX+JGcQfIjQzZurqB4hWIMXDhxlJhWXyUAxU8L7kxPkza517iuusSickgxTcZBm10k6gOJRl4ixLA7kHMOR6ZQu9EmMkSnSUzqZUXqP8HuGQ3720dkbxHBxWeFW1/xiIl2hOHYberSxinpbxWXVl9ysPv/ABiGeULF3Jd6z5LsrCCIoYS70fn0qp9czwgEh3YBgNqutxBaOxZi5IpQu3y71n2cbgA1YevBZkEbgGn6TXdxnRZUERlo8qGuZHMrJg5voJZBj17lkwRMxMz1kBlM8s1lQThMwWqZE1meT+SyoJzNJVLSapL0crIhPe7iKsgxPiH7gr8Oc5UGZo/n5q7zcHuEqAeKuIqmabPpKXWeiqArU06gdKbbJDnJix66yA181UNK0ybXwVXr0yIiIiIiIiIiIiIiLhtJehRcGEenLdMz9FbIaevL5UzVKtRDN9hI+PqbKzFC4PJ/qebLGjD9ZMX5Oyx43EpAwtplSW01jxnKbljWUhR9HCsxGRJd8+c/I6aKxEan1tM6FWYon5TbLdY8cY12lzNRmGAViOOug1Msw9N/qsS0tAACefMyyyp4LAtbUQgvE1XINdHei0N6vgg4mLmZrIZGea6O7Yxw22LR2sJBNpdbB5yezitbJ9zwwQaMovYRO1AYTpIihy1zWzEXFDm82eheTh858lr71LQOCHoeric38OaiGIwwxAgyZ2+ERCecLeqKAYlCBxOdZmcTMR88vqoDiML8W2kwWmZN6ZQHEYADG4abyYaE8xT1NdfYkZxHc5CQD6TyKgeIEDiOU9M5GRquvcUicxOGd5UoJzzC67xKKGERNMzIBYkNnsuvb/E8UZBEyddmlzUPvJeJtSxAyzemi9vfgwuYse1uM4uYG/I4DaWEERA+G0xC93ezd6v7qytd/iX1m7M29peo7KLiPA+feNnXfWD2fBBCSK06ykTk6mF2tZDMCbCT9Rs63FjEYs/tycyqtlZmX6a5ymNis6zLiTTabymd828lmQSn1BmwrKuyywS4ebaEknmXmsqEgSEjIEuHnzyWRZkZFpMGyfcg0+yzIWLPM66SnL1RX4JNnvqCfoVkQmGgk1auPTeKuCeVM2JplLZXB0nTJ5aNKQXKqyIdhprKS5nIVMjR93JymSqpjxym+jCs3Ok1zN6HLYUq3VVIiIiIiIiIiIiIiIiLgirGrZykqIoRodAZTOjZ/dW2n6+ismHOutMi5OzKzFCwpKumbz2Z1jRwTLkA5SGzz1WHHZMZOA7TG7UHVYkcJHmzk5mfcsaItlIs4cv0GSx4ozrJi5E9TmsWOJsxTvo4Eu5Y9paMNZ1HktdbW1Z1AkMgPuec1pL3bsIiTQSmTo/y8lDMSvhhEXxVBIbMZz6LqDGsRs7XGILo/wDNiuNvaDPiNlb2BYBpFrUk8+7CsptIuJGYJd5SFZutjCWAIemWrZd6w7w8QJPcZsQaU1URxAGbOwqZsBnSmQ5KDYkQxoGfWY+kj3rr/E5O1J0bWsiuv8RBPEYd6N0beq69xMECJ23d56PLk/JdfYkS0RZnMwKGdQMq5OuucTJJibQ5ynPX9+9de4pUu3UGe22agF/iHFEKdekz3KK2oJjhZw8e8xlXNfQP8JlyNhhWMXuCGL3t8v8AcbnBwlv5dhZWtsRKo4rcGf8Aa6+p/YvDorC7WMcfwvCCzMXntXXku5bnaMIRQNIDk3dJSe6EnhdsqZNm63921BbIkSaW5m4pyW2swcxIVId3bLWTPNbGzGbT7gc56dzTWXAAQ1M5OQJ56ELLgBpozvKVCW5LKs5lpuZOAJAyqaGTLJgBMnpKubmk9fTLKh6NxGkmJrNtujrJE/8ALxiNDpIq/CwMwfIDn/cVdHmauwYULc6K5Uy5fUuiqDiW8n72Y+g65oC4ds8iJPUzFGVbCfhyyY9y5n6EqZB6OuURERERERERERERERESqpML/sPNWzAXprp6CtmB5udO9/urEdmSCGfPilTSk8ljWlloGeYqHDZtSTusOOxJkISKj/EBgatPPyWBaWUi0ubu4BkWodlgRwNkXdyGL5ZLX2oiBLbkbZttssC2iaRJEp58n9ZrTXq0GpLAkTm2zbP3KO3q2DRAGsiTI5gZ6/dQbGrwLOytIiQJFqVm0mp9F5txjGPyfaO44jaxGG72V6/LXuMxHhgut8hisLaOI/2wRR2cZ2snK7Ds4iDIOYXBAY656UWfZxSIeTNtPTL6LGvPGz9JT1Pn5qL3+YIABM3kQ4LsxoR9FAcUAeL+5jSYMmm6gOJERPOlJ1/Zqbrr7EnHEx1bWlHOdV19isQPFPWQk9Q06D6Lr7Em4TLi08ZkDkuusUIh4iQXmOYdnb5rrnFY/wBU2A4u4ZuDPPuXXt+LmI6nY6DvUchHFeIf98yTXL1zX1Q/CR2ZtrLA4L3fLOKzsrxGLxYiKFuPjhgEB+IfEOCGHk+6+kWDWcYgghhh4QBCwDzYczquwrhCwh+Ey1Z39d6lt1glCwZ2LP8AE24NM8lvrCDOjsxZ5yrUOB5rb2QOj5CRDjOKWy2MEIIoKZGQyaSy4QXHi0gzPMgV6rKgDUm4q09x6+SyIYc6AZ6uxGUpLKgkQWEnYu5LznrlPZZdmJDaTgdH3lT5UWRC+WYOQkZCo2V7JqAOW3Jy0krkIauTAbagPRXBPWeTfZcjfu5t66LmReUtWpLQFVQs1N5TOjsX9eNfPZ+cp+S5REREREREREREREREREREZ6q1Fw5VVowu+c3D5SZYlpZB2Z8p94WFHYvNqnUUypN3PoLX21kPi3cuGoDQ5U9VWrtbGpIBYuJzMtWpXuWqvFiS5bZpFjUZTCj96sIyCxZsgZZAt1dRa+WdrCD8FBkKgVlnMFdX9pbaIwRwTAYykJF6j+kSXnrtFcYbWC2himLURAwz+IRyihif+nhJ8qLK7C9qRbRQdm8WtRDit1gNnh1vaxMMVuVlAeCGGKL9WIWNkBDHD+q0s4BawuRaAdrQRB+F/hZxSbhnB1agVm8NECQXkQ5LZA9SozfT8MWtQIXrPf1oVAsTIPFMmX6nLNuF15iYLkszvOTNMNv9113ibQmLPMSZhKmpXX+Ku0RBPhuxDSOa67xGOUT0Lg9z6+qLrvE4j8U2Z/KcyNNV1risReJpBmcanyGq6+xGMwiJ9Z6Pq7SFFO/ZD7NMQ9oPaGyiisrSz7P3C3gOI3yKEgRxQmGMXC7xcPx20Q/Uf6IS5mQvsb7M8Dgw2zu91u1gLCwu8FjZWVjBCwhs4YWgyYSFar1bg9yiEMMsg8nOW+xU+ud0/TJ6AA1IeRdp6KSXawZtsnq2xNP2W6sIOGYcSHiz/CVs7OCQlU0zFWll5rNgBYcVZsACPDuWTACZ7f2s3UZLJs4ZtXIUE651qO9ZcEJLHRjqcvhHKf7K/DDMSmD0E8zqsqAHac/H6+SyYQ5d5PMbECXrRXAO4Ach11+iuw0E9p56M/RVrkd+068n2VQoRKmVHnU6+CrmXbkXFat63XI5Zd7S9c1yiIiIiIiIiIiIiIiIiIi4JYOqTGMvsrRIG3NWzHKXeCfmFZiJFDz1ybzCxo4mznnOYzJ8lg2jTah3ae2zeSwLQCZlOeWkvn91g2sEERdmdyWH3mtfb2EET0Goauc9KqN3+5QkRMzkcxvIZLq7HcH9+IoRC/6pgClDLP1ouoMZ7JWpERghIlIMSHmdKV1+S6P7T9kr6XiFla2cdnai3sbxYGOztrtawHis7axtLM8VlaQxCEwxQzBmFk9nvanbYQbPC+3EEfDZ8MFh2ksLGKKCKGGQ/wBYulhATd7QAzvFjCbMs8dnZziPcdlfrriN2gvdxvV3vt0t4RaWN6ultZXiwtQQSTZ2tlEYYpbvqHktFfvhJZyGPR6N6qoPiQ/UKg6zLtWs5+PcuvsTb4mMg5YefrXZdeYoARES7z8tH6rrzE4hwkTMvEcwuvsRhAhjJlUy6udgWXWuL1jOg1yOjdF1ri0XBxmIho4hCC4nFEGAA/qiJoACTRnUv7DexHtB2zvVhesVu16wrBjFDGbIwRQYlfYAXaCzM7hYEO8cY96RF8FnDKMfSb2cezC6dn8PuVxudwsrrdbtBDDZWFlZ8FnABM1cxxGIkxEkxREkxEkuvUPZfAIbCOH+WIS0JozNr0C72wy4gWcAaYDOxadSfWalV1u3C1QKDLWnXmt1Y2DChfyBfLOmWq2dnZMJB861mzSE/usyCHhNJaTG1dfosyAO2b5/LuKyIYS4lKsw8nm6y4YX3IDc2pnNgJK9CABRiJNR3bv5fRZMMADM/V+89+ayICzdCCHrmBur0Iz3MxyoyvAHluZS+f3V0BvWWS5VQrpuC1WHd9VU7kzqGArnSQ8fNV0lllMv6ZcoiIiIiIiIiIiIiIiIiIhLenVqIlyPQz1qrZLBWoi5rLYuPJW4iwOvr11WNHEQZnfc7PlILDtI5yJNRm5LsxlKSxYyZks7M9MnWLFyocxzfpIrEjd/XWvlusO1iABpmBynRaO9l55HTLUTooneoYTEdnE6znr+mqj18u0MTvCACKM9QHedWPgohf8AB7tbA8VlDE4ajVrPMt3rrXHewGD4jBFDa3UPEMgJbhmnkum7z7J8UwG8Wt/7H9pb92fvFpEI4rKyJjuN5jEz+buNpDFZW9DOKCKJnmsW07Qe1DCB7rGOy+F9qLCGRv2BX0YXfiBWKK43oR2Uce0MVmDoFH777RcKheHFcH7U4BaQ/rhxDAL5bWEJb+m9YZ7+AjeXIKJ33t12Nty0PaTC7Ml2hvNra3OMAGbw3yyszD1Z1BsU7UdmrQRGHtDgsQqCMSukqtL3h4jXk66+v+P4NHGYLHFLteYjSG6C8XyKKTSF0sYzF8lHbS54zissK7PdoL5DFS0OGx4fYMQwJt8UjsZTqITyWXcfYv2yxyLivpueC2ERAigsnxO/cL0ERhs7CzimMrUB13X2L/DvgeF3iyvUd1tL9iEIB/P38/mLzATX3JihEF1BLSsoLMc16i7Oez273GGAWdhDAJSELDVzKu9S67gwrs/Z2UMIFmAzS4RC+TSzn4LsDCsNhgjheFhnKfQkVXYtwu0IhBZqVzd5KQ2NiGoJgt9zqtlZWQYUEmkBPYtVZUEDUEpOwA5+sllQwnbUtTOZn+pX4Qc4ZPk5z3E1lQiYkWpF1c9JZrIghMmYctGc5T81kQwSoCZcidi+iyIIQzNQ5h9DIvRX4QDKb650aZV2EbTGcidS55kq5DXV66fTM9yuDv3pmfBcqpnlmH5CauMxlRtJl8n6LkVPnvNxtXxXKIiIiIiIiIiIiIiIiIi4Jbz9eslaiLlw+Xh6CpVEdPXLrU9ytE/YbbKxFGM9ScqNJx0WNFwmbzn4f1Pl91iWkiWJJrrs+j/RY0RNDMjybw9MsWPNqDdm2rL1oseObvyMxzlKlfmsC2AmPE1E+5aS9F3rSj0M/ko/bWYJJarmQnKo8lqbaxJk3eGIz6ydtN1qre7EvxAzbI0AnmtJeLqC4ELk1PLbmo/esM94IjFD1MJ/SzUeeii97wSGIH+XIu9WmDmT8VVHL32fgjcGClCzHMTGajV67HXa3HDbXS6205++u1laZiTxwGU/DVaePsBhcR4v9KuHFqLjdeJ5uOIWLhmHdskHYmwhi+C7WVnC4LWdnBAAKCUMPKS2l37E2RI/ljrCa5ybqpRcex93sjKyhrXhYMC9WkeWimFx7O2UDcNmMg+c2lSbnwUvumDQwgfCJM5YtIS5kfJSS7YaJfCBUjU1GWYCkFyuYgILSBG5693ipXdLIcI2Iy5NXfzW7gs6a5yLNMZ1zWXDAzOMm7hLkKS5rIggzArJ3or8MG1Hk++Upz2V8CbO+ddpBZMAm5Z5EvymKc1kQwu4nty+nisiGCHL5MC8g39rq9CGkWYHSu8uncr0IrM70M6uD6qrjfLLX0O9XYWyqAKim3eqkVcMO/dp1Go8FcHdWXrkuUREREREREREREREREREVqI5fLQmY6eSoXBLfTM8lbiIJ+/rZWYpAgnQjrUFsljxZa70PPxWPGO+bHOWTLGj1Y13PolY8ThmlPVhKbMVjR8nNCegKx7R2i7mFTnnn9VrrZiKzplTr6zWnvEJPFmJ55bsJTWstLF8mYOOX1msG0sdtWAnKbGi19rYOSJzf5ihoGda61urzA3lt0WqtbpkITOez1lqFrLXDgawu5oXPg257lr7TCndgHnk3Inq6wY8J+IEw0rJsw48FR/o4M+AMxBl8spKqHBYCAPdybRy7yLd6zLLBoRPhkNQ7ZFmotzd8JhZuGUjQCUznUfRbaxw0Q/0BhOjZA05ea2tjcgCGGTsKT0GZW0srpSuTMJO2bU+62VhdwIhI1GpDUeWa3t3s2ALNu+ThbWzgcBpGXLdllCHkXHc9D5q+ITPXcZa7/dXoYZyo1M5aFXYYWabNyIbbofNX4XmzTpWRGRLaArIhhJLijy+fxdCsmGGYyY55S1FX5K9CHyn0rvqKK6BkFVCJjwnmFdEvtTouUdXYWLV0zy5GiqC5REREREREREREREREREVBnzGmuj5GitmrZClPMLhcHmwz+XirOp19PsrMdKSOfjJWIn05l3YsBzorMQd3fUsc6h5bLGieLNg7vrxbN06rHihILgSbSg5H1NWYhVzrRm5ssO0ZjMgEZnUU71g2lOZrnnl35rWWsDknIdxM6AetFiR2RGUpvPiPX08lixWNZHJmzPPksK0u7kEiZek/Q5rFtLATk0ndjPKixI7qIqQvMbBsgRNprEjumTSE3aUnHRWYrpoKtMCU8vDxViK4gkfDrrzDeua5huMIpDrUaZjo/oq4LgAf0jctlPJ5VWRZ3Fg5A7gGh7pfZZtldGZxJ3chgemZZZtndJzhrqBLKYzdx5LMgu4BoNGpPNm9BZUFiBsxabSfcVLFZllY8OVGHLJ67lbSygZthQmeoiIHqa2NnC4GmUqu8hNZQg35ga1V4DrSsu//FXYYWrPpkNuSyRCCWZpSA9SzpqrghZn1Yvn3DXvWRCKHIcmbNXYYTpua5zFZzV4Bjo+dcp5+tFWHyzf7+Crhh1rlsH8/JXKIqgNZNX5+H3VcIIcTLUMtH+arREREREREREREREREREXB0mxzGXMq2enCCJDLXL1VU5+qLhURdTEzSmBQnzVtp19OytRCg2fkBTorMRd2I3GeTSViOFqjbnsDzVghgaipDF6Uk8zP5qyctWypr9e/ZY0WdJy5UyJksOMEy6kuJHN+jbrDtQS/oEF3DAcvRWFFBJ6O8nZtpUViKzq5qzzkzZUevcrEdmKTG2TEV3osc2WzMzz1DiubEqxFYAzlTmSf3Vg3es56VGVVaiuwzlSUpa8lb/K6w9z9ZPIv581wbs/7UkZ9yqF0kGHeBWfgrgutXhdxKWhkxzkyvWd1AnXN2kztNtwr4u7UFGap/VITPJnV+CwAYCQDHKebjeivQ2U5DnWZrXLLvV6Gyo2VB9RzHR1k2dnMOJDqBr10WdZwT4s3DU6bLNswxY8nLayk9NlkiGgA38wSr8FnkcqvWbA66K8A0jlnvmPKW6uwwzEnowo7h3V4Cjd1JCjMJZ9yvwiYDyDVy1/fNXYRLxqCOVNz3KtviBkC9fI9yugGWTbZ07lV4+t+a5ToqwSZA9xbOtJZ/srnnIetVyiIiIiIiIiIiIiIiIiLjllX06ofXJpOK8+9UEbN96Lh/WqKmJ2lOo9dfQVoyDddx6+StxQiZdtZPU+CtEPLMuzDlmKfZWooGAfm7aO3JWCCAQwcyl4y8FZiAEz41JHDkNvNYkYctsTXUTbl81ixQ5u8IqRKlfBmWPGAfGcjIPQ8m7lixQPNhIV2rnQMRPvVr3cyHepcs3Lk7KybMsX9VYU0Vk2Q0aTv9e4Kk2T/Q5OHyzZWzYj/d3BlQbJpdGZw5m3cuPdPTcnMGfj9lx7jNt9qLkXcADMVqKnOSuC7toKAnJy1N5epK4LCcwHoakVBc+nVyGxmzPuQ3JldhsS3So5sqhAAQWn3d2jsVdFlTVmrViW5Zq9BZ9BWeeyyoICz8mrWbeHesqCFiGG75vm0vTrLswTIcw1HqJmiviAAA7mZ8X8e7dXgAGGjyPmxrI+KuiEtQAjUaiauQwgHemrPKUqK6IWEpTc7kHauauBvmNXOrqsCjd89tpfRXR6b1ogDIPXSfyVQ1bbvBm7yKqhkdTKjM2blV6LlEREREREREREREREREXHrrVUznJ9JNkcnlmrZ7n0o+nrVcInr06tEcyc5V08AqG9ct81ajDUNZs1HkS/TxVogVOfydvn81ZMIcjcF308ljxw12NGzzloFjRCZYOHlKo6im6xo4aga9KzPl0dY5hOQnN9HMjuemqtcJOUvN9318lQYJzE2P7sK5KzFBUZTFK1+e6492BNiJTyAkzeSoNns9CC7NPkqPdvUSyHNUe6mauK5bu5XPu5AtKe7hs1ybI5ZANSv1n4LkWTs9MtJec39OqxZDSZ1EwMmnrp3rmGzY+Eu7POYVfu8m9NkeirEDgsw8n55mQ+SrEDVmJtkGzM81zws1dDq5p4BXobPYZS9dPJX4YS4p0mas2yyYIWLgT0k3QGdGWZBCCTLJyJATIIdqT6BlkQwZAdaUFIt381cAdjKkgaPm6uAf2iZDHnPfTvVcMLc9tPTq4HlJ+XdLqrjU6GdH/3D1RVCECnnVVIufU1UA75U8flNVgTJbWeenSSqREREREREREREREREREVMRlnMM3Q+vQVD50IpnKbCiomZoiKghi85hsySe7QKhq6B8+jqgjxZ+VCD0Vvhy1duTsCTp9FaihLEPMd8nHUsseMO+WtOeXrmsaKE0Bycl6junUfZY0UMg1Ms2fkVYihc6UlnzM6fVUxQAu5clqyEzOhrJWjDUN9BoROfPfkuDZ0IAFasHAbxNaTdWzA8i29C9QAJqjgA5EN63dce7AJfk1Wn9lwbPv0LZ1pWYmuRZip9bV3+a5Nkxl8Mp0pTV1yIAGll4CRllIKoWeTVEw9GzMpEhOCsPIkVLme3mquAsCZOKHdshQTVQgmxeZABlM6FpZKvhYbOHFDNy0qdFWIdaO1WAetDyZVwwGTByJuG/8A9Gc2V+EMaEOXcsWLGbZzLrIgh7wHDCodsq1H7MsyzhAk0mIyMiJgju2krzMA2X7AGWiuiDXwPgVWA3rlkTsqgOQA1ZuQdVgCs5uWFGlJuar5z57tky5RVCj1AeXOVe7uQUpPrRlVkGrXZ2pOsvuqx4eTSZui5RERERERERERERERERFTz0pWhqDquC2Z0J0EpOHnQK3SY18uaZbfM59wXCIitmF/DagmO5UEEGap4c2lQb65U+qtRirjlmWowc6dZrHihkzSIBOQB2nMyWPFZw5Ak1Y16MWeXirMQeQYZzmQSWqK/cK0YCDQSoKh8pZh372VrhPlIyE9Z+nVPDJodicqmbbKngLSm2TOHf7nNUcB+bVO5dguDBQas7zG7dFTwZ7Bp5VD9QuPdzozHTP9S5EAyLs9Jgah8lUIHBYTLmhmWDZUqnAzjTlWeu/kuRAM4SCNN5/TvVQgo7BvLTmufdwyGrEs89M66egueDYMDNyxYAiQbRvo6rEIq7MBkwyZ+nmquAzLGGdNmmrkImzSDzbVzlSayILOeZMt5aSzbyV8QkSqdS0ptJuuqvQhi7b1mX8HYrIhhYfIt1DEcuauAPvt6oqhDy6znVn0YeKrEMtWym28iqkZqIuZeGVBu7z+65yNPm0yJmuUlU0gcg2cmr3T81XmfXT1qnrfVlyiIiIiIiIiL//Z",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 264,
          "_error": null
        },
        "serverIPAddress": "54.230.235.109",
        "startedDateTime": "2021-01-20T17:27:56.258Z",
        "time": 8.921000000555068,
        "timings": {
          "blocked": 1.631999992175028,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.4059999999999999,
          "wait": 6.16000000372529,
          "receive": 0.7230000046547502,
          "_blocked_queueing": 1.0729999921750277
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [],
            "parent": {
              "description": "Image",
              "callFrames": [
                {
                  "functionName": "_",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 484277
                },
                {
                  "functionName": "is",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 559724
                },
                {
                  "functionName": "ku",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579855
                },
                {
                  "functionName": "Cu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579737
                },
                {
                  "functionName": "Su",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579604
                },
                {
                  "functionName": "Iu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579467
                },
                {
                  "functionName": "yu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 576433
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525812
                },
                {
                  "functionName": "e.unstable_runWithPriority",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 603230
                },
                {
                  "functionName": "zi",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525589
                },
                {
                  "functionName": "Wi",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525757
                },
                {
                  "functionName": "Ki",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525692
                },
                {
                  "functionName": "hu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 573802
                },
                {
                  "functionName": "ka",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 545369
                },
                {
                  "functionName": "",
                  "scriptId": "21",
                  "url": "https://proiectae-550b9.web.app/static/js/main.1ef123d6.chunk.js",
                  "lineNumber": 0,
                  "columnNumber": 4862
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 13811
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 15113
                }
              ],
              "parent": {
                "description": "Promise.then",
                "callFrames": [
                  {
                    "functionName": "t.sendOne",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 15043
                  },
                  {
                    "functionName": "t.forEachObserver",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 14974
                  },
                  {
                    "functionName": "t.next",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 13780
                  },
                  {
                    "functionName": "",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 762642
                  },
                  {
                    "functionName": "Eh",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 756858
                  },
                  {
                    "functionName": "",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 755877
                  },
                  {
                    "functionName": "De.i.a.i.g",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 632633
                  },
                  {
                    "functionName": "qe",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 633681
                  },
                  {
                    "functionName": "Ve",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 633572
                  },
                  {
                    "functionName": "n.fc",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 634152
                  },
                  {
                    "functionName": "we",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 631181
                  }
                ],
                "parent": {
                  "description": "Promise.then",
                  "callFrames": [
                    {
                      "functionName": "pe",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 630031
                    },
                    {
                      "functionName": "me",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 631098
                    },
                    {
                      "functionName": "Fe",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 633389
                    },
                    {
                      "functionName": "Le",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 632927
                    },
                    {
                      "functionName": "",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 631348
                    },
                    {
                      "functionName": "Uu.t.onsuccess",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 712240
                    }
                  ],
                  "parent": {
                    "description": "IndexedDB",
                    "callFrames": [
                      {
                        "functionName": "",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 715811
                      },
                      {
                        "functionName": "De.i.a.i.g",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 632633
                      },
                      {
                        "functionName": "qe",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 633681
                      },
                      {
                        "functionName": "Ve",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 633572
                      },
                      {
                        "functionName": "n.fc",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 634152
                      },
                      {
                        "functionName": "we",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 631181
                      }
                    ],
                    "parent": {
                      "description": "Promise.then",
                      "callFrames": [
                        {
                          "functionName": "pe",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 630031
                        },
                        {
                          "functionName": "me",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 631098
                        },
                        {
                          "functionName": "Fe",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 633389
                        },
                        {
                          "functionName": "Le",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 632927
                        },
                        {
                          "functionName": "",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 631348
                        },
                        {
                          "functionName": "Uu.t.onsuccess",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 712240
                        }
                      ],
                      "parent": {
                        "description": "IndexedDB",
                        "callFrames": [
                          {
                            "functionName": "",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 715656
                          },
                          {
                            "functionName": "De.i.a.i.g",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 632633
                          },
                          {
                            "functionName": "qe",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 633681
                          },
                          {
                            "functionName": "Ve",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 633572
                          },
                          {
                            "functionName": "n.fc",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 634152
                          },
                          {
                            "functionName": "we",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 631181
                          }
                        ],
                        "parent": {
                          "description": "Promise.then",
                          "callFrames": [
                            {
                              "functionName": "pe",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 630031
                            },
                            {
                              "functionName": "me",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 631098
                            },
                            {
                              "functionName": "Fe",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 633389
                            },
                            {
                              "functionName": "Le",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 632927
                            },
                            {
                              "functionName": "",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 631348
                            },
                            {
                              "functionName": "Uu.t.onsuccess",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 712240
                            }
                          ],
                          "parent": {
                            "description": "IndexedDB",
                            "callFrames": [
                              {
                                "functionName": "",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 715496
                              },
                              {
                                "functionName": "De.i.a.i.g",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 632633
                              },
                              {
                                "functionName": "qe",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 633681
                              },
                              {
                                "functionName": "Ve",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 633572
                              },
                              {
                                "functionName": "n.fc",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 634152
                              },
                              {
                                "functionName": "we",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 631181
                              }
                            ],
                            "parent": {
                              "description": "Promise.then",
                              "callFrames": [
                                {
                                  "functionName": "pe",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 630031
                                },
                                {
                                  "functionName": "me",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 631098
                                },
                                {
                                  "functionName": "Fe",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 633389
                                },
                                {
                                  "functionName": "Le",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 632927
                                },
                                {
                                  "functionName": "",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 631348
                                },
                                {
                                  "functionName": "",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 691127
                                },
                                {
                                  "functionName": "",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 690613
                                },
                                {
                                  "functionName": "On",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 640513
                                },
                                {
                                  "functionName": "Tn.dispatchEvent",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 642463
                                },
                                {
                                  "functionName": "Pa",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 683114
                                },
                                {
                                  "functionName": "n.Ic",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 685353
                                },
                                {
                                  "functionName": "n.Ub",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 685330
                                }
                              ],
                              "parent": {
                                "description": "XMLHttpRequest.send",
                                "callFrames": [
                                  {
                                    "functionName": "Ca",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 682249
                                  },
                                  {
                                    "functionName": "ts.u",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 690746
                                  },
                                  {
                                    "functionName": "hs",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 689894
                                  },
                                  {
                                    "functionName": "",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 691071
                                  },
                                  {
                                    "functionName": "Ee",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 631328
                                  },
                                  {
                                    "functionName": "ds",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 691049
                                  },
                                  {
                                    "functionName": "",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 698580
                                  },
                                  {
                                    "functionName": "De.i.a.i.g",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 632633
                                  },
                                  {
                                    "functionName": "qe",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 633681
                                  },
                                  {
                                    "functionName": "Ve",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 633572
                                  },
                                  {
                                    "functionName": "n.fc",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 634152
                                  },
                                  {
                                    "functionName": "we",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 631181
                                  }
                                ],
                                "parent": {
                                  "description": "Promise.then",
                                  "callFrames": [
                                    {
                                      "functionName": "pe",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 630031
                                    },
                                    {
                                      "functionName": "me",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 631098
                                    },
                                    {
                                      "functionName": "Fe",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 633389
                                    },
                                    {
                                      "functionName": "Le",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 632927
                                    },
                                    {
                                      "functionName": "",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 631348
                                    },
                                    {
                                      "functionName": "",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 691127
                                    },
                                    {
                                      "functionName": "",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 690613
                                    },
                                    {
                                      "functionName": "On",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 640513
                                    },
                                    {
                                      "functionName": "Tn.dispatchEvent",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 642463
                                    },
                                    {
                                      "functionName": "Pa",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 683114
                                    },
                                    {
                                      "functionName": "n.Ic",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 685353
                                    },
                                    {
                                      "functionName": "n.Ub",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 685330
                                    }
                                  ],
                                  "parent": {
                                    "description": "XMLHttpRequest.send",
                                    "callFrames": [
                                      {
                                        "functionName": "Ca",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 682249
                                      },
                                      {
                                        "functionName": "ts.u",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 690746
                                      },
                                      {
                                        "functionName": "hs",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 689894
                                      },
                                      {
                                        "functionName": "",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 691071
                                      },
                                      {
                                        "functionName": "Ee",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 631328
                                      },
                                      {
                                        "functionName": "ds",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 691049
                                      },
                                      {
                                        "functionName": "",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 698580
                                      },
                                      {
                                        "functionName": "De.i.a.i.g",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 632633
                                      },
                                      {
                                        "functionName": "qe",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 633681
                                      },
                                      {
                                        "functionName": "Ve",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 633572
                                      },
                                      {
                                        "functionName": "n.fc",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 634152
                                      },
                                      {
                                        "functionName": "we",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 631181
                                      }
                                    ],
                                    "parent": {
                                      "description": "Promise.then",
                                      "callFrames": [
                                        {
                                          "functionName": "pe",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 630031
                                        },
                                        {
                                          "functionName": "me",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 631098
                                        },
                                        {
                                          "functionName": "Fe",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 633389
                                        },
                                        {
                                          "functionName": "xe",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 632491
                                        },
                                        {
                                          "functionName": "De",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 632773
                                        },
                                        {
                                          "functionName": "Ee.then",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 633755
                                        },
                                        {
                                          "functionName": "n.dc",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 763492
                                        },
                                        {
                                          "functionName": "r",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 774238
                                        },
                                        {
                                          "functionName": "handleSignup",
                                          "scriptId": "21",
                                          "url": "https://proiectae-550b9.web.app/static/js/main.1ef123d6.chunk.js",
                                          "lineNumber": 0,
                                          "columnNumber": 5423
                                        },
                                        {
                                          "functionName": "zt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 496866
                                        },
                                        {
                                          "functionName": "Yt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 497020
                                        },
                                        {
                                          "functionName": "",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 515227
                                        },
                                        {
                                          "functionName": "Sr",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 515321
                                        },
                                        {
                                          "functionName": "Or",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 515736
                                        },
                                        {
                                          "functionName": "",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 521389
                                        },
                                        {
                                          "functionName": "Lt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 597248
                                        },
                                        {
                                          "functionName": "",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 517197
                                        },
                                        {
                                          "functionName": "Rr",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 517227
                                        },
                                        {
                                          "functionName": "Ze",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 505298
                                        },
                                        {
                                          "functionName": "$e",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 504524
                                        },
                                        {
                                          "functionName": "e.unstable_runWithPriority",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 603230
                                        },
                                        {
                                          "functionName": "zi",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 525589
                                        },
                                        {
                                          "functionName": "xt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 596987
                                        },
                                        {
                                          "functionName": "Je",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 504316
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://lh3.googleusercontent.com/proxy/fUzC_RUI3SBm8XDqZYj32PWF2jBndWeAI5lP7VjXBIZyh-yYzBoe27lqB5kkUAXS3gjP3t4hLwQt037kLElpa0s9aSsoZYAXkAab45IocZGC5gFcePCTIgU8cFaP",
          "httpVersion": "h3-29",
          "headers": [
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":authority",
              "value": "lh3.googleusercontent.com"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": ":path",
              "value": "/proxy/fUzC_RUI3SBm8XDqZYj32PWF2jBndWeAI5lP7VjXBIZyh-yYzBoe27lqB5kkUAXS3gjP3t4hLwQt037kLElpa0s9aSsoZYAXkAab45IocZGC5gFcePCTIgU8cFaP"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            },
            {
              "name": "accept",
              "value": "image/avif,image/webp,image/apng,image/*,*/*;q=0.8"
            },
            {
              "name": "x-client-data",
              "value": "CLO1yQEIjbbJAQimtskBCMG2yQEIqZ3KAQjHwsoBCKzHygEItMvKAQikzcoBCNzVygEIlJrLAQjVnMsBCKidywEIq53LARj6uMoB"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "sec-fetch-mode",
              "value": "no-cors"
            },
            {
              "name": "sec-fetch-dest",
              "value": "image"
            },
            {
              "name": "referer",
              "value": "https://proiectae-550b9.web.app/"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "accept-language",
              "value": "ro-RO,ro;q=0.9,en-US;q=0.8,en;q=0.7"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 403,
          "statusText": "",
          "httpVersion": "h3-29",
          "headers": [
            {
              "name": "content-type",
              "value": "text/html; charset=UTF-8"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 17:27:56 GMT"
            },
            {
              "name": "server",
              "value": "fife"
            },
            {
              "name": "cache-control",
              "value": "private"
            },
            {
              "name": "content-length",
              "value": "914"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "alt-svc",
              "value": "h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "text/html",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "216.58.207.129",
        "startedDateTime": "2021-01-20T17:27:56.258Z",
        "time": 55.47599997953512,
        "timings": {
          "blocked": 2.8499999744221567,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.11199999999999999,
          "wait": 52.3259999996759,
          "receive": 0.1880000054370612,
          "_blocked_queueing": 2.610999974422157
        }
      },
      {
        "_fromCache": "disk",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [],
            "parent": {
              "description": "Image",
              "callFrames": [
                {
                  "functionName": "_",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 484277
                },
                {
                  "functionName": "is",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 559724
                },
                {
                  "functionName": "ku",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579855
                },
                {
                  "functionName": "Cu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579737
                },
                {
                  "functionName": "Su",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579604
                },
                {
                  "functionName": "Iu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579467
                },
                {
                  "functionName": "yu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 576433
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525812
                },
                {
                  "functionName": "e.unstable_runWithPriority",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 603230
                },
                {
                  "functionName": "zi",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525589
                },
                {
                  "functionName": "Wi",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525757
                },
                {
                  "functionName": "Ki",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525692
                },
                {
                  "functionName": "hu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 573802
                },
                {
                  "functionName": "ka",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 545369
                },
                {
                  "functionName": "",
                  "scriptId": "21",
                  "url": "https://proiectae-550b9.web.app/static/js/main.1ef123d6.chunk.js",
                  "lineNumber": 0,
                  "columnNumber": 4862
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 13811
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 15113
                }
              ],
              "parent": {
                "description": "Promise.then",
                "callFrames": [
                  {
                    "functionName": "t.sendOne",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 15043
                  },
                  {
                    "functionName": "t.forEachObserver",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 14974
                  },
                  {
                    "functionName": "t.next",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 13780
                  },
                  {
                    "functionName": "",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 762642
                  },
                  {
                    "functionName": "Eh",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 756858
                  },
                  {
                    "functionName": "",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 755877
                  },
                  {
                    "functionName": "De.i.a.i.g",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 632633
                  },
                  {
                    "functionName": "qe",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 633681
                  },
                  {
                    "functionName": "Ve",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 633572
                  },
                  {
                    "functionName": "n.fc",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 634152
                  },
                  {
                    "functionName": "we",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 631181
                  }
                ],
                "parent": {
                  "description": "Promise.then",
                  "callFrames": [
                    {
                      "functionName": "pe",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 630031
                    },
                    {
                      "functionName": "me",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 631098
                    },
                    {
                      "functionName": "Fe",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 633389
                    },
                    {
                      "functionName": "Le",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 632927
                    },
                    {
                      "functionName": "",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 631348
                    },
                    {
                      "functionName": "Uu.t.onsuccess",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 712240
                    }
                  ],
                  "parent": {
                    "description": "IndexedDB",
                    "callFrames": [
                      {
                        "functionName": "",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 715811
                      },
                      {
                        "functionName": "De.i.a.i.g",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 632633
                      },
                      {
                        "functionName": "qe",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 633681
                      },
                      {
                        "functionName": "Ve",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 633572
                      },
                      {
                        "functionName": "n.fc",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 634152
                      },
                      {
                        "functionName": "we",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 631181
                      }
                    ],
                    "parent": {
                      "description": "Promise.then",
                      "callFrames": [
                        {
                          "functionName": "pe",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 630031
                        },
                        {
                          "functionName": "me",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 631098
                        },
                        {
                          "functionName": "Fe",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 633389
                        },
                        {
                          "functionName": "Le",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 632927
                        },
                        {
                          "functionName": "",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 631348
                        },
                        {
                          "functionName": "Uu.t.onsuccess",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 712240
                        }
                      ],
                      "parent": {
                        "description": "IndexedDB",
                        "callFrames": [
                          {
                            "functionName": "",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 715656
                          },
                          {
                            "functionName": "De.i.a.i.g",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 632633
                          },
                          {
                            "functionName": "qe",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 633681
                          },
                          {
                            "functionName": "Ve",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 633572
                          },
                          {
                            "functionName": "n.fc",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 634152
                          },
                          {
                            "functionName": "we",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 631181
                          }
                        ],
                        "parent": {
                          "description": "Promise.then",
                          "callFrames": [
                            {
                              "functionName": "pe",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 630031
                            },
                            {
                              "functionName": "me",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 631098
                            },
                            {
                              "functionName": "Fe",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 633389
                            },
                            {
                              "functionName": "Le",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 632927
                            },
                            {
                              "functionName": "",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 631348
                            },
                            {
                              "functionName": "Uu.t.onsuccess",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 712240
                            }
                          ],
                          "parent": {
                            "description": "IndexedDB",
                            "callFrames": [
                              {
                                "functionName": "",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 715496
                              },
                              {
                                "functionName": "De.i.a.i.g",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 632633
                              },
                              {
                                "functionName": "qe",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 633681
                              },
                              {
                                "functionName": "Ve",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 633572
                              },
                              {
                                "functionName": "n.fc",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 634152
                              },
                              {
                                "functionName": "we",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 631181
                              }
                            ],
                            "parent": {
                              "description": "Promise.then",
                              "callFrames": [
                                {
                                  "functionName": "pe",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 630031
                                },
                                {
                                  "functionName": "me",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 631098
                                },
                                {
                                  "functionName": "Fe",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 633389
                                },
                                {
                                  "functionName": "Le",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 632927
                                },
                                {
                                  "functionName": "",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 631348
                                },
                                {
                                  "functionName": "",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 691127
                                },
                                {
                                  "functionName": "",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 690613
                                },
                                {
                                  "functionName": "On",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 640513
                                },
                                {
                                  "functionName": "Tn.dispatchEvent",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 642463
                                },
                                {
                                  "functionName": "Pa",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 683114
                                },
                                {
                                  "functionName": "n.Ic",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 685353
                                },
                                {
                                  "functionName": "n.Ub",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 685330
                                }
                              ],
                              "parent": {
                                "description": "XMLHttpRequest.send",
                                "callFrames": [
                                  {
                                    "functionName": "Ca",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 682249
                                  },
                                  {
                                    "functionName": "ts.u",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 690746
                                  },
                                  {
                                    "functionName": "hs",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 689894
                                  },
                                  {
                                    "functionName": "",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 691071
                                  },
                                  {
                                    "functionName": "Ee",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 631328
                                  },
                                  {
                                    "functionName": "ds",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 691049
                                  },
                                  {
                                    "functionName": "",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 698580
                                  },
                                  {
                                    "functionName": "De.i.a.i.g",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 632633
                                  },
                                  {
                                    "functionName": "qe",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 633681
                                  },
                                  {
                                    "functionName": "Ve",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 633572
                                  },
                                  {
                                    "functionName": "n.fc",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 634152
                                  },
                                  {
                                    "functionName": "we",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 631181
                                  }
                                ],
                                "parent": {
                                  "description": "Promise.then",
                                  "callFrames": [
                                    {
                                      "functionName": "pe",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 630031
                                    },
                                    {
                                      "functionName": "me",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 631098
                                    },
                                    {
                                      "functionName": "Fe",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 633389
                                    },
                                    {
                                      "functionName": "Le",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 632927
                                    },
                                    {
                                      "functionName": "",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 631348
                                    },
                                    {
                                      "functionName": "",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 691127
                                    },
                                    {
                                      "functionName": "",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 690613
                                    },
                                    {
                                      "functionName": "On",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 640513
                                    },
                                    {
                                      "functionName": "Tn.dispatchEvent",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 642463
                                    },
                                    {
                                      "functionName": "Pa",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 683114
                                    },
                                    {
                                      "functionName": "n.Ic",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 685353
                                    },
                                    {
                                      "functionName": "n.Ub",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 685330
                                    }
                                  ],
                                  "parent": {
                                    "description": "XMLHttpRequest.send",
                                    "callFrames": [
                                      {
                                        "functionName": "Ca",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 682249
                                      },
                                      {
                                        "functionName": "ts.u",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 690746
                                      },
                                      {
                                        "functionName": "hs",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 689894
                                      },
                                      {
                                        "functionName": "",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 691071
                                      },
                                      {
                                        "functionName": "Ee",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 631328
                                      },
                                      {
                                        "functionName": "ds",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 691049
                                      },
                                      {
                                        "functionName": "",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 698580
                                      },
                                      {
                                        "functionName": "De.i.a.i.g",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 632633
                                      },
                                      {
                                        "functionName": "qe",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 633681
                                      },
                                      {
                                        "functionName": "Ve",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 633572
                                      },
                                      {
                                        "functionName": "n.fc",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 634152
                                      },
                                      {
                                        "functionName": "we",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 631181
                                      }
                                    ],
                                    "parent": {
                                      "description": "Promise.then",
                                      "callFrames": [
                                        {
                                          "functionName": "pe",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 630031
                                        },
                                        {
                                          "functionName": "me",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 631098
                                        },
                                        {
                                          "functionName": "Fe",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 633389
                                        },
                                        {
                                          "functionName": "xe",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 632491
                                        },
                                        {
                                          "functionName": "De",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 632773
                                        },
                                        {
                                          "functionName": "Ee.then",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 633755
                                        },
                                        {
                                          "functionName": "n.dc",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 763492
                                        },
                                        {
                                          "functionName": "r",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 774238
                                        },
                                        {
                                          "functionName": "handleSignup",
                                          "scriptId": "21",
                                          "url": "https://proiectae-550b9.web.app/static/js/main.1ef123d6.chunk.js",
                                          "lineNumber": 0,
                                          "columnNumber": 5423
                                        },
                                        {
                                          "functionName": "zt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 496866
                                        },
                                        {
                                          "functionName": "Yt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 497020
                                        },
                                        {
                                          "functionName": "",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 515227
                                        },
                                        {
                                          "functionName": "Sr",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 515321
                                        },
                                        {
                                          "functionName": "Or",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 515736
                                        },
                                        {
                                          "functionName": "",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 521389
                                        },
                                        {
                                          "functionName": "Lt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 597248
                                        },
                                        {
                                          "functionName": "",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 517197
                                        },
                                        {
                                          "functionName": "Rr",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 517227
                                        },
                                        {
                                          "functionName": "Ze",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 505298
                                        },
                                        {
                                          "functionName": "$e",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 504524
                                        },
                                        {
                                          "functionName": "e.unstable_runWithPriority",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 603230
                                        },
                                        {
                                          "functionName": "zi",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 525589
                                        },
                                        {
                                          "functionName": "xt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 596987
                                        },
                                        {
                                          "functionName": "Je",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 504316
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://i.pinimg.com/originals/dc/19/e9/dc19e9b94a372ebc21ffeb7623d5632a.png",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "Referer",
              "value": "https://proiectae-550b9.web.app/"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "http/2.0",
          "headers": [
            {
              "name": "etag",
              "value": "\"a2673566a2971b798c5d3c40fafe4882\""
            },
            {
              "name": "content-type",
              "value": "image/png"
            },
            {
              "name": "cache-control",
              "value": "max-age=31536000, immutable"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "vary",
              "value": "Origin"
            },
            {
              "name": "x-cdn",
              "value": "fastly"
            },
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 17:06:36 GMT"
            },
            {
              "name": "content-length",
              "value": "1334378"
            }
          ],
          "cookies": [],
          "content": {
            "size": 1334378,
            "mimeType": "image/png",
            "text": "",
            "encoding": "base64"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": 0,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "151.101.36.84",
        "startedDateTime": "2021-01-20T17:27:56.258Z",
        "time": 9.901999990688637,
        "timings": {
          "blocked": 2.970000010671094,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0,
          "wait": 0.20800000290572643,
          "receive": 6.723999977111816,
          "_blocked_queueing": 2.933000010671094
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "Ca",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 682249
              },
              {
                "functionName": "ts.u",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 690746
              },
              {
                "functionName": "hs",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 689894
              },
              {
                "functionName": "",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 691071
              },
              {
                "functionName": "Ee",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 631328
              },
              {
                "functionName": "ds",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 691049
              },
              {
                "functionName": "",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 698580
              },
              {
                "functionName": "De.i.a.i.g",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 632633
              },
              {
                "functionName": "qe",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 633681
              },
              {
                "functionName": "Ve",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 633572
              },
              {
                "functionName": "n.fc",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 634152
              },
              {
                "functionName": "we",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 631181
              }
            ],
            "parent": {
              "description": "Promise.then",
              "callFrames": [
                {
                  "functionName": "pe",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 630031
                },
                {
                  "functionName": "me",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 631098
                },
                {
                  "functionName": "Fe",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 633389
                },
                {
                  "functionName": "xe",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 632491
                },
                {
                  "functionName": "De",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 632773
                },
                {
                  "functionName": "Ee.then",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 633755
                },
                {
                  "functionName": "n.Tc",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 763382
                },
                {
                  "functionName": "r",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 774238
                },
                {
                  "functionName": "handleLogin",
                  "scriptId": "21",
                  "url": "https://proiectae-550b9.web.app/static/js/main.1ef123d6.chunk.js",
                  "lineNumber": 0,
                  "columnNumber": 5180
                },
                {
                  "functionName": "zt",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 496866
                },
                {
                  "functionName": "Yt",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 497020
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 515227
                },
                {
                  "functionName": "Sr",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 515321
                },
                {
                  "functionName": "Or",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 515736
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 521389
                },
                {
                  "functionName": "Lt",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 597248
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 517197
                },
                {
                  "functionName": "Rr",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 517227
                },
                {
                  "functionName": "Ze",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 505298
                },
                {
                  "functionName": "$e",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 504524
                },
                {
                  "functionName": "e.unstable_runWithPriority",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 603230
                },
                {
                  "functionName": "zi",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525589
                },
                {
                  "functionName": "xt",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 596987
                },
                {
                  "functionName": "Je",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 504316
                }
              ]
            }
          }
        },
        "_priority": "High",
        "_resourceType": "xhr",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "POST",
          "url": "https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI",
          "httpVersion": "h3-29",
          "headers": [
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":authority",
              "value": "www.googleapis.com"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": ":path",
              "value": "/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI"
            },
            {
              "name": "content-length",
              "value": "75"
            },
            {
              "name": "x-client-version",
              "value": "Chrome/JsCore/8.0.1/FirebaseCore-web"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "origin",
              "value": "https://proiectae-550b9.web.app"
            },
            {
              "name": "x-client-data",
              "value": "CLO1yQEIjbbJAQimtskBCMG2yQEIqZ3KAQjHwsoBCKzHygEItMvKAQikzcoBCNzVygEIlJrLAQjVnMsBCKidywEIq53LARj6uMoB"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "referer",
              "value": "https://proiectae-550b9.web.app/"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "accept-language",
              "value": "ro-RO,ro;q=0.9,en-US;q=0.8,en;q=0.7"
            }
          ],
          "queryString": [
            {
              "name": "key",
              "value": "AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 75,
          "postData": {
            "mimeType": "application/json",
            "text": "{\"email\":\"email@email.com\",\"password\":\"parola123\",\"returnSecureToken\":true}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "h3-29",
          "headers": [
            {
              "name": "expires",
              "value": "Mon, 01 Jan 1990 00:00:00 GMT"
            },
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 17:28:10 GMT"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "cache-control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=UTF-8"
            },
            {
              "name": "vary",
              "value": "Origin"
            },
            {
              "name": "vary",
              "value": "X-Origin"
            },
            {
              "name": "vary",
              "value": "Referer"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "server",
              "value": "ESF"
            },
            {
              "name": "content-length",
              "value": "1025"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "access-control-allow-origin",
              "value": "https://proiectae-550b9.web.app"
            },
            {
              "name": "access-control-expose-headers",
              "value": "date,vary,vary,vary,content-encoding,server,content-length"
            },
            {
              "name": "alt-svc",
              "value": "h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
            }
          ],
          "cookies": [],
          "content": {
            "size": 1374,
            "mimeType": "application/json",
            "text": "{\n  \"kind\": \"identitytoolkit#VerifyPasswordResponse\",\n  \"localId\": \"wurOE88ppGh9Ih8piKD9IzKdPyj2\",\n  \"email\": \"email@email.com\",\n  \"displayName\": \"\",\n  \"idToken\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImEyYjkxODJiMWI0NmNiN2ZjN2MzMTFlZTgwMjFhZDY1MmVlMjc2MjIiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vcHJvaWVjdGFlLTU1MGI5IiwiYXVkIjoicHJvaWVjdGFlLTU1MGI5IiwiYXV0aF90aW1lIjoxNjExMTYzNjkwLCJ1c2VyX2lkIjoid3VyT0U4OHBwR2g5SWg4cGlLRDlJektkUHlqMiIsInN1YiI6Ind1ck9FODhwcEdoOUloOHBpS0Q5SXpLZFB5ajIiLCJpYXQiOjE2MTExNjM2OTAsImV4cCI6MTYxMTE2NzI5MCwiZW1haWwiOiJlbWFpbEBlbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsiZW1haWxAZW1haWwuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.AXVqt9aZ4SebqyJ4GjRy7krSejNhYJCwJ5-dMfS3aLOn5NI_73sbUkN4qagH-R_OvoWo5MVU6H6fPrqwqDvspBloPCoIZLVlpV_Vy-QB8VVsDmzE2T6Z8rYyTHMmWXeaJiJjrEKJovNwYRbk7GJ6xZc5geR_PdxtYWrrUCe5s3FewfA4FajVa83s4BcayiuTPTAfzdTnBfmJZKmmpmuBDbFgGmRJkMvQCzDjT0uVzonx4phHkErbPAqyESFy9Qb9HzXfVm5pM9zB4tDVgNxSK16P5suNcExf0OHFa5-ApX4jkFygluvsExPHr_DrkKRZLAJHcG1lBSqUVMb4jq3I5w\",\n  \"registered\": true,\n  \"refreshToken\": \"AG8BCnew7JCNqUb2XcHK_yhT27tci-MwogBPeeLBf6zQLkLdF0W2lN8Hm6j5fVrgAYffhl_TIzhlTUOSPNPLM30fWiOyROAKMm5_FqOR4Sh-4tMmeUWhRJUX2xbSAklfDsO2MHRODBQbFvS8Gf146Kattun3UMjEzeg3R7MhQEGSl_PLAuzJHfl1vmSxfznHOfjwdr8Eu-Jn80mJYQYc1D6Lq19GMkbtow\",\n  \"expiresIn\": \"3600\"\n}\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 1050,
          "_error": null
        },
        "serverIPAddress": "172.217.23.74",
        "startedDateTime": "2021-01-20T17:28:10.411Z",
        "time": 244.80700001004152,
        "timings": {
          "blocked": 1.3029999918416142,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.15400000000000003,
          "wait": 240.91899998829885,
          "receive": 2.4310000299010426,
          "_blocked_queueing": 1.1149999918416142
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "Ca",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 682249
              },
              {
                "functionName": "ts.u",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 690746
              },
              {
                "functionName": "hs",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 689894
              },
              {
                "functionName": "",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 691071
              },
              {
                "functionName": "Ee",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 631328
              },
              {
                "functionName": "ds",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 691049
              },
              {
                "functionName": "",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 698580
              },
              {
                "functionName": "De.i.a.i.g",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 632633
              },
              {
                "functionName": "qe",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 633681
              },
              {
                "functionName": "Ve",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 633572
              },
              {
                "functionName": "n.fc",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 634152
              },
              {
                "functionName": "we",
                "scriptId": "20",
                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                "lineNumber": 1,
                "columnNumber": 631181
              }
            ],
            "parent": {
              "description": "Promise.then",
              "callFrames": [
                {
                  "functionName": "pe",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 630031
                },
                {
                  "functionName": "me",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 631098
                },
                {
                  "functionName": "Fe",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 633389
                },
                {
                  "functionName": "Le",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 632927
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 631348
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 691127
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 690613
                },
                {
                  "functionName": "On",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 640513
                },
                {
                  "functionName": "Tn.dispatchEvent",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 642463
                },
                {
                  "functionName": "Pa",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 683114
                },
                {
                  "functionName": "n.Ic",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 685353
                },
                {
                  "functionName": "n.Ub",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 685330
                }
              ],
              "parent": {
                "description": "XMLHttpRequest.send",
                "callFrames": [
                  {
                    "functionName": "Ca",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 682249
                  },
                  {
                    "functionName": "ts.u",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 690746
                  },
                  {
                    "functionName": "hs",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 689894
                  },
                  {
                    "functionName": "",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 691071
                  },
                  {
                    "functionName": "Ee",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 631328
                  },
                  {
                    "functionName": "ds",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 691049
                  },
                  {
                    "functionName": "",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 698580
                  },
                  {
                    "functionName": "De.i.a.i.g",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 632633
                  },
                  {
                    "functionName": "qe",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 633681
                  },
                  {
                    "functionName": "Ve",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 633572
                  },
                  {
                    "functionName": "n.fc",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 634152
                  },
                  {
                    "functionName": "we",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 631181
                  }
                ],
                "parent": {
                  "description": "Promise.then",
                  "callFrames": [
                    {
                      "functionName": "pe",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 630031
                    },
                    {
                      "functionName": "me",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 631098
                    },
                    {
                      "functionName": "Fe",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 633389
                    },
                    {
                      "functionName": "xe",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 632491
                    },
                    {
                      "functionName": "De",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 632773
                    },
                    {
                      "functionName": "Ee.then",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 633755
                    },
                    {
                      "functionName": "n.Tc",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 763382
                    },
                    {
                      "functionName": "r",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 774238
                    },
                    {
                      "functionName": "handleLogin",
                      "scriptId": "21",
                      "url": "https://proiectae-550b9.web.app/static/js/main.1ef123d6.chunk.js",
                      "lineNumber": 0,
                      "columnNumber": 5180
                    },
                    {
                      "functionName": "zt",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 496866
                    },
                    {
                      "functionName": "Yt",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 497020
                    },
                    {
                      "functionName": "",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 515227
                    },
                    {
                      "functionName": "Sr",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 515321
                    },
                    {
                      "functionName": "Or",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 515736
                    },
                    {
                      "functionName": "",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 521389
                    },
                    {
                      "functionName": "Lt",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 597248
                    },
                    {
                      "functionName": "",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 517197
                    },
                    {
                      "functionName": "Rr",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 517227
                    },
                    {
                      "functionName": "Ze",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 505298
                    },
                    {
                      "functionName": "$e",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 504524
                    },
                    {
                      "functionName": "e.unstable_runWithPriority",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 603230
                    },
                    {
                      "functionName": "zi",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 525589
                    },
                    {
                      "functionName": "xt",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 596987
                    },
                    {
                      "functionName": "Je",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 504316
                    }
                  ]
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "xhr",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "POST",
          "url": "https://www.googleapis.com/identitytoolkit/v3/relyingparty/getAccountInfo?key=AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI",
          "httpVersion": "h3-29",
          "headers": [
            {
              "name": ":method",
              "value": "POST"
            },
            {
              "name": ":authority",
              "value": "www.googleapis.com"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": ":path",
              "value": "/identitytoolkit/v3/relyingparty/getAccountInfo?key=AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI"
            },
            {
              "name": "content-length",
              "value": "927"
            },
            {
              "name": "x-client-version",
              "value": "Chrome/JsCore/8.0.1/FirebaseCore-web"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "origin",
              "value": "https://proiectae-550b9.web.app"
            },
            {
              "name": "x-client-data",
              "value": "CLO1yQEIjbbJAQimtskBCMG2yQEIqZ3KAQjHwsoBCKzHygEItMvKAQikzcoBCNzVygEIlJrLAQjVnMsBCKidywEIq53LARj6uMoB"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "sec-fetch-mode",
              "value": "cors"
            },
            {
              "name": "sec-fetch-dest",
              "value": "empty"
            },
            {
              "name": "referer",
              "value": "https://proiectae-550b9.web.app/"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "accept-language",
              "value": "ro-RO,ro;q=0.9,en-US;q=0.8,en;q=0.7"
            }
          ],
          "queryString": [
            {
              "name": "key",
              "value": "AIzaSyBKNXmEk45oQBYkqa6A-fJKX8olxkJ6-BI"
            }
          ],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 927,
          "postData": {
            "mimeType": "application/json",
            "text": "{\"idToken\":\"eyJhbGciOiJSUzI1NiIsImtpZCI6ImEyYjkxODJiMWI0NmNiN2ZjN2MzMTFlZTgwMjFhZDY1MmVlMjc2MjIiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vcHJvaWVjdGFlLTU1MGI5IiwiYXVkIjoicHJvaWVjdGFlLTU1MGI5IiwiYXV0aF90aW1lIjoxNjExMTYzNjkwLCJ1c2VyX2lkIjoid3VyT0U4OHBwR2g5SWg4cGlLRDlJektkUHlqMiIsInN1YiI6Ind1ck9FODhwcEdoOUloOHBpS0Q5SXpLZFB5ajIiLCJpYXQiOjE2MTExNjM2OTAsImV4cCI6MTYxMTE2NzI5MCwiZW1haWwiOiJlbWFpbEBlbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsiZW1haWxAZW1haWwuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.AXVqt9aZ4SebqyJ4GjRy7krSejNhYJCwJ5-dMfS3aLOn5NI_73sbUkN4qagH-R_OvoWo5MVU6H6fPrqwqDvspBloPCoIZLVlpV_Vy-QB8VVsDmzE2T6Z8rYyTHMmWXeaJiJjrEKJovNwYRbk7GJ6xZc5geR_PdxtYWrrUCe5s3FewfA4FajVa83s4BcayiuTPTAfzdTnBfmJZKmmpmuBDbFgGmRJkMvQCzDjT0uVzonx4phHkErbPAqyESFy9Qb9HzXfVm5pM9zB4tDVgNxSK16P5suNcExf0OHFa5-ApX4jkFygluvsExPHr_DrkKRZLAJHcG1lBSqUVMb4jq3I5w\"}"
          }
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "h3-29",
          "headers": [
            {
              "name": "cache-control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "name": "pragma",
              "value": "no-cache"
            },
            {
              "name": "expires",
              "value": "Mon, 01 Jan 1990 00:00:00 GMT"
            },
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 17:28:10 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=UTF-8"
            },
            {
              "name": "vary",
              "value": "Origin"
            },
            {
              "name": "vary",
              "value": "X-Origin"
            },
            {
              "name": "vary",
              "value": "Referer"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "server",
              "value": "ESF"
            },
            {
              "name": "content-length",
              "value": "339"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "access-control-allow-origin",
              "value": "https://proiectae-550b9.web.app"
            },
            {
              "name": "access-control-expose-headers",
              "value": "date,vary,vary,vary,content-encoding,server,content-length"
            },
            {
              "name": "alt-svc",
              "value": "h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
            }
          ],
          "cookies": [],
          "content": {
            "size": 648,
            "mimeType": "application/json",
            "text": "{\n  \"kind\": \"identitytoolkit#GetAccountInfoResponse\",\n  \"users\": [\n    {\n      \"localId\": \"wurOE88ppGh9Ih8piKD9IzKdPyj2\",\n      \"email\": \"email@email.com\",\n      \"passwordHash\": \"UkVEQUNURUQ=\",\n      \"emailVerified\": false,\n      \"passwordUpdatedAt\": 1611160026513,\n      \"providerUserInfo\": [\n        {\n          \"providerId\": \"password\",\n          \"federatedId\": \"email@email.com\",\n          \"email\": \"email@email.com\",\n          \"rawId\": \"email@email.com\"\n        }\n      ],\n      \"validSince\": \"1611160026\",\n      \"lastLoginAt\": \"1611163690415\",\n      \"createdAt\": \"1611160026513\",\n      \"lastRefreshAt\": \"2021-01-20T17:28:10.415Z\"\n    }\n  ]\n}\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 364,
          "_error": null
        },
        "serverIPAddress": "172.217.23.74",
        "startedDateTime": "2021-01-20T17:28:10.658Z",
        "time": 179.60000000311993,
        "timings": {
          "blocked": 1.1960000024978072,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.09599999999999999,
          "wait": 177.30599999610334,
          "receive": 1.0020000045187771,
          "_blocked_queueing": 1.0820000024978071
        }
      },
      {
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [],
            "parent": {
              "description": "Image",
              "callFrames": [
                {
                  "functionName": "_",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 484277
                },
                {
                  "functionName": "is",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 559724
                },
                {
                  "functionName": "ku",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579855
                },
                {
                  "functionName": "Cu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579737
                },
                {
                  "functionName": "Su",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579604
                },
                {
                  "functionName": "Iu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 579467
                },
                {
                  "functionName": "yu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 576433
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525812
                },
                {
                  "functionName": "e.unstable_runWithPriority",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 603230
                },
                {
                  "functionName": "zi",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525589
                },
                {
                  "functionName": "Wi",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525757
                },
                {
                  "functionName": "Ki",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 525692
                },
                {
                  "functionName": "hu",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 573802
                },
                {
                  "functionName": "ka",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 545369
                },
                {
                  "functionName": "",
                  "scriptId": "21",
                  "url": "https://proiectae-550b9.web.app/static/js/main.1ef123d6.chunk.js",
                  "lineNumber": 0,
                  "columnNumber": 4862
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 13811
                },
                {
                  "functionName": "",
                  "scriptId": "20",
                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                  "lineNumber": 1,
                  "columnNumber": 15113
                }
              ],
              "parent": {
                "description": "Promise.then",
                "callFrames": [
                  {
                    "functionName": "t.sendOne",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 15043
                  },
                  {
                    "functionName": "t.forEachObserver",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 14974
                  },
                  {
                    "functionName": "t.next",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 13780
                  },
                  {
                    "functionName": "",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 762642
                  },
                  {
                    "functionName": "Eh",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 756858
                  },
                  {
                    "functionName": "",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 755877
                  },
                  {
                    "functionName": "De.i.a.i.g",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 632633
                  },
                  {
                    "functionName": "qe",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 633681
                  },
                  {
                    "functionName": "Ve",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 633572
                  },
                  {
                    "functionName": "n.fc",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 634152
                  },
                  {
                    "functionName": "we",
                    "scriptId": "20",
                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                    "lineNumber": 1,
                    "columnNumber": 631181
                  }
                ],
                "parent": {
                  "description": "Promise.then",
                  "callFrames": [
                    {
                      "functionName": "pe",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 630031
                    },
                    {
                      "functionName": "me",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 631098
                    },
                    {
                      "functionName": "Fe",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 633389
                    },
                    {
                      "functionName": "Le",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 632927
                    },
                    {
                      "functionName": "",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 631348
                    },
                    {
                      "functionName": "Uu.t.onsuccess",
                      "scriptId": "20",
                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                      "lineNumber": 1,
                      "columnNumber": 712240
                    }
                  ],
                  "parent": {
                    "description": "IndexedDB",
                    "callFrames": [
                      {
                        "functionName": "",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 715811
                      },
                      {
                        "functionName": "De.i.a.i.g",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 632633
                      },
                      {
                        "functionName": "qe",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 633681
                      },
                      {
                        "functionName": "Ve",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 633572
                      },
                      {
                        "functionName": "n.fc",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 634152
                      },
                      {
                        "functionName": "we",
                        "scriptId": "20",
                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                        "lineNumber": 1,
                        "columnNumber": 631181
                      }
                    ],
                    "parent": {
                      "description": "Promise.then",
                      "callFrames": [
                        {
                          "functionName": "pe",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 630031
                        },
                        {
                          "functionName": "me",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 631098
                        },
                        {
                          "functionName": "Fe",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 633389
                        },
                        {
                          "functionName": "Le",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 632927
                        },
                        {
                          "functionName": "",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 631348
                        },
                        {
                          "functionName": "Uu.t.onsuccess",
                          "scriptId": "20",
                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                          "lineNumber": 1,
                          "columnNumber": 712240
                        }
                      ],
                      "parent": {
                        "description": "IndexedDB",
                        "callFrames": [
                          {
                            "functionName": "",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 715656
                          },
                          {
                            "functionName": "De.i.a.i.g",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 632633
                          },
                          {
                            "functionName": "qe",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 633681
                          },
                          {
                            "functionName": "Ve",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 633572
                          },
                          {
                            "functionName": "n.fc",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 634152
                          },
                          {
                            "functionName": "we",
                            "scriptId": "20",
                            "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                            "lineNumber": 1,
                            "columnNumber": 631181
                          }
                        ],
                        "parent": {
                          "description": "Promise.then",
                          "callFrames": [
                            {
                              "functionName": "pe",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 630031
                            },
                            {
                              "functionName": "me",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 631098
                            },
                            {
                              "functionName": "Fe",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 633389
                            },
                            {
                              "functionName": "Le",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 632927
                            },
                            {
                              "functionName": "",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 631348
                            },
                            {
                              "functionName": "Uu.t.onsuccess",
                              "scriptId": "20",
                              "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                              "lineNumber": 1,
                              "columnNumber": 712240
                            }
                          ],
                          "parent": {
                            "description": "IndexedDB",
                            "callFrames": [
                              {
                                "functionName": "",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 715496
                              },
                              {
                                "functionName": "De.i.a.i.g",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 632633
                              },
                              {
                                "functionName": "qe",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 633681
                              },
                              {
                                "functionName": "Ve",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 633572
                              },
                              {
                                "functionName": "n.fc",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 634152
                              },
                              {
                                "functionName": "we",
                                "scriptId": "20",
                                "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                "lineNumber": 1,
                                "columnNumber": 631181
                              }
                            ],
                            "parent": {
                              "description": "Promise.then",
                              "callFrames": [
                                {
                                  "functionName": "pe",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 630031
                                },
                                {
                                  "functionName": "me",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 631098
                                },
                                {
                                  "functionName": "Fe",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 633389
                                },
                                {
                                  "functionName": "Le",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 632927
                                },
                                {
                                  "functionName": "",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 631348
                                },
                                {
                                  "functionName": "",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 691127
                                },
                                {
                                  "functionName": "",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 690613
                                },
                                {
                                  "functionName": "On",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 640513
                                },
                                {
                                  "functionName": "Tn.dispatchEvent",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 642463
                                },
                                {
                                  "functionName": "Pa",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 683114
                                },
                                {
                                  "functionName": "n.Ic",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 685353
                                },
                                {
                                  "functionName": "n.Ub",
                                  "scriptId": "20",
                                  "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                  "lineNumber": 1,
                                  "columnNumber": 685330
                                }
                              ],
                              "parent": {
                                "description": "XMLHttpRequest.send",
                                "callFrames": [
                                  {
                                    "functionName": "Ca",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 682249
                                  },
                                  {
                                    "functionName": "ts.u",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 690746
                                  },
                                  {
                                    "functionName": "hs",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 689894
                                  },
                                  {
                                    "functionName": "",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 691071
                                  },
                                  {
                                    "functionName": "Ee",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 631328
                                  },
                                  {
                                    "functionName": "ds",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 691049
                                  },
                                  {
                                    "functionName": "",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 698580
                                  },
                                  {
                                    "functionName": "De.i.a.i.g",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 632633
                                  },
                                  {
                                    "functionName": "qe",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 633681
                                  },
                                  {
                                    "functionName": "Ve",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 633572
                                  },
                                  {
                                    "functionName": "n.fc",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 634152
                                  },
                                  {
                                    "functionName": "we",
                                    "scriptId": "20",
                                    "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                    "lineNumber": 1,
                                    "columnNumber": 631181
                                  }
                                ],
                                "parent": {
                                  "description": "Promise.then",
                                  "callFrames": [
                                    {
                                      "functionName": "pe",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 630031
                                    },
                                    {
                                      "functionName": "me",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 631098
                                    },
                                    {
                                      "functionName": "Fe",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 633389
                                    },
                                    {
                                      "functionName": "Le",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 632927
                                    },
                                    {
                                      "functionName": "",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 631348
                                    },
                                    {
                                      "functionName": "",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 691127
                                    },
                                    {
                                      "functionName": "",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 690613
                                    },
                                    {
                                      "functionName": "On",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 640513
                                    },
                                    {
                                      "functionName": "Tn.dispatchEvent",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 642463
                                    },
                                    {
                                      "functionName": "Pa",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 683114
                                    },
                                    {
                                      "functionName": "n.Ic",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 685353
                                    },
                                    {
                                      "functionName": "n.Ub",
                                      "scriptId": "20",
                                      "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                      "lineNumber": 1,
                                      "columnNumber": 685330
                                    }
                                  ],
                                  "parent": {
                                    "description": "XMLHttpRequest.send",
                                    "callFrames": [
                                      {
                                        "functionName": "Ca",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 682249
                                      },
                                      {
                                        "functionName": "ts.u",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 690746
                                      },
                                      {
                                        "functionName": "hs",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 689894
                                      },
                                      {
                                        "functionName": "",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 691071
                                      },
                                      {
                                        "functionName": "Ee",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 631328
                                      },
                                      {
                                        "functionName": "ds",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 691049
                                      },
                                      {
                                        "functionName": "",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 698580
                                      },
                                      {
                                        "functionName": "De.i.a.i.g",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 632633
                                      },
                                      {
                                        "functionName": "qe",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 633681
                                      },
                                      {
                                        "functionName": "Ve",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 633572
                                      },
                                      {
                                        "functionName": "n.fc",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 634152
                                      },
                                      {
                                        "functionName": "we",
                                        "scriptId": "20",
                                        "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                        "lineNumber": 1,
                                        "columnNumber": 631181
                                      }
                                    ],
                                    "parent": {
                                      "description": "Promise.then",
                                      "callFrames": [
                                        {
                                          "functionName": "pe",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 630031
                                        },
                                        {
                                          "functionName": "me",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 631098
                                        },
                                        {
                                          "functionName": "Fe",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 633389
                                        },
                                        {
                                          "functionName": "xe",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 632491
                                        },
                                        {
                                          "functionName": "De",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 632773
                                        },
                                        {
                                          "functionName": "Ee.then",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 633755
                                        },
                                        {
                                          "functionName": "n.Tc",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 763382
                                        },
                                        {
                                          "functionName": "r",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 774238
                                        },
                                        {
                                          "functionName": "handleLogin",
                                          "scriptId": "21",
                                          "url": "https://proiectae-550b9.web.app/static/js/main.1ef123d6.chunk.js",
                                          "lineNumber": 0,
                                          "columnNumber": 5180
                                        },
                                        {
                                          "functionName": "zt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 496866
                                        },
                                        {
                                          "functionName": "Yt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 497020
                                        },
                                        {
                                          "functionName": "",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 515227
                                        },
                                        {
                                          "functionName": "Sr",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 515321
                                        },
                                        {
                                          "functionName": "Or",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 515736
                                        },
                                        {
                                          "functionName": "",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 521389
                                        },
                                        {
                                          "functionName": "Lt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 597248
                                        },
                                        {
                                          "functionName": "",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 517197
                                        },
                                        {
                                          "functionName": "Rr",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 517227
                                        },
                                        {
                                          "functionName": "Ze",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 505298
                                        },
                                        {
                                          "functionName": "$e",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 504524
                                        },
                                        {
                                          "functionName": "e.unstable_runWithPriority",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 603230
                                        },
                                        {
                                          "functionName": "zi",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 525589
                                        },
                                        {
                                          "functionName": "xt",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 596987
                                        },
                                        {
                                          "functionName": "Je",
                                          "scriptId": "20",
                                          "url": "https://proiectae-550b9.web.app/static/js/2.fd35f610.chunk.js",
                                          "lineNumber": 1,
                                          "columnNumber": 504316
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "_priority": "High",
        "_resourceType": "image",
        "cache": {},
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "https://lh3.googleusercontent.com/proxy/fUzC_RUI3SBm8XDqZYj32PWF2jBndWeAI5lP7VjXBIZyh-yYzBoe27lqB5kkUAXS3gjP3t4hLwQt037kLElpa0s9aSsoZYAXkAab45IocZGC5gFcePCTIgU8cFaP",
          "httpVersion": "h3-29",
          "headers": [
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":authority",
              "value": "lh3.googleusercontent.com"
            },
            {
              "name": ":scheme",
              "value": "https"
            },
            {
              "name": ":path",
              "value": "/proxy/fUzC_RUI3SBm8XDqZYj32PWF2jBndWeAI5lP7VjXBIZyh-yYzBoe27lqB5kkUAXS3gjP3t4hLwQt037kLElpa0s9aSsoZYAXkAab45IocZGC5gFcePCTIgU8cFaP"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36"
            },
            {
              "name": "accept",
              "value": "image/avif,image/webp,image/apng,image/*,*/*;q=0.8"
            },
            {
              "name": "x-client-data",
              "value": "CLO1yQEIjbbJAQimtskBCMG2yQEIqZ3KAQjHwsoBCKzHygEItMvKAQikzcoBCNzVygEIlJrLAQjVnMsBCKidywEIq53LARj6uMoB"
            },
            {
              "name": "sec-fetch-site",
              "value": "cross-site"
            },
            {
              "name": "sec-fetch-mode",
              "value": "no-cors"
            },
            {
              "name": "sec-fetch-dest",
              "value": "image"
            },
            {
              "name": "referer",
              "value": "https://proiectae-550b9.web.app/"
            },
            {
              "name": "accept-encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "accept-language",
              "value": "ro-RO,ro;q=0.9,en-US;q=0.8,en;q=0.7"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 403,
          "statusText": "",
          "httpVersion": "h3-29",
          "headers": [
            {
              "name": "content-type",
              "value": "text/html; charset=UTF-8"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "date",
              "value": "Wed, 20 Jan 2021 17:28:10 GMT"
            },
            {
              "name": "server",
              "value": "fife"
            },
            {
              "name": "cache-control",
              "value": "private"
            },
            {
              "name": "content-length",
              "value": "914"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            },
            {
              "name": "alt-svc",
              "value": "h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
            }
          ],
          "cookies": [],
          "content": {
            "size": 0,
            "mimeType": "text/html",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1,
          "_transferSize": 0,
          "_error": null
        },
        "serverIPAddress": "216.58.207.129",
        "startedDateTime": "2021-01-20T17:28:10.847Z",
        "time": 61.470999993616715,
        "timings": {
          "blocked": 2.403000012923032,
          "dns": -1,
          "ssl": -1,
          "connect": -1,
          "send": 0.13299999999999995,
          "wait": 58.72299999623559,
          "receive": 0.21199998445808887,
          "_blocked_queueing": 1.951000012923032
        }
      }
    ]
  }
}